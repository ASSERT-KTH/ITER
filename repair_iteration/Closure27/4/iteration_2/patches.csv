bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  block(catchNode).copyInformationFrom(tryBody,  catchNode);  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode).copyInformationFrom(tryBody,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode).copyInformationFrom(tryBody,  catchNode);	  Node    block(tryBody).copyInformationFrom(catchNode,    catchNode);    	non-compiled	[CE]  ';'  expected	127	None	replace
2	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(catchNode,  catchNode));  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).copyInformationFrom(catchNode,  catchNode));  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(catchNode,  catchNode));	  Node    block(tryBody).copyInformationFrom(catchNode,    catchNode);    	non-compiled	[CE]  ';'  expected	127	None	replace
3	[BUG]  [BUGGY]  Node  block(tryNode).copyInformationFrom(catchNode,  catchNode);  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryNode).copyInformationFrom(catchNode,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryNode).copyInformationFrom(catchNode,  catchNode);	  Node    block(tryBody).copyInformationFrom(catchNode,    catchNode);    	non-compiled	[CE]  ';'  expected	127	None	replace
4	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(patchNode,  catchNode);  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).copyInformationFrom(patchNode,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(patchNode,  catchNode);	  Node    block(tryBody).copyInformationFrom(catchNode,    catchNode);    	non-compiled	[CE]  ';'  expected	127	None	replace
5	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(callNode,  catchNode);  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).copyInformationFrom(callNode,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(callNode,  catchNode);	  Node    block(tryBody).copyInformationFrom(catchNode,    catchNode);    	non-compiled	[CE]  ';'  expected	127	None	replace
6	[BUG]  [BUGGY]  Node  catchNode  =  getCatch(tryBody,  catchNode);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  getCatch(tryBody,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  getCatch(tryBody,  catchNode);	          Node    catchNode    =    getCatch(tryBody);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	181	None	replace
7	[BUG]  [BUGGY]  Node  catchNode  =  tryCatch(tryBody);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryCatch(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryCatch(tryBody);	          Node    catchNode    =    getCatch(tryBody);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	181	None	replace
8	[BUG]  [BUGGY]  Node  catchNode  =  findCatch(tryBody,  catchNode);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  findCatch(tryBody,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  findCatch(tryBody,  catchNode);	          Node    catchNode    =    getCatch(tryBody);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	181	None	replace
9	[BUG]  [BUGGY]  Node  catchNode  =  getCatch(testNode,  tryBody);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  getCatch(testNode,  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  getCatch(testNode,  tryBody);	          Node    catchNode    =    getCatch(tryBody);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	181	None	replace
10	[BUG]  [BUGGY]  Node  catchNode  =  getCatch(tryBody.getFirstChild());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  getCatch(tryBody.getFirstChild());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  getCatch(tryBody.getFirstChild());	          Node    catchNode    =    getCatch(tryBody);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	181	None	replace
11	[BUG]  [BUGGY]  Node  catchNode  =  getCatch(tryBody,  catchNode.getType());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  getCatch(tryBody,  catchNode.getType());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  getCatch(tryBody,  catchNode.getType());	          Node    catchNode    =    getCatch(tryBody);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	181	None	replace
12	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isNode(),  catchNode.isNode());  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isNode(),  catchNode.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isNode(),  catchNode.isNode());	  Preconditions.checkState(tryBody.isNode(),    catchNode.isNode());    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
13	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isNode(),  tryBody.isNode());  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isNode(),  tryBody.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isNode(),  tryBody.isNode());	  Preconditions.checkState(tryBody.isNode(),    catchNode.isNode());    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
14	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isNode(),  catchNode.isNode());  [CE]  cannot  find  symbol  callNode  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(callNode.isNode(),  catchNode.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(callNode.isNode(),  catchNode.isNode());	  Preconditions.checkState(tryBody.isNode(),    catchNode.isNode());    	non-compiled	[CE]  cannot  find  symbol  callNode	26	None	replace
15	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNode(),  catchNode.isCatch());  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNode(),  catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNode(),  catchNode.isCatch());	  Preconditions.checkState(tryBody.isNode(),    catchNode.isNode());    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
16	[BUG]  [BUGGY]  Preconditions.checkState(matchNode.isNode(),  catchNode.isNode());  [CE]  cannot  find  symbol  matchNode  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(matchNode.isNode(),  catchNode.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(matchNode.isNode(),  catchNode.isNode());	  Preconditions.checkState(tryBody.isNode(),    catchNode.isNode());    	non-compiled	[CE]  cannot  find  symbol  matchNode	26	None	replace
17	[BUG]  [BUGGY]  Preconditions.checkState(patchNode.isNode(),  catchNode.isNode());  [CE]  cannot  find  symbol  patchNode  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(patchNode.isNode(),  catchNode.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(patchNode.isNode(),  catchNode.isNode());	  Preconditions.checkState(tryBody.isNode(),    catchNode.isNode());    	non-compiled	[CE]  cannot  find  symbol  patchNode	26	None	replace
18	[BUG]  [BUGGY]  Node  block  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(block.getType()  ==  Token.TRY);  [CE]  incompatible  types  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(block.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getType()    ==    Token.TRY;    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  incompatible  types	226	None	replace
19	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(block.getType()  ==  Token.TRY);  [CE]  incompatible  types  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(block.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getType()    ==    Token.TRY;    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  incompatible  types	226	None	replace
20	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType()  ==  Token.TRY;  [CE]  incompatible  types  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType()  ==  Token.TRY;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType()  ==  Token.TRY;	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getType()    ==    Token.TRY;    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  incompatible  types	226	None	replace
21	[BUG]  [BUGGY]  Node  block  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  incompatible  types  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getType()    ==    Token.TRY;    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  incompatible  types	226	None	replace
22	[BUG]  [BUGGY]  Node  block  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(lock.getType()  ==  Token.TRY);  [CE]  incompatible  types  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(lock.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(lock.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getType()    ==    Token.TRY;    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  incompatible  types	226	None	replace
23	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(lock.getType()  ==  Token.TRY);  [CE]  incompatible  types  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(lock.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(lock.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getType()    ==    Token.TRY;    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  incompatible  types	226	None	replace
24	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	255	None	replace
25	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(callNode.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(callNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(callNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	255	None	replace
26	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	255	None	replace
27	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	255	None	replace
28	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(catchNode.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(catchNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(catchNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	255	None	replace
29	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType()  {  Token.CATCH;  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType()  {  Token.CATCH;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType()  {  Token.CATCH;	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	255	None	replace
30	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	255	None	replace
31	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=    null    ||    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	71	3	add
32	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    ||    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	71	3	add
33	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=    null    ||    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	71	3	add
34	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    ||    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	71	3	add
35	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  tryBody  =  null  ||  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  tryBody  =  null  ||  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    ||    tryBody.isBlock());    Node  tryBody  =  null  ||  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());	  	non-compiled	[CE]  ';'  expected	71	None	add
36	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  tryBody  =  null  ||  tryBody.isBlock());  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  tryBody  =  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    ||    tryBody.isBlock());    Node  tryBody  =  null  ||  tryBody.isBlock());	  	non-compiled	[CE]  ';'  expected	71	None	add
37	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    ||    tryBody.isBlock());    Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	71	None	add
38	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=    null    ||    tryBody.isBlock());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	71	3	add
39	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    ||    tryBody.isBlock());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	71	3	add
40	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  catchBody  =  null  ||  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  catchBody  =  null  ||  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    ||    tryBody.isBlock());    Node  catchBody  =  null  ||  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());	  	non-compiled	[CE]  ';'  expected	71	None	add
41	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  block(tryBody)  ==  null  ||  tryBody.isBlock());  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  block(tryBody)  ==  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    ||    tryBody.isBlock());    Node  block(tryBody)  ==  null  ||  tryBody.isBlock());	  	non-compiled	[CE]  ';'  expected	71	None	add
42	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    catchNode    =    block(tryBody.isTry());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	196	None	replace
43	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  block(tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  block(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  block(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    catchNode    =    block(tryBody.isTry());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	196	None	replace
44	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  catchNode  =  block(tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  catchNode  =  block(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());  Node  catchNode  =  block(tryBody.isCatch());	  Preconditions.checkState(tryBody.isTry());    Node    catchNode    =    block(tryBody.isTry());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	196	None	replace
45	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isInstance());  Node  catchNode  =  block(tryBody.isTry());  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isInstance());  Node  catchNode  =  block(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isInstance());  Node  catchNode  =  block(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    catchNode    =    block(tryBody.isTry());    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
46	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  catchNode  =  block(tryBody.getFirstChild());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  catchNode  =  block(tryBody.getFirstChild());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());  Node  catchNode  =  block(tryBody.getFirstChild());	  Preconditions.checkState(tryBody.isTry());    Node    catchNode    =    block(tryBody.isTry());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	196	None	replace
47	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  catchNode  =  block(tryBody.getParent());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  catchNode  =  block(tryBody.getParent());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());  Node  catchNode  =  block(tryBody.getParent());	  Preconditions.checkState(tryBody.isTry());    Node    catchNode    =    block(tryBody.isTry());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	196	None	replace
48	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.getType()  ==  Token.FUNCTION);  [CE]  bad  operand  type  int  for  unary  operator  '!'  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(!tryBody.isFunction());    	non-compiled	[CE]  bad  operand  type  int  for  unary  operator  '!'	133	None	replace
49	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isInitializing());  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isInitializing());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isInitializing());	  Preconditions.checkState(!tryBody.isFunction());    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
50	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isInterface());  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isInterface());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isInterface());	  Preconditions.checkState(!tryBody.isFunction());    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
51	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isImplicitPrototype());  [CE]  cannot  find  symbol  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isImplicitPrototype());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isImplicitPrototype());	  Preconditions.checkState(!tryBody.isFunction());    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
52	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    block(tryBody);    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	201	None	replace
53	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    block(tryBody);    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	201	None	replace
54	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode!=  null  &&  catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(catchNode!=  null  &&  catchNode.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    block(tryBody);    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	201	3	replace
55	[BUG]  [BUGGY]  Preconditions.checkState(catchNode!=  null  &&  catchNode.isBlock());  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode!=  null  &&  catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode!=  null  &&  catchNode.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    block(tryBody);    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	201	3	replace
56	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(catchNode!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    block(tryBody);    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	201	3	replace
57	[BUG]  [BUGGY]  Preconditions.checkState(catchNode!=  null  &&  tryBody.isBlock());  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    block(tryBody);    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	201	3	replace
58	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    block(tryBody);    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	201	None	replace
59	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isTry());        Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	5	3	add
60	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	5	3	add
61	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isTry());        Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	5	3	add
62	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	5	3	add
63	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isTry());        Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	5	3	add
64	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isTry());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	5	3	add
65	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isTry());        Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	5	3	add
66	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	5	3	add
67	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isTry());        Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	5	3	add
68	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	5	3	add
69	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isClass());  Preconditions.checkState(tryBody.isClass());  [CE]  cannot  find  symbol  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isClass());  Preconditions.checkState(tryBody.isClass());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isClass());  Preconditions.checkState(tryBody.isClass());	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
70	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isType());  Preconditions.checkState(tryBody.isType());  [CE]  cannot  find  symbol  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isType());  Preconditions.checkState(tryBody.isType());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isType());  Preconditions.checkState(tryBody.isType());	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
71	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isDeclared());  Preconditions.checkState(tryBody.isDeclared());  [CE]  cannot  find  symbol  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isDeclared());  Preconditions.checkState(tryBody.isDeclared());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isDeclared());  Preconditions.checkState(tryBody.isDeclared());	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
72	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH,  tryBody);  [CE]  cannot  find  symbol  tryNode  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH,  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.CATCH,  tryBody);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    tryNode);    	non-compiled	[CE]  cannot  find  symbol  tryNode	168	None	replace
73	[BUG]  [BUGGY]  Preconditions.checkState(testNode.getType()  ==  Token.CATCH,  tryNode);  [CE]  cannot  find  symbol  testNode  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(testNode.getType()  ==  Token.CATCH,  tryNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(testNode.getType()  ==  Token.CATCH,  tryNode);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    tryNode);    	non-compiled	[CE]  cannot  find  symbol  testNode	168	None	replace
74	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH,  catchNode);  [CE]  cannot  find  symbol  tryNode  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.CATCH,  catchNode);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    tryNode);    	non-compiled	[CE]  cannot  find  symbol  tryNode	168	None	replace
75	[BUG]  [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.CATCH,  tryNode);  [CE]  cannot  find  symbol  tries  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.CATCH,  tryNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries.getType()  ==  Token.CATCH,  tryNode);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    tryNode);    	non-compiled	[CE]  cannot  find  symbol  tries	168	None	replace
76	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=  Token.CATCH,  catchNode);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    tryNode);    	compilable	  [FE]  IllegalStateException  	168	3	replace
77	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH,  catchNode);  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.CATCH,  catchNode);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    tryNode);    	compilable	  [FE]  IllegalStateException  	168	3	replace
78	[BUG]  [BUGGY]  Preconditions.checkState(matchNode.getType()  ==  Token.CATCH,  tryBody);  [CE]  cannot  find  symbol  matchNode  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(matchNode.getType()  ==  Token.CATCH,  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(matchNode.getType()  ==  Token.CATCH,  tryBody);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    tryNode);    	non-compiled	[CE]  cannot  find  symbol  matchNode	168	None	replace
79	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    catchNode    =    tryBody.getType()    ==    Token.TRY;    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	225	None	replace
80	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(callNode.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(callNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(callNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    catchNode    =    tryBody.getType()    ==    Token.TRY;    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	225	None	replace
81	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(catchNode.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(catchNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(catchNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    catchNode    =    tryBody.getType()    ==    Token.TRY;    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	225	None	replace
82	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType()  ==  Token.TRY;	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    catchNode    =    tryBody.getType()    ==    Token.TRY;    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	225	None	replace
83	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(atchNode.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(atchNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(atchNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    catchNode    =    tryBody.getType()    ==    Token.TRY;    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	225	None	replace
84	[BUG]  [BUGGY]  Node  catchNode  =  tryBody!=  null?  null  :  tryBody.getFirstChild();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody!=  null?  null  :  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody!=  null?  null  :  tryBody.getFirstChild();	  Node    catchNode    =    tryBody.getFirstChild();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	52	None	replace
85	[BUG]  [BUGGY]  Node  catchNode  =  tryBody  ==  null?  null  :  tryBody.getFirstChild();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody  ==  null?  null  :  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody  ==  null?  null  :  tryBody.getFirstChild();	  Node    catchNode    =    tryBody.getFirstChild();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	52	None	replace
86	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.removeFirstChild();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.removeFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.removeFirstChild();	  Node    catchNode    =    tryBody.getFirstChild();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	52	None	replace
87	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Preconditions.checkState(!tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(!tryBody.isEmpty());    Preconditions.checkState(!tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	1	3	add
88	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Preconditions.checkState(!tryBody.isEmpty());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Preconditions.checkState(!tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isEmpty());    Preconditions.checkState(!tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	1	3	add
89	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(!tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(!tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(!tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	1	3	add
90	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(!tryBody.isEmpty());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(!tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(!tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	1	3	add
91	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(!tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(!tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(!tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	1	3	add
92	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(!tryBody.isEmpty());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(!tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(!tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	1	3	add
93	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(!tryBody.isEmpty());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(!tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isEmpty());    Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(!tryBody.isEmpty());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	1	None	add
94	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isEmpty());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isEmpty());    Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isEmpty());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	1	None	add
95	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  tryBody  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isEmpty());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  tryBody  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isEmpty());    Node  tryBody  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isEmpty());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	1	None	add
96	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  block(catchNode).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isEmpty());  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  block(catchNode).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isEmpty());    Node  block(catchNode).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isEmpty());	  	non-compiled	[CE]  ';'  expected	1	None	add
97	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isEmpty());  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isEmpty());    Node  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isEmpty());	  	non-compiled	[CE]  ';'  expected	1	None	add
98	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	147	None	add
99	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	147	None	add
100	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	147	None	add
101	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isEmpty());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	147	None	add
102	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isEmpty());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isEmpty());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	147	None	add
103	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isEmpty());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isEmpty());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	147	None	add
104	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	147	None	add
105	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  catchNode.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  catchNode.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Node  block  =  catchNode.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	147	None	add
106	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  >=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  >=  Token.CATCH);	  Preconditions.checkState(tryBody.getType()!=    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	38	3	replace
107	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  >=  Token.CATCH);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  >=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  >=  Token.CATCH);	  Preconditions.checkState(tryBody.getType()!=    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	38	3	replace
108	[BUG]  [BUGGY]  Preconditions.checkState(tries.getType()!=  Token.CATCH);  [CE]  cannot  find  symbol  tries  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tries.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries.getType()!=  Token.CATCH);	  Preconditions.checkState(tryBody.getType()!=    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  tries	38	None	replace
109	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()!=  Token.CATCH);  [CE]  cannot  find  symbol  tryNode  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()!=  Token.CATCH);	  Preconditions.checkState(tryBody.getType()!=    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  tryNode	38	None	replace
110	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody.getFirstChild());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody.getFirstChild());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody.getFirstChild());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    block(tryBody.getFirstChild());    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	232	None	replace
111	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    block(tryBody.getFirstChild());    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	232	None	replace
112	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    block(tryBody.getFirstChild());    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	232	None	replace
113	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    block(tryBody.getFirstChild());    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	232	None	replace
114	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody.getType());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody.getType());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody.getType());	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    catchNode    =    block(tryBody.getType());    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	175	None	replace
115	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody.getType());  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody.getType());  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody.getType());  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    catchNode    =    block(tryBody.getType());    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	175	None	replace
116	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody.getType());  Preconditions.checkState(callNode.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody.getType());  Preconditions.checkState(callNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody.getType());  Preconditions.checkState(callNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    catchNode    =    block(tryBody.getType());    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	175	None	replace
117	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  block(tryBody.getType());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  block(tryBody.getType());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  block(tryBody.getType());	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    catchNode    =    block(tryBody.getType());    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	175	None	replace
118	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody.getType());  Preconditions.checkState(catchNode.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody.getType());  Preconditions.checkState(catchNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody.getType());  Preconditions.checkState(catchNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    catchNode    =    block(tryBody.getType());    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	175	None	replace
119	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody.getType());  Preconditions.checkState(t.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody.getType());  Preconditions.checkState(t.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody.getType());  Preconditions.checkState(t.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    catchNode    =    block(tryBody.getType());    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	175	None	replace
120	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    catchNode    =    block(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	8	None	replace
121	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    catchNode    =    block(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	8	None	replace
122	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody.isTry());  Preconditions.checkState(catchNode.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody.isTry());  Preconditions.checkState(catchNode.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody.isTry());  Preconditions.checkState(catchNode.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    catchNode    =    block(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	8	None	replace
123	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isEmpty());  Preconditions.checkArgument(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.isEmpty());    Preconditions.checkArgument(tryBody.isEmpty());	  	compilable	  [FE]  IllegalArgumentException  	3	3	add
124	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isEmpty());  Preconditions.checkArgument(tryBody.isEmpty());  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isEmpty());  Preconditions.checkArgument(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isEmpty());    Preconditions.checkArgument(tryBody.isEmpty());	  	compilable	  [FE]  IllegalArgumentException  	3	3	add
125	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isEmpty());  Node  block  =  tryBody.isEmpty();  Preconditions.checkArgument(tryBody.isEmpty());  [CE]  incompatible  types  [FE]      IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isEmpty());  Node  block  =  tryBody.isEmpty();  Preconditions.checkArgument(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isEmpty());    Node  block  =  tryBody.isEmpty();  Preconditions.checkArgument(tryBody.isEmpty());	  	non-compiled	[CE]  incompatible  types	3	None	add
126	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	3	3	add
127	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]        IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	3	3	add
128	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isEmpty());  Node  block(tryBody.isEmpty());  Preconditions.checkArgument(tryBody.isEmpty());  [CE]  ';'  expected  [FE]          IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isEmpty());  Node  block(tryBody.isEmpty());  Preconditions.checkArgument(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isEmpty());    Node  block(tryBody.isEmpty());  Preconditions.checkArgument(tryBody.isEmpty());	  	non-compiled	[CE]  ';'  expected	3	None	add
129	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isEmpty());  Node  catchNode  =  tryBody.isEmpty();  Preconditions.checkArgument(tryBody.isEmpty());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isEmpty());  Node  catchNode  =  tryBody.isEmpty();  Preconditions.checkArgument(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isEmpty());    Node  catchNode  =  tryBody.isEmpty();  Preconditions.checkArgument(tryBody.isEmpty());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	3	None	add
130	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isEmpty());  Node  stopBody  =  tryBody.isEmpty();  Preconditions.checkArgument(tryBody.isEmpty());  [CE]  incompatible  types  [FE]              IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isEmpty());  Node  stopBody  =  tryBody.isEmpty();  Preconditions.checkArgument(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isEmpty());    Node  stopBody  =  tryBody.isEmpty();  Preconditions.checkArgument(tryBody.isEmpty());	  	non-compiled	[CE]  incompatible  types	3	None	add
131	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkArgument(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkArgument(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	3	3	add
132	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkArgument(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]                IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkArgument(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkArgument(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	3	3	add
133	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isEmpty());  Node  tryBody  =  block(tryBody.isEmpty());  Preconditions.checkArgument(tryBody.isEmpty());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isEmpty());  Node  tryBody  =  block(tryBody.isEmpty());  Preconditions.checkArgument(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isEmpty());    Node  tryBody  =  block(tryBody.isEmpty());  Preconditions.checkArgument(tryBody.isEmpty());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	3	None	add
134	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	54	3	replace
135	[BUG]  [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isFunction());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	54	3	replace
136	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	54	3	replace
137	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isFunction());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	54	3	replace
138	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getFirstChild();	  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	54	3	replace
139	[BUG]  [BUGGY]  Node  block  =  tryBody.getFirstChild();  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getFirstChild();	  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	54	3	replace
140	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	12	None	add
141	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	12	None	add
142	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	12	None	add
143	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isTry());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isTry());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	12	None	add
144	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isTry());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isTry());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	12	None	add
145	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isTry());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isTry());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	12	None	add
146	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isTry());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isTry());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	12	None	add
147	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(t.isTry());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(t.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(t.isTry());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	12	None	add
148	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.FOR);    Preconditions.checkState(tryBody.getType()  ==  Token.FOR);	  	compilable	  [FE]  IllegalStateException  	138	3	add
149	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.FOR);    Preconditions.checkState(tryBody.getType()  ==  Token.FOR);	  	compilable	  [FE]  IllegalStateException  	138	3	add
150	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Node  block(tryBody.getType()  ==  Token.FOR);  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Node  block(tryBody.getType()  ==  Token.FOR);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.FOR);    Node  block(tryBody.getType()  ==  Token.FOR);	  	non-compiled	[CE]  ';'  expected	138	None	add
151	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Node  block(tryBody.getType()  ==  Token.FOR);  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Node  block(tryBody.getType()  ==  Token.FOR);  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.FOR);    Node  block(tryBody.getType()  ==  Token.FOR);  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);	  	non-compiled	[CE]  ';'  expected	138	None	add
152	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.FOR);    Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	138	None	add
153	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.FOR);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);	  	compilable	  [FE]  IllegalStateException  	138	3	add
154	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.FOR);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);	  	compilable	  [FE]  IllegalStateException  	138	3	add
155	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [CE]  ';'  expected  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.FOR);    Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);	  	non-compiled	[CE]  ';'  expected	138	None	add
156	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.FOR);    Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	138	None	add
157	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Node  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Node  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.FOR);    Node  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);	  	non-compiled	[CE]  ';'  expected	138	None	add
158	[BUG]  [BUGGY]  Node  stopBody  =  tryBody.isFunction();  Preconditions.checkState(stopBody.isFunction());  [CE]  incompatible  types  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.isFunction();  Preconditions.checkState(stopBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  stopBody  =  tryBody.isFunction();  Preconditions.checkState(stopBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    stopBody    =    tryBody.isFunction();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  incompatible  types	58	None	replace
159	[BUG]  [BUGGY]  Node  stopBody  =  tryBody.isFunction();  Preconditions.checkState(tryBody.isFunction());  [CE]  incompatible  types  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.isFunction();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  stopBody  =  tryBody.isFunction();  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    stopBody    =    tryBody.isFunction();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  incompatible  types	58	None	replace
160	[BUG]  [BUGGY]  Node  stopBody  =  tryBody.getFunction();  Preconditions.checkState(tryBody.isFunction());  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.getFunction();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  stopBody  =  tryBody.getFunction();  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    stopBody    =    tryBody.isFunction();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
161	[BUG]  [BUGGY]  Node  stopBody  =  tryBody.getFunction();  Preconditions.checkState(stopBody.isFunction());  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.getFunction();  Preconditions.checkState(stopBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  stopBody  =  tryBody.getFunction();  Preconditions.checkState(stopBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    stopBody    =    tryBody.isFunction();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
162	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(stopBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(stopBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    stopBody    =    tryBody.isFunction();    Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	58	3	replace
163	[BUG]  [BUGGY]  Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(stopBody.isFunction());  [FE]  IllegalStateException  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(stopBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(stopBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    stopBody    =    tryBody.isFunction();    Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	58	3	replace
164	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    stopBody    =    tryBody.isFunction();    Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	58	3	replace
165	[BUG]  [BUGGY]  Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isFunction());  [FE]  IllegalStateException  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    stopBody    =    tryBody.isFunction();    Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	58	3	replace
166	[BUG]  [BUGGY]  Node  block(tryBody.isFunction());  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block(tryBody.isFunction());    	non-compiled	[CE]  ';'  expected	59	None	replace
167	[BUG]  [BUGGY]  Node  block(tryBody.isCatch());  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.isCatch());	  Preconditions.checkState(tryBody.isFunction());    Node    block(tryBody.isFunction());    	non-compiled	[CE]  ';'  expected	59	None	replace
168	[BUG]  [BUGGY]  Node  block(tryBody.getType());  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType());	  Preconditions.checkState(tryBody.isFunction());    Node    block(tryBody.isFunction());    	non-compiled	[CE]  ';'  expected	59	None	replace
169	[BUG]  [BUGGY]  Node  block(tryBody.getFirstChild());  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getFirstChild());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getFirstChild());	  Preconditions.checkState(tryBody.isFunction());    Node    block(tryBody.isFunction());    	non-compiled	[CE]  ';'  expected	59	None	replace
170	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block(tryBody.isFunction());  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  block(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block(tryBody.isFunction());    	non-compiled	[CE]  ';'  expected	59	None	replace
171	[BUG]  [BUGGY]  Node  block(tryBody.getLastChild());  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getLastChild());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getLastChild());	  Preconditions.checkState(tryBody.isFunction());    Node    block(tryBody.isFunction());    	non-compiled	[CE]  ';'  expected	59	None	replace
172	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  block(tryBody.isCatch());  [CE]  ';'  expected  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  block(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());  Node  block(tryBody.isCatch());	  Preconditions.checkState(tryBody.isFunction());    Node    block(tryBody.isFunction());    	non-compiled	[CE]  ';'  expected	59	None	replace
173	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=    Token.CATCH);    Preconditions.checkState(tryBody.getType()!=  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	37	3	add
174	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.CATCH);    Preconditions.checkState(tryBody.getType()!=  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	37	3	add
175	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.CATCH);    Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	37	None	add
176	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  block(tryBody.getType()  >>  Token.CATCH);  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  block(tryBody.getType()  >>  Token.CATCH);  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.CATCH);    Node  block(tryBody.getType()  >>  Token.CATCH);  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	37	None	add
177	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  block(tryBody.getType()!=  Token.CATCH);  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  block(tryBody.getType()!=  Token.CATCH);  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.CATCH);    Node  block(tryBody.getType()!=  Token.CATCH);  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	37	None	add
178	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  block(tryBody.getType()  >>  Token.CATCH);  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  block(tryBody.getType()  >>  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.CATCH);    Node  block(tryBody.getType()  >>  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	37	None	add
179	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Preconditions.checkState(tryBody.getType()  >>  Token.CATCH);  [CE]  no  suitable  method  found  for  checkState(int)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Preconditions.checkState(tryBody.getType()  >>  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.CATCH);    Preconditions.checkState(tryBody.getType()  >>  Token.CATCH);	  	non-compiled	[CE]  no  suitable  method  found  for  checkState(int)	37	None	add
180	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  block(tryBody.getType()!=  Token.CATCH);  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  block(tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.CATCH);    Node  block(tryBody.getType()!=  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	37	None	add
181	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	37	3	add
182	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	37	3	add
183	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryBody.getType()  ==  Token.GETPROP);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    	compilable	  [FE]  IllegalStateException  	25	3	replace
184	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryBody.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryBody.getType()  ==  Token.GETPROP);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    	compilable	  [FE]  IllegalStateException  	25	3	replace
185	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.GETPROP);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    	compilable	  [FE]  IllegalStateException  	25	3	replace
186	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.GETPROP);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    	compilable	  [FE]  IllegalStateException  	25	3	replace
187	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.GETPROP);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    	compilable	  [FE]  IllegalStateException  	25	3	replace
188	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.GETPROP);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.GETPROP);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    	compilable	  [FE]  IllegalStateException  	25	3	replace
189	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  tryBody.getType()  ==  Token.GETPROP);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    	compilable	  [FE]  IllegalStateException  	25	3	replace
190	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  tryBody.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  tryBody.getType()  ==  Token.GETPROP);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    	compilable	  [FE]  IllegalStateException  	25	3	replace
191	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    	compilable	  [FE]  IllegalStateException  	25	3	replace
192	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    	compilable	  [FE]  IllegalStateException  	25	3	replace
193	[BUG]  [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [CE]  cannot  find  symbol  tries  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  cannot  find  symbol  tries	25	None	replace
194	[BUG]  [BUGGY]  Node  stopBody  =  tryBody.isCatch();  Preconditions.checkState(tryBody.isCatch());  [CE]  incompatible  types  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.isCatch();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  stopBody  =  tryBody.isCatch();  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    stopBody    =    tryBody.isCatch();    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  incompatible  types	92	None	replace
195	[BUG]  [BUGGY]  Node  stopBody  =  tryBody.isCatch();  Preconditions.checkState(stopBody.isCatch());  [CE]  incompatible  types  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.isCatch();  Preconditions.checkState(stopBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  stopBody  =  tryBody.isCatch();  Preconditions.checkState(stopBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    stopBody    =    tryBody.isCatch();    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  incompatible  types	92	None	replace
196	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  stopBody  =  tryBody.isCatch();  [CE]  incompatible  types  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  stopBody  =  tryBody.isCatch();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  stopBody  =  tryBody.isCatch();	  Preconditions.checkState(tryBody.isCatch());    Node    stopBody    =    tryBody.isCatch();    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  incompatible  types	92	None	replace
197	[BUG]  [BUGGY]  Node  stopBody  =  tryBody.getCatch();  Preconditions.checkState(tryBody.isCatch());  [CE]  cannot  find  symbol  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.getCatch();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  stopBody  =  tryBody.getCatch();  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    stopBody    =    tryBody.isCatch();    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
198	[BUG]  [BUGGY]  Node  stopBody  =  tryBody.isCatch();  Preconditions.checkState(startBody.isCatch());  [CE]  incompatible  types  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.isCatch();  Preconditions.checkState(startBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  stopBody  =  tryBody.isCatch();  Preconditions.checkState(startBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    stopBody    =    tryBody.isCatch();    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  incompatible  types	92	None	replace
199	[BUG]  [BUGGY]  Node  stopBody  =  tryBody.isCatch();  Preconditions.checkState(tearBody.isCatch());  [CE]  incompatible  types  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.isCatch();  Preconditions.checkState(tearBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  stopBody  =  tryBody.isCatch();  Preconditions.checkState(tearBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    stopBody    =    tryBody.isCatch();    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  incompatible  types	92	None	replace
200	[BUG]  [BUGGY]  Node  block(tryBody.isEmpty());  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  ';'  expected	146	None	replace
201	[BUG]  [BUGGY]  Node  block(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  ';'  expected	146	None	replace
202	[BUG]  [BUGGY]  Node  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody.isEmpty());  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  ';'  expected	146	None	replace
203	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	154	None	add
204	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	154	None	add
205	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	154	None	add
206	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isEmpty());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isEmpty());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	154	None	add
207	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isEmpty());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isEmpty());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	154	None	add
208	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  Preconditions.checkState(lock.isEmpty());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  Preconditions.checkState(lock.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  Preconditions.checkState(lock.isEmpty());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	154	None	add
209	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  preconditions.checkState(tryBody.isEmpty());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	154	None	add
210	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  Node  tryBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  Node  tryBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isEmpty());    Node  tryBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	154	None	add
211	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	77	3	add
212	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	77	3	add
213	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	77	3	add
214	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	77	3	add
215	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Node  tryBody  =  null  ||  tryBody.isBlock());  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Node  tryBody  =  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    Node  tryBody  =  null  ||  tryBody.isBlock());	  	non-compiled	[CE]  ';'  expected	77	None	add
216	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Node  tryBody  =  null  ||  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Node  tryBody  =  null  ||  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    Node  tryBody  =  null  ||  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());	  	non-compiled	[CE]  ';'  expected	77	None	add
217	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	77	None	add
218	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	77	None	add
219	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Node  catchBody  =  null  ||  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Node  catchBody  =  null  ||  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    Node  catchBody  =  null  ||  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());	  	non-compiled	[CE]  ';'  expected	77	None	add
220	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Node  block(tryBody)  ==  null  ||  tryBody.isBlock());  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Node  block(tryBody)  ==  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    Node  block(tryBody)  ==  null  ||  tryBody.isBlock());	  	non-compiled	[CE]  ';'  expected	77	None	add
221	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(t,  catchNode);  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).copyInformationFrom(t,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(t,  catchNode);	  Node    block(tryBody).copyInformationFrom(t);    	non-compiled	[CE]  ';'  expected	188	None	replace
222	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(t));  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).copyInformationFrom(t));  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(t));	  Node    block(tryBody).copyInformationFrom(t);    	non-compiled	[CE]  ';'  expected	188	None	replace
223	[BUG]  [BUGGY]  Node  block(t).copyInformationFrom(tryBody);  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(t).copyInformationFrom(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(t).copyInformationFrom(tryBody);	  Node    block(tryBody).copyInformationFrom(t);    	non-compiled	[CE]  ';'  expected	188	None	replace
224	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    ==    Token.CATCH;    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	253	None	replace
225	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  [CE]  cannot  find  symbol  tryNode  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    ==    Token.CATCH;    	non-compiled	[CE]  cannot  find  symbol  tryNode	253	None	replace
226	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    ==    Token.CATCH;    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	253	None	replace
227	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()!=  Token.CATCH;  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()!=  Token.CATCH;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()!=  Token.CATCH;	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    ==    Token.CATCH;    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	253	None	replace
228	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    ==    Token.CATCH;    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	253	None	replace
229	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(catchNode.isCatch());	  Preconditions.checkArgument(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	258	3	replace
230	[BUG]  [BUGGY]  Preconditions.checkArgument(catchNode.isCatch());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(catchNode.isCatch());	  Preconditions.checkArgument(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	258	3	replace
231	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(!tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(!tryBody.isCatch());	  Preconditions.checkArgument(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	258	3	replace
232	[BUG]  [BUGGY]  Preconditions.checkArgument(!tryBody.isCatch());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(!tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(!tryBody.isCatch());	  Preconditions.checkArgument(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	258	3	replace
233	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkNotNull(tryBody.isCatch());	  Preconditions.checkArgument(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	258	3	replace
234	[BUG]  [BUGGY]  Preconditions.checkNotNull(tryBody.isCatch());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkNotNull(tryBody.isCatch());	  Preconditions.checkArgument(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	258	3	replace
235	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(catchNode.isCatch());	  Preconditions.checkState(catchNode.isBlock());    	compilable	  [FE]  IllegalStateException  	96	3	replace
236	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isCatch());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isCatch());	  Preconditions.checkState(catchNode.isBlock());    	compilable	  [FE]  IllegalStateException  	96	3	replace
237	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(catchNode.isFunction());	  Preconditions.checkState(catchNode.isBlock());    	compilable	  [FE]  IllegalStateException  	96	3	replace
238	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isFunction());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isFunction());	  Preconditions.checkState(catchNode.isBlock());    	compilable	  [FE]  IllegalStateException  	96	3	replace
239	[BUG]  [BUGGY]  Node  block(catchNode).copyInformationFrom(catchNode);  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode).copyInformationFrom(catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode).copyInformationFrom(catchNode);	  Preconditions.checkState(catchNode.isBlock());    	non-compiled	[CE]  ';'  expected	96	None	replace
240	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(catchNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(catchNode.isBlock());    	compilable	  [FE]  IllegalStateException  	96	3	replace
241	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(catchNode.isBlock());    	compilable	  [FE]  IllegalStateException  	96	3	replace
242	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.getType()  ==  Token.BLOCK);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(catchNode.getType()  ==  Token.BLOCK);	  Preconditions.checkState(catchNode.isBlock());    	compilable	  [FE]  IllegalStateException  	96	3	replace
243	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.getType()  ==  Token.BLOCK);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.getType()  ==  Token.BLOCK);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.getType()  ==  Token.BLOCK);	  Preconditions.checkState(catchNode.isBlock());    	compilable	  [FE]  IllegalStateException  	96	3	replace
244	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	106	None	add
245	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	106	None	add
246	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	106	None	add
247	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	106	None	add
248	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	106	None	add
249	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	106	None	add
250	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	106	None	add
251	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(t.getType()  ==  Token.CATCH);  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(t.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(t.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	106	None	add
252	[BUG]  [BUGGY]  Node  block(tryBody)  {  Preconditions.checkState(!block(catchNode).isCatch());  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody)  {  Preconditions.checkState(!block(catchNode).isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody)  {  Preconditions.checkState(!block(catchNode).isCatch());	  Node    block(catchNode)    {    Preconditions.checkState(!block(tryBody).isCatch());    	non-compiled	[CE]  ';'  expected	50	None	replace
253	[BUG]  [BUGGY]  Node  block(tryBody)  {  Preconditions.checkState(!block(catchNode).isCatch());  }  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody)  {  Preconditions.checkState(!block(catchNode).isCatch());  }  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody)  {  Preconditions.checkState(!block(catchNode).isCatch());  }	  Node    block(catchNode)    {    Preconditions.checkState(!block(tryBody).isCatch());    	non-compiled	[CE]  ';'  expected	50	None	replace
254	[BUG]  [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(!block(tryBody).isCatch());  }  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(!block(tryBody).isCatch());  }  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode)  {  Preconditions.checkState(!block(tryBody).isCatch());  }	  Node    block(catchNode)    {    Preconditions.checkState(!block(tryBody).isCatch());    	non-compiled	[CE]  ';'  expected	50	None	replace
255	[BUG]  [BUGGY]  final  Node  block(catchNode)  {  Preconditions.checkState(!block(tryBody).isCatch());  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  final  Node  block(catchNode)  {  Preconditions.checkState(!block(tryBody).isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	final  Node  block(catchNode)  {  Preconditions.checkState(!block(tryBody).isCatch());	  Node    block(catchNode)    {    Preconditions.checkState(!block(tryBody).isCatch());    	non-compiled	[CE]  ';'  expected	50	None	replace
256	[BUG]  [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(!block(tryBody).isFunction());  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(!block(tryBody).isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode)  {  Preconditions.checkState(!block(tryBody).isFunction());	  Node    block(catchNode)    {    Preconditions.checkState(!block(tryBody).isCatch());    	non-compiled	[CE]  ';'  expected	50	None	replace
257	[BUG]  [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(!block(tryBody).isAssignmentOp());  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(!block(tryBody).isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode)  {  Preconditions.checkState(!block(tryBody).isAssignmentOp());	  Node    block(catchNode)    {    Preconditions.checkState(!block(tryBody).isCatch());    	non-compiled	[CE]  ';'  expected	50	None	replace
258	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.getType()  ==  Token.CATCH);  [CE]  bad  operand  type  int  for  unary  operator  '!'  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(!tryBody.isCatch());    	non-compiled	[CE]  bad  operand  type  int  for  unary  operator  '!'	36	None	replace
259	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isNode());  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isNode());	  Preconditions.checkState(!tryBody.isCatch());    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
260	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isNone());  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isNone());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isNone());	  Preconditions.checkState(!tryBody.isCatch());    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
261	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  NullPointerException  	240	3	replace
262	[BUG]  [BUGGY]  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isCatch());  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  NullPointerException  	240	3	replace
263	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	240	3	replace
264	[BUG]  [BUGGY]  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	240	3	replace
265	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	240	3	replace
266	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isCatch());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	240	3	replace
267	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	240	3	replace
268	[BUG]  [BUGGY]  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isCatch());  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	240	3	replace
269	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(catchNode.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	240	3	replace
270	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(catchNode.isCatch());  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(catchNode.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	240	3	replace
271	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.isCatch();  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.isCatch();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.isCatch();  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchNode    =    tryBody.isCatch();    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	94	None	replace
272	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchNode    =    tryBody.isCatch();    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	94	None	replace
273	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchNode    =    tryBody.isCatch();    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	94	None	replace
274	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getCatch();  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getCatch();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getCatch();  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchNode    =    tryBody.isCatch();    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	94	None	replace
275	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  tryBody.isCatch();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  tryBody.isCatch();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  tryBody.isCatch();	  Preconditions.checkState(tryBody.isCatch());    Node    catchNode    =    tryBody.isCatch();    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	94	None	replace
276	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchNode    =    tryBody.isCatch();    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	94	None	replace
277	[BUG]  [BUGGY]  final  Node  block(catchNode)  {  Preconditions.checkState(!block(catchNode).isCatch());  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  final  Node  block(catchNode)  {  Preconditions.checkState(!block(catchNode).isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	final  Node  block(catchNode)  {  Preconditions.checkState(!block(catchNode).isCatch());	  Node    block(catchNode)    {    Preconditions.checkState(!block(catchNode).isCatch());    	non-compiled	[CE]  ';'  expected	47	None	replace
278	[BUG]  [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(!block(callNode).isCatch());  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(!block(callNode).isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode)  {  Preconditions.checkState(!block(callNode).isCatch());	  Node    block(catchNode)    {    Preconditions.checkState(!block(catchNode).isCatch());    	non-compiled	[CE]  ';'  expected	47	None	replace
279	[BUG]  [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(!block(peekNode).isCatch());  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(!block(peekNode).isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode)  {  Preconditions.checkState(!block(peekNode).isCatch());	  Node    block(catchNode)    {    Preconditions.checkState(!block(catchNode).isCatch());    	non-compiled	[CE]  ';'  expected	47	None	replace
280	[BUG]  [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(!block(recordNode).isCatch());  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(!block(recordNode).isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode)  {  Preconditions.checkState(!block(recordNode).isCatch());	  Node    block(catchNode)    {    Preconditions.checkState(!block(catchNode).isCatch());    	non-compiled	[CE]  ';'  expected	47	None	replace
281	[BUG]  [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(!block(returnNode).isCatch());  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(!block(returnNode).isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode)  {  Preconditions.checkState(!block(returnNode).isCatch());	  Node    block(catchNode)    {    Preconditions.checkState(!block(catchNode).isCatch());    	non-compiled	[CE]  ';'  expected	47	None	replace
282	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType();	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	105	None	replace
283	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	105	None	replace
284	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(callNode.getType()  ==  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(callNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType();  Preconditions.checkState(callNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	105	None	replace
285	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(catchNode.getType()  ==  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(catchNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType();  Preconditions.checkState(catchNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	105	None	replace
286	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(node.getType()  ==  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(node.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType();  Preconditions.checkState(node.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	105	None	replace
287	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	217	3	add
288	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	217	3	add
289	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	217	3	add
290	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	217	3	add
291	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock());  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Node  tryBody  =  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  ';'  expected	217	None	add
292	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Node  tryBody  =  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  ';'  expected	217	None	add
293	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Node  tryBody  =  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  ';'  expected	217	None	add
294	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	217	None	add
295	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	217	None	add
296	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  >=  null  &&  tryBody.isBlock());  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  >=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  >=  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	217	None	add
297	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node    blockNode    =    tryBody.copyInformationFrom(catchNode);    Node  blockNode  =  tryBody.copyInformationFrom(catchNode);	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	248	None	add
298	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Preconditions.checkState(tryBody.isCatch());  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Preconditions.checkState(tryBody.isCatch());  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node    blockNode    =    tryBody.copyInformationFrom(catchNode);    Preconditions.checkState(tryBody.isCatch());  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	248	None	add
299	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node    blockNode    =    tryBody.copyInformationFrom(catchNode);    Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Preconditions.checkState(tryBody.isCatch());	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	248	None	add
300	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Preconditions.checkState(batchNode.isCatch());  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Preconditions.checkState(batchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node    blockNode    =    tryBody.copyInformationFrom(catchNode);    Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Preconditions.checkState(batchNode.isCatch());	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	248	None	add
301	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Preconditions.checkState(trialNode.isCatch());  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Preconditions.checkState(trialNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node    blockNode    =    tryBody.copyInformationFrom(catchNode);    Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Preconditions.checkState(trialNode.isCatch());	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	248	None	add
302	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Node  blockNode  =  attemptBody.copyInformationFrom(catchNode);  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Node  blockNode  =  attemptBody.copyInformationFrom(catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node    blockNode    =    tryBody.copyInformationFrom(catchNode);    Node  blockNode  =  attemptBody.copyInformationFrom(catchNode);	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	248	None	add
303	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Preconditions.checkState(compiler.isCatch());  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Preconditions.checkState(compiler.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node    blockNode    =    tryBody.copyInformationFrom(catchNode);    Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Preconditions.checkState(compiler.isCatch());	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	248	None	add
304	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Preconditions.checkState(pojo.isCatch());  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Preconditions.checkState(pojo.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node    blockNode    =    tryBody.copyInformationFrom(catchNode);    Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Preconditions.checkState(pojo.isCatch());	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	248	None	add
305	[BUG]  [BUGGY]  Node  block(tryBody.getType()  {  Token.TRY);  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  {  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  {  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	64	None	replace
306	[BUG]  [BUGGY]  Node  block(tryBody.getType()  &  Token.TRY);  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  &  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  &  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	64	None	replace
307	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	64	None	replace
308	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	64	None	replace
309	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()!=  Token.TRY);  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()!=  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	64	None	replace
310	[BUG]  [BUGGY]  Node  block(tryBody).getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody).getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	69	None	replace
311	[BUG]  [BUGGY]  Node  block(tryBody).getType()  ==  Token.TRY);  Preconditions.checkState(block(tryBody).getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).getType()  ==  Token.TRY);  Preconditions.checkState(block(tryBody).getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).getType()  ==  Token.TRY);  Preconditions.checkState(block(tryBody).getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody).getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	69	None	replace
312	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody).getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody).getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody).getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody).getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	69	None	replace
313	[BUG]  [BUGGY]  Node  block(tryBody).getType()  ==  Token.TRY);  Preconditions.checkState(lock.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).getType()  ==  Token.TRY);  Preconditions.checkState(lock.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).getType()  ==  Token.TRY);  Preconditions.checkState(lock.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody).getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	69	None	replace
314	[BUG]  [BUGGY]  Node  block(tryBody).getType()  ==  Token.TRY);  Preconditions.checkState(block.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).getType()  ==  Token.TRY);  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).getType()  ==  Token.TRY);  Preconditions.checkState(block.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody).getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	69	None	replace
315	[BUG]  [BUGGY]  Node  block(tryBody).getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody).getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	69	None	replace
316	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.cloneTree(),  catchNode);  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.cloneTree(),  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.cloneTree(),  catchNode);	          Node    catchNode    =    tryBody.cloneTree();    	non-compiled	[CE]  ';'  expected	177	None	replace
317	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	83	3	add
318	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	83	3	add
319	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	83	None	add
320	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	83	None	add
321	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    Node  tryBody  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	83	None	add
322	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	83	None	add
323	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	83	3	add
324	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	83	3	add
325	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  null  &&  tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  null  &&  tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    Node  tryBody  =  null  &&  tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	83	None	add
326	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  null  &&  tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  null  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    Node  tryBody  =  null  &&  tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	83	None	add
327	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isFunction());        Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	53	3	add
328	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	53	3	add
329	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isFunction());        Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	53	3	add
330	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	53	3	add
331	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isUnknown());  Preconditions.checkState(tryBody.isUnknown());  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isUnknown());  Preconditions.checkState(tryBody.isUnknown());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isUnknown());  Preconditions.checkState(tryBody.isUnknown());	  	non-compiled	[CE]  cannot  find  symbol	53	None	add
332	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isConstructor());  Preconditions.checkState(tryBody.isConstructor());  [CE]  cannot  find  symbol  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isConstructor());  Preconditions.checkState(tryBody.isConstructor());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isConstructor());  Preconditions.checkState(tryBody.isConstructor());	  	non-compiled	[CE]  cannot  find  symbol	53	None	add
333	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isInitialization());  Preconditions.checkState(tryBody.isInitialization());  [CE]  cannot  find  symbol  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isInitialization());  Preconditions.checkState(tryBody.isInitialization());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isInitialization());  Preconditions.checkState(tryBody.isInitialization());	  	non-compiled	[CE]  cannot  find  symbol	53	None	add
334	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isVarArgs());  Preconditions.checkState(tryBody.isVarArgs());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isFunction());        Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isVarArgs());  Preconditions.checkState(tryBody.isVarArgs());	  	compilable	  [FE]  IllegalStateException  	53	3	add
335	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isVarArgs());  Preconditions.checkState(tryBody.isVarArgs());  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isVarArgs());  Preconditions.checkState(tryBody.isVarArgs());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isVarArgs());  Preconditions.checkState(tryBody.isVarArgs());	  	compilable	  [FE]  IllegalStateException  	53	3	add
336	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isReturn());  Preconditions.checkState(tryBody.isReturn());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isFunction());        Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isReturn());  Preconditions.checkState(tryBody.isReturn());	  	compilable	  [FE]  IllegalStateException  	53	3	add
337	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isReturn());  Preconditions.checkState(tryBody.isReturn());  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isReturn());  Preconditions.checkState(tryBody.isReturn());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isReturn());  Preconditions.checkState(tryBody.isReturn());	  	compilable	  [FE]  IllegalStateException  	53	3	add
338	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isFunction());        Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	53	3	add
339	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isFunction());  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	53	3	add
340	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.isAssignmentOp()  ||  tryBody.isAssignmentOp());  [CE]  cannot  find  symbol  tryNode  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.isAssignmentOp()  ||  tryBody.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.isAssignmentOp()  ||  tryBody.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    tryNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol  tryNode	230	None	replace
341	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  &&  tryNode.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  &&  tryNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp()  &&  tryNode.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    tryNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	230	None	replace
342	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryNode.isCatch());  [CE]  cannot  find  symbol  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryNode.isCatch());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    tryNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	230	None	replace
343	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.isAssignmentOp()  ||  tryNode.isAssignmentOp());  [CE]  cannot  find  symbol  tryNode  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.isAssignmentOp()  ||  tryNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.isAssignmentOp()  ||  tryNode.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    tryNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol  tryNode	230	None	replace
344	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch()  ||  tryNode.isAssignmentOp());  [CE]  cannot  find  symbol  tryNode  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch()  ||  tryNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch()  ||  tryNode.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    tryNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol  tryNode	230	None	replace
345	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block(tryBody.isEmpty());  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  block(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block(tryBody.isEmpty());    	non-compiled	[CE]  ';'  expected	153	None	replace
346	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block(tryBody.isCatch());  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());  Node  block(tryBody.isCatch());	  Preconditions.checkState(tryBody.isEmpty());    Node    block(tryBody.isEmpty());    	non-compiled	[CE]  ';'  expected	153	None	replace
347	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Preconditions.checkState(!tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(!tryBody.isFunction());    Preconditions.checkState(!tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	132	3	add
348	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Preconditions.checkState(!tryBody.isFunction());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Preconditions.checkState(!tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isFunction());    Preconditions.checkState(!tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	132	3	add
349	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(!tryBody.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(!tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isFunction());    Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(!tryBody.isFunction());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	132	None	add
350	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(!tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(!tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(!tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	132	3	add
351	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(!tryBody.isFunction());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(!tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(!tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	132	3	add
352	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  block  =  getBody();  Preconditions.checkState(!tryBody.isFunction());  [CE]  cannot  find  symbol  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  block  =  getBody();  Preconditions.checkState(!tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isFunction());    Node  block  =  getBody();  Preconditions.checkState(!tryBody.isFunction());	  	non-compiled	[CE]  cannot  find  symbol	132	None	add
353	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  catchNode  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  catchNode  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isFunction());    Node  catchNode  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isFunction());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	132	None	add
354	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isFunction());  [CE]  ';'  expected  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isFunction());    Node  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isFunction());	  	non-compiled	[CE]  ';'  expected	132	None	add
355	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  block(tryBody).copyInformationFrom(catchNode);  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  block(tryBody).copyInformationFrom(catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isFunction());    Node  block(tryBody).copyInformationFrom(catchNode);	  	non-compiled	[CE]  ';'  expected	132	None	add
356	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Preconditions.checkState(!tryBody.isFunction());  preconditions.checkState(!tryBody.isFunction());  [CE]  cannot  find  symbol  preconditions  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Preconditions.checkState(!tryBody.isFunction());  preconditions.checkState(!tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isFunction());    Preconditions.checkState(!tryBody.isFunction());  preconditions.checkState(!tryBody.isFunction());	  	non-compiled	[CE]  cannot  find  symbol  preconditions	132	None	add
357	[BUG]  [BUGGY]  Node  block(tryBody.isCatch());  Preconditions.checkState(catchNode.isCatch());  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.isCatch());  Preconditions.checkState(catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.isCatch());  Preconditions.checkState(catchNode.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  ';'  expected	88	None	replace
358	[BUG]  [BUGGY]  Node  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody.isCatch());  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  ';'  expected	88	None	replace
359	[BUG]  [BUGGY]  Node  block(tryBody.getFirstChild());  Preconditions.checkState(block.isCatch());  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getFirstChild());  Preconditions.checkState(block.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getFirstChild());  Preconditions.checkState(block.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  ';'  expected	88	None	replace
360	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.getType()!=  Token.TRY);	  Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	245	3	replace
361	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()!=  Token.TRY);  [FE]  IllegalStateException  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()!=  Token.TRY);	  Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	245	3	replace
362	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY,  catchNode);	  Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	245	3	replace
363	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY,  catchNode);  [FE]  IllegalStateException  [FE]      IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY,  catchNode);	  Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	245	3	replace
364	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	245	3	replace
365	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]        IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	245	3	replace
366	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);	  Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	245	3	replace
367	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]          IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);	  Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	245	3	replace
368	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  ||  tryBody.isAssignmentOp());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
369	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  catchNode.isAssignmentOp());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
370	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  &&  tryBody.isAssignmentOp());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
371	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryNode.isAssignmentOp());  [CE]  cannot  find  symbol  tryNode  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  tryNode.isAssignmentOp());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol  tryNode	162	None	replace
372	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  attemptBody.isAssignmentOp());  [CE]  cannot  find  symbol  attemptBody  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  attemptBody.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  attemptBody.isAssignmentOp());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol  attemptBody	162	None	replace
373	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody.isTry());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    tryBody    =    block(tryBody.isTry());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	197	None	replace
374	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  block(tryBody.isTry());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  block(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  block(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    tryBody    =    block(tryBody.isTry());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	197	None	replace
375	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  tryBody  =  block(tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  tryBody  =  block(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());  Node  tryBody  =  block(tryBody.isCatch());	  Preconditions.checkState(tryBody.isTry());    Node    tryBody    =    block(tryBody.isTry());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	197	None	replace
376	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  tryBody  =  block(tryBody.getParent());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  tryBody  =  block(tryBody.getParent());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());  Node  tryBody  =  block(tryBody.getParent());	  Preconditions.checkState(tryBody.isTry());    Node    tryBody    =    block(tryBody.isTry());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	197	None	replace
377	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  tryBody  =  block(tryBody.getFirstChild());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  tryBody  =  block(tryBody.getFirstChild());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());  Node  tryBody  =  block(tryBody.getFirstChild());	  Preconditions.checkState(tryBody.isTry());    Node    tryBody    =    block(tryBody.isTry());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	197	None	replace
378	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  tryBody  =  block(catchNode.isTry());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  tryBody  =  block(catchNode.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());  Node  tryBody  =  block(catchNode.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    tryBody    =    block(tryBody.isTry());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	197	None	replace
379	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalArgumentException  	244	3	add
380	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalArgumentException  	244	3	add
381	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    Node  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	244	None	add
382	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]        IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    Node  block(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	244	None	add
383	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType();  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [CE]  incompatible  types  [FE]          IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType();  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getType();  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  incompatible  types	244	None	add
384	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getType();  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getType();  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    Node  catchNode  =  tryBody.getType();  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	244	None	add
385	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  ==  null;  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]              IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  ==  null;  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    Node  block(tryBody)  ==  null;  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	244	None	add
386	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    Node  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	244	None	add
387	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Preconditions.checkArgument(tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    Preconditions.checkArgument(tryBody.getType()!=  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	244	3	add
388	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Preconditions.checkArgument(tryBody.getType()!=  Token.TRY);  [FE]  IllegalStateException  [FE]                  IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Preconditions.checkArgument(tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    Preconditions.checkArgument(tryBody.getType()!=  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	244	3	add
389	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryCatchNode.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryCatchNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryCatchNode.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    &&    tryCatchNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
390	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  &&  catchNode.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  &&  catchNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp()  &&  catchNode.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    &&    tryCatchNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
391	[BUG]  [BUGGY]  Preconditions.checkState(tryCatchNode.isAssignmentOp()  &&  tryBody.isAssignmentOp());  [CE]  cannot  find  symbol  tryCatchNode  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryCatchNode.isAssignmentOp()  &&  tryBody.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryCatchNode.isAssignmentOp()  &&  tryBody.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    &&    tryCatchNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol  tryCatchNode	125	None	replace
392	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.isAssignmentOp()  &&  tryCatchNode.isAssignmentOp());  [CE]  cannot  find  symbol  tryNode  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.isAssignmentOp()  &&  tryCatchNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.isAssignmentOp()  &&  tryCatchNode.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    &&    tryCatchNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol  tryNode	125	None	replace
393	[BUG]  [BUGGY]  Preconditions.checkState(tries.isAssignmentOp()  &&  tryCatchNode.isAssignmentOp());  [CE]  cannot  find  symbol  tries  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tries.isAssignmentOp()  &&  tryCatchNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries.isAssignmentOp()  &&  tryCatchNode.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    &&    tryCatchNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol  tries	125	None	replace
394	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	210	None	add
395	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	210	None	add
396	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	210	None	add
397	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	210	None	add
398	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	210	None	add
399	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	210	None	add
400	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(lockNode.getType()  ==  Token.CATCH);  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(lockNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(lockNode.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	210	None	add
401	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	210	None	add
402	[BUG]  [BUGGY]  Node  catchBody  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [CE]  no  suitable  method  found  for  block(boolean)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchBody  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchBody  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchBody    =    block(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  no  suitable  method  found  for  block(boolean)	93	None	replace
403	[BUG]  [BUGGY]  Node  catchBody  =  block(tryBody.isCatch());  [CE]  no  suitable  method  found  for  block(boolean)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchBody  =  block(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchBody  =  block(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchBody    =    block(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  no  suitable  method  found  for  block(boolean)	93	None	replace
404	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  catchBody  =  block(tryBody.isCatch());  [CE]  no  suitable  method  found  for  block(boolean)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  catchBody  =  block(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  catchBody  =  block(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchBody    =    block(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  no  suitable  method  found  for  block(boolean)	93	None	replace
405	[BUG]  [BUGGY]  Node  catchBody  =  tryBody.isCatch();  Preconditions.checkState(tryBody.isCatch());  [CE]  incompatible  types  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchBody  =  tryBody.isCatch();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchBody  =  tryBody.isCatch();  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchBody    =    block(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  incompatible  types	93	None	replace
406	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(tryBody.isCatch());  [CE]  no  suitable  method  found  for  block(boolean)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchBody    =    block(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  no  suitable  method  found  for  block(boolean)	93	None	replace
407	[BUG]  [BUGGY]  Node  catchBody  =  Block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [CE]  cannot  find  symbol  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchBody  =  Block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchBody  =  Block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchBody    =    block(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
408	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.isAssignmentOp()  :  tryBody,  catchNode);  [CE]  cannot  find  symbol  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.isAssignmentOp()  :  tryBody,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null?  tryBody.isAssignmentOp()  :  tryBody,  catchNode);	  Preconditions.checkState(tryBody!=    null?    tryBody.isAssignmentOp()    :    tryBody);    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
409	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.isAssignmentOp()  :  catchNode);  [CE]  cannot  find  symbol  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.isAssignmentOp()  :  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null?  tryBody.isAssignmentOp()  :  catchNode);	  Preconditions.checkState(tryBody!=    null?    tryBody.isAssignmentOp()    :    tryBody);    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
410	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.isAssignmentOp()  :  tryCatchNode);  [CE]  cannot  find  symbol  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.isAssignmentOp()  :  tryCatchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null?  tryBody.isAssignmentOp()  :  tryCatchNode);	  Preconditions.checkState(tryBody!=    null?    tryBody.isAssignmentOp()    :    tryBody);    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
411	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.isAssignmentOp()  :  tryNode);  [CE]  cannot  find  symbol  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.isAssignmentOp()  :  tryNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null?  tryBody.isAssignmentOp()  :  tryNode);	  Preconditions.checkState(tryBody!=    null?    tryBody.isAssignmentOp()    :    tryBody);    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
412	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.isAssignmentOp()  :  tryBody.isCatch());  [CE]  cannot  find  symbol  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.isAssignmentOp()  :  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null?  tryBody.isAssignmentOp()  :  tryBody.isCatch());	  Preconditions.checkState(tryBody!=    null?    tryBody.isAssignmentOp()    :    tryBody);    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
413	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  NullPointerException  	237	3	replace
414	[BUG]  [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isCatch());  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  NullPointerException  	237	3	replace
415	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	237	3	replace
416	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isCatch());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	237	3	replace
417	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	237	3	replace
418	[BUG]  [BUGGY]  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isCatch());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	237	3	replace
419	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	237	3	replace
420	[BUG]  [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	237	3	replace
421	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(catchNode.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	237	3	replace
422	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(catchNode.isCatch());  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(catchNode.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	237	3	replace
423	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	237	3	replace
424	[BUG]  [BUGGY]  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isCatch());  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	237	3	replace
425	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	237	3	replace
426	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isCatch());  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	237	3	replace
427	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isTwin()  &&  catchNode.isCatch());  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isTwin()  &&  catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isTwin()  &&  catchNode.isCatch());	  Preconditions.checkState(tryBody.isTwin()    &&    catchNode.isCatch());    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
428	[BUG]  [BUGGY]  Preconditions.checkState(twinNode.isTwin()  &&  catchNode.isCatch());  [CE]  cannot  find  symbol  twinNode  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(twinNode.isTwin()  &&  catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(twinNode.isTwin()  &&  catchNode.isCatch());	  Preconditions.checkState(tryBody.isTwin()    &&    catchNode.isCatch());    	non-compiled	[CE]  cannot  find  symbol  twinNode	34	None	replace
429	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isTwin()  &&  catchNode.isCatch());  [CE]  cannot  find  symbol  callNode  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(callNode.isTwin()  &&  catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(callNode.isTwin()  &&  catchNode.isCatch());	  Preconditions.checkState(tryBody.isTwin()    &&    catchNode.isCatch());    	non-compiled	[CE]  cannot  find  symbol  callNode	34	None	replace
430	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTwin()  ||  catchNode.isCatch());  [CE]  cannot  find  symbol  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTwin()  ||  catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTwin()  ||  catchNode.isCatch());	  Preconditions.checkState(tryBody.isTwin()    &&    catchNode.isCatch());    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
431	[BUG]  [BUGGY]  Preconditions.checkState(matchNode.isTwin()  &&  catchNode.isCatch());  [CE]  cannot  find  symbol  matchNode  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(matchNode.isTwin()  &&  catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(matchNode.isTwin()  &&  catchNode.isCatch());	  Preconditions.checkState(tryBody.isTwin()    &&    catchNode.isCatch());    	non-compiled	[CE]  cannot  find  symbol  matchNode	34	None	replace
432	[BUG]  [BUGGY]  Preconditions.checkState(CatchNode.isTwin()  &&  catchNode.isCatch());  [CE]  cannot  find  symbol  CatchNode  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(CatchNode.isTwin()  &&  catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(CatchNode.isTwin()  &&  catchNode.isCatch());	  Preconditions.checkState(tryBody.isTwin()    &&    catchNode.isCatch());    	non-compiled	[CE]  cannot  find  symbol  CatchNode	34	None	replace
433	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=  Token.FUNCTION);	  Preconditions.checkState(tryBody.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	135	3	replace
434	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.FUNCTION);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.FUNCTION);	  Preconditions.checkState(tryBody.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	135	3	replace
435	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION  ||  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	135	3	replace
436	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION  ||  tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION  ||  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	135	3	replace
437	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION  ||  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	135	3	replace
438	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION  ||  tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION  ||  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	135	3	replace
439	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION  ||  tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION  ||  tryBody.getType()!=  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	135	3	replace
440	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION  ||  tryBody.getType()!=  Token.CATCH);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION  ||  tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION  ||  tryBody.getType()!=  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	135	3	replace
441	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION  ||  tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION  ||  tryBody.getType()  ==  Token.GETPROP);	  Preconditions.checkState(tryBody.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	135	3	replace
442	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION  ||  tryBody.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION  ||  tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION  ||  tryBody.getType()  ==  Token.GETPROP);	  Preconditions.checkState(tryBody.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	135	3	replace
443	[BUG]  [BUGGY]  Node  tryBody  =  null  &&  tryBody.isBlock());  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    null    &&    tryBody.isBlock());    	non-compiled	[CE]  ';'  expected	113	None	replace
444	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  tryBody  =  null  &&  tryBody.isBlock());  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  tryBody  =  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  tryBody  =  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    null    &&    tryBody.isBlock());    	non-compiled	[CE]  ';'  expected	113	None	replace
445	[BUG]  [BUGGY]  Node  tryBody  =  null  &&  tryBody.isBlock();  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  null  &&  tryBody.isBlock();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  null  &&  tryBody.isBlock();	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	113	None	replace
446	[BUG]  [BUGGY]  Node  tryBody  =  null  ||  tryBody.isBlock());  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  null  ||  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    null    &&    tryBody.isBlock());    	non-compiled	[CE]  ';'  expected	113	None	replace
447	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock());  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    null    &&    tryBody.isBlock());    	non-compiled	[CE]  ';'  expected	113	None	replace
448	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Node  tryBody  =  null  &&  tryBody.isBlock());  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Node  tryBody  =  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Node  tryBody  =  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    null    &&    tryBody.isBlock());    	non-compiled	[CE]  ';'  expected	113	None	replace
449	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.getType()  ==  Token.TRY)  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.getType()  ==  Token.TRY)  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.getType()  ==  Token.TRY)	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY)    	non-compiled	[CE]  ';'  expected	192	None	replace
450	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY)  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY)  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.TRY)	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY)    	non-compiled	[CE]  ';'  expected	192	None	replace
451	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY)  {  ';'  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY)  {  ';'  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY)  {  ';'	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY)    	non-compiled	[CE]  ';'  expected	192	None	replace
452	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY)  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY)  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY)	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY)    	non-compiled	[CE]  ';'  expected	192	None	replace
453	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH)  ==  ';'  [CE]  not  a  statement  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH)  ==  ';'  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH)  ==  ';'	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY)    	non-compiled	[CE]  not  a  statement	192	None	replace
454	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	242	3	add
455	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	242	3	add
456	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	242	None	add
457	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    Node  block(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	242	None	add
458	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	242	3	add
459	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	242	3	add
460	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY  ||  block(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY  ||  block(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    Node  block(tryBody.getType()  ==  Token.TRY  ||  block(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	242	None	add
461	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	242	3	add
462	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.TRY);  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	242	3	add
463	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  {  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  {  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    Node  block(tryBody.getType()  {  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	242	None	add
464	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    Node  block(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	242	None	add
465	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	114	3	add
466	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	114	3	add
467	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	114	3	add
468	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	114	3	add
469	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	114	3	add
470	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	114	3	add
471	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	114	3	add
472	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	114	3	add
473	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Node  block(catchNode)  {  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Node  block(catchNode)  {  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Node  block(catchNode)  {  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  ';'  expected	114	None	add
474	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	114	3	add
475	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	114	3	add
476	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  catchNode.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  catchNode.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	114	3	add
477	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  catchNode.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  catchNode.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  catchNode.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	114	3	add
478	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclared());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  cannot  find  symbol  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclared());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclared());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  cannot  find  symbol	114	None	add
479	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	79	3	add
480	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	79	3	add
481	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	79	None	add
482	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	79	None	add
483	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  block(tryBody.getType());  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  block(tryBody.getType());  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    Node  tryBody  =  block(tryBody.getType());  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	79	None	add
484	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    Node  tryBody  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	79	None	add
485	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  null  &&  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  null  &&  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    Node  tryBody  =  null  &&  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	79	None	add
486	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	79	3	add
487	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	79	3	add
488	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  null  &&  tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  null  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    Node  tryBody  =  null  &&  tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	79	None	add
489	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=  null  ||  tryBody.isCatch());	  Preconditions.checkState(tryBody!=    null    ||    tryBody.isNode());    	compilable	  [FE]  IllegalStateException  	206	3	replace
490	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isCatch());  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  ||  tryBody.isCatch());	  Preconditions.checkState(tryBody!=    null    ||    tryBody.isNode());    	compilable	  [FE]  IllegalStateException  	206	3	replace
491	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isNode());  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  &&  tryBody.isNode());	  Preconditions.checkState(tryBody!=    null    ||    tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol	206	None	replace
492	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryNode.isNode());  [CE]  cannot  find  symbol  tryNode  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryNode.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  ||  tryNode.isNode());	  Preconditions.checkState(tryBody!=    null    ||    tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol  tryNode	206	None	replace
493	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  catchNode.isNode());  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  catchNode.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  ||  catchNode.isNode());	  Preconditions.checkState(tryBody!=    null    ||    tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol	206	None	replace
494	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    tryBody    =    block(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	183	None	replace
495	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody.isFunction());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    tryBody    =    block(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	183	None	replace
496	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isFunction());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    tryBody    =    block(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	183	None	replace
497	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody.isFunction());  Preconditions.checkState(callNode.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody.isFunction());  Preconditions.checkState(callNode.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody.isFunction());  Preconditions.checkState(callNode.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    tryBody    =    block(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	183	None	replace
498	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody.isFunction());  Preconditions.checkState(catchNode.isFunction());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody.isFunction());  Preconditions.checkState(catchNode.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody.isFunction());  Preconditions.checkState(catchNode.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    tryBody    =    block(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	183	None	replace
499	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody.isCatch());	  Preconditions.checkState(tryBody.isFunction());    Node    tryBody    =    block(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	183	None	replace
500	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.isCatch()  :  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=  null?  tryBody.isCatch()  :  null);	  Preconditions.checkState(tryBody!=    null?    tryBody.isTwin()    :    null);    	compilable	  [FE]  IllegalStateException  	260	3	replace
501	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.isCatch()  :  null);  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.isCatch()  :  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null?  tryBody.isCatch()  :  null);	  Preconditions.checkState(tryBody!=    null?    tryBody.isTwin()    :    null);    	compilable	  [FE]  IllegalStateException  	260	3	replace
502	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.isTwin()  :  null,  catchNode);  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.isTwin()  :  null,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null?  tryBody.isTwin()  :  null,  catchNode);	  Preconditions.checkState(tryBody!=    null?    tryBody.isTwin()    :    null);    	non-compiled	[CE]  cannot  find  symbol	260	None	replace
503	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null?  tryBody.isTwin()  :  null);  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null?  tryBody.isTwin()  :  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null?  tryBody.isTwin()  :  null);	  Preconditions.checkState(tryBody!=    null?    tryBody.isTwin()    :    null);    	non-compiled	[CE]  cannot  find  symbol	260	None	replace
504	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.getType()  ==  Token.TRY  :  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=  null?  tryBody.getType()  ==  Token.TRY  :  null);	  Preconditions.checkState(tryBody!=    null?    tryBody.isTwin()    :    null);    	compilable	  [FE]  IllegalStateException  	260	3	replace
505	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.getType()  ==  Token.TRY  :  null);  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.getType()  ==  Token.TRY  :  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null?  tryBody.getType()  ==  Token.TRY  :  null);	  Preconditions.checkState(tryBody!=    null?    tryBody.isTwin()    :    null);    	compilable	  [FE]  IllegalStateException  	260	3	replace
506	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isTwin()  :  null);  [CE]  ')'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isTwin()  :  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  tryBody.isTwin()  :  null);	  Preconditions.checkState(tryBody!=    null?    tryBody.isTwin()    :    null);    	non-compiled	[CE]  ')'  expected	260	None	replace
507	[BUG]  [BUGGY]  Node  stopBody  =  tryBody.isTry();  Preconditions.checkState(tryBody.isTry());  [CE]  incompatible  types  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.isTry();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  stopBody  =  tryBody.isTry();  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    stopBody    =    tryBody.isTry();    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  incompatible  types	11	None	replace
508	[BUG]  [BUGGY]  Node  stopBody  =  tryBody.isTry();  Preconditions.checkState(stopBody.isTry());  [CE]  incompatible  types  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.isTry();  Preconditions.checkState(stopBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  stopBody  =  tryBody.isTry();  Preconditions.checkState(stopBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    stopBody    =    tryBody.isTry();    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  incompatible  types	11	None	replace
509	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  stopBody  =  tryBody.isTry();  [CE]  incompatible  types  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  stopBody  =  tryBody.isTry();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());  Node  stopBody  =  tryBody.isTry();	  Preconditions.checkState(tryBody.isTry());    Node    stopBody    =    tryBody.isTry();    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  incompatible  types	11	None	replace
510	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    stopBody    =    tryBody.isTry();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	11	3	replace
511	[BUG]  [BUGGY]  Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  [FE]  IllegalStateException  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    stopBody    =    tryBody.isTry();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	11	3	replace
512	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  stopBody  =  tryBody.isTry();  [CE]  incompatible  types  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  stopBody  =  tryBody.isTry();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  stopBody  =  tryBody.isTry();	  Preconditions.checkState(tryBody.isTry());    Node    stopBody    =    tryBody.isTry();    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  incompatible  types	11	None	replace
513	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.isCatch());	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryNode.isCatch());    	compilable	  [FE]  IllegalStateException  	191	3	replace
514	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.isCatch());  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.isCatch());	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryNode.isCatch());    	compilable	  [FE]  IllegalStateException  	191	3	replace
515	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryNode.isCatch());  [CE]  cannot  find  symbol  tryNode  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryNode.isCatch());	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryNode.isCatch());    	non-compiled	[CE]  cannot  find  symbol  tryNode	191	None	replace
516	[BUG]  [BUGGY]  Preconditions.checkState(callNode.getType()  ==  Token.TRY  ||  callNode.isCatch());  [CE]  cannot  find  symbol  callNode  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(callNode.getType()  ==  Token.TRY  ||  callNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(callNode.getType()  ==  Token.TRY  ||  callNode.isCatch());	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryNode.isCatch());    	non-compiled	[CE]  cannot  find  symbol  callNode	191	None	replace
517	[BUG]  [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.TRY  ||  catchNode.isCatch());  [CE]  cannot  find  symbol  t  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.TRY  ||  catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(t.getType()  ==  Token.TRY  ||  catchNode.isCatch());	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryNode.isCatch());    	non-compiled	[CE]  cannot  find  symbol  t	191	None	replace
518	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY  ||  tryNode.isCatch());  [CE]  cannot  find  symbol  tryNode  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY  ||  tryNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.TRY  ||  tryNode.isCatch());	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryNode.isCatch());    	non-compiled	[CE]  cannot  find  symbol  tryNode	191	None	replace
519	[BUG]  [BUGGY]  Preconditions.checkState(testNode.getType()  ==  Token.TRY  ||  tryNode.isCatch());  [CE]  cannot  find  symbol  testNode  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(testNode.getType()  ==  Token.TRY  ||  tryNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(testNode.getType()  ==  Token.TRY  ||  tryNode.isCatch());	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryNode.isCatch());    	non-compiled	[CE]  cannot  find  symbol  testNode	191	None	replace
520	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode.isCatch());	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryNode.isCatch());    	compilable	  [FE]  IllegalStateException  	191	3	replace
521	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode.isCatch());  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode.isCatch());	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryNode.isCatch());    	compilable	  [FE]  IllegalStateException  	191	3	replace
522	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	41	3	add
523	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	41	3	add
524	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	41	None	add
525	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    Node  block(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	41	None	add
526	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	41	3	add
527	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	41	3	add
528	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()!=  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	41	3	add
529	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()!=  Token.TRY);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()!=  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	41	3	add
530	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.CATCH  ||  catchNode.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.CATCH  ||  catchNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    Node  block(tryBody.getType()  ==  Token.CATCH  ||  catchNode.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	41	None	add
531	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	41	3	add
532	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	41	3	add
533	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  {  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  {  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    Node  block(tryBody.getType()  {  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	41	None	add
534	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody  ==  null  ||  tryBody.isCatch());	  Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	78	3	replace
535	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isCatch());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  ||  tryBody.isCatch());	  Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	78	3	replace
536	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=  null  ||  tryBody.isFunction());	  Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	78	3	replace
537	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isFunction());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  ||  tryBody.isFunction());	  Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	78	3	replace
538	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=  null  ||  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	78	3	replace
539	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  ||  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	78	3	replace
540	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=  null  ||  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	78	3	replace
541	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  ||  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	78	3	replace
542	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(catchNode,  catchNode);  [CE]  method  copyInformationFrom  in  class  Node  cannot  be  applied  to  given  types;  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(catchNode,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.copyInformationFrom(catchNode,  catchNode);	  Node    blockNode    =    tryBody.copyInformationFrom(catchNode);    	non-compiled	[CE]  method  copyInformationFrom  in  class  Node  cannot  be  applied  to  given  types;	249	None	replace
543	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  catchNode.copyInformationFrom(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  blockNode  =  catchNode.copyInformationFrom(tryBody);	  Node    blockNode    =    tryBody.copyInformationFrom(catchNode);    	compilable	  [FE]  IllegalStateException  	249	3	replace
544	[BUG]  [BUGGY]  Node  blockNode  =  catchNode.copyInformationFrom(tryBody);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  catchNode.copyInformationFrom(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  catchNode.copyInformationFrom(tryBody);	  Node    blockNode    =    tryBody.copyInformationFrom(catchNode);    	compilable	  [FE]  IllegalStateException  	249	3	replace
545	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(callNode);  [CE]  cannot  find  symbol  callNode  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(callNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.copyInformationFrom(callNode);	  Node    blockNode    =    tryBody.copyInformationFrom(catchNode);    	non-compiled	[CE]  cannot  find  symbol  callNode	249	None	replace
546	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(patchNode);  [CE]  cannot  find  symbol  patchNode  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(patchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.copyInformationFrom(patchNode);	  Node    blockNode    =    tryBody.copyInformationFrom(catchNode);    	non-compiled	[CE]  cannot  find  symbol  patchNode	249	None	replace
547	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(batchNode);  [CE]  cannot  find  symbol  batchNode  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(batchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.copyInformationFrom(batchNode);	  Node    blockNode    =    tryBody.copyInformationFrom(catchNode);    	non-compiled	[CE]  cannot  find  symbol  batchNode	249	None	replace
548	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(false);  [CE]  method  copyInformationFrom  in  class  Node  cannot  be  applied  to  given  types;  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(false);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.copyInformationFrom(false);	  Node    blockNode    =    tryBody.copyInformationFrom(catchNode);    	non-compiled	[CE]  method  copyInformationFrom  in  class  Node  cannot  be  applied  to  given  types;	249	None	replace
549	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.cloneTry(this);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.cloneTry(this);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.cloneTry(this);	          Node    catchNode    =    tryBody.cloneTry();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	235	None	replace
550	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.cloneTry(),  catchNode);  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.cloneTry(),  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.cloneTry(),  catchNode);	          Node    catchNode    =    tryBody.cloneTry();    	non-compiled	[CE]  ';'  expected	235	None	replace
551	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.cloneTry(),  null);  [CE]  <identifier>  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.cloneTry(),  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.cloneTry(),  null);	          Node    catchNode    =    tryBody.cloneTry();    	non-compiled	[CE]  <identifier>  expected	235	None	replace
552	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.getType()  ==  Token.TRY);  [CE]  bad  operand  type  int  for  unary  operator  '!'  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(!tryBody.isTry());    	non-compiled	[CE]  bad  operand  type  int  for  unary  operator  '!'	141	None	replace
553	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNode()  ||  tryBody.isCatch());  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNode()  ||  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNode()  ||  tryBody.isCatch());	  Preconditions.checkState(tryBody.isNode()    ||    tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
554	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNode()  &&  tryBody.isNode());  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNode()  &&  tryBody.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNode()  &&  tryBody.isNode());	  Preconditions.checkState(tryBody.isNode()    ||    tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
555	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNode()  ||  tryBody.isEmpty());  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNode()  ||  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNode()  ||  tryBody.isEmpty());	  Preconditions.checkState(tryBody.isNode()    ||    tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
556	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNode()  ||  tryBody.isVarArgs());  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNode()  ||  tryBody.isVarArgs());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNode()  ||  tryBody.isVarArgs());	  Preconditions.checkState(tryBody.isNode()    ||    tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
557	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNode()  ||  tryBody.isNotNode());  [CE]  cannot  find  symbol  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNode()  ||  tryBody.isNotNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNode()  ||  tryBody.isNotNode());	  Preconditions.checkState(tryBody.isNode()    ||    tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
558	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  Preconditions.checkArgument(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.isTry());    Preconditions.checkArgument(tryBody.isTry());	  	compilable	  [FE]  IllegalArgumentException  	219	3	add
559	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  Preconditions.checkArgument(tryBody.isTry());  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  Preconditions.checkArgument(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isTry());    Preconditions.checkArgument(tryBody.isTry());	  	compilable	  [FE]  IllegalArgumentException  	219	3	add
560	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  Node  block(tryBody.isTry());  Preconditions.checkArgument(tryBody.isTry());  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  Node  block(tryBody.isTry());  Preconditions.checkArgument(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isTry());    Node  block(tryBody.isTry());  Preconditions.checkArgument(tryBody.isTry());	  	non-compiled	[CE]  ';'  expected	219	None	add
561	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  Node  catchNode  =  block(tryBody.isTry());  Preconditions.checkArgument(tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  Node  catchNode  =  block(tryBody.isTry());  Preconditions.checkArgument(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isTry());    Node  catchNode  =  block(tryBody.isTry());  Preconditions.checkArgument(tryBody.isTry());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	219	None	add
562	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  Node  stopBody  =  tryBody.isTry();  Preconditions.checkArgument(tryBody.isTry());  [CE]  incompatible  types  [FE]          IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  Node  stopBody  =  tryBody.isTry();  Preconditions.checkArgument(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isTry());    Node  stopBody  =  tryBody.isTry();  Preconditions.checkArgument(tryBody.isTry());	  	non-compiled	[CE]  incompatible  types	219	None	add
563	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  Node  catchNode  =  tryBody.isTry();  Preconditions.checkArgument(tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  Node  catchNode  =  tryBody.isTry();  Preconditions.checkArgument(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isTry());    Node  catchNode  =  tryBody.isTry();  Preconditions.checkArgument(tryBody.isTry());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	219	None	add
564	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	219	3	add
565	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isTry());  [FE]  IllegalStateException  [FE]              IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	219	3	add
566	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  Node  block  =  tryBody.isTry();  Preconditions.checkArgument(tryBody.isTry());  [CE]  incompatible  types  [FE]                IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  Node  block  =  tryBody.isTry();  Preconditions.checkArgument(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isTry());    Node  block  =  tryBody.isTry();  Preconditions.checkArgument(tryBody.isTry());	  	non-compiled	[CE]  incompatible  types	219	None	add
567	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  Node  tryBody  =  block(tryBody.isTry());  Preconditions.checkArgument(tryBody.isTry());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  Node  tryBody  =  block(tryBody.isTry());  Preconditions.checkArgument(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isTry());    Node  tryBody  =  block(tryBody.isTry());  Preconditions.checkArgument(tryBody.isTry());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	219	None	add
568	[BUG]  [BUGGY]  Node  block(catchNode).copyInformationFrom(trimNode,  tryBody);  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode).copyInformationFrom(trimNode,  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode).copyInformationFrom(trimNode,  tryBody);	  Node    block(catchNode).copyInformationFrom(trimNode);    	non-compiled	[CE]  ';'  expected	51	None	replace
569	[BUG]  [BUGGY]  Node  block(catchNode).copyInformationFrom(getCatchNode());  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode).copyInformationFrom(getCatchNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode).copyInformationFrom(getCatchNode());	  Node    block(catchNode).copyInformationFrom(trimNode);    	non-compiled	[CE]  ';'  expected	51	None	replace
570	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType()  {  Token.CATCH;  Preconditions.checkState(callNode.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType()  {  Token.CATCH;  Preconditions.checkState(callNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType()  {  Token.CATCH;  Preconditions.checkState(callNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    {    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	213	None	replace
571	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType()  {  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType()  {  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType()  {  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    {    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	213	None	replace
572	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType()  {  Token.CATCH;  Preconditions.checkState(atchNode.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType()  {  Token.CATCH;  Preconditions.checkState(atchNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType()  {  Token.CATCH;  Preconditions.checkState(atchNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    {    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	213	None	replace
573	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType()  {  Token.CATCH;  Preconditions.checkState(catchNode.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType()  {  Token.CATCH;  Preconditions.checkState(catchNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType()  {  Token.CATCH;  Preconditions.checkState(catchNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    {    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	213	None	replace
574	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType()  {  Token.CATCH;  Preconditions.checkState(t.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType()  {  Token.CATCH;  Preconditions.checkState(t.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType()  {  Token.CATCH;  Preconditions.checkState(t.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    {    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	213	None	replace
575	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isNode()  &&  tryBody.isNode());  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isNode()  &&  tryBody.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isNode()  &&  tryBody.isNode());	  Preconditions.checkState(tryBody.isNode()    &&    catchNode.isNode());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
576	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isNode()  &&  catchNode.isNode());  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isNode()  &&  catchNode.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isNode()  &&  catchNode.isNode());	  Preconditions.checkState(tryBody.isNode()    &&    catchNode.isNode());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
577	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNode()  &&  catchNode.isCatch());  [CE]  cannot  find  symbol  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNode()  &&  catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNode()  &&  catchNode.isCatch());	  Preconditions.checkState(tryBody.isNode()    &&    catchNode.isNode());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
578	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isNode()  &&  catchNode.isNode());  [CE]  cannot  find  symbol  callNode  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(callNode.isNode()  &&  catchNode.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(callNode.isNode()  &&  catchNode.isNode());	  Preconditions.checkState(tryBody.isNode()    &&    catchNode.isNode());    	non-compiled	[CE]  cannot  find  symbol  callNode	29	None	replace
579	[BUG]  [BUGGY]  Preconditions.checkState(matchNode.isNode()  &&  catchNode.isNode());  [CE]  cannot  find  symbol  matchNode  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(matchNode.isNode()  &&  catchNode.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(matchNode.isNode()  &&  catchNode.isNode());	  Preconditions.checkState(tryBody.isNode()    &&    catchNode.isNode());    	non-compiled	[CE]  cannot  find  symbol  matchNode	29	None	replace
580	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  [CE]  cannot  find  symbol  tryNode  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tries.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  tryNode	45	None	replace
581	[BUG]  [BUGGY]  Preconditions.checkState(callNode.getType()  ==  Token.CATCH);  [CE]  cannot  find  symbol  callNode  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(callNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(callNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tries.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  callNode	45	None	replace
582	[BUG]  [BUGGY]  Preconditions.checkState(testNode.getType()  ==  Token.CATCH);  [CE]  cannot  find  symbol  testNode  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(testNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(testNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tries.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  testNode	45	None	replace
583	[BUG]  [BUGGY]  Preconditions.checkState(getCatchNode().getType()  ==  Token.CATCH);  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(getCatchNode().getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(getCatchNode().getType()  ==  Token.CATCH);	  Preconditions.checkState(tries.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
584	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    blockNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	171	None	add
585	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    blockNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	171	None	add
586	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    blockNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	171	None	add
587	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    blockNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	171	None	add
588	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    blockNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	171	None	add
589	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(lockNode.getType()  ==  Token.TRY);  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(lockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    blockNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(lockNode.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	171	None	add
590	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(lockNode.getType()  ==  Token.TRY);  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(lockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    blockNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(lockNode.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	171	None	add
591	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getNext();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getNext();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    blockNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getNext();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	171	None	add
592	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	239	None	add
593	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	239	None	add
594	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isCatch());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isCatch());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	239	None	add
595	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	239	None	add
596	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isCatch());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isCatch());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	239	None	add
597	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	239	None	add
598	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(t.isCatch());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(t.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(t.isCatch());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	239	None	add
599	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(lock.isCatch());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(lock.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(lock.isCatch());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	239	None	add
600	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  &&  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	44	3	replace
601	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  &&  tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  &&  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	44	3	replace
602	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  catchNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  catchNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	44	3	replace
603	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  catchNode.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  catchNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  catchNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	44	3	replace
604	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()!=  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	44	3	replace
605	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()!=  Token.CATCH);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()!=  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	44	3	replace
606	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	44	3	replace
607	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	44	3	replace
608	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    tryBody    =    block(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	89	None	replace
609	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody.isCatch());  Preconditions.checkState(catchNode.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody.isCatch());  Preconditions.checkState(catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody.isCatch());  Preconditions.checkState(catchNode.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    tryBody    =    block(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	89	None	replace
610	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody.isCatch());  Preconditions.checkState(callNode.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody.isCatch());  Preconditions.checkState(callNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody.isCatch());  Preconditions.checkState(callNode.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    tryBody    =    block(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	89	None	replace
611	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isCatch());  Node  tryBody  =  block(tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isCatch());  Node  tryBody  =  block(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isCatch());  Node  tryBody  =  block(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    tryBody    =    block(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	89	None	replace
612	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	236	None	add
613	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	236	None	add
614	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	236	None	add
615	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isCatch());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	236	None	add
616	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	236	None	add
617	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isCatch());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isCatch());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	236	None	add
618	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	236	None	add
619	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isCatch());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isCatch());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	236	None	add
620	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isTwin(),  tryBody);  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isTwin(),  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isTwin(),  tryBody);	  Preconditions.checkState(tryBody.isTwin(),    catchNode);    	non-compiled	[CE]  cannot  find  symbol	207	None	replace
621	[BUG]  [BUGGY]  Preconditions.checkState(twinNode.isTwin(),  catchNode);  [CE]  cannot  find  symbol  twinNode  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(twinNode.isTwin(),  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(twinNode.isTwin(),  catchNode);	  Preconditions.checkState(tryBody.isTwin(),    catchNode);    	non-compiled	[CE]  cannot  find  symbol  twinNode	207	None	replace
622	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isTwin(),  catchNode);  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isTwin(),  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isTwin(),  catchNode);	  Preconditions.checkState(tryBody.isTwin(),    catchNode);    	non-compiled	[CE]  cannot  find  symbol	207	None	replace
623	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isTwin(),  catchNode);  [CE]  cannot  find  symbol  callNode  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(callNode.isTwin(),  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(callNode.isTwin(),  catchNode);	  Preconditions.checkState(tryBody.isTwin(),    catchNode);    	non-compiled	[CE]  cannot  find  symbol  callNode	207	None	replace
624	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTwin(),  catchNode,  catchNode);  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTwin(),  catchNode,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTwin(),  catchNode,  catchNode);	  Preconditions.checkState(tryBody.isTwin(),    catchNode);    	non-compiled	[CE]  cannot  find  symbol	207	None	replace
625	[BUG]  [BUGGY]  Preconditions.checkState(matchNode.isTwin(),  catchNode);  [CE]  cannot  find  symbol  matchNode  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(matchNode.isTwin(),  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(matchNode.isTwin(),  catchNode);	  Preconditions.checkState(tryBody.isTwin(),    catchNode);    	non-compiled	[CE]  cannot  find  symbol  matchNode	207	None	replace
626	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=  null  ||  tryBody.isEmpty());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	199	3	replace
627	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isEmpty());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  ||  tryBody.isEmpty());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	199	3	replace
628	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=  null  &&  catchNode.isEmpty());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	199	3	replace
629	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isEmpty());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  catchNode.isEmpty());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	199	3	replace
630	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody  ==  null  ||  tryBody.isEmpty());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	199	3	replace
631	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isEmpty());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  ||  tryBody.isEmpty());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	199	3	replace
632	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody  ==  null  &&  tryBody.isEmpty());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	199	3	replace
633	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isEmpty());  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  &&  tryBody.isEmpty());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	199	3	replace
634	[BUG]  [BUGGY]  Node  stopBody  =  tryBody.getType();  Preconditions.checkState(stopBody.getType()  ==  Token.CATCH);  [CE]  incompatible  types  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.getType();  Preconditions.checkState(stopBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  stopBody  =  tryBody.getType();  Preconditions.checkState(stopBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    stopBody    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	214	None	replace
635	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  stopBody  =  tryBody.getType();  [CE]  incompatible  types  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  stopBody  =  tryBody.getType();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  stopBody  =  tryBody.getType();	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    stopBody    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	214	None	replace
636	[BUG]  [BUGGY]  Node  stopBody  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  incompatible  types  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  stopBody  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    stopBody    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	214	None	replace
637	[BUG]  [BUGGY]  Node  stopBody  =  tryBody.getType();  [CE]  incompatible  types  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.getType();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  stopBody  =  tryBody.getType();	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    stopBody    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	214	None	replace
638	[BUG]  [BUGGY]  Node  stopBody  =  tryBody.getType();  Preconditions.checkState(startBody.getType()  ==  Token.CATCH);  [CE]  incompatible  types  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.getType();  Preconditions.checkState(startBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  stopBody  =  tryBody.getType();  Preconditions.checkState(startBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    stopBody    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	214	None	replace
639	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  stopBody  =  tryBody.getType();  [CE]  incompatible  types  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  stopBody  =  tryBody.getType();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  stopBody  =  tryBody.getType();	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    stopBody    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	214	None	replace
640	[BUG]  [BUGGY]  Node  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isTry());  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  ';'  expected	7	None	replace
641	[BUG]  [BUGGY]  Node  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody.isTry());  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  ';'  expected	7	None	replace
642	[BUG]  [BUGGY]  Node  block(tryBody.getType());  Preconditions.checkState(tryBody.isCatch());  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType());  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isTry());    Node    block(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  ';'  expected	7	None	replace
643	[BUG]  [BUGGY]  Node  block(tryBody.getParent());  Preconditions.checkState(tryBody.isTry());  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getParent());  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getParent());  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  ';'  expected	7	None	replace
644	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	13	3	replace
645	[BUG]  [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isTry());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	13	3	replace
646	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	13	3	replace
647	[BUG]  [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	13	3	replace
648	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	13	3	replace
649	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	13	3	replace
650	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  NullPointerException  	13	3	replace
651	[BUG]  [BUGGY]  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isTry());  [FE]  NullPointerException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  NullPointerException  	13	3	replace
652	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	13	3	replace
653	[BUG]  [BUGGY]  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isTry());  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	13	3	replace
654	[BUG]  [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isTry());  [CE]  cannot  find  symbol  lock  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  cannot  find  symbol  lock	13	None	replace
655	[BUG]  [BUGGY]  Node  catchNode  =  getCatchNode(tryBody);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  getCatchNode(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  getCatchNode(tryBody);	          Node    catchNode    =    getCatchNode();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	233	None	replace
656	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getCatchNode();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getCatchNode();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getCatchNode();	          Node    catchNode    =    getCatchNode();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	233	None	replace
657	[BUG]  [BUGGY]  Node  catchNode  =  getCatchNode().getFirstChild();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  getCatchNode().getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  getCatchNode().getFirstChild();	          Node    catchNode    =    getCatchNode();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	233	None	replace
658	[BUG]  [BUGGY]  Node  catchNode  =  getCatchNode(),  tryBody);  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  getCatchNode(),  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  getCatchNode(),  tryBody);	          Node    catchNode    =    getCatchNode();    	non-compiled	[CE]  ';'  expected	233	None	replace
659	[BUG]  [BUGGY]  Node  catchNode  =  getCatchNode().getNext();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  getCatchNode().getNext();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  getCatchNode().getNext();	          Node    catchNode    =    getCatchNode();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	233	None	replace
660	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	21	3	replace
661	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	21	3	replace
662	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	21	3	replace
663	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	21	3	replace
664	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	21	3	replace
665	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.CATCH);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	21	3	replace
666	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	21	3	replace
667	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	21	3	replace
668	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	21	3	replace
669	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	21	3	replace
670	[BUG]  [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [CE]  cannot  find  symbol  tries  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  tries	21	None	replace
671	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());        Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	85	3	add
672	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	85	3	add
673	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block(catchNode)  {  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block(catchNode)  {  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Preconditions.checkState(tryBody.isCatch());    Node  block(catchNode)  {  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());	  	non-compiled	[CE]  ';'  expected	85	None	add
674	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block(catchNode)  {  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(block.isCatch());  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block(catchNode)  {  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(block.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Preconditions.checkState(tryBody.isCatch());    Node  block(catchNode)  {  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(block.isCatch());	  	non-compiled	[CE]  ';'  expected	85	None	add
675	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block(tryBody.isCatch());  Preconditions.checkState(block.isCatch());  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block(tryBody.isCatch());  Preconditions.checkState(block.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Preconditions.checkState(tryBody.isCatch());    Node  block(tryBody.isCatch());  Preconditions.checkState(block.isCatch());	  	non-compiled	[CE]  ';'  expected	85	None	add
676	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block(catchNode)  {  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(lock.isCatch());  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block(catchNode)  {  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(lock.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Preconditions.checkState(tryBody.isCatch());    Node  block(catchNode)  {  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(lock.isCatch());	  	non-compiled	[CE]  ';'  expected	85	None	add
677	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isCatch());  Preconditions.checkState(block.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());        Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isCatch());  Preconditions.checkState(block.isCatch());	  	compilable	  [FE]  IllegalStateException  	85	3	add
678	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isCatch());  Preconditions.checkState(block.isCatch());  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isCatch());  Preconditions.checkState(block.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isCatch());  Preconditions.checkState(block.isCatch());	  	compilable	  [FE]  IllegalStateException  	85	3	add
679	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());        Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isCatch());  Preconditions.checkState(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	85	3	add
680	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isCatch());  Preconditions.checkState(tryBody.isCatch());  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isCatch());  Preconditions.checkState(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	85	3	add
681	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    catchNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	60	None	replace
682	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getNext();  Preconditions.checkState(tryBody.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getNext();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getNext();  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    catchNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	60	None	replace
683	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(t.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(t.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(t.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    catchNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	60	None	replace
684	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(callNode.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(callNode.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(callNode.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    catchNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	60	None	replace
685	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(node.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(node.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(node.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    catchNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	60	None	replace
686	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	144	3	add
687	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	144	3	add
688	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block(catchNode)  {  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block(catchNode)  {  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Node  block(catchNode)  {  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  ';'  expected	144	None	add
689	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block(catchNode)  {  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(block.isEmpty());  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block(catchNode)  {  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(block.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Node  block(catchNode)  {  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(block.isEmpty());	  	non-compiled	[CE]  ';'  expected	144	None	add
690	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block(catchNode)  {  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(lock.isEmpty());  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block(catchNode)  {  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(lock.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Node  block(catchNode)  {  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(lock.isEmpty());	  	non-compiled	[CE]  ';'  expected	144	None	add
691	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(block.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(block.isEmpty());	  	compilable	  [FE]  IllegalStateException  	144	3	add
692	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(block.isEmpty());  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(block.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(block.isEmpty());	  	compilable	  [FE]  IllegalStateException  	144	3	add
693	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block(tryBody.isEmpty());  Preconditions.checkState(block.isEmpty());  [CE]  ';'  expected  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block(tryBody.isEmpty());  Preconditions.checkState(block.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Node  block(tryBody.isEmpty());  Preconditions.checkState(block.isEmpty());	  	non-compiled	[CE]  ';'  expected	144	None	add
694	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Node  block(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  ';'  expected	144	None	add
695	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	144	3	add
696	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	144	3	add
697	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalArgumentException  	221	3	add
698	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalArgumentException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalArgumentException  	221	3	add
699	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    Node  block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	221	None	add
700	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    Node  block(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	221	None	add
701	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType();  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType();  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    Node  catchNode  =  tryBody.getType();  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	221	None	add
702	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	221	None	add
703	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalArgumentException  	221	3	add
704	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalArgumentException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalArgumentException  	221	3	add
705	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    Node  catchNode  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	221	None	add
706	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.CATCH)  {  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.CATCH)  {  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    Node  block(tryBody.getType()  ==  Token.CATCH)  {  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	221	None	add
707	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.TRY,    catchNode);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);	  	compilable	  [FE]  IllegalStateException  	18	3	add
708	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY,    catchNode);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);	  	compilable	  [FE]  IllegalStateException  	18	3	add
709	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY,    catchNode);    Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	18	None	add
710	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  tryBody.getType();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  tryBody.getType();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY,    catchNode);    Node  catchNode  =  tryBody.getType();	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	18	None	add
711	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  block(tryBody.getType());  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  block(tryBody.getType());  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY,    catchNode);    Node  catchNode  =  block(tryBody.getType());  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	18	None	add
712	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  block(tryBody).getType()  ==  Token.TRY;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  block(tryBody).getType()  ==  Token.TRY;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY,    catchNode);    Node  catchNode  =  block(tryBody).getType()  ==  Token.TRY;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	18	None	add
713	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY,    catchNode);    Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	18	None	add
714	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY,    catchNode);    Node  catchNode  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	18	None	add
715	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  block(tryBody).getType()  ==  Token.TRY,  catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  block(tryBody).getType()  ==  Token.TRY,  catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY,    catchNode);    Node  catchNode  =  block(tryBody).getType()  ==  Token.TRY,  catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);	  	non-compiled	[CE]  ';'  expected	18	None	add
716	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	173	None	add
717	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	173	None	add
718	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	173	None	add
719	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	173	None	add
720	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	173	None	add
721	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	173	None	add
722	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	173	None	add
723	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.getType()  ==  Token.TRY);  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	173	None	add
724	[BUG]  [BUGGY]  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  incompatible  types  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchBody  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchBody    =    tryBody.getType()    ==    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	109	None	replace
725	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH;  [CE]  incompatible  types  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH;	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchBody    =    tryBody.getType()    ==    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	109	None	replace
726	[BUG]  [BUGGY]  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(callNode.getType()  ==  Token.CATCH);  [CE]  incompatible  types  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(callNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchBody  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(callNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchBody    =    tryBody.getType()    ==    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	109	None	replace
727	[BUG]  [BUGGY]  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(t.getType()  ==  Token.CATCH);  [CE]  incompatible  types  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(t.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchBody  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(t.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchBody    =    tryBody.getType()    ==    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	109	None	replace
728	[BUG]  [BUGGY]  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(catchNode.getType()  ==  Token.CATCH);  [CE]  incompatible  types  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(catchNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchBody  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(catchNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchBody    =    tryBody.getType()    ==    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	109	None	replace
729	[BUG]  [BUGGY]  Node  catchBody  =  tryBody.getType()  >>  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  incompatible  types  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchBody  =  tryBody.getType()  >>  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchBody  =  tryBody.getType()  >>  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchBody    =    tryBody.getType()    ==    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	109	None	replace
730	[BUG]  [BUGGY]  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  incompatible  types  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchBody  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchBody    =    tryBody.getType()    ==    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	109	None	replace
731	[BUG]  [BUGGY]  Node  block(tryBody.getType()  {  Token.CATCH);  Preconditions.checkState(block(tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  {  Token.CATCH);  Preconditions.checkState(block(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  {  Token.CATCH);  Preconditions.checkState(block(tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	104	None	replace
732	[BUG]  [BUGGY]  Node  block(tryBody.getType()  {  Token.CATCH);  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  {  Token.CATCH);  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  {  Token.CATCH);  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	104	None	replace
733	[BUG]  [BUGGY]  Node  block(tryBody.getType()  {  Token.CATCH);  Preconditions.checkState(lock.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  {  Token.CATCH);  Preconditions.checkState(lock.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  {  Token.CATCH);  Preconditions.checkState(lock.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	104	None	replace
734	[BUG]  [BUGGY]  Node  block(tryBody.getType()  {  Token.CATCH);  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  {  Token.CATCH);  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  {  Token.CATCH);  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	104	None	replace
735	[BUG]  [BUGGY]  Node  block(tryBody.getType()  {  Token.CATCH);  Preconditions.checkState(breakNode.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  {  Token.CATCH);  Preconditions.checkState(breakNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  {  Token.CATCH);  Preconditions.checkState(breakNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	104	None	replace
736	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	20	3	add
737	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	20	3	add
738	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	20	None	add
739	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    Node  block(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	20	None	add
740	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	20	3	add
741	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	20	3	add
742	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.TRY  ||  block(tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.TRY  ||  block(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    Node  block(tryBody.getType()  ==  Token.TRY  ||  block(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	20	None	add
743	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	20	3	add
744	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.CATCH);  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	20	3	add
745	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    Node  block(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	20	None	add
746	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  {  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  {  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    Node  block(tryBody.getType()  {  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	20	None	add
747	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  cannot  find  symbol  preconditions  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  cannot  find  symbol  preconditions	120	None	replace
748	[BUG]  [BUGGY]  Preconditions.checkState(tryNode!=  null  &&  tryNode.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  cannot  find  symbol  tryNode  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode!=  null  &&  tryNode.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode!=  null  &&  tryNode.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  cannot  find  symbol  tryNode	120	None	replace
749	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(catchNode!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	120	3	replace
750	[BUG]  [BUGGY]  Preconditions.checkState(catchNode!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [FE]  IllegalStateException  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	120	3	replace
751	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  cannot  find  symbol  preconditions  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  cannot  find  symbol  preconditions	120	None	replace
752	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getNext(),  catchNode);  [CE]  ';'  expected  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getNext(),  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getNext(),  catchNode);	          Node    catchNode    =    tryBody.getNext();    	non-compiled	[CE]  ';'  expected	143	None	replace
753	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getNext(),  catchNode;  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getNext(),  catchNode;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getNext(),  catchNode;	          Node    catchNode    =    tryBody.getNext();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	143	None	replace
754	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);	  	compilable	  [FE]  IllegalStateException  	24	3	add
755	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);	  	compilable	  [FE]  IllegalStateException  	24	3	add
756	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);	  	non-compiled	[CE]  ';'  expected	24	None	add
757	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);	  	compilable	  [FE]  IllegalStateException  	24	3	add
758	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);	  	compilable	  [FE]  IllegalStateException  	24	3	add
759	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	24	None	add
760	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  block(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  block(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    Node  block(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);	  	non-compiled	[CE]  ';'  expected	24	None	add
761	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  block(tryBody.getType()  {  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [CE]  ';'  expected  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  block(tryBody.getType()  {  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    Node  block(tryBody.getType()  {  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);	  	non-compiled	[CE]  ';'  expected	24	None	add
762	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  block(tryBody.getType()  ==  Token.TRY  ||  block(tryBody.getType()  ==  Token.GETPROP);  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  block(tryBody.getType()  ==  Token.TRY  ||  block(tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    Node  block(tryBody.getType()  ==  Token.TRY  ||  block(tryBody.getType()  ==  Token.GETPROP);	  	non-compiled	[CE]  ';'  expected	24	None	add
763	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  block(tryBody.getType()  {  Token.TRY  ||  block(tryBody.getType()  ==  Token.GETPROP);  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  block(tryBody.getType()  {  Token.TRY  ||  block(tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    Node  block(tryBody.getType()  {  Token.TRY  ||  block(tryBody.getType()  ==  Token.GETPROP);	  	non-compiled	[CE]  ';'  expected	24	None	add
764	[BUG]  [BUGGY]  Node  block(tryBody.getType()  {  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  {  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  {  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	65	None	replace
765	[BUG]  [BUGGY]  Node  block(tryBody.getType()  {  Token.TRY);  Preconditions.checkState(lock.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  {  Token.TRY);  Preconditions.checkState(lock.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  {  Token.TRY);  Preconditions.checkState(lock.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	65	None	replace
766	[BUG]  [BUGGY]  Node  block(tryBody.getType()  {  Token.TRY);  Preconditions.checkState(block.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  {  Token.TRY);  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  {  Token.TRY);  Preconditions.checkState(block.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	65	None	replace
767	[BUG]  [BUGGY]  Node  block(tryBody.getType()  {  Token.TRY);  Preconditions.checkState(block(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  {  Token.TRY);  Preconditions.checkState(block(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  {  Token.TRY);  Preconditions.checkState(block(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	65	None	replace
768	[BUG]  [BUGGY]  Node  block(tryBody.getType()  {  Token.TRY);  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  {  Token.TRY);  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  {  Token.TRY);  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	65	None	replace
769	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.getType()!=  Token.CATCH);	  Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	222	3	replace
770	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()!=  Token.CATCH);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()!=  Token.CATCH);	  Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	222	3	replace
771	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH,  catchNode);	  Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	222	3	replace
772	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH,  catchNode);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH,  catchNode);	  Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	222	3	replace
773	[BUG]  [BUGGY]  Preconditions.checkArgument(tries.getType()  ==  Token.CATCH);  [CE]  cannot  find  symbol  tries  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tries.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tries.getType()  ==  Token.CATCH);	  Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  tries	222	None	replace
774	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.getType()  ==  Token.GETPROP);	  Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalArgumentException  	222	3	replace
775	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.GETPROP);  [FE]  IllegalArgumentException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()  ==  Token.GETPROP);	  Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalArgumentException  	222	3	replace
776	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isAssignmentOp(),  tryBody);  [CE]  cannot  find  symbol  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isAssignmentOp(),  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isAssignmentOp(),  tryBody);	  Preconditions.checkState(tryBody.isAssignmentOp(),    catchNode);    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
777	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isAssignmentOp(),  tryBody);  [CE]  cannot  find  symbol  callNode  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(callNode.isAssignmentOp(),  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(callNode.isAssignmentOp(),  tryBody);	  Preconditions.checkState(tryBody.isAssignmentOp(),    catchNode);    	non-compiled	[CE]  cannot  find  symbol  callNode	163	None	replace
778	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp(),  catchNode,  catchNode);  [CE]  cannot  find  symbol  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp(),  catchNode,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp(),  catchNode,  catchNode);	  Preconditions.checkState(tryBody.isAssignmentOp(),    catchNode);    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
779	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp(),  catchNode,  tryCatchNode);  [CE]  cannot  find  symbol  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp(),  catchNode,  tryCatchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp(),  catchNode,  tryCatchNode);	  Preconditions.checkState(tryBody.isAssignmentOp(),    catchNode);    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
780	[BUG]  [BUGGY]  Preconditions.checkState(matchNode.isAssignmentOp(),  catchNode);  [CE]  cannot  find  symbol  matchNode  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(matchNode.isAssignmentOp(),  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(matchNode.isAssignmentOp(),  catchNode);	  Preconditions.checkState(tryBody.isAssignmentOp(),    catchNode);    	non-compiled	[CE]  cannot  find  symbol  matchNode	163	None	replace
781	[BUG]  [BUGGY]  Preconditions.checkState(patchNode.isAssignmentOp(),  tryBody);  [CE]  cannot  find  symbol  patchNode  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(patchNode.isAssignmentOp(),  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(patchNode.isAssignmentOp(),  tryBody);	  Preconditions.checkState(tryBody.isAssignmentOp(),    catchNode);    	non-compiled	[CE]  cannot  find  symbol  patchNode	163	None	replace
782	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Preconditions.checkState(!tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(!tryBody.isCatch());    Preconditions.checkState(!tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	35	3	add
783	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Preconditions.checkState(!tryBody.isCatch());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Preconditions.checkState(!tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isCatch());    Preconditions.checkState(!tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	35	3	add
784	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  tryBody  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  tryBody  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isCatch());    Node  tryBody  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isCatch());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	35	None	add
785	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  catchNode  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  catchNode  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isCatch());    Node  catchNode  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isCatch());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	35	None	add
786	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  catchBody  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isCatch());  [CE]  variable  catchBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  catchBody  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isCatch());    Node  catchBody  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isCatch());	  	non-compiled	[CE]  variable  catchBody  is  already  defined  in  method  tryCatch(Node,Node)	35	None	add
787	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isCatch());  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isCatch());    Node  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isCatch());	  	non-compiled	[CE]  ';'  expected	35	None	add
788	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(!tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(!tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(!tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	35	3	add
789	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(!tryBody.isCatch());  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(!tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(!tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	35	3	add
790	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  block(catchNode).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isCatch());  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  block(catchNode).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isCatch());    Node  block(catchNode).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isCatch());	  	non-compiled	[CE]  ';'  expected	35	None	add
791	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  block(catchNode).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isCatch());  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  block(catchNode).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isCatch());    Node  block(catchNode).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isCatch());	  	non-compiled	[CE]  ';'  expected	35	None	add
792	[BUG]  [BUGGY]  Node  block(callNode).copyInformationFrom(tryBody);  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(callNode).copyInformationFrom(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(callNode).copyInformationFrom(tryBody);	  Node    block(tryBody).copyInformationFrom(callNode);    	non-compiled	[CE]  ';'  expected	129	None	replace
793	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(callNode));  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).copyInformationFrom(callNode));  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(callNode));	  Node    block(tryBody).copyInformationFrom(callNode);    	non-compiled	[CE]  ';'  expected	129	None	replace
794	[BUG]  [BUGGY]  Node  block(catchNode).copyInformationFrom(callNode);  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode).copyInformationFrom(callNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode).copyInformationFrom(callNode);	  Node    block(tryBody).copyInformationFrom(callNode);    	non-compiled	[CE]  ';'  expected	129	None	replace
795	[BUG]  [BUGGY]  Node  block(tryNode).copyInformationFrom(callNode);  [CE]  ';'  expected  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryNode).copyInformationFrom(callNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryNode).copyInformationFrom(callNode);	  Node    block(tryBody).copyInformationFrom(callNode);    	non-compiled	[CE]  ';'  expected	129	None	replace
796	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.isTwin());  [CE]  cannot  find  symbol  tryNode  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.isTwin());	  Preconditions.checkState(twinNode.isTwin());    	non-compiled	[CE]  cannot  find  symbol  tryNode	33	None	replace
797	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isTwin());  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isTwin());	  Preconditions.checkState(twinNode.isTwin());    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
798	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isTwin());  [CE]  cannot  find  symbol  callNode  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(callNode.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(callNode.isTwin());	  Preconditions.checkState(twinNode.isTwin());    	non-compiled	[CE]  cannot  find  symbol  callNode	33	None	replace
799	[BUG]  [BUGGY]  Preconditions.checkState(testNode.isTwin());  [CE]  cannot  find  symbol  testNode  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(testNode.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(testNode.isTwin());	  Preconditions.checkState(twinNode.isTwin());    	non-compiled	[CE]  cannot  find  symbol  testNode	33	None	replace
800	[BUG]  [BUGGY]  Preconditions.checkState(TwinNode.isTwin());  [CE]  cannot  find  symbol  TwinNode  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(TwinNode.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(TwinNode.isTwin());	  Preconditions.checkState(twinNode.isTwin());    	non-compiled	[CE]  cannot  find  symbol  TwinNode	33	None	replace
801	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	156	3	add
802	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	156	3	add
803	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Node  tryBody  =  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Node  tryBody  =  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    Node  tryBody  =  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());	  	non-compiled	[CE]  ';'  expected	156	None	add
804	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	156	None	add
805	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Node  tryBody  =  null  &&  tryBody.isFunction());  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Node  tryBody  =  null  &&  tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    Node  tryBody  =  null  &&  tryBody.isFunction());	  	non-compiled	[CE]  ';'  expected	156	None	add
806	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	156	None	add
807	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	156	3	add
808	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isFunction());  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	156	3	add
809	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	156	None	add
810	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  [CE]  cannot  find  symbol  preconditions  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());	  	non-compiled	[CE]  cannot  find  symbol  preconditions	156	None	add
811	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    block(tryBody).copyInformationFrom(peekNode);    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	202	None	replace
812	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody).copyInformationFrom(peekNode);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody).copyInformationFrom(peekNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody).copyInformationFrom(peekNode);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    block(tryBody).copyInformationFrom(peekNode);    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	202	None	replace
813	[BUG]  [BUGGY]  Node  catchNode  =  block(peekNode).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(peekNode).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(peekNode).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    block(tryBody).copyInformationFrom(peekNode);    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	202	None	replace
814	[BUG]  [BUGGY]  Node  tryBody  =  block(peekNode).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(peekNode).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(peekNode).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    block(tryBody).copyInformationFrom(peekNode);    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	202	None	replace
815	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    block(tryBody).copyInformationFrom(peekNode);    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	202	None	replace
816	[BUG]  [BUGGY]  Preconditions.checkState(peekNode!=  null  &&  tryBody.isBlock());  [CE]  cannot  find  symbol  peekNode  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(peekNode!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(peekNode!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    block(tryBody).copyInformationFrom(peekNode);    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  cannot  find  symbol  peekNode	202	None	replace
817	[BUG]  [BUGGY]  Node  block(catchNode).copyInformationFrom(tryBody));  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode).copyInformationFrom(tryBody));  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode).copyInformationFrom(tryBody));	  Node    block(tryBody).copyInformationFrom(catchNode));    	non-compiled	[CE]  ';'  expected	131	None	replace
818	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(catchNode),  catchNode);  [CE]  ';'  expected  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).copyInformationFrom(catchNode),  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(catchNode),  catchNode);	  Node    block(tryBody).copyInformationFrom(catchNode));    	non-compiled	[CE]  ';'  expected	131	None	replace
819	[BUG]  [BUGGY]  Node  block(tryNode).copyInformationFrom(catchNode));  [CE]  ';'  expected  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryNode).copyInformationFrom(catchNode));  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryNode).copyInformationFrom(catchNode));	  Node    block(tryBody).copyInformationFrom(catchNode));    	non-compiled	[CE]  ';'  expected	131	None	replace
820	[BUG]  [BUGGY]  Node  block(peekNode).copyInformationFrom(catchNode));  [CE]  ';'  expected  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(peekNode).copyInformationFrom(catchNode));  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(peekNode).copyInformationFrom(catchNode));	  Node    block(tryBody).copyInformationFrom(catchNode));    	non-compiled	[CE]  ';'  expected	131	None	replace
821	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getNext();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getNext();	  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	86	3	replace
822	[BUG]  [BUGGY]  Node  block  =  tryBody.getNext();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getNext();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getNext();	  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	86	3	replace
823	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	243	3	replace
824	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	243	3	replace
825	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	243	3	replace
826	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	243	3	replace
827	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	243	3	replace
828	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.TRY);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	243	3	replace
829	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	243	3	replace
830	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	243	3	replace
831	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	243	3	replace
832	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	243	3	replace
833	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    catchNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	184	None	replace
834	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(t.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(t.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(t.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    catchNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	184	None	replace
835	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    catchNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	184	None	replace
836	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(callNode.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(callNode.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(callNode.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    catchNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	184	None	replace
837	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(node.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(node.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(node.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    catchNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	184	None	replace
838	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  [CE]  cannot  find  symbol  tryNode  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    catchNode    =    tryBody.getType()    ==    Token.TRY;    	non-compiled	[CE]  cannot  find  symbol  tryNode	228	None	replace
839	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    catchNode    =    tryBody.getType()    ==    Token.TRY;    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	228	None	replace
840	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    catchNode    =    tryBody.getType()    ==    Token.TRY;    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	228	None	replace
841	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    catchNode    =    tryBody.getType()    ==    Token.TRY;    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	228	None	replace
842	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());	  	compilable	  [FE]  IllegalStateException  	75	3	add
843	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());	  	compilable	  [FE]  IllegalStateException  	75	3	add
844	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Node  catchNode  =  block(catchNode).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Node  catchNode  =  block(catchNode).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    Node  catchNode  =  block(catchNode).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	75	None	add
845	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Node  catchNode  =  block(catchNode);  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Node  catchNode  =  block(catchNode);  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    Node  catchNode  =  block(catchNode);  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	75	None	add
846	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Node  catchNode  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Node  catchNode  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    Node  catchNode  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	75	None	add
847	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  catchNode.isBlock());	  	compilable	  [FE]  IllegalStateException  	75	3	add
848	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  catchNode.isBlock());  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  catchNode.isBlock());	  	compilable	  [FE]  IllegalStateException  	75	3	add
849	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Node  catchNode  =  block(catchNode).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Node  catchNode  =  block(catchNode).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    Node  catchNode  =  block(catchNode).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	75	None	add
850	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Node  catchNode  =  null  &&  catchNode.isBlock());  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Node  catchNode  =  null  &&  catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    Node  catchNode  =  null  &&  catchNode.isBlock());	  	non-compiled	[CE]  ';'  expected	75	None	add
851	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isTwin(),  catchNode.isTwin());  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isTwin(),  catchNode.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isTwin(),  catchNode.isTwin());	  Preconditions.checkState(tryBody.isTwin(),    catchNode.isTwin());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
852	[BUG]  [BUGGY]  Preconditions.checkState(twinNode.isTwin(),  catchNode.isTwin());  [CE]  cannot  find  symbol  twinNode  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(twinNode.isTwin(),  catchNode.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(twinNode.isTwin(),  catchNode.isTwin());	  Preconditions.checkState(tryBody.isTwin(),    catchNode.isTwin());    	non-compiled	[CE]  cannot  find  symbol  twinNode	31	None	replace
853	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isTwin(),  tryBody.isTwin());  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isTwin(),  tryBody.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isTwin(),  tryBody.isTwin());	  Preconditions.checkState(tryBody.isTwin(),    catchNode.isTwin());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
854	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isTwin(),  catchNode.isTwin());  [CE]  cannot  find  symbol  callNode  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(callNode.isTwin(),  catchNode.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(callNode.isTwin(),  catchNode.isTwin());	  Preconditions.checkState(tryBody.isTwin(),    catchNode.isTwin());    	non-compiled	[CE]  cannot  find  symbol  callNode	31	None	replace
855	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTwin(),  catchNode.isCatch());  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTwin(),  catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTwin(),  catchNode.isCatch());	  Preconditions.checkState(tryBody.isTwin(),    catchNode.isTwin());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
856	[BUG]  [BUGGY]  Preconditions.checkState(matchNode.isTwin(),  catchNode.isTwin());  [CE]  cannot  find  symbol  matchNode  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(matchNode.isTwin(),  catchNode.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(matchNode.isTwin(),  catchNode.isTwin());	  Preconditions.checkState(tryBody.isTwin(),    catchNode.isTwin());    	non-compiled	[CE]  cannot  find  symbol  matchNode	31	None	replace
857	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	170	3	replace
858	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	170	3	replace
859	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	170	3	replace
860	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	170	3	replace
861	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	170	3	replace
862	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	170	3	replace
863	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(lockNode.getType()  ==  Token.TRY);  [CE]  cannot  find  symbol  lockNode  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(lockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(lockNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  cannot  find  symbol  lockNode	170	None	replace
864	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(t.getType()  ==  Token.TRY);  [CE]  cannot  find  symbol  t  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(t.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(t.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  cannot  find  symbol  t	170	None	replace
865	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	170	3	replace
866	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	170	3	replace
867	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    catchNode    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	67	None	replace
868	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getType();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getType();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getType();	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    catchNode    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	67	None	replace
869	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(callNode.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(callNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType();  Preconditions.checkState(callNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    catchNode    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	67	None	replace
870	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(catchNode.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(catchNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType();  Preconditions.checkState(catchNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    catchNode    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	67	None	replace
871	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(node.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(node.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType();  Preconditions.checkState(node.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    catchNode    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	67	None	replace
872	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isCatch());  [CE]  cannot  find  symbol  callNode  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(callNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(callNode.isCatch());	  Preconditions.checkState(tryNode.isCatch());    	non-compiled	[CE]  cannot  find  symbol  callNode	187	None	replace
873	[BUG]  [BUGGY]  Preconditions.checkState(t.isCatch());  [CE]  cannot  find  symbol  t  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(t.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(t.isCatch());	  Preconditions.checkState(tryNode.isCatch());    	non-compiled	[CE]  cannot  find  symbol  t	187	None	replace
874	[BUG]  [BUGGY]  Preconditions.checkState(false.isCatch());  [CE]  boolean  cannot  be  dereferenced  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(false.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(false.isCatch());	  Preconditions.checkState(tryNode.isCatch());    	non-compiled	[CE]  boolean  cannot  be  dereferenced	187	None	replace
875	[BUG]  [BUGGY]  Preconditions.checkState(matchNode.isCatch());  [CE]  cannot  find  symbol  matchNode  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(matchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(matchNode.isCatch());	  Preconditions.checkState(tryNode.isCatch());    	non-compiled	[CE]  cannot  find  symbol  matchNode	187	None	replace
876	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=  null  ||  catchNode.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    	compilable	  [FE]  IllegalStateException  	76	3	replace
877	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  catchNode.isBlock());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  ||  catchNode.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    	compilable	  [FE]  IllegalStateException  	76	3	replace
878	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=  null  &&  catchNode.isCatch());	  Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    	compilable	  [FE]  IllegalStateException  	76	3	replace
879	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isCatch());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  catchNode.isCatch());	  Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    	compilable	  [FE]  IllegalStateException  	76	3	replace
880	[BUG]  [BUGGY]  Preconditions.checkState(callNode!=  null  &&  catchNode.isBlock());  [CE]  cannot  find  symbol  callNode  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(callNode!=  null  &&  catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(callNode!=  null  &&  catchNode.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    	non-compiled	[CE]  cannot  find  symbol  callNode	76	None	replace
881	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode!=  null  ||  catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(catchNode!=  null  ||  catchNode.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    	compilable	  [FE]  IllegalStateException  	76	3	replace
882	[BUG]  [BUGGY]  Preconditions.checkState(catchNode!=  null  ||  catchNode.isBlock());  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode!=  null  ||  catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode!=  null  ||  catchNode.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    	compilable	  [FE]  IllegalStateException  	76	3	replace
883	[BUG]  [BUGGY]  Preconditions.checkState(tryNode!=  null  &&  catchNode.isCatch());  [CE]  cannot  find  symbol  tryNode  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode!=  null  &&  catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode!=  null  &&  catchNode.isCatch());	  Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    	non-compiled	[CE]  cannot  find  symbol  tryNode	76	None	replace
884	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody  ==  null  ||  catchNode.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    	compilable	  [FE]  IllegalStateException  	76	3	replace
885	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  catchNode.isBlock());  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  ||  catchNode.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    	compilable	  [FE]  IllegalStateException  	76	3	replace
886	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  NullPointerException  	145	3	replace
887	[BUG]  [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isEmpty());  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  NullPointerException  	145	3	replace
888	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  NullPointerException  	211	3	replace
889	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  NullPointerException  	211	3	replace
890	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	211	3	replace
891	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	211	3	replace
892	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	211	3	replace
893	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	211	3	replace
894	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	211	3	replace
895	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	211	3	replace
896	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	211	3	replace
897	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	211	3	replace
898	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	256	None	replace
899	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(callNode.getType()  ==  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(callNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(callNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	256	None	replace
900	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getFirstChild();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getFirstChild();	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	256	None	replace
901	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(catchNode.getType()  ==  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(catchNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(catchNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	256	None	replace
902	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(t.getType()  ==  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(t.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(t.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	256	None	replace
903	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Preconditions.checkArgument(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.isCatch());    Preconditions.checkArgument(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	257	3	add
904	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Preconditions.checkArgument(tryBody.isCatch());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Preconditions.checkArgument(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isCatch());    Preconditions.checkArgument(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	257	3	add
905	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Node  block(tryBody.isCatch());  Preconditions.checkArgument(tryBody.isCatch());  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Node  block(tryBody.isCatch());  Preconditions.checkArgument(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isCatch());    Node  block(tryBody.isCatch());  Preconditions.checkArgument(tryBody.isCatch());	  	non-compiled	[CE]  ';'  expected	257	None	add
906	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Node  catchNode  =  block(tryBody.isCatch());  Preconditions.checkArgument(tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Node  catchNode  =  block(tryBody.isCatch());  Preconditions.checkArgument(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isCatch());    Node  catchNode  =  block(tryBody.isCatch());  Preconditions.checkArgument(tryBody.isCatch());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	257	None	add
907	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Node  tryBody  =  block(tryBody.isCatch());  Preconditions.checkArgument(tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Node  tryBody  =  block(tryBody.isCatch());  Preconditions.checkArgument(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isCatch());    Node  tryBody  =  block(tryBody.isCatch());  Preconditions.checkArgument(tryBody.isCatch());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	257	None	add
908	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isCatch());	  	compilable	  [FE]  IllegalArgumentException  	257	3	add
909	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isCatch());  [FE]  IllegalArgumentException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isCatch());	  	compilable	  [FE]  IllegalArgumentException  	257	3	add
910	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isCatch());	  	compilable	  [FE]  IllegalArgumentException  	257	3	add
911	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isCatch());  [FE]  IllegalArgumentException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isCatch());	  	compilable	  [FE]  IllegalArgumentException  	257	3	add
912	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isCatch());    Node  catchNode  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isCatch());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	257	None	add
913	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Node  argument  =  tryBody.getArgument();  Preconditions.checkArgument(tryBody.isCatch());  [CE]  cannot  find  symbol  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Node  argument  =  tryBody.getArgument();  Preconditions.checkArgument(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isCatch());    Node  argument  =  tryBody.getArgument();  Preconditions.checkArgument(tryBody.isCatch());	  	non-compiled	[CE]  cannot  find  symbol	257	None	add
914	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isAssignmentOp(),  catchNode.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isAssignmentOp(),  catchNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isAssignmentOp(),  catchNode.isAssignmentOp());	  Preconditions.checkState(!tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
915	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isAssignmentOp()  &&  tryCatchNode.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isAssignmentOp()  &&  tryCatchNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isAssignmentOp()  &&  tryCatchNode.isAssignmentOp());	  Preconditions.checkState(!tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
916	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isAssignmentOp()  ||  tryBody.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isAssignmentOp()  ||  tryBody.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isAssignmentOp()  ||  tryBody.isAssignmentOp());	  Preconditions.checkState(!tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
917	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isAssignmentOp(),  tryBody.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isAssignmentOp(),  tryBody.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isAssignmentOp(),  tryBody.isAssignmentOp());	  Preconditions.checkState(!tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
918	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Preconditions.checkState(catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(catchNode.isBlock());    Preconditions.checkState(catchNode.isBlock());	  	compilable	  [FE]  IllegalStateException  	95	3	add
919	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Preconditions.checkState(catchNode.isBlock());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Preconditions.checkState(catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isBlock());    Preconditions.checkState(catchNode.isBlock());	  	compilable	  [FE]  IllegalStateException  	95	3	add
920	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  catchNode  =  block(catchNode).copyInformationFrom(catchNode);  Preconditions.checkState(catchNode.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  catchNode  =  block(catchNode).copyInformationFrom(catchNode);  Preconditions.checkState(catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isBlock());    Node  catchNode  =  block(catchNode).copyInformationFrom(catchNode);  Preconditions.checkState(catchNode.isBlock());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	95	None	add
921	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  catchNode  =  block(catchNode).copyInformationFrom(catchNode);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  catchNode  =  block(catchNode).copyInformationFrom(catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isBlock());    Node  catchNode  =  block(catchNode).copyInformationFrom(catchNode);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	95	None	add
922	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  blockNode  =  getBlock(catchNode).copyInformationFrom(catchNode);  Preconditions.checkState(catchNode.isBlock());  [CE]  cannot  find  symbol  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  blockNode  =  getBlock(catchNode).copyInformationFrom(catchNode);  Preconditions.checkState(catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isBlock());    Node  blockNode  =  getBlock(catchNode).copyInformationFrom(catchNode);  Preconditions.checkState(catchNode.isBlock());	  	non-compiled	[CE]  cannot  find  symbol	95	None	add
923	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  blockNode  =  getBlock(catchNode);  Preconditions.checkState(catchNode.isBlock());  [CE]  cannot  find  symbol  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  blockNode  =  getBlock(catchNode);  Preconditions.checkState(catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isBlock());    Node  blockNode  =  getBlock(catchNode);  Preconditions.checkState(catchNode.isBlock());	  	non-compiled	[CE]  cannot  find  symbol	95	None	add
924	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  catchNode  =  block(catchNode.isBlock());  Preconditions.checkState(catchNode.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  catchNode  =  block(catchNode.isBlock());  Preconditions.checkState(catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isBlock());    Node  catchNode  =  block(catchNode.isBlock());  Preconditions.checkState(catchNode.isBlock());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	95	None	add
925	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  catchNode  =  block(catchNode).copyInformationFrom(peekNode);  Preconditions.checkState(catchNode.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  catchNode  =  block(catchNode).copyInformationFrom(peekNode);  Preconditions.checkState(catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isBlock());    Node  catchNode  =  block(catchNode).copyInformationFrom(peekNode);  Preconditions.checkState(catchNode.isBlock());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	95	None	add
926	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  catchNode  =  block(catchNode).copyInformationFrom(catchNode);  preconditions.checkState(catchNode.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  catchNode  =  block(catchNode).copyInformationFrom(catchNode);  preconditions.checkState(catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isBlock());    Node  catchNode  =  block(catchNode).copyInformationFrom(catchNode);  preconditions.checkState(catchNode.isBlock());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	95	None	add
927	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp());  Node  block(tryBody.isCatch());  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp());  Node  block(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp());  Node  block(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block(tryBody.isCatch());    	non-compiled	[CE]  ';'  expected	241	None	replace
928	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block(tryBody.getFirstChild());  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block(tryBody.getFirstChild());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  block(tryBody.getFirstChild());	  Preconditions.checkState(tryBody.isCatch());    Node    block(tryBody.isCatch());    	non-compiled	[CE]  ';'  expected	241	None	replace
929	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	63	3	replace
930	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	63	3	replace
931	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	63	3	replace
932	[BUG]  [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	63	3	replace
933	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  cannot  find  symbol  preconditions  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  cannot  find  symbol  preconditions	63	None	replace
934	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getNext();  Preconditions.checkState(block.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	63	3	replace
935	[BUG]  [BUGGY]  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getNext();  Preconditions.checkState(block.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	63	3	replace
936	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  cannot  find  symbol  tryNode  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  tryNode	102	None	replace
937	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  cannot  find  symbol  preconditions  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  preconditions	102	None	replace
938	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=  null  &&  catchNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	84	3	replace
939	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  catchNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	84	3	replace
940	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	84	3	replace
941	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	84	3	replace
942	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody  ==  null  ||  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	84	3	replace
943	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  ||  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	84	3	replace
944	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  catchNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody  ==  null  &&  catchNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	84	3	replace
945	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  catchNode.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  catchNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  &&  catchNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	84	3	replace
946	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()!=  Token.TRY);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	84	3	replace
947	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()!=  Token.TRY);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()!=  Token.TRY);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	84	3	replace
948	[BUG]  [BUGGY]  Node  tryBody  =  null  &&  tryBody.isBlock();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  null  &&  tryBody.isBlock();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  null  &&  tryBody.isBlock();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	116	None	replace
949	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock();  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock();	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	116	None	replace
950	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  tryBody  =  null  ||  tryBody.isBlock();  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  tryBody  =  null  ||  tryBody.isBlock();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  tryBody  =  null  ||  tryBody.isBlock();	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	116	None	replace
951	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNone());  Node  tryBody  =  block(tryBody.isCatch());  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNone());  Node  tryBody  =  block(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNone());  Node  tryBody  =  block(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    tryBody    =    block(tryBody.isCatch());    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
952	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  block(tryBody.getType()  ==  Token.TRY);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  block(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  block(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.isCatch());    Node    tryBody    =    block(tryBody.isCatch());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	161	None	replace
953	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  block(tryBody.getFirstChild());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  block(tryBody.getFirstChild());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  block(tryBody.getFirstChild());	  Preconditions.checkState(tryBody.isCatch());    Node    tryBody    =    block(tryBody.isCatch());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	161	None	replace
954	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  block(tryBody.getParent());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  block(tryBody.getParent());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  block(tryBody.getParent());	  Preconditions.checkState(tryBody.isCatch());    Node    tryBody    =    block(tryBody.isCatch());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	161	None	replace
955	[BUG]  [BUGGY]  Node  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody.isFunction());  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  ';'  expected	55	None	replace
956	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(t.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(t.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(t.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	238	None	replace
957	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(callNode.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(callNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(callNode.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	238	None	replace
958	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=  null  &&  catchNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	80	3	replace
959	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  catchNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	80	3	replace
960	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody  ==  null  ||  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	80	3	replace
961	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  ||  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	80	3	replace
962	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	80	3	replace
963	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	80	3	replace
964	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  catchNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody  ==  null  &&  catchNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	80	3	replace
965	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  catchNode.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  catchNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  &&  catchNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	80	3	replace
966	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()!=  Token.CATCH);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	80	3	replace
967	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()!=  Token.CATCH);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  &&  tryBody.getType()!=  Token.CATCH);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	80	3	replace
968	[BUG]  [BUGGY]  Node  block  =  tryBody.getType();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [CE]  incompatible  types  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getType();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getType();  Preconditions.checkState(block.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  incompatible  types	68	None	replace
969	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType();  [CE]  incompatible  types  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType();	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  incompatible  types	68	None	replace
970	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [CE]  incompatible  types  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType();  Preconditions.checkState(block.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  incompatible  types	68	None	replace
971	[BUG]  [BUGGY]  Node  block  =  tryBody.getType();  [CE]  incompatible  types  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getType();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getType();	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  incompatible  types	68	None	replace
972	[BUG]  [BUGGY]  Node  block  =  tryBody.getType();  Preconditions.checkState(lock.getType()  ==  Token.TRY);  [CE]  incompatible  types  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getType();  Preconditions.checkState(lock.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getType();  Preconditions.checkState(lock.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  incompatible  types	68	None	replace
973	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    tryBody    =    block(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	167	None	replace
974	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody.isEmpty());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    tryBody    =    block(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	167	None	replace
975	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody.isEmpty());  Preconditions.checkState(callNode.isEmpty());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody.isEmpty());  Preconditions.checkState(callNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody.isEmpty());  Preconditions.checkState(callNode.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    tryBody    =    block(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	167	None	replace
976	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody.isEmpty());  Preconditions.checkState(catchNode.isEmpty());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody.isEmpty());  Preconditions.checkState(catchNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody.isEmpty());  Preconditions.checkState(catchNode.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    tryBody    =    block(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	167	None	replace
977	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  tryBody  =  block(tryBody.isEmpty());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  tryBody  =  block(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());  Node  tryBody  =  block(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    tryBody    =    block(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	167	None	replace
978	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody.isEmpty());  Preconditions.checkState(catchNode.isEmpty());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody.isEmpty());  Preconditions.checkState(catchNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody.isEmpty());  Preconditions.checkState(catchNode.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    tryBody    =    block(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	167	None	replace
979	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNone(),  catchNode.isNone());  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNone(),  catchNode.isNone());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNone(),  catchNode.isNone());	  Preconditions.checkState(tryBody.isNone());    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
980	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNone()  ||  tryBody.isNone());  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNone()  ||  tryBody.isNone());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNone()  ||  tryBody.isNone());	  Preconditions.checkState(tryBody.isNone());    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
981	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNone(),  tryBody.isNone());  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNone(),  tryBody.isNone());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNone(),  tryBody.isNone());	  Preconditions.checkState(tryBody.isNone());    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
982	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNone()  &&  tryCatchNode.isNone());  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNone()  &&  tryCatchNode.isNone());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNone()  &&  tryCatchNode.isNone());	  Preconditions.checkState(tryBody.isNone());    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
983	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNone()  ||  tryNode.isNone());  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNone()  ||  tryNode.isNone());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNone()  ||  tryNode.isNone());	  Preconditions.checkState(tryBody.isNone());    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
984	[BUG]  [BUGGY]  Node  block(catchNode).copyInformationFrom(catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode).copyInformationFrom(catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode).copyInformationFrom(catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody).copyInformationFrom(catchNode);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	70	None	replace
985	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(block(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(block(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(block(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody).copyInformationFrom(catchNode);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	70	None	replace
986	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(block.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(block.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody).copyInformationFrom(catchNode);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	70	None	replace
987	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(lock.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(lock.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(lock.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody).copyInformationFrom(catchNode);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	70	None	replace
988	[BUG]  [BUGGY]  Node  block  =  tryBody.isFunction();  Preconditions.checkState(block.isFunction());  [CE]  incompatible  types  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.isFunction();  Preconditions.checkState(block.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.isFunction();  Preconditions.checkState(block.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block    =    tryBody.isFunction();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  incompatible  types	61	None	replace
989	[BUG]  [BUGGY]  Node  block  =  tryBody.getFunction();  Preconditions.checkState(block.isFunction());  [CE]  cannot  find  symbol  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFunction();  Preconditions.checkState(block.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getFunction();  Preconditions.checkState(block.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block    =    tryBody.isFunction();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
990	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block    =    tryBody.isFunction();    Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	61	3	replace
991	[BUG]  [BUGGY]  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isFunction());  [FE]  IllegalStateException  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block    =    tryBody.isFunction();    Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	61	3	replace
992	[BUG]  [BUGGY]  Node  block  =  tryBody.isFunction();  Preconditions.checkState(tryBody.isFunction());  [CE]  incompatible  types  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.isFunction();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.isFunction();  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block    =    tryBody.isFunction();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  incompatible  types	61	None	replace
993	[BUG]  [BUGGY]  Node  block  =  tryBody.getFunction();  Preconditions.checkState(tryBody.isFunction());  [CE]  cannot  find  symbol  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFunction();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getFunction();  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block    =    tryBody.isFunction();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
994	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    catchNode);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);	  	compilable	  [FE]  IllegalStateException  	39	3	add
995	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    catchNode);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);	  	compilable	  [FE]  IllegalStateException  	39	3	add
996	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    catchNode);    Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	39	None	add
997	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  tryBody.getType();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  tryBody.getType();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    catchNode);    Node  catchNode  =  tryBody.getType();	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	39	None	add
998	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  block(tryBody.getType());  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  block(tryBody.getType());  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    catchNode);    Node  catchNode  =  block(tryBody.getType());  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	39	None	add
999	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    catchNode);    Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	39	None	add
1000	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    catchNode);    Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	39	None	add
1001	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  block(tryBody).getType()  ==  Token.CATCH,  catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  block(tryBody).getType()  ==  Token.CATCH,  catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    catchNode);    Node  catchNode  =  block(tryBody).getType()  ==  Token.CATCH,  catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);	  	non-compiled	[CE]  ';'  expected	39	None	add
1002	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  block(tryBody.getType()  ==  Token.CATCH,  catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  block(tryBody.getType()  ==  Token.CATCH,  catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    catchNode);    Node  block(tryBody.getType()  ==  Token.CATCH,  catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);	  	non-compiled	[CE]  ';'  expected	39	None	add
1003	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isTwin()  ||  catchNode.isTwin());  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isTwin()  ||  catchNode.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isTwin()  ||  catchNode.isTwin());	  Preconditions.checkState(tryBody.isTwin()    ||    catchNode.isTwin());    	non-compiled	[CE]  cannot  find  symbol	259	None	replace
1004	[BUG]  [BUGGY]  Preconditions.checkState(twinNode.isTwin()  ||  catchNode.isTwin());  [CE]  cannot  find  symbol  twinNode  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(twinNode.isTwin()  ||  catchNode.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(twinNode.isTwin()  ||  catchNode.isTwin());	  Preconditions.checkState(tryBody.isTwin()    ||    catchNode.isTwin());    	non-compiled	[CE]  cannot  find  symbol  twinNode	259	None	replace
1005	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isTwin()  ||  catchNode.isTwin());  [CE]  cannot  find  symbol  callNode  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(callNode.isTwin()  ||  catchNode.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(callNode.isTwin()  ||  catchNode.isTwin());	  Preconditions.checkState(tryBody.isTwin()    ||    catchNode.isTwin());    	non-compiled	[CE]  cannot  find  symbol  callNode	259	None	replace
1006	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTwin()  &&  catchNode.isTwin());  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTwin()  &&  catchNode.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTwin()  &&  catchNode.isTwin());	  Preconditions.checkState(tryBody.isTwin()    ||    catchNode.isTwin());    	non-compiled	[CE]  cannot  find  symbol	259	None	replace
1007	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isTwin()  ||  tryBody.isTwin());  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isTwin()  ||  tryBody.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isTwin()  ||  tryBody.isTwin());	  Preconditions.checkState(tryBody.isTwin()    ||    catchNode.isTwin());    	non-compiled	[CE]  cannot  find  symbol	259	None	replace
1008	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.getType()  ==  Token.CATCH,  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(catchNode.getType()  ==  Token.CATCH,  tryBody);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    catchNode);    	compilable	  [FE]  IllegalStateException  	40	3	replace
1009	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.getType()  ==  Token.CATCH,  tryBody);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.getType()  ==  Token.CATCH,  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.getType()  ==  Token.CATCH,  tryBody);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    catchNode);    	compilable	  [FE]  IllegalStateException  	40	3	replace
1010	[BUG]  [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.CATCH,  catchNode);  [CE]  cannot  find  symbol  tries  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.CATCH,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries.getType()  ==  Token.CATCH,  catchNode);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    catchNode);    	non-compiled	[CE]  cannot  find  symbol  tries	40	None	replace
1011	[BUG]  [BUGGY]  Preconditions.checkState(callNode.getType()  ==  Token.CATCH,  tryBody);  [CE]  cannot  find  symbol  callNode  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(callNode.getType()  ==  Token.CATCH,  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(callNode.getType()  ==  Token.CATCH,  tryBody);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    catchNode);    	non-compiled	[CE]  cannot  find  symbol  callNode	40	None	replace
1012	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  tryBody);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    catchNode);    	compilable	  [FE]  IllegalStateException  	40	3	replace
1013	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  tryBody);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  tryBody);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    catchNode);    	compilable	  [FE]  IllegalStateException  	40	3	replace
1014	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    ==    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	252	None	replace
1015	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(callNode.getType()  ==  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(callNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(callNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    ==    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	252	None	replace
1016	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(catchNode.getType()  ==  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(catchNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(catchNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    ==    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	252	None	replace
1017	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(callNode.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(callNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(callNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    ==    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	252	None	replace
1018	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  &&  tryBody.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  &&  tryBody.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  &&  tryBody.isAssignmentOp());	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
1019	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  catchNode.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  catchNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  catchNode.isAssignmentOp());	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
1020	[BUG]  [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.CATCH  ||  tryBody.isAssignmentOp());  [CE]  cannot  find  symbol  tries  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.CATCH  ||  tryBody.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries.getType()  ==  Token.CATCH  ||  tryBody.isAssignmentOp());	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol  tries	124	None	replace
1021	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  tryBody.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  tryBody.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  tryBody.isAssignmentOp());	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
1022	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.isInvocationOp());  [CE]  cannot  find  symbol  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.isInvocationOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.isInvocationOp());	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
1023	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.isReferenceOp());  [CE]  cannot  find  symbol  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.isReferenceOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.isReferenceOp());	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
1024	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	90	None	add
1025	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	90	None	add
1026	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isCatch());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isCatch());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	90	None	add
1027	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isCatch());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isCatch());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	90	None	add
1028	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	90	None	add
1029	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(t.isCatch());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(t.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(t.isCatch());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	90	None	add
1030	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(lock.isCatch());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(lock.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(lock.isCatch());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	90	None	add
1031	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	90	None	add
1032	[BUG]  [BUGGY]  Node  tryBody  =  null  ||  tryBody.isBlock();  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  null  ||  tryBody.isBlock();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  null  ||  tryBody.isBlock();	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    null    &&    tryBody.isBlock();    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	204	None	replace
1033	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock();  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock();	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    null    &&    tryBody.isBlock();    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	204	None	replace
1034	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock();  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock();	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    null    &&    tryBody.isBlock();    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	204	None	replace
1035	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.isTry();  Preconditions.checkState(tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.isTry();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.isTry();  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    catchNode    =    tryBody.isTry();    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	14	None	replace
1036	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    catchNode    =    tryBody.isTry();    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	14	None	replace
1037	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    catchNode    =    tryBody.isTry();    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	14	None	replace
1038	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getNext();  Preconditions.checkState(tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getNext();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getNext();  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    catchNode    =    tryBody.isTry();    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	14	None	replace
1039	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    catchNode    =    tryBody.isTry();    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	14	None	replace
1040	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isNode());  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  catchNode.isNode());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
1041	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryNode.isNode());  [CE]  cannot  find  symbol  tryNode  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryNode.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  tryNode.isNode());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol  tryNode	158	None	replace
1042	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType();  [CE]  cannot  find  symbol  tryNode  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType();	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType();    	non-compiled	[CE]  cannot  find  symbol  tryNode	212	None	replace
1043	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getParent();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getParent();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getParent();	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	212	None	replace
1044	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getNext();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getNext();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getNext();	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	212	None	replace
1045	[BUG]  [BUGGY]  Preconditions.checkState(matchNode.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType();  [CE]  cannot  find  symbol  matchNode  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(matchNode.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(matchNode.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType();	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType();    	non-compiled	[CE]  cannot  find  symbol  matchNode	212	None	replace
1046	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchNode    =    block(tryBody.isCatch());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	159	None	replace
1047	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNone());  Node  catchNode  =  block(tryBody.isCatch());  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNone());  Node  catchNode  =  block(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNone());  Node  catchNode  =  block(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchNode    =    block(tryBody.isCatch());    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
1048	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  block(tryBody.getFirstChild());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  block(tryBody.getFirstChild());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  block(tryBody.getFirstChild());	  Preconditions.checkState(tryBody.isCatch());    Node    catchNode    =    block(tryBody.isCatch());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	159	None	replace
1049	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  block(tryBody.getParent());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  block(tryBody.getParent());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  block(tryBody.getParent());	  Preconditions.checkState(tryBody.isCatch());    Node    catchNode    =    block(tryBody.isCatch());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	159	None	replace
1050	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  block(tryBody.getCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  block(tryBody.getCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  block(tryBody.getCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchNode    =    block(tryBody.isCatch());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	159	None	replace
1051	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  block(tryBody.isCatch(),  catchNode);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  block(tryBody.isCatch(),  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  block(tryBody.isCatch(),  catchNode);	  Preconditions.checkState(tryBody.isCatch());    Node    catchNode    =    block(tryBody.isCatch());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	159	None	replace
1052	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	155	3	replace
1053	[BUG]  [BUGGY]  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isEmpty());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	155	3	replace
1054	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  NullPointerException  	155	3	replace
1055	[BUG]  [BUGGY]  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isEmpty());  [FE]  NullPointerException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  NullPointerException  	155	3	replace
1056	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	155	3	replace
1057	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	155	3	replace
1058	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	155	3	replace
1059	[BUG]  [BUGGY]  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	155	3	replace
1060	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	155	3	replace
1061	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isEmpty());  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	155	3	replace
1062	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    tryBody    =    block(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	15	None	replace
1063	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isTry());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    tryBody    =    block(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	15	None	replace
1064	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody.isTry());  Preconditions.checkState(catchNode.isTry());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody.isTry());  Preconditions.checkState(catchNode.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody.isTry());  Preconditions.checkState(catchNode.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    tryBody    =    block(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	15	None	replace
1065	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody.isTry());  Preconditions.checkState(callNode.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody.isTry());  Preconditions.checkState(callNode.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody.isTry());  Preconditions.checkState(callNode.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    tryBody    =    block(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	15	None	replace
1066	[BUG]  [BUGGY]  Node  block  =  tryBody.getType();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [CE]  incompatible  types  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getType();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getType();  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	108	None	replace
1067	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getType();  [CE]  incompatible  types  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getType();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getType();	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	108	None	replace
1068	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getType();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [CE]  incompatible  types  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getType();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getType();  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	108	None	replace
1069	[BUG]  [BUGGY]  Node  block  =  tryBody.getType();  Preconditions.checkState(lock.getType()  ==  Token.CATCH);  [CE]  incompatible  types  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getType();  Preconditions.checkState(lock.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getType();  Preconditions.checkState(lock.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	108	None	replace
1070	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    catchNode    =    tryBody.getParent();    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	117	None	replace
1071	[BUG]  [BUGGY]  Preconditions.checkState(tryNode!=  null  &&  tryBody.isBlock());  [CE]  cannot  find  symbol  tryNode  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    catchNode    =    tryBody.getParent();    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  cannot  find  symbol  tryNode	117	None	replace
1072	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getNext();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getNext();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getNext();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    catchNode    =    tryBody.getParent();    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	117	None	replace
1073	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(true);  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).copyInformationFrom(true);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(true);	  Node    block(tryBody).copyInformationFrom(false);    	non-compiled	[CE]  ';'  expected	189	None	replace
1074	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(false,  catchNode);  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).copyInformationFrom(false,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(false,  catchNode);	  Node    block(tryBody).copyInformationFrom(false);    	non-compiled	[CE]  ';'  expected	189	None	replace
1075	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(null);  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).copyInformationFrom(null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(null);	  Node    block(tryBody).copyInformationFrom(false);    	non-compiled	[CE]  ';'  expected	189	None	replace
1076	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(false),  catchNode);  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).copyInformationFrom(false),  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(false),  catchNode);	  Node    block(tryBody).copyInformationFrom(false);    	non-compiled	[CE]  ';'  expected	189	None	replace
1077	[BUG]  [BUGGY]  Node  block(tryNode).copyInformationFrom(false);  [CE]  ';'  expected  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryNode).copyInformationFrom(false);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryNode).copyInformationFrom(false);	  Node    block(tryBody).copyInformationFrom(false);    	non-compiled	[CE]  ';'  expected	189	None	replace
1078	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isNode()  ||  catchNode.isNode());  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isNode()  ||  catchNode.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isNode()  ||  catchNode.isNode());	  Preconditions.checkState(tryBody.isNode()    ||    catchNode.isNode());    	non-compiled	[CE]  cannot  find  symbol	251	None	replace
1079	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isNode()  ||  tryBody.isNode());  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isNode()  ||  tryBody.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isNode()  ||  tryBody.isNode());	  Preconditions.checkState(tryBody.isNode()    ||    catchNode.isNode());    	non-compiled	[CE]  cannot  find  symbol	251	None	replace
1080	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNode()  ||  catchNode.isCatch());  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNode()  ||  catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNode()  ||  catchNode.isCatch());	  Preconditions.checkState(tryBody.isNode()    ||    catchNode.isNode());    	non-compiled	[CE]  cannot  find  symbol	251	None	replace
1081	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isNode()  ||  catchNode.isNode());  [CE]  cannot  find  symbol  callNode  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(callNode.isNode()  ||  catchNode.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(callNode.isNode()  ||  catchNode.isNode());	  Preconditions.checkState(tryBody.isNode()    ||    catchNode.isNode());    	non-compiled	[CE]  cannot  find  symbol  callNode	251	None	replace
1082	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.isNode()  ||  catchNode.isNode());  [CE]  cannot  find  symbol  tryNode  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.isNode()  ||  catchNode.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.isNode()  ||  catchNode.isNode());	  Preconditions.checkState(tryBody.isNode()    ||    catchNode.isNode());    	non-compiled	[CE]  cannot  find  symbol  tryNode	251	None	replace
1083	[BUG]  [BUGGY]  Node  catchNode  =  tryBody!=  null?  null  :  tryBody.getLastChild();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody!=  null?  null  :  tryBody.getLastChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody!=  null?  null  :  tryBody.getLastChild();	          Node    catchNode    =    tryBody.getLastChild();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	178	None	replace
1084	[BUG]  [BUGGY]  Node  catchNode  =  tryBody  ==  null?  null  :  tryBody.getLastChild();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody  ==  null?  null  :  tryBody.getLastChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody  ==  null?  null  :  tryBody.getLastChild();	          Node    catchNode    =    tryBody.getLastChild();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	178	None	replace
1085	[BUG]  [BUGGY]  Node  catchNode  =  tryBody!=  null?  null.getFirstChild()  :  tryBody.getLastChild();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody!=  null?  null.getFirstChild()  :  tryBody.getLastChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody!=  null?  null.getFirstChild()  :  tryBody.getLastChild();	          Node    catchNode    =    tryBody.getLastChild();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	178	None	replace
1086	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	91	3	replace
1087	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isCatch());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	91	3	replace
1088	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	91	3	replace
1089	[BUG]  [BUGGY]  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	91	3	replace
1090	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isCatch());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	81	3	add
1091	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isCatch());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	81	3	add
1092	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isCatch());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	81	3	add
1093	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isCatch());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	81	3	add
1094	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Node  tryBody  =  null  &&  tryBody.isCatch());  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Node  tryBody  =  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isCatch());    Node  tryBody  =  null  &&  tryBody.isCatch());	  	non-compiled	[CE]  ';'  expected	81	None	add
1095	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Node  tryBody  =  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Node  tryBody  =  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isCatch());    Node  tryBody  =  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());	  	non-compiled	[CE]  ';'  expected	81	None	add
1096	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Node  tryBody  =  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Node  tryBody  =  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isCatch());    Node  tryBody  =  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());	  	non-compiled	[CE]  ';'  expected	81	None	add
1097	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  >=  null  &&  tryBody.isCatch());  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  >=  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isCatch());    Preconditions.checkState(tryBody  >=  null  &&  tryBody.isCatch());	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	81	None	add
1098	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isCatch());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	81	3	add
1099	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isCatch());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	81	3	add
1100	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [CE]  cannot  find  symbol  preconditions  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isCatch());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());	  	non-compiled	[CE]  cannot  find  symbol  preconditions	81	None	add
1101	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	6	3	replace
1102	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());Preconditions.checkState(tryBody.isTry());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	6	3	replace
1103	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isTwin());  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  catchNode.isTwin());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isTwin());    	non-compiled	[CE]  cannot  find  symbol	208	None	replace
1104	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isTwin());  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  &&  tryBody.isTwin());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isTwin());    	non-compiled	[CE]  cannot  find  symbol	208	None	replace
1105	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryNode.isTwin());  [CE]  cannot  find  symbol  tryNode  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryNode.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  tryNode.isTwin());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isTwin());    	non-compiled	[CE]  cannot  find  symbol  tryNode	208	None	replace
1106	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=  Token.TRY,  catchNode);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY,    catchNode);    	compilable	  [FE]  IllegalStateException  	19	3	replace
1107	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY,  catchNode);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.TRY,  catchNode);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY,    catchNode);    	compilable	  [FE]  IllegalStateException  	19	3	replace
1108	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  tryBody);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY,    catchNode);    	compilable	  [FE]  IllegalStateException  	19	3	replace
1109	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  tryBody);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  tryBody);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY,    catchNode);    	compilable	  [FE]  IllegalStateException  	19	3	replace
1110	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.getType()  ==  Token.TRY,  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(catchNode.getType()  ==  Token.TRY,  tryBody);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY,    catchNode);    	compilable	  [FE]  IllegalStateException  	19	3	replace
1111	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.getType()  ==  Token.TRY,  tryBody);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.getType()  ==  Token.TRY,  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.getType()  ==  Token.TRY,  tryBody);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY,    catchNode);    	compilable	  [FE]  IllegalStateException  	19	3	replace
1112	[BUG]  [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.TRY,  catchNode);  [CE]  cannot  find  symbol  tries  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.TRY,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries.getType()  ==  Token.TRY,  catchNode);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY,    catchNode);    	non-compiled	[CE]  cannot  find  symbol  tries	19	None	replace
1113	[BUG]  [BUGGY]  Preconditions.checkState(callNode.getType()  ==  Token.TRY,  tryBody);  [CE]  cannot  find  symbol  callNode  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(callNode.getType()  ==  Token.TRY,  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(callNode.getType()  ==  Token.TRY,  tryBody);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY,    catchNode);    	non-compiled	[CE]  cannot  find  symbol  callNode	19	None	replace
1114	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	224	3	replace
1115	[BUG]  [BUGGY]  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isFunction());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	224	3	replace
1116	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	224	3	replace
1117	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	224	3	replace
1118	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	224	3	replace
1119	[BUG]  [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	224	3	replace
1120	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	224	3	replace
1121	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isFunction());  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	224	3	replace
1122	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	224	3	replace
1123	[BUG]  [BUGGY]  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isFunction());  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	224	3	replace
1124	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	9	None	add
1125	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	9	None	add
1126	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isTry());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isTry());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	9	None	add
1127	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isTry());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isTry());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	9	None	add
1128	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkState(lock.isTry());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkState(lock.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkState(lock.isTry());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	9	None	add
1129	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getParent();  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getParent();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getParent();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	9	None	add
1130	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkState(t.isTry());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkState(t.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkState(t.isTry());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	9	None	add
1131	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  Node  tryBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  Node  tryBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    Node  tryBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	9	None	add
1132	[BUG]  [BUGGY]  Node  block  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [CE]  incompatible  types  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getType()    ==    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	254	None	replace
1133	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getType()  ==  Token.CATCH;  [CE]  incompatible  types  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getType()  ==  Token.CATCH;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getType()  ==  Token.CATCH;	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getType()    ==    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	254	None	replace
1134	[BUG]  [BUGGY]  Node  block  =  tryBody.getType()  >>  Token.CATCH;  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [CE]  incompatible  types  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getType()  >>  Token.CATCH;  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getType()  >>  Token.CATCH;  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getType()    ==    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	254	None	replace
1135	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [CE]  incompatible  types  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getType()    ==    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	254	None	replace
1136	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [CE]  incompatible  types  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getType()    ==    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	254	None	replace
1137	[BUG]  [BUGGY]  Node  block  =  tryBody.getType()!=  Token.CATCH;  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [CE]  incompatible  types  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getType()!=  Token.CATCH;  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getType()!=  Token.CATCH;  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getType()    ==    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	254	None	replace
1138	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	118	3	add
1139	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	118	3	add
1140	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.  [CE]  ')'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.	  	non-compiled	[CE]  ')'  expected	118	None	add
1141	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  [CE]  ')'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&	  	non-compiled	[CE]  ')'  expected	118	None	add
1142	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.  [CE]  ')'  expected  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.	  	non-compiled	[CE]  ')'  expected	118	None	add
1143	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	118	3	add
1144	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	118	3	add
1145	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());	  	compilable	  [FE]  IllegalStateException  	118	3	add
1146	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());	  	compilable	  [FE]  IllegalStateException  	118	3	add
1147	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(catchNode.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkNotNull(catchNode.isTry());	  Preconditions.checkNotNull(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	195	3	replace
1148	[BUG]  [BUGGY]  Preconditions.checkNotNull(catchNode.isTry());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(catchNode.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkNotNull(catchNode.isTry());	  Preconditions.checkNotNull(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	195	3	replace
1149	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkNotNull(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkNotNull(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	195	3	replace
1150	[BUG]  [BUGGY]  Preconditions.checkNotNull(tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkNotNull(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkNotNull(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	195	3	replace
1151	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkNotNull(tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkNotNull(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	195	3	replace
1152	[BUG]  [BUGGY]  Preconditions.checkNotNull(tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkNotNull(tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkNotNull(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	195	3	replace
1153	[BUG]  [BUGGY]  Preconditions.checkNotNull(callNode.isTry());  [CE]  cannot  find  symbol  callNode  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(callNode.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkNotNull(callNode.isTry());	  Preconditions.checkNotNull(tryBody.isTry());    	non-compiled	[CE]  cannot  find  symbol  callNode	195	None	replace
1154	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.FUNCTION);    Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	134	3	add
1155	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.FUNCTION);    Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	134	3	add
1156	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  Node  block(tryBody.getType()  ==  Token.FUNCTION);  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  Node  block(tryBody.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.FUNCTION);    Node  block(tryBody.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  ';'  expected	134	None	add
1157	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  Node  block(tryBody.getType()  ==  Token.FUNCTION);  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  Node  block(tryBody.getType()  ==  Token.FUNCTION);  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.FUNCTION);    Node  block(tryBody.getType()  ==  Token.FUNCTION);  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  ';'  expected	134	None	add
1158	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.FUNCTION);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	134	3	add
1159	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.FUNCTION);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	134	3	add
1160	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.FUNCTION);    Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	134	None	add
1161	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.FUNCTION);    Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	134	None	add
1162	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.FUNCTION);    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	134	3	add
1163	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.FUNCTION);    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	134	3	add
1164	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.FUNCTION);    Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	134	None	add
1165	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFunction();  Preconditions.checkState(block.isFunction());  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFunction();  Preconditions.checkState(block.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFunction();  Preconditions.checkState(block.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block    =    tryBody.getFunction();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
1166	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFunction();  Preconditions.checkState(t.isFunction());  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFunction();  Preconditions.checkState(t.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFunction();  Preconditions.checkState(t.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block    =    tryBody.getFunction();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
1167	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFunction();  Preconditions.checkState(body.isFunction());  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFunction();  Preconditions.checkState(body.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFunction();  Preconditions.checkState(body.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block    =    tryBody.getFunction();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
1168	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isNull());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(!tryBody.isNull());	  Preconditions.checkState(!tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	2	3	replace
1169	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isNull());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isNull());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isNull());	  Preconditions.checkState(!tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	2	3	replace
1170	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getFunction();  Preconditions.checkState(tryBody.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getFunction();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getFunction();  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    catchNode    =    tryBody.getFunction();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	182	None	replace
1171	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getFunction();  Preconditions.checkState(t.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getFunction();  Preconditions.checkState(t.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getFunction();  Preconditions.checkState(t.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    catchNode    =    tryBody.getFunction();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	182	None	replace
1172	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getFunction();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getFunction();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getFunction();	  Preconditions.checkState(tryBody.isFunction());    Node    catchNode    =    tryBody.getFunction();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	182	None	replace
1173	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getFunction();  Preconditions.checkState(callNode.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getFunction();  Preconditions.checkState(callNode.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getFunction();  Preconditions.checkState(callNode.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    catchNode    =    tryBody.getFunction();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	182	None	replace
1174	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getFunction();  Preconditions.checkState(node.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getFunction();  Preconditions.checkState(node.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getFunction();  Preconditions.checkState(node.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    catchNode    =    tryBody.getFunction();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	182	None	replace
1175	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);	  	compilable	  [FE]  IllegalStateException  	22	3	add
1176	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);	  	compilable	  [FE]  IllegalStateException  	22	3	add
1177	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);	  	non-compiled	[CE]  ';'  expected	22	None	add
1178	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Node  block(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Node  block(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    Node  block(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);	  	non-compiled	[CE]  ';'  expected	22	None	add
1179	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);	  	compilable	  [FE]  IllegalStateException  	22	3	add
1180	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);	  	compilable	  [FE]  IllegalStateException  	22	3	add
1181	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Node  block(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.NAME);  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Node  block(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    Node  block(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.NAME);	  	non-compiled	[CE]  ';'  expected	22	None	add
1182	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.NAME);	  	compilable	  [FE]  IllegalStateException  	22	3	add
1183	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.NAME);  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.NAME);	  	compilable	  [FE]  IllegalStateException  	22	3	add
1184	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Node  block(tryBody.getType()  ==  Token.TRY  ||  block(tryBody.getType()  ==  Token.NAME);  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Node  block(tryBody.getType()  ==  Token.TRY  ||  block(tryBody.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    Node  block(tryBody.getType()  ==  Token.TRY  ||  block(tryBody.getType()  ==  Token.NAME);	  	non-compiled	[CE]  ';'  expected	22	None	add
1185	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.NAME);  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.NAME);	  	non-compiled	[CE]  ';'  expected	22	None	add
1186	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=  null  &&  catchNode.isFunction());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	157	3	replace
1187	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isFunction());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  catchNode.isFunction());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	157	3	replace
1188	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody  ==  null  ||  tryBody.isFunction());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	157	3	replace
1189	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isFunction());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  ||  tryBody.isFunction());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	157	3	replace
1190	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	157	3	replace
1191	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	157	3	replace
1192	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isNode(),  tryBody);  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isNode(),  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isNode(),  tryBody);	  Preconditions.checkState(tryBody.isNode(),    catchNode);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
1193	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isNode(),  catchNode);  [CE]  cannot  find  symbol  callNode  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(callNode.isNode(),  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(callNode.isNode(),  catchNode);	  Preconditions.checkState(tryBody.isNode(),    catchNode);    	non-compiled	[CE]  cannot  find  symbol  callNode	28	None	replace
1194	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isNode(),  tryBody);  [CE]  cannot  find  symbol  callNode  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(callNode.isNode(),  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(callNode.isNode(),  tryBody);	  Preconditions.checkState(tryBody.isNode(),    catchNode);    	non-compiled	[CE]  cannot  find  symbol  callNode	28	None	replace
1195	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNode(),  catchNode,  catchNode);  [CE]  cannot  find  symbol  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNode(),  catchNode,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNode(),  catchNode,  catchNode);	  Preconditions.checkState(tryBody.isNode(),    catchNode);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
1196	[BUG]  [BUGGY]  Preconditions.checkState(matchNode.isNode(),  catchNode);  [CE]  cannot  find  symbol  matchNode  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(matchNode.isNode(),  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(matchNode.isNode(),  catchNode);	  Preconditions.checkState(tryBody.isNode(),    catchNode);    	non-compiled	[CE]  cannot  find  symbol  matchNode	28	None	replace
1197	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNode(),  catchNode,  tryCatchNode);  [CE]  cannot  find  symbol  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNode(),  catchNode,  tryCatchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNode(),  catchNode,  tryCatchNode);	  Preconditions.checkState(tryBody.isNode(),    catchNode);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
1198	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	151	3	replace
1199	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	151	3	replace
1200	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	151	3	replace
1201	[BUG]  [BUGGY]  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	151	3	replace
1202	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	151	3	replace
1203	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isEmpty());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	151	3	replace
1204	[BUG]  [BUGGY]  Node  block  =  tryBody.getNext();  Preconditions.checkState(lock.isEmpty());  [CE]  cannot  find  symbol  lock  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getNext();  Preconditions.checkState(lock.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getNext();  Preconditions.checkState(lock.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  lock	151	None	replace
1205	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	101	3	add
1206	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	101	3	add
1207	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block(catchNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block(catchNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block(catchNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	101	None	add
1208	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	101	3	add
1209	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	101	3	add
1210	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getNext();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	101	3	add
1211	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getNext();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	101	3	add
1212	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block(catchNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(block(tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block(catchNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(block(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block(catchNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(block(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	101	None	add
1213	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	101	3	add
1214	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	101	3	add
1215	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	101	3	add
1216	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	101	3	add
1217	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody)  {  Preconditions.checkState(block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody)  {  Preconditions.checkState(block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block(tryBody)  {  Preconditions.checkState(block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	101	None	add
1218	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isAssignmentOp()  ||  catchNode.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isAssignmentOp()  ||  catchNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isAssignmentOp()  ||  catchNode.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    catchNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	229	None	replace
1219	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isAssignmentOp()  ||  catchNode.isAssignmentOp());  [CE]  cannot  find  symbol  callNode  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(callNode.isAssignmentOp()  ||  catchNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(callNode.isAssignmentOp()  ||  catchNode.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    catchNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol  callNode	229	None	replace
1220	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isAssignmentOp()  ||  tryBody.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isAssignmentOp()  ||  tryBody.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isAssignmentOp()  ||  tryBody.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    catchNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	229	None	replace
1221	[BUG]  [BUGGY]  Preconditions.checkState(t.isAssignmentOp()  ||  catchNode.isAssignmentOp());  [CE]  cannot  find  symbol  t  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(t.isAssignmentOp()  ||  catchNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(t.isAssignmentOp()  ||  catchNode.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    catchNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol  t	229	None	replace
1222	[BUG]  [BUGGY]  Preconditions.checkState(patchNode.isAssignmentOp()  ||  catchNode.isAssignmentOp());  [CE]  cannot  find  symbol  patchNode  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(patchNode.isAssignmentOp()  ||  catchNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(patchNode.isAssignmentOp()  ||  catchNode.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    catchNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol  patchNode	229	None	replace
1223	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(catchNode.isEmpty());	  Preconditions.checkState(tryNode.isEmpty());    	compilable	  [FE]  IllegalStateException  	200	3	replace
1224	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isEmpty());  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isEmpty());	  Preconditions.checkState(tryNode.isEmpty());    	compilable	  [FE]  IllegalStateException  	200	3	replace
1225	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isEmpty());  [CE]  cannot  find  symbol  callNode  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(callNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(callNode.isEmpty());	  Preconditions.checkState(tryNode.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  callNode	200	None	replace
1226	[BUG]  [BUGGY]  Preconditions.checkState(false.isEmpty());  [CE]  boolean  cannot  be  dereferenced  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(false.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(false.isEmpty());	  Preconditions.checkState(tryNode.isEmpty());    	non-compiled	[CE]  boolean  cannot  be  dereferenced	200	None	replace
1227	[BUG]  [BUGGY]  Preconditions.checkState(t.isEmpty());  [CE]  cannot  find  symbol  t  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(t.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(t.isEmpty());	  Preconditions.checkState(tryNode.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  t	200	None	replace
1228	[BUG]  [BUGGY]  Preconditions.checkState(this.tryNode.isEmpty());  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(this.tryNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(this.tryNode.isEmpty());	  Preconditions.checkState(tryNode.isEmpty());    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	200	None	replace
1229	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]          Preconditions.checkNotNull(tryBody);  Preconditions.checkNotNull(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	                Preconditions.checkNotNull(tryBody);    Preconditions.checkNotNull(tryBody);	  	compilable	  [FE]  IllegalStateException  	179	3	add
1230	[BUG]  [BUGGY]          Preconditions.checkNotNull(tryBody);  Preconditions.checkNotNull(tryBody);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]          Preconditions.checkNotNull(tryBody);  Preconditions.checkNotNull(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	                Preconditions.checkNotNull(tryBody);    Preconditions.checkNotNull(tryBody);	  	compilable	  [FE]  IllegalStateException  	179	3	add
1231	[BUG]  [BUGGY]          Preconditions.checkNotNull(tryBody);  Node  tryBody  =  block(catchNode).copyInformationFrom(tryBody);  Preconditions.checkNotNull(tryBody);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]          Preconditions.checkNotNull(tryBody);  Node  tryBody  =  block(catchNode).copyInformationFrom(tryBody);  Preconditions.checkNotNull(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	                Preconditions.checkNotNull(tryBody);    Node  tryBody  =  block(catchNode).copyInformationFrom(tryBody);  Preconditions.checkNotNull(tryBody);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	179	None	add
1232	[BUG]  [BUGGY]          Preconditions.checkNotNull(tryBody);  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkNotNull(tryBody);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]          Preconditions.checkNotNull(tryBody);  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkNotNull(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	                Preconditions.checkNotNull(tryBody);    Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkNotNull(tryBody);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	179	None	add
1233	[BUG]  [BUGGY]          Preconditions.checkNotNull(tryBody);  Node  tryBody  =  block(catchNode).copyInformationFrom(tryBody);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]          Preconditions.checkNotNull(tryBody);  Node  tryBody  =  block(catchNode).copyInformationFrom(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	                Preconditions.checkNotNull(tryBody);    Node  tryBody  =  block(catchNode).copyInformationFrom(tryBody);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	179	None	add
1234	[BUG]  [BUGGY]          Preconditions.checkNotNull(tryBody);  Node  block(tryBody).copyInformationFrom(catchNode);  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]          Preconditions.checkNotNull(tryBody);  Node  block(tryBody).copyInformationFrom(catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	                Preconditions.checkNotNull(tryBody);    Node  block(tryBody).copyInformationFrom(catchNode);	  	non-compiled	[CE]  ';'  expected	179	None	add
1235	[BUG]  [BUGGY]          Preconditions.checkNotNull(tryBody);  Node  tryBody  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkNotNull(tryBody);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]          Preconditions.checkNotNull(tryBody);  Node  tryBody  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkNotNull(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	                Preconditions.checkNotNull(tryBody);    Node  tryBody  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkNotNull(tryBody);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	179	None	add
1236	[BUG]  [BUGGY]          Preconditions.checkNotNull(tryBody);  Node  block(tryBody)  {  Preconditions.checkNotNull(tryBody);  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]          Preconditions.checkNotNull(tryBody);  Node  block(tryBody)  {  Preconditions.checkNotNull(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	                Preconditions.checkNotNull(tryBody);    Node  block(tryBody)  {  Preconditions.checkNotNull(tryBody);	  	non-compiled	[CE]  ';'  expected	179	None	add
1237	[BUG]  [BUGGY]          Preconditions.checkNotNull(tryBody);  Node  block(tryBody)  ==  null;  Preconditions.checkNotNull(tryBody);  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]          Preconditions.checkNotNull(tryBody);  Node  block(tryBody)  ==  null;  Preconditions.checkNotNull(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	                Preconditions.checkNotNull(tryBody);    Node  block(tryBody)  ==  null;  Preconditions.checkNotNull(tryBody);	  	non-compiled	[CE]  ';'  expected	179	None	add
1238	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	62	3	add
1239	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	62	3	add
1240	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(catchNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(catchNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block(catchNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	62	None	add
1241	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	62	3	add
1242	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	62	3	add
1243	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	62	3	add
1244	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	62	3	add
1245	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(catchNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(block(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(catchNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(block(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block(catchNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(block(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	62	None	add
1246	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()!=  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	62	3	add
1247	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()!=  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	62	3	add
1248	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block(tryBody)  {  Preconditions.checkState(block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	62	None	add
1249	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	62	3	add
1250	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	62	3	add
1251	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(catchNode.isTry());	  Preconditions.checkState(tryNode.isTry());    	compilable	  [FE]  IllegalStateException  	142	3	replace
1252	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isTry());  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isTry());	  Preconditions.checkState(tryNode.isTry());    	compilable	  [FE]  IllegalStateException  	142	3	replace
1253	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isTry());  [CE]  cannot  find  symbol  callNode  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(callNode.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(callNode.isTry());	  Preconditions.checkState(tryNode.isTry());    	non-compiled	[CE]  cannot  find  symbol  callNode	142	None	replace
1254	[BUG]  [BUGGY]  Preconditions.checkState(t.isTry());  [CE]  cannot  find  symbol  t  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(t.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(t.isTry());	  Preconditions.checkState(tryNode.isTry());    	non-compiled	[CE]  cannot  find  symbol  t	142	None	replace
1255	[BUG]  [BUGGY]  Preconditions.checkState(false.isTry());  [CE]  boolean  cannot  be  dereferenced  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(false.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(false.isTry());	  Preconditions.checkState(tryNode.isTry());    	non-compiled	[CE]  boolean  cannot  be  dereferenced	142	None	replace
1256	[BUG]  [BUGGY]  Preconditions.checkState(this.tryNode.isTry());  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(this.tryNode.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(this.tryNode.isTry());	  Preconditions.checkState(tryNode.isTry());    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	142	None	replace
1257	[BUG]  [BUGGY]  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody)    ==    null;    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	66	None	replace
1258	[BUG]  [BUGGY]  Node  block(tryBody)  ==  null;  Preconditions.checkState(block.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody)  ==  null;  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody)  ==  null;  Preconditions.checkState(block.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody)    ==    null;    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	66	None	replace
1259	[BUG]  [BUGGY]  Node  block(tryBody)  ==  null;  Preconditions.checkState(lock.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody)  ==  null;  Preconditions.checkState(lock.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody)  ==  null;  Preconditions.checkState(lock.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody)    ==    null;    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	66	None	replace
1260	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)!=  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)!=  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)!=  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody)    ==    null;    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	66	None	replace
1261	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  ==  null;  Preconditions.checkState(t.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  ==  null;  Preconditions.checkState(t.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  ==  null;  Preconditions.checkState(t.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody)    ==    null;    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	66	None	replace
1262	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  ==  null;  Preconditions.checkState(lock.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  ==  null;  Preconditions.checkState(lock.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  ==  null;  Preconditions.checkState(lock.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody)    ==    null;    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	66	None	replace
1263	[BUG]  [BUGGY]  Node  block(catchNode).copyInformationFrom(t);  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode).copyInformationFrom(t);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode).copyInformationFrom(t);	  Node    block(catchNode).copyInformationFrom(tryBody);    	non-compiled	[CE]  ';'  expected	48	None	replace
1264	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	148	3	replace
1265	[BUG]  [BUGGY]  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isEmpty());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	148	3	replace
1266	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	148	3	replace
1267	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	148	3	replace
1268	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	148	3	replace
1269	[BUG]  [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	148	3	replace
1270	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	148	3	replace
1271	[BUG]  [BUGGY]  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	148	3	replace
1272	[BUG]  [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isEmpty());  [CE]  cannot  find  symbol  lock  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  lock	148	None	replace
1273	[BUG]  [BUGGY]  Node  block(tryBody.getType()  {  Token.CATCH);  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  {  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  {  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	103	None	replace
1274	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	103	None	replace
1275	[BUG]  [BUGGY]  Node  block(tryBody.getType()  &  Token.CATCH);  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  &  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  &  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	103	None	replace
1276	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()!=  Token.CATCH);  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()!=  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	103	None	replace
1277	[BUG]  [BUGGY]  Node  block(tryBody.getType()  -  Token.CATCH);  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  -  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  -  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	103	None	replace
1278	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isTree());  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isTree());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  tryBody.isTree());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
1279	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNode(),  tryBody.isCatch());  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNode(),  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNode(),  tryBody.isCatch());	  Preconditions.checkState(tryBody.isNode(),    tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
1280	[BUG]  [BUGGY]  Preconditions.checkState(testNode.isNode(),  tryBody.isNode());  [CE]  cannot  find  symbol  testNode  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(testNode.isNode(),  tryBody.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(testNode.isNode(),  tryBody.isNode());	  Preconditions.checkState(tryBody.isNode(),    tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol  testNode	30	None	replace
1281	[BUG]  [BUGGY]  Preconditions.checkState(tries.isNode(),  tryBody.isNode());  [CE]  cannot  find  symbol  tries  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tries.isNode(),  tryBody.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries.isNode(),  tryBody.isNode());	  Preconditions.checkState(tryBody.isNode(),    tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol  tries	30	None	replace
1282	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNode(),  tryBody.isEmpty());  [CE]  cannot  find  symbol  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNode(),  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNode(),  tryBody.isEmpty());	  Preconditions.checkState(tryBody.isNode(),    tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
1283	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNode(),  tryBody.isNotNode());  [CE]  cannot  find  symbol  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNode(),  tryBody.isNotNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNode(),  tryBody.isNotNode());	  Preconditions.checkState(tryBody.isNode(),    tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
1284	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTwin()  ||  tryBody.isCatch());  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTwin()  ||  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTwin()  ||  tryBody.isCatch());	  Preconditions.checkState(tryBody.isTwin()    ||    tryBody.isTwin());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
1285	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTwin()  &&  tryBody.isTwin());  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTwin()  &&  tryBody.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTwin()  &&  tryBody.isTwin());	  Preconditions.checkState(tryBody.isTwin()    ||    tryBody.isTwin());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
1286	[BUG]  [BUGGY]  Preconditions.checkState(twinNode.isTwin()  ||  tryBody.isTwin());  [CE]  cannot  find  symbol  twinNode  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(twinNode.isTwin()  ||  tryBody.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(twinNode.isTwin()  ||  tryBody.isTwin());	  Preconditions.checkState(tryBody.isTwin()    ||    tryBody.isTwin());    	non-compiled	[CE]  cannot  find  symbol  twinNode	32	None	replace
1287	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTwin()  ||  tryBody.isNone());  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTwin()  ||  tryBody.isNone());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTwin()  ||  tryBody.isNone());	  Preconditions.checkState(tryBody.isTwin()    ||    tryBody.isTwin());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
1288	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch()  ||  tryBody.isTwin());  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch()  ||  tryBody.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch()  ||  tryBody.isTwin());	  Preconditions.checkState(tryBody.isTwin()    ||    tryBody.isTwin());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
1289	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	169	None	add
1290	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	169	None	add
1291	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	169	None	add
1292	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	169	None	add
1293	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	169	None	add
1294	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(lockNode.getType()  ==  Token.TRY);  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(lockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(lockNode.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	169	None	add
1295	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	169	None	add
1296	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	169	None	add
1297	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(!tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(!tryBody.isTry());	  Preconditions.checkArgument(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	220	3	replace
1298	[BUG]  [BUGGY]  Preconditions.checkArgument(!tryBody.isTry());  [FE]  IllegalStateException  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(!tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(!tryBody.isTry());	  Preconditions.checkArgument(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	220	3	replace
1299	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(catchNode.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(catchNode.isTry());	  Preconditions.checkArgument(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	220	3	replace
1300	[BUG]  [BUGGY]  Preconditions.checkArgument(catchNode.isTry());  [FE]  IllegalStateException  [FE]      IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(catchNode.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(catchNode.isTry());	  Preconditions.checkArgument(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	220	3	replace
1301	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.FOR);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=  Token.FOR);	  Preconditions.checkState(tryBody.getType()    ==    Token.FOR);    	compilable	  [FE]  IllegalStateException  	139	3	replace
1302	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.FOR);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.FOR);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.FOR);	  Preconditions.checkState(tryBody.getType()    ==    Token.FOR);    	compilable	  [FE]  IllegalStateException  	139	3	replace
1303	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.FOR,  catchNode);	  Preconditions.checkState(tryBody.getType()    ==    Token.FOR);    	compilable	  [FE]  IllegalStateException  	139	3	replace
1304	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR,  catchNode);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.FOR,  catchNode);	  Preconditions.checkState(tryBody.getType()    ==    Token.FOR);    	compilable	  [FE]  IllegalStateException  	139	3	replace
1305	[BUG]  [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.FOR);  [CE]  cannot  find  symbol  tries  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.FOR);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries.getType()  ==  Token.FOR);	  Preconditions.checkState(tryBody.getType()    ==    Token.FOR);    	non-compiled	[CE]  cannot  find  symbol  tries	139	None	replace
1306	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.isEmpty();  Preconditions.checkState(tryBody.isEmpty());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.isEmpty();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.isEmpty();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    catchNode    =    tryBody.isEmpty();    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	152	None	replace
1307	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    catchNode    =    tryBody.isEmpty();    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	152	None	replace
1308	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    catchNode    =    tryBody.isEmpty();    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	152	None	replace
1309	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.isEmpty();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.isEmpty();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.isEmpty();	  Preconditions.checkState(tryBody.isEmpty());    Node    catchNode    =    tryBody.isEmpty();    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	152	None	replace
1310	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    catchNode    =    tryBody.isEmpty();    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	152	None	replace
1311	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.isEmpty();  Preconditions.checkState(catchNode.isEmpty());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.isEmpty();  Preconditions.checkState(catchNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.isEmpty();  Preconditions.checkState(catchNode.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    catchNode    =    tryBody.isEmpty();    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	152	None	replace
1312	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  >=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  >=  Token.TRY);	  Preconditions.checkState(tryBody.getType()!=    Token.TRY);    	compilable	  [FE]  IllegalStateException  	17	3	replace
1313	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  >=  Token.TRY);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  >=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  >=  Token.TRY);	  Preconditions.checkState(tryBody.getType()!=    Token.TRY);    	compilable	  [FE]  IllegalStateException  	17	3	replace
1314	[BUG]  [BUGGY]  Preconditions.checkState(tries.getType()!=  Token.TRY);  [CE]  cannot  find  symbol  tries  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tries.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries.getType()!=  Token.TRY);	  Preconditions.checkState(tryBody.getType()!=    Token.TRY);    	non-compiled	[CE]  cannot  find  symbol  tries	17	None	replace
1315	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()!=  Token.TRY);  [CE]  cannot  find  symbol  tryNode  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()!=  Token.TRY);	  Preconditions.checkState(tryBody.getType()!=    Token.TRY);    	non-compiled	[CE]  cannot  find  symbol  tryNode	17	None	replace
1316	[BUG]  [BUGGY]  Preconditions.checkState(testNode.getType()!=  Token.TRY);  [CE]  cannot  find  symbol  testNode  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(testNode.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(testNode.getType()!=  Token.TRY);	  Preconditions.checkState(tryBody.getType()!=    Token.TRY);    	non-compiled	[CE]  cannot  find  symbol  testNode	17	None	replace
1317	[BUG]  [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.TRY);  [CE]  cannot  find  symbol  tries  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()!=    Token.TRY);    	non-compiled	[CE]  cannot  find  symbol  tries	17	None	replace
1318	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=    null    &&    tryBody.isCatch());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	73	3	add
1319	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isCatch());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	73	3	add
1320	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=    null    &&    tryBody.isCatch());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	73	3	add
1321	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isCatch());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	73	3	add
1322	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  tryBody  =  null  &&  tryBody.isCatch());  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  tryBody  =  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isCatch());    Node  tryBody  =  null  &&  tryBody.isCatch());	  	non-compiled	[CE]  ';'  expected	73	None	add
1323	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  tryBody  =  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  tryBody  =  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isCatch());    Node  tryBody  =  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());	  	non-compiled	[CE]  ';'  expected	73	None	add
1324	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=    null    &&    tryBody.isCatch());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	73	3	add
1325	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isCatch());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	73	3	add
1326	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [CE]  cannot  find  symbol  preconditions  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isCatch());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());	  	non-compiled	[CE]  cannot  find  symbol  preconditions	73	None	add
1327	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  >=  null  &&  tryBody.isCatch());  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  >=  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isCatch());    Preconditions.checkState(tryBody  >=  null  &&  tryBody.isCatch());	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	73	None	add
1328	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  tryBody  =  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  tryBody  =  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isCatch());    Node  tryBody  =  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());	  	non-compiled	[CE]  ';'  expected	73	None	add
1329	[BUG]  [BUGGY]  Node  block(catchNode).copyInformationFrom(tryNode);  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode).copyInformationFrom(tryNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode).copyInformationFrom(tryNode);	  Node    block(tryNode).copyInformationFrom(catchNode);    	non-compiled	[CE]  ';'  expected	128	None	replace
1330	[BUG]  [BUGGY]  Node  block(tryNode).copyInformationFrom(catchNode,  catchBody);  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryNode).copyInformationFrom(catchNode,  catchBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryNode).copyInformationFrom(catchNode,  catchBody);	  Node    block(tryNode).copyInformationFrom(catchNode);    	non-compiled	[CE]  ';'  expected	128	None	replace
1331	[BUG]  [BUGGY]  Node  block(tryNode).copyInformationFrom(t);  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryNode).copyInformationFrom(t);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryNode).copyInformationFrom(t);	  Node    block(tryNode).copyInformationFrom(catchNode);    	non-compiled	[CE]  ';'  expected	128	None	replace
1332	[BUG]  [BUGGY]  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  Node    block(catchNode)    {    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	49	None	replace
1333	[BUG]  [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  Node    block(catchNode)    {    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	49	None	replace
1334	[BUG]  [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode)  {  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);	  Node    block(catchNode)    {    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	49	None	replace
1335	[BUG]  [BUGGY]  Node  block(peekNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(peekNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(peekNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  Node    block(catchNode)    {    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	49	None	replace
1336	[BUG]  [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.NAME);  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.NAME);	  Node    block(catchNode)    {    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	49	None	replace
1337	[BUG]  [BUGGY]  Node  block(t)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(t)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(t)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  Node    block(catchNode)    {    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	49	None	replace
1338	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	43	3	add
1339	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	43	3	add
1340	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.CATCH);    Node  block(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	43	None	add
1341	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.CATCH);    Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	43	None	add
1342	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	43	3	add
1343	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	43	3	add
1344	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()!=  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	43	3	add
1345	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()!=  Token.CATCH);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()!=  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	43	3	add
1346	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.CATCH  ||  catchNode.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.CATCH  ||  catchNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.CATCH);    Node  block(tryBody.getType()  ==  Token.CATCH  ||  catchNode.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	43	None	add
1347	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	43	3	add
1348	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	43	3	add
1349	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.CATCH  ||  block(tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.CATCH  ||  block(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.CATCH);    Node  block(tryBody.getType()  ==  Token.CATCH  ||  block(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	43	None	add
1350	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryNode!=  null);  [CE]  cannot  find  symbol  tryNode  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryNode!=  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    tryNode!=    null);    	non-compiled	[CE]  cannot  find  symbol  tryNode	193	None	replace
1351	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY  &&  tryNode!=  null);  [CE]  cannot  find  symbol  tryNode  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY  &&  tryNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.TRY  &&  tryNode!=  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    tryNode!=    null);    	non-compiled	[CE]  cannot  find  symbol  tryNode	193	None	replace
1352	[BUG]  [BUGGY]  Preconditions.checkState(testNode.getType()  ==  Token.TRY  &&  tryNode!=  null);  [CE]  cannot  find  symbol  testNode  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(testNode.getType()  ==  Token.TRY  &&  tryNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(testNode.getType()  ==  Token.TRY  &&  tryNode!=  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    tryNode!=    null);    	non-compiled	[CE]  cannot  find  symbol  testNode	193	None	replace
1353	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode!=  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    tryNode!=    null);    	compilable	  [FE]  IllegalStateException  	193	3	replace
1354	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode!=  null);  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode!=  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    tryNode!=    null);    	compilable	  [FE]  IllegalStateException  	193	3	replace
1355	[BUG]  [BUGGY]  Preconditions.checkState(callNode.getType()  ==  Token.TRY  &&  tryNode!=  null);  [CE]  cannot  find  symbol  callNode  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(callNode.getType()  ==  Token.TRY  &&  tryNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(callNode.getType()  ==  Token.TRY  &&  tryNode!=  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    tryNode!=    null);    	non-compiled	[CE]  cannot  find  symbol  callNode	193	None	replace
1356	[BUG]  [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.TRY  &&  catchNode!=  null);  [CE]  cannot  find  symbol  t  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.TRY  &&  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(t.getType()  ==  Token.TRY  &&  catchNode!=  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    tryNode!=    null);    	non-compiled	[CE]  cannot  find  symbol  t	193	None	replace
1357	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  NullPointerException  	166	3	replace
1358	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.isEmpty());  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  NullPointerException  	166	3	replace
1359	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	166	3	replace
1360	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	166	3	replace
1361	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	166	3	replace
1362	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	166	3	replace
1363	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(lockNode.isEmpty());  [CE]  cannot  find  symbol  lockNode  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(lockNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(lockNode.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  lockNode	166	None	replace
1364	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	166	3	replace
1365	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.isEmpty());  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	166	3	replace
1366	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	166	3	replace
1367	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	166	3	replace
1368	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Preconditions.checkState(!tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(!tryBody.isTry());    Preconditions.checkState(!tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	140	3	add
1369	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Preconditions.checkState(!tryBody.isTry());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Preconditions.checkState(!tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isTry());    Preconditions.checkState(!tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	140	3	add
1370	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  catchNode  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  catchNode  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isTry());    Node  catchNode  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isTry());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	140	None	add
1371	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  tryBody  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isTry());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  tryBody  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isTry());    Node  tryBody  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isTry());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	140	None	add
1372	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  block  =  tryBody.getNext();  Preconditions.checkState(!tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(!tryBody.isTry());    Node  block  =  tryBody.getNext();  Preconditions.checkState(!tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	140	3	add
1373	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  block  =  tryBody.getNext();  Preconditions.checkState(!tryBody.isTry());  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  block  =  tryBody.getNext();  Preconditions.checkState(!tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isTry());    Node  block  =  tryBody.getNext();  Preconditions.checkState(!tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	140	3	add
1374	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isTry());  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isTry());    Node  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isTry());	  	non-compiled	[CE]  ';'  expected	140	None	add
1375	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  block(catchNode).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isTry());  [CE]  ';'  expected  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  block(catchNode).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isTry());    Node  block(catchNode).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isTry());	  	non-compiled	[CE]  ';'  expected	140	None	add
1376	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  block(catchNode).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isTry());  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  block(catchNode).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isTry());    Node  block(catchNode).copyInformationFrom(catchNode);  Preconditions.checkState(!tryBody.isTry());	  	non-compiled	[CE]  ';'  expected	140	None	add
1377	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  Preconditions.checkNotNull(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkNotNull(tryBody.isTry());    Preconditions.checkNotNull(tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	194	3	add
1378	[BUG]  [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  Preconditions.checkNotNull(tryBody.isTry());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  Preconditions.checkNotNull(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkNotNull(tryBody.isTry());    Preconditions.checkNotNull(tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	194	3	add
1379	[BUG]  [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  Node  block(tryBody.isTry());  Preconditions.checkNotNull(tryBody.isTry());  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  Node  block(tryBody.isTry());  Preconditions.checkNotNull(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkNotNull(tryBody.isTry());    Node  block(tryBody.isTry());  Preconditions.checkNotNull(tryBody.isTry());	  	non-compiled	[CE]  ';'  expected	194	None	add
1380	[BUG]  [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  Node  block(tryBody.isTry());  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  Node  block(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkNotNull(tryBody.isTry());    Node  block(tryBody.isTry());	  	non-compiled	[CE]  ';'  expected	194	None	add
1381	[BUG]  [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  Node  catchNode  =  block(tryBody.isTry());  Preconditions.checkNotNull(tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  Node  catchNode  =  block(tryBody.isTry());  Preconditions.checkNotNull(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkNotNull(tryBody.isTry());    Node  catchNode  =  block(tryBody.isTry());  Preconditions.checkNotNull(tryBody.isTry());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	194	None	add
1382	[BUG]  [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  Node  tryBody  =  block(tryBody.isTry());  Preconditions.checkNotNull(tryBody.isTry());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  Node  tryBody  =  block(tryBody.isTry());  Preconditions.checkNotNull(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkNotNull(tryBody.isTry());    Node  tryBody  =  block(tryBody.isTry());  Preconditions.checkNotNull(tryBody.isTry());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	194	None	add
1383	[BUG]  [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkNotNull(tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkNotNull(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkNotNull(tryBody.isTry());    Node  catchNode  =  tryBody.getParent();  Preconditions.checkNotNull(tryBody.isTry());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	194	None	add
1384	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkNotNull(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkNotNull(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkNotNull(tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	194	3	add
1385	[BUG]  [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkNotNull(tryBody.isTry());  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkNotNull(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkNotNull(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkNotNull(tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	194	3	add
1386	[BUG]  [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkNotNull(tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkNotNull(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkNotNull(tryBody.isTry());    Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkNotNull(tryBody.isTry());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	194	None	add
1387	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  NullPointerException  	172	3	replace
1388	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  NullPointerException  	172	3	replace
1389	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getNext();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  blockNode  =  tryBody.getNext();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	172	3	replace
1390	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.getNext();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getNext();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.getNext();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	172	3	replace
1391	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	172	3	replace
1392	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	172	3	replace
1393	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getNext();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getNext();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	172	3	replace
1394	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getNext();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getNext();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getNext();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	172	3	replace
1395	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	172	3	replace
1396	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	172	3	replace
1397	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null,  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=  null,  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody    >=    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	121	3	replace
1398	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null,  tryBody.isBlock());  [FE]  IllegalStateException  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null,  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null,  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody    >=    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	121	3	replace
1399	[BUG]  [BUGGY]  Preconditions.checkState(tries!=  null  &&  tryBody.isBlock());  [CE]  cannot  find  symbol  tries  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tries!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody    >=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  cannot  find  symbol  tries	121	None	replace
1400	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  attemptBody.isBlock());  [CE]  cannot  find  symbol  attemptBody  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  attemptBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  attemptBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody    >=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  cannot  find  symbol  attemptBody	121	None	replace
1401	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(!tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(!tryBody.isEmpty());	  Preconditions.checkArgument(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	4	3	replace
1402	[BUG]  [BUGGY]  Preconditions.checkArgument(!tryBody.isEmpty());  [FE]  IllegalStateException  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(!tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(!tryBody.isEmpty());	  Preconditions.checkArgument(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	4	3	replace
1403	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(catchNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(catchNode.isEmpty());	  Preconditions.checkArgument(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	4	3	replace
1404	[BUG]  [BUGGY]  Preconditions.checkArgument(catchNode.isEmpty());  [FE]  IllegalStateException  [FE]      IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(catchNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(catchNode.isEmpty());	  Preconditions.checkArgument(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	4	3	replace
1405	[BUG]  [BUGGY]  Preconditions.checkArgument(tryNode.isEmpty());  [CE]  cannot  find  symbol  tryNode  [FE]        IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryNode.isEmpty());	  Preconditions.checkArgument(tryBody.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  tryNode	4	None	replace
1406	[BUG]  [BUGGY]  Node  catchNode  =  tryBody!=  null?  null  :  tryBody.getParent();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody!=  null?  null  :  tryBody.getParent();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody!=  null?  null  :  tryBody.getParent();	          Node    catchNode    =    tryBody.getParent();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	176	None	replace
1407	[BUG]  [BUGGY]  Node  catchNode  =  tryBody  ==  null?  null  :  tryBody.getParent();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody  ==  null?  null  :  tryBody.getParent();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody  ==  null?  null  :  tryBody.getParent();	          Node    catchNode    =    tryBody.getParent();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	176	None	replace
1408	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.isFunction();  Preconditions.checkState(tryBody.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.isFunction();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.isFunction();  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    catchNode    =    tryBody.isFunction();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	56	None	replace
1409	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    catchNode    =    tryBody.isFunction();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	56	None	replace
1410	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isAssignmentOp(),  catchNode.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isAssignmentOp(),  catchNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isAssignmentOp(),  catchNode.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp(),    catchNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
1411	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isAssignmentOp(),  tryBody.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isAssignmentOp(),  tryBody.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isAssignmentOp(),  tryBody.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp(),    catchNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
1412	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isAssignmentOp(),  catchNode.isAssignmentOp());  [CE]  cannot  find  symbol  callNode  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(callNode.isAssignmentOp(),  catchNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(callNode.isAssignmentOp(),  catchNode.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp(),    catchNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol  callNode	122	None	replace
1413	[BUG]  [BUGGY]  Preconditions.checkState(patchNode.isAssignmentOp(),  catchNode.isAssignmentOp());  [CE]  cannot  find  symbol  patchNode  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(patchNode.isAssignmentOp(),  catchNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(patchNode.isAssignmentOp(),  catchNode.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp(),    catchNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol  patchNode	122	None	replace
1414	[BUG]  [BUGGY]  Preconditions.checkState(matchNode.isAssignmentOp(),  catchNode.isAssignmentOp());  [CE]  cannot  find  symbol  matchNode  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(matchNode.isAssignmentOp(),  catchNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(matchNode.isAssignmentOp(),  catchNode.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp(),    catchNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol  matchNode	122	None	replace
1415	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isAssignmentOp(),  catchBody.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isAssignmentOp(),  catchBody.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isAssignmentOp(),  catchBody.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp(),    catchNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
1416	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	174	3	replace
1417	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	174	3	replace
1418	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	174	3	replace
1419	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	174	3	replace
1420	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  NullPointerException  	174	3	replace
1421	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [FE]  NullPointerException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  NullPointerException  	174	3	replace
1422	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	174	3	replace
1423	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	174	3	replace
1424	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	174	3	replace
1425	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	174	3	replace
1426	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryNode.isNode());  [CE]  cannot  find  symbol  tryNode  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryNode.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  ||  tryNode.isNode());	  Preconditions.checkState(tryBody    ==    null    ||    tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol  tryNode	205	None	replace
1427	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(!tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(!tryBody.isFunction());	  Preconditions.checkArgument(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	137	3	replace
1428	[BUG]  [BUGGY]  Preconditions.checkArgument(!tryBody.isFunction());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(!tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(!tryBody.isFunction());	  Preconditions.checkArgument(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	137	3	replace
1429	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.getType()  ==  Token.FUNCTION);	  Preconditions.checkArgument(tryBody.isFunction());    	compilable	  [FE]  IllegalArgumentException  	137	3	replace
1430	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.FUNCTION);  [FE]  IllegalArgumentException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()  ==  Token.FUNCTION);	  Preconditions.checkArgument(tryBody.isFunction());    	compilable	  [FE]  IllegalArgumentException  	137	3	replace
1431	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkNotNull(tryBody.isFunction());	  Preconditions.checkArgument(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	137	3	replace
1432	[BUG]  [BUGGY]  Preconditions.checkNotNull(tryBody.isFunction());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkNotNull(tryBody.isFunction());	  Preconditions.checkArgument(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	137	3	replace
1433	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(catchNode.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(catchNode.isFunction());	  Preconditions.checkArgument(tryBody.isFunction());    	compilable	  [FE]  IllegalArgumentException  	137	3	replace
1434	[BUG]  [BUGGY]  Preconditions.checkArgument(catchNode.isFunction());  [FE]  IllegalArgumentException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(catchNode.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(catchNode.isFunction());	  Preconditions.checkArgument(tryBody.isFunction());    	compilable	  [FE]  IllegalArgumentException  	137	3	replace
1435	[BUG]  [BUGGY]  Node  catchNode  =  new  Node(Token.CATCH,  tryBody,  catchNode);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  new  Node(Token.CATCH,  tryBody,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  new  Node(Token.CATCH,  tryBody,  catchNode);	          Node    catchNode    =    new    Node(Token.CATCH,    tryBody);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	234	None	replace
1436	[BUG]  [BUGGY]  Node  catchNode  =  new  Node(Token.CATCH,  catchNode);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  new  Node(Token.CATCH,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  new  Node(Token.CATCH,  catchNode);	          Node    catchNode    =    new    Node(Token.CATCH,    tryBody);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	234	None	replace
1437	[BUG]  [BUGGY]  Node  catchNode  =  new  Node(Token.CATCH,  attemptBody,  catchNode);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  new  Node(Token.CATCH,  attemptBody,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  new  Node(Token.CATCH,  attemptBody,  catchNode);	          Node    catchNode    =    new    Node(Token.CATCH,    tryBody);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	234	None	replace
1438	[BUG]  [BUGGY]  Node  catchNode  =  new  Node(Token.CATCH,  tryBody,  catchNodes);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  new  Node(Token.CATCH,  tryBody,  catchNodes);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  new  Node(Token.CATCH,  tryBody,  catchNodes);	          Node    catchNode    =    new    Node(Token.CATCH,    tryBody);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	234	None	replace
1439	[BUG]  [BUGGY]  Node  catchNode  =  new  Node(Token.CATCH,  tryBody),  catchNode);  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  new  Node(Token.CATCH,  tryBody),  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  new  Node(Token.CATCH,  tryBody),  catchNode);	          Node    catchNode    =    new    Node(Token.CATCH,    tryBody);    	non-compiled	[CE]  ';'  expected	234	None	replace
1440	[BUG]  [BUGGY]  Node  catchNode  =  new  Node(Token.CATCH,  tryBody,  catchName);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  new  Node(Token.CATCH,  tryBody,  catchName);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  new  Node(Token.CATCH,  tryBody,  catchName);	          Node    catchNode    =    new    Node(Token.CATCH,    tryBody);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	234	None	replace
1441	[BUG]  [BUGGY]  Node  catchNode  =  new  Node(Token.CATCH,  tryBody,  catchBuffer);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  new  Node(Token.CATCH,  tryBody,  catchBuffer);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  new  Node(Token.CATCH,  tryBody,  catchBuffer);	          Node    catchNode    =    new    Node(Token.CATCH,    tryBody);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	234	None	replace
1442	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryNode.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryNode.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryNode.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    catchNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	250	None	replace
1443	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(callNode.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(callNode.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(callNode.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    catchNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	250	None	replace
1444	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(node.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(node.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(node.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    catchNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	250	None	replace
1445	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	111	3	add
1446	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	111	3	add
1447	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	111	3	add
1448	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	111	3	add
1449	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  catchNode.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  catchNode.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	111	3	add
1450	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  catchNode.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  catchNode.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  catchNode.isCatch());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	111	3	add
1451	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	111	3	add
1452	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	111	3	add
1453	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclared());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclared());  [CE]  cannot  find  symbol  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclared());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclared());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclared());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclared());	  	non-compiled	[CE]  cannot  find  symbol	111	None	add
1454	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclaration());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclaration());  [CE]  cannot  find  symbol  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclaration());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclaration());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclaration());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclaration());	  	non-compiled	[CE]  cannot  find  symbol	111	None	add
1455	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclared());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  cannot  find  symbol  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclared());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclared());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  cannot  find  symbol	111	None	add
1456	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isAssignment());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isAssignment());  [CE]  cannot  find  symbol  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isAssignment());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isAssignment());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isAssignment());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isAssignment());	  	non-compiled	[CE]  cannot  find  symbol	111	None	add
1457	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    tryBody    =    block(tryBody).copyInformationFrom(tryBody);    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	160	None	replace
1458	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    tryBody    =    block(tryBody).copyInformationFrom(tryBody);    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	160	None	replace
1459	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody).copyInformationFrom(catchNode);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody).copyInformationFrom(catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody).copyInformationFrom(catchNode);	  Preconditions.checkState(tryBody.isCatch());    Node    tryBody    =    block(tryBody).copyInformationFrom(tryBody);    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	160	None	replace
1460	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);	  Preconditions.checkState(tryBody.isCatch());    Node    tryBody    =    block(tryBody).copyInformationFrom(tryBody);    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	160	None	replace
1461	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody).copyInformationFrom(false);  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody).copyInformationFrom(false);  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody).copyInformationFrom(false);  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    tryBody    =    block(tryBody).copyInformationFrom(tryBody);    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	160	None	replace
1462	[BUG]  [BUGGY]  Node  block  =  tryBody.isEmpty();  Preconditions.checkState(block.isEmpty());  [CE]  incompatible  types  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.isEmpty();  Preconditions.checkState(block.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.isEmpty();  Preconditions.checkState(block.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.isEmpty();    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  incompatible  types	149	None	replace
1463	[BUG]  [BUGGY]  Node  block  =  tryBody.isEmpty();  Preconditions.checkState(tryBody.isEmpty());  [CE]  incompatible  types  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.isEmpty();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.isEmpty();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.isEmpty();    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  incompatible  types	149	None	replace
1464	[BUG]  [BUGGY]  Node  block  =  tryBody.isEmpty();  Preconditions.checkState(lock.isEmpty());  [CE]  incompatible  types  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.isEmpty();  Preconditions.checkState(lock.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.isEmpty();  Preconditions.checkState(lock.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.isEmpty();    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  incompatible  types	149	None	replace
1465	[BUG]  [BUGGY]  Node  block(tryBody)  {  Preconditions.checkState(block(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody)  {  Preconditions.checkState(block(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody)  {  Preconditions.checkState(block(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody)    {    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	227	None	replace
1466	[BUG]  [BUGGY]  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody)    {    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	227	None	replace
1467	[BUG]  [BUGGY]  Node  block(tryBody)  {  Preconditions.checkState(lock.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody)  {  Preconditions.checkState(lock.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody)  {  Preconditions.checkState(lock.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody)    {    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	227	None	replace
1468	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  }  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  }  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  }	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody)    {    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	227	None	replace
1469	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(t.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(t.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(t.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody)    {    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	227	None	replace
1470	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(block(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(block(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(block(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody)    {    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	227	None	replace
1471	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	198	3	add
1472	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	198	3	add
1473	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  tryBody  =  block(catchNode).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  tryBody  =  block(catchNode).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    Node  tryBody  =  block(catchNode).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	198	None	add
1474	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	198	None	add
1475	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  tryBody  =  null  &&  tryBody.isEmpty());  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  tryBody  =  null  &&  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    Node  tryBody  =  null  &&  tryBody.isEmpty());	  	non-compiled	[CE]  ';'  expected	198	None	add
1476	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  tryBody  =  null  &&  tryBody.isEmpty());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  tryBody  =  null  &&  tryBody.isEmpty());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    Node  tryBody  =  null  &&  tryBody.isEmpty());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());	  	non-compiled	[CE]  ';'  expected	198	None	add
1477	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	198	3	add
1478	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isEmpty());  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	198	3	add
1479	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  attemptBody  =  null  &&  tryBody.isEmpty());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  attemptBody  =  null  &&  tryBody.isEmpty());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    Node  attemptBody  =  null  &&  tryBody.isEmpty());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());	  	non-compiled	[CE]  ';'  expected	198	None	add
1480	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  block(tryBody)  ==  null  &&  tryBody.isEmpty());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  block(tryBody)  ==  null  &&  tryBody.isEmpty());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    Node  block(tryBody)  ==  null  &&  tryBody.isEmpty());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());	  	non-compiled	[CE]  ';'  expected	198	None	add
1481	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.isEmpty());  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.isEmpty());	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	165	None	add
1482	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	165	None	add
1483	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	165	None	add
1484	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	165	None	add
1485	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.isEmpty());  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.isEmpty());	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	165	None	add
1486	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.isEmpty());  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(blockNode.isEmpty());	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	165	None	add
1487	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	165	None	add
1488	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isEmpty());  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	165	None	add
1489	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=    Token.TRY);    Preconditions.checkState(tryBody.getType()!=  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	16	3	add
1490	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.TRY);    Preconditions.checkState(tryBody.getType()!=  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	16	3	add
1491	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  block(tryBody.getType()  >>  Token.TRY);  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  block(tryBody.getType()  >>  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.TRY);    Node  block(tryBody.getType()  >>  Token.TRY);	  	non-compiled	[CE]  ';'  expected	16	None	add
1492	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  block(tryBody.getType()!=  Token.TRY);  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  block(tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.TRY);    Node  block(tryBody.getType()!=  Token.TRY);	  	non-compiled	[CE]  ';'  expected	16	None	add
1493	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Preconditions.checkState(tryBody.getType()  >>  Token.TRY);  [CE]  no  suitable  method  found  for  checkState(int)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Preconditions.checkState(tryBody.getType()  >>  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.TRY);    Preconditions.checkState(tryBody.getType()  >>  Token.TRY);	  	non-compiled	[CE]  no  suitable  method  found  for  checkState(int)	16	None	add
1494	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Preconditions.checkState(tryBody.getType()  >=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=    Token.TRY);    Preconditions.checkState(tryBody.getType()  >=  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	16	3	add
1495	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Preconditions.checkState(tryBody.getType()  >=  Token.TRY);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Preconditions.checkState(tryBody.getType()  >=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.TRY);    Preconditions.checkState(tryBody.getType()  >=  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	16	3	add
1496	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  block(tryBody.getType()  >=  Token.TRY);  [CE]  ';'  expected  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  block(tryBody.getType()  >=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.TRY);    Node  block(tryBody.getType()  >=  Token.TRY);	  	non-compiled	[CE]  ';'  expected	16	None	add
1497	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    block(tryBody).copyInformationFrom(tryBody);    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	203	None	replace
1498	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    block(tryBody).copyInformationFrom(tryBody);    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	203	None	replace
1499	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    catchNode    =    block(tryBody);    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	231	None	replace
1500	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    catchNode    =    block(tryBody);    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	231	None	replace
1501	[BUG]  [BUGGY]  Preconditions.checkState(tryNode!=  null  &&  tryNode.isBlock());  [CE]  cannot  find  symbol  tryNode  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode!=  null  &&  tryNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode!=  null  &&  tryNode.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    catchNode    =    block(tryBody);    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  cannot  find  symbol  tryNode	231	None	replace
1502	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  >=  null  &&  tryBody.isBlock());  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  >=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  >=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	119	None	replace
1503	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  >>  null  &&  tryBody.isBlock());  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  >>  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  >>  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	119	None	replace
1504	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  [BUGGY]  null  &&  tryBody.isBlock());  [CE]  ')'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  [BUGGY]  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  [BUGGY]  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  ')'  expected	119	None	replace
1505	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  [Delete]  null  &&  tryBody.isBlock());  [CE]  ')'  expected  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  [Delete]  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  [Delete]  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  ')'  expected	119	None	replace
1506	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);	  	compilable	  [FE]  IllegalStateException  	246	3	add
1507	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);	  	compilable	  [FE]  IllegalStateException  	246	3	add
1508	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	246	None	add
1509	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  block(tryBody.getType());  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  block(tryBody.getType());  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    Node  catchNode  =  block(tryBody.getType());  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	246	None	add
1510	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  catchNode!=  null);	  	compilable	  [FE]  IllegalStateException  	246	3	add
1511	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  catchNode!=  null);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  catchNode!=  null);	  	compilable	  [FE]  IllegalStateException  	246	3	add
1512	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    Node  catchNode  =  tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);	  	non-compiled	[CE]  ';'  expected	246	None	add
1513	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  block(tryBody).getType()  ==  Token.TRY  &&  catchNode!=  null);  [CE]  ';'  expected  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  block(tryBody).getType()  ==  Token.TRY  &&  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    Node  catchNode  =  block(tryBody).getType()  ==  Token.TRY  &&  catchNode!=  null);	  	non-compiled	[CE]  ';'  expected	246	None	add
1514	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  tryBody.getType()  {  Token.TRY  &&  catchNode!=  null);  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  tryBody.getType()  {  Token.TRY  &&  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    Node  catchNode  =  tryBody.getType()  {  Token.TRY  &&  catchNode!=  null);	  	non-compiled	[CE]  ';'  expected	246	None	add
1515	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  tryBody.getType();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  tryBody.getType();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    Node  catchNode  =  tryBody.getType();	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	246	None	add
1516	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  catchNode!=  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    	compilable	  [FE]  IllegalStateException  	247	3	replace
1517	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  catchNode!=  null);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  catchNode!=  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    	compilable	  [FE]  IllegalStateException  	247	3	replace
1518	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY  &&  catchNode!=  null);  [CE]  cannot  find  symbol  tryNode  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY  &&  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.TRY  &&  catchNode!=  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    	non-compiled	[CE]  cannot  find  symbol  tryNode	247	None	replace
1519	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode  ==  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode  ==  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    	compilable	  [FE]  IllegalStateException  	247	3	replace
1520	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode  ==  null);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode  ==  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode  ==  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    	compilable	  [FE]  IllegalStateException  	247	3	replace
1521	[BUG]  [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.TRY  &&  catchNode!=  null);  [CE]  cannot  find  symbol  tries  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.TRY  &&  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries.getType()  ==  Token.TRY  &&  catchNode!=  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    	non-compiled	[CE]  cannot  find  symbol  tries	247	None	replace
1522	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkNotNull(catchNode);	          Preconditions.checkNotNull(tryBody);    	compilable	  [FE]  IllegalStateException  	180	3	replace
1523	[BUG]  [BUGGY]  Preconditions.checkNotNull(catchNode);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkNotNull(catchNode);	          Preconditions.checkNotNull(tryBody);    	compilable	  [FE]  IllegalStateException  	180	3	replace
1524	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=  null);	          Preconditions.checkNotNull(tryBody);    	compilable	  [FE]  IllegalStateException  	180	3	replace
1525	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null);	          Preconditions.checkNotNull(tryBody);    	compilable	  [FE]  IllegalStateException  	180	3	replace
1526	[BUG]  [BUGGY]  Preconditions.checkNotNull(callNode);  [CE]  cannot  find  symbol  callNode  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(callNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkNotNull(callNode);	          Preconditions.checkNotNull(tryBody);    	non-compiled	[CE]  cannot  find  symbol  callNode	180	None	replace
1527	[BUG]  [BUGGY]  Preconditions.checkState(isCatch());  [CE]  cannot  find  symbol  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(isCatch());	          Preconditions.checkNotNull(tryBody);    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
1528	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Preconditions.checkArgument(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.isFunction());    Preconditions.checkArgument(tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	136	3	add
1529	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Preconditions.checkArgument(tryBody.isFunction());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Preconditions.checkArgument(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isFunction());    Preconditions.checkArgument(tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	136	3	add
1530	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Node  block(tryBody.isFunction());  Preconditions.checkArgument(tryBody.isFunction());  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Node  block(tryBody.isFunction());  Preconditions.checkArgument(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isFunction());    Node  block(tryBody.isFunction());  Preconditions.checkArgument(tryBody.isFunction());	  	non-compiled	[CE]  ';'  expected	136	None	add
1531	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Node  catchNode  =  tryBody.isFunction();  Preconditions.checkArgument(tryBody.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Node  catchNode  =  tryBody.isFunction();  Preconditions.checkArgument(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isFunction());    Node  catchNode  =  tryBody.isFunction();  Preconditions.checkArgument(tryBody.isFunction());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	136	None	add
1532	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Node  block  =  tryBody.isFunction();  Preconditions.checkArgument(tryBody.isFunction());  [CE]  incompatible  types  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Node  block  =  tryBody.isFunction();  Preconditions.checkArgument(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isFunction());    Node  block  =  tryBody.isFunction();  Preconditions.checkArgument(tryBody.isFunction());	  	non-compiled	[CE]  incompatible  types	136	None	add
1533	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isFunction());    Node  catchNode  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isFunction());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	136	None	add
1534	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Node  tryBody  =  block(tryBody.isFunction());  Preconditions.checkArgument(tryBody.isFunction());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Node  tryBody  =  block(tryBody.isFunction());  Preconditions.checkArgument(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isFunction());    Node  tryBody  =  block(tryBody.isFunction());  Preconditions.checkArgument(tryBody.isFunction());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	136	None	add
1535	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isFunction());	  	compilable	  [FE]  IllegalArgumentException  	136	3	add
1536	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isFunction());  [FE]  IllegalArgumentException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isFunction());	  	compilable	  [FE]  IllegalArgumentException  	136	3	add
1537	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Node  block  =  tryBody.getFunction();  Preconditions.checkArgument(tryBody.isFunction());  [CE]  cannot  find  symbol  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Node  block  =  tryBody.getFunction();  Preconditions.checkArgument(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isFunction());    Node  block  =  tryBody.getFunction();  Preconditions.checkArgument(tryBody.isFunction());	  	non-compiled	[CE]  cannot  find  symbol	136	None	add
1538	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(false,  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(false,  tryBody.isBlock());	  Preconditions.checkState(false.isBlock());    	compilable	  [FE]  IllegalStateException  	99	3	replace
1539	[BUG]  [BUGGY]  Preconditions.checkState(false,  tryBody.isBlock());  [FE]  IllegalStateException  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(false,  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(false,  tryBody.isBlock());	  Preconditions.checkState(false.isBlock());    	compilable	  [FE]  IllegalStateException  	99	3	replace
1540	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(true,  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(true,  tryBody.isBlock());	  Preconditions.checkState(false.isBlock());    	compilable	  [FE]  IllegalStateException  	99	3	replace
1541	[BUG]  [BUGGY]  Preconditions.checkState(true,  tryBody.isBlock());  [FE]  IllegalStateException  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(true,  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(true,  tryBody.isBlock());	  Preconditions.checkState(false.isBlock());    	compilable	  [FE]  IllegalStateException  	99	3	replace
1542	[BUG]  [BUGGY]  Preconditions.checkState(!false.isBlock());  [CE]  boolean  cannot  be  dereferenced  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!false.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!false.isBlock());	  Preconditions.checkState(false.isBlock());    	non-compiled	[CE]  boolean  cannot  be  dereferenced	99	None	replace
1543	[BUG]  [BUGGY]  Preconditions.checkState(false,  tryNode.isBlock());  [CE]  cannot  find  symbol  tryNode  [FE]                                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(false,  tryNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(false,  tryNode.isBlock());	  Preconditions.checkState(false.isBlock());    	non-compiled	[CE]  cannot  find  symbol  tryNode	99	None	replace
1544	[BUG]  [BUGGY]  Preconditions.checkState(true,  false.isBlock());  [CE]  boolean  cannot  be  dereferenced  [FE]                                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(true,  false.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(true,  false.isBlock());	  Preconditions.checkState(false.isBlock());    	non-compiled	[CE]  boolean  cannot  be  dereferenced	99	None	replace
1545	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isTwin());  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  ||  tryBody.isTwin());	  Preconditions.checkState(tryBody!=    null    ||    tryBody.isTwin());    	non-compiled	[CE]  cannot  find  symbol	209	None	replace
1546	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||!tryBody.isTwin());  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||!tryBody.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  ||!tryBody.isTwin());	  Preconditions.checkState(tryBody!=    null    ||    tryBody.isTwin());    	non-compiled	[CE]  cannot  find  symbol	209	None	replace
1547	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	223	None	add
1548	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	223	None	add
1549	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	223	None	add
1550	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isFunction());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isFunction());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	223	None	add
1551	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isFunction());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isFunction());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	223	None	add
1552	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	223	None	add
1553	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isFunction());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.isFunction());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	223	None	add
1554	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	223	None	add
1555	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	150	None	add
1556	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	150	None	add
1557	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isEmpty());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isEmpty());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	150	None	add
1558	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	150	None	add
1559	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isEmpty());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isEmpty());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	150	None	add
1560	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(lock.isEmpty());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(lock.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(lock.isEmpty());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	150	None	add
1561	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(lock.isEmpty());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(lock.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(lock.isEmpty());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	150	None	add
1562	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  catchNode.getNext();  Preconditions.checkState(tryBody.isEmpty());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  catchNode.getNext();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block  =  catchNode.getNext();  Preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	150	None	add
1563	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	10	3	replace
1564	[BUG]  [BUGGY]  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isTry());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	10	3	replace
1565	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	10	3	replace
1566	[BUG]  [BUGGY]  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	10	3	replace
1567	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	10	3	replace
1568	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	10	3	replace
1569	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  NullPointerException  	10	3	replace
1570	[BUG]  [BUGGY]  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isTry());  [FE]  NullPointerException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getNext();  Preconditions.checkState(block.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  NullPointerException  	10	3	replace
1571	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	10	3	replace
1572	[BUG]  [BUGGY]  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isTry());  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	10	3	replace
1573	[BUG]  [BUGGY]  Node  block(tryBody)  {  Preconditions.checkState(tryBody.isCatch());  [CE]  ';'  expected  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody)  {  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody)  {  Preconditions.checkState(tryBody.isCatch());	  Node    block(catchNode)    {    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  ';'  expected	46	None	replace
1574	[BUG]  [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(tryBody.isEmpty());  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode)  {  Preconditions.checkState(tryBody.isEmpty());	  Node    block(catchNode)    {    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  ';'  expected	46	None	replace
1575	[BUG]  [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(tryBody.isFunction());  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode)  {  Preconditions.checkState(tryBody.isFunction());	  Node    block(catchNode)    {    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  ';'  expected	46	None	replace
1576	[BUG]  [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(tryBody.isAssignmentOp());  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(tryBody.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode)  {  Preconditions.checkState(tryBody.isAssignmentOp());	  Node    block(catchNode)    {    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  ';'  expected	46	None	replace
1577	[BUG]  [BUGGY]  Node  block(peekNode)  {  Preconditions.checkState(tryBody.isCatch());  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(peekNode)  {  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(peekNode)  {  Preconditions.checkState(tryBody.isCatch());	  Node    block(catchNode)    {    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  ';'  expected	46	None	replace
1578	[BUG]  [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(tryBody.isCatch());  }  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(tryBody.isCatch());  }  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode)  {  Preconditions.checkState(tryBody.isCatch());  }	  Node    block(catchNode)    {    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  ';'  expected	46	None	replace
1579	[BUG]  [BUGGY]  Node  block(peekNode).copyInformationFrom(tryBody);  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(peekNode).copyInformationFrom(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(peekNode).copyInformationFrom(tryBody);	  Node    block(peekNode).copyInformationFrom(catchNode);    	non-compiled	[CE]  ';'  expected	130	None	replace
1580	[BUG]  [BUGGY]  Node  block(catchNode).copyInformationFrom(peekNode);  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode).copyInformationFrom(peekNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode).copyInformationFrom(peekNode);	  Node    block(peekNode).copyInformationFrom(catchNode);    	non-compiled	[CE]  ';'  expected	130	None	replace
1581	[BUG]  [BUGGY]  Node  block(peekNode).copyInformationFrom(tryBody,  catchNode);  [CE]  ';'  expected  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(peekNode).copyInformationFrom(tryBody,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(peekNode).copyInformationFrom(tryBody,  catchNode);	  Node    block(peekNode).copyInformationFrom(catchNode);    	non-compiled	[CE]  ';'  expected	130	None	replace
1582	[BUG]  [BUGGY]  Node  block(peekNode).copyInformationFrom(catchNode,  tryBody);  [CE]  ';'  expected  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(peekNode).copyInformationFrom(catchNode,  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(peekNode).copyInformationFrom(catchNode,  tryBody);	  Node    block(peekNode).copyInformationFrom(catchNode);    	non-compiled	[CE]  ';'  expected	130	None	replace
1583	[BUG]  [BUGGY]  Node  block(peekNode).copyInformationFrom(callNode);  [CE]  ';'  expected  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(peekNode).copyInformationFrom(callNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(peekNode).copyInformationFrom(callNode);	  Node    block(peekNode).copyInformationFrom(catchNode);    	non-compiled	[CE]  ';'  expected	130	None	replace
1584	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryBody.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryBody.getType()  ==  Token.NAME);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	23	3	replace
1585	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryBody.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryBody.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryBody.getType()  ==  Token.NAME);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	23	3	replace
1586	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.NAME);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	23	3	replace
1587	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.NAME);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	23	3	replace
1588	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.NAME);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	23	3	replace
1589	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.NAME);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()!=  Token.NAME);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	23	3	replace
1590	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  tryBody.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  tryBody.getType()  ==  Token.NAME);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	23	3	replace
1591	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  tryBody.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  tryBody.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  tryBody.getType()  ==  Token.NAME);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	23	3	replace
1592	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	23	3	replace
1593	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	23	3	replace
1594	[BUG]  [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  tries  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  tries	23	None	replace
1595	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchBody    =    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	110	None	replace
1596	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchBody    =    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	110	None	replace
1597	[BUG]  [BUGGY]  Node  catchBody  =  tryBody.getType();  [CE]  incompatible  types  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchBody  =  tryBody.getType();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchBody  =  tryBody.getType();	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchBody    =    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	110	None	replace
1598	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchBody  =  catchBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchBody  =  catchBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchBody  =  catchBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchBody    =    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	110	None	replace
1599	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  NullPointerException  	107	3	replace
1600	[BUG]  [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  NullPointerException  	107	3	replace
1601	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	107	3	replace
1602	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	107	3	replace
1603	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	107	3	replace
1604	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	107	3	replace
1605	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	107	3	replace
1606	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	107	3	replace
1607	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  NullPointerException  	107	3	replace
1608	[BUG]  [BUGGY]  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [FE]  NullPointerException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getLastChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  NullPointerException  	107	3	replace
1609	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [CE]  cannot  find  symbol  tryNode  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  tryNode	107	None	replace
1610	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  NullPointerException  	107	3	replace
1611	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [FE]  NullPointerException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  NullPointerException  	107	3	replace
1612	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchNode    =    block(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	87	None	replace
1613	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody.isCatch());  Preconditions.checkState(catchNode.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody.isCatch());  Preconditions.checkState(catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody.isCatch());  Preconditions.checkState(catchNode.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchNode    =    block(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	87	None	replace
1614	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody.getCatch());  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody.getCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody.getCatch());  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchNode    =    block(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	87	None	replace
1615	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(peekNode,  catchNode);  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).copyInformationFrom(peekNode,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(peekNode,  catchNode);	  Node    block(tryBody).copyInformationFrom(peekNode);    	non-compiled	[CE]  ';'  expected	190	None	replace
1616	[BUG]  [BUGGY]  Node  block(tryNode).copyInformationFrom(peekNode);  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryNode).copyInformationFrom(peekNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryNode).copyInformationFrom(peekNode);	  Node    block(tryBody).copyInformationFrom(peekNode);    	non-compiled	[CE]  ';'  expected	190	None	replace
1617	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  &&  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	42	3	replace
1618	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  &&  tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  &&  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	42	3	replace
1619	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  catchNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  catchNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	42	3	replace
1620	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  catchNode.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  catchNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  catchNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	42	3	replace
1621	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()!=  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	42	3	replace
1622	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()!=  Token.TRY);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()!=  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	42	3	replace
1623	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	42	3	replace
1624	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	42	3	replace
1625	[BUG]  [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [CE]  cannot  find  symbol  tries  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  cannot  find  symbol  tries	42	None	replace
1626	[BUG]  [BUGGY]  Preconditions.checkState(recordNode.isBlock());  [CE]  cannot  find  symbol  recordNode  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(recordNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(recordNode.isBlock());	  Preconditions.checkState(callNode.isBlock());    	non-compiled	[CE]  cannot  find  symbol  recordNode	97	None	replace
1627	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  &&  tryBody.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  &&  tryBody.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp()  &&  tryBody.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
1628	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryBody.isCatch());  [CE]  cannot  find  symbol  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryBody.isCatch());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
1629	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch()  ||  tryBody.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch()  ||  tryBody.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch()  ||  tryBody.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
1630	[BUG]  [BUGGY]  Preconditions.checkState(tries.isAssignmentOp()  ||  tryBody.isAssignmentOp());  [CE]  cannot  find  symbol  tries  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tries.isAssignmentOp()  ||  tryBody.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries.isAssignmentOp()  ||  tryBody.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol  tries	123	None	replace
1631	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryBody.isDeclarationOp());  [CE]  cannot  find  symbol  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryBody.isDeclarationOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryBody.isDeclarationOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
1632	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Node  tryBody  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Node  tryBody  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isEmpty());    Node  tryBody  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	150	None	add
1633	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  preconditions.checkState(tryBody.isEmpty());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	150	None	add
1634	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	150	3	add
1635	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	150	3	add
1636	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());        Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	85	3	add
1637	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	85	3	add
1638	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());        Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	85	3	add
1639	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	85	3	add
1640	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());        Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	85	3	add
1641	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	85	3	add
1642	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());        Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());Preconditions.checkState(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	85	3	add
1643	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());Preconditions.checkState(tryBody.isCatch());  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());Preconditions.checkState(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	85	3	add
1644	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Preconditions.checkState(tryBody.isCatch());    Node  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());	  	non-compiled	[CE]  ';'  expected	85	None	add
1645	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody!=  null  &&  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody!=  null  &&  tryBody.isEmpty());	  Preconditions.checkArgument(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	4	3	replace
1646	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody!=  null  &&  tryBody.isEmpty());  [FE]  IllegalStateException  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody!=  null  &&  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody!=  null  &&  tryBody.isEmpty());	  Preconditions.checkArgument(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	4	3	replace
1647	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkNotNull(tryBody.isEmpty());	  Preconditions.checkArgument(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	4	3	replace
1648	[BUG]  [BUGGY]  Preconditions.checkNotNull(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]      IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkNotNull(tryBody.isEmpty());	  Preconditions.checkArgument(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	4	3	replace
1649	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkArgument(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	4	3	replace
1650	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.EXPR_RESULT);  [FE]  IllegalStateException  [FE]        IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkArgument(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	4	3	replace
1651	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isCatch());    Node  tryBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	90	None	add
1652	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isCatch());    Node  tryBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	90	None	add
1653	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  tryBody.getParent();  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  tryBody.getParent();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isCatch());    Node  tryBody  =  tryBody.getParent();	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	90	None	add
1654	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	101	3	add
1655	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	101	3	add
1656	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	101	3	add
1657	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	101	3	add
1658	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getParent();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	101	3	add
1659	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getParent();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	101	3	add
1660	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	101	3	add
1661	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	101	3	add
1662	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	101	3	add
1663	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	101	3	add
1664	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	101	3	add
1665	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	101	3	add
1666	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getParent().isNode());  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getParent().isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  tryBody.getParent().isNode());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
1667	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Preconditions.checkState(triedNode.isCatch());  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Preconditions.checkState(triedNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node    blockNode    =    tryBody.copyInformationFrom(catchNode);    Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Preconditions.checkState(triedNode.isCatch());	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	248	None	add
1668	[BUG]  [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  [CE]  cannot  find  symbol  tries  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    ==    Token.CATCH;    	non-compiled	[CE]  cannot  find  symbol  tries	253	None	replace
1669	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  >>  Token.CATCH;  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  >>  Token.CATCH;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  >>  Token.CATCH;	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    ==    Token.CATCH;    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	253	None	replace
1670	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	236	None	add
1671	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  tryBody.getFirstChild();  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    Node  tryBody  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	236	None	add
1672	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	236	None	add
1673	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  preconditions.checkState(tryBody.isCatch());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  preconditions.checkState(tryBody.isCatch());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	236	None	add
1674	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isClass());  Preconditions.checkState(tryBody.isTry());  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isClass());  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isClass());  Preconditions.checkState(tryBody.isTry());	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
1675	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isType());  Preconditions.checkState(tryBody.isTry());  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isType());  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isType());  Preconditions.checkState(tryBody.isTry());	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
1676	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Node  block(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Node  block(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Preconditions.checkState(tryBody.isTry());    Node  block(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());	  	non-compiled	[CE]  ';'  expected	5	None	add
1677	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isVar());  Preconditions.checkState(tryBody.isVar());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isTry());        Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isVar());  Preconditions.checkState(tryBody.isVar());	  	compilable	  [FE]  IllegalStateException  	5	3	add
1678	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isVar());  Preconditions.checkState(tryBody.isVar());  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isVar());  Preconditions.checkState(tryBody.isVar());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isVar());  Preconditions.checkState(tryBody.isVar());	  	compilable	  [FE]  IllegalStateException  	5	3	add
1679	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isTry());        Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	5	3	add
1680	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	5	3	add
1681	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  Node  tryBody  =  tryBody.getParent();  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  Node  tryBody  =  tryBody.getParent();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isEmpty());    Node  tryBody  =  tryBody.getParent();	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	154	None	add
1682	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	154	3	add
1683	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	154	3	add
1684	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isCatch());    Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	81	None	add
1685	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Node  tryBody  =  null  &&  tryBody.isCatch();  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Node  tryBody  =  null  &&  tryBody.isCatch();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isCatch());    Node  tryBody  =  null  &&  tryBody.isCatch();	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	81	None	add
1686	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Node  tryBody  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Node  tryBody  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isCatch());    Node  tryBody  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	81	None	add
1687	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Node  tryBody  =  null  &&  tryBody.isCatch();  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Node  tryBody  =  null  &&  tryBody.isCatch();  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isCatch());    Node  tryBody  =  null  &&  tryBody.isCatch();  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	81	None	add
1688	[BUG]  [BUGGY]  Node  block(tryBody.getType())  ==  Token.TRY;  Preconditions.checkState(block(tryBody.getType())  ==  Token.TRY);  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType())  ==  Token.TRY;  Preconditions.checkState(block(tryBody.getType())  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType())  ==  Token.TRY;  Preconditions.checkState(block(tryBody.getType())  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	65	None	replace
1689	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	65	None	replace
1690	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isState());  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isState());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isState());	  Preconditions.checkArgument(tryBody.isFunction());    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
1691	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.FOR);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.getType()  ==  Token.FOR);	  Preconditions.checkArgument(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	137	3	replace
1692	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.FOR);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.FOR);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()  ==  Token.FOR);	  Preconditions.checkArgument(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	137	3	replace
1693	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	79	None	add
1694	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  block(tryBody);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  block(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    Node  tryBody  =  block(tryBody);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	79	None	add
1695	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  block(tryBody.getType(),  Token.CATCH);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  block(tryBody.getType(),  Token.CATCH);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    Node  tryBody  =  block(tryBody.getType(),  Token.CATCH);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	79	None	add
1696	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    Node  tryBody  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	79	None	add
1697	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	79	None	add
1698	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  blockNode  =  tryBody.copyInformationFrom(tryBody);	  Node    blockNode    =    tryBody.copyInformationFrom(catchNode);    	compilable	  [FE]  IllegalStateException  	249	3	replace
1699	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(tryBody);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.copyInformationFrom(tryBody);	  Node    blockNode    =    tryBody.copyInformationFrom(catchNode);    	compilable	  [FE]  IllegalStateException  	249	3	replace
1700	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(triedNode);  [CE]  cannot  find  symbol  triedNode  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(triedNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.copyInformationFrom(triedNode);	  Node    blockNode    =    tryBody.copyInformationFrom(catchNode);    	non-compiled	[CE]  cannot  find  symbol  triedNode	249	None	replace
1701	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(peekNode);  [CE]  cannot  find  symbol  peekNode  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(peekNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.copyInformationFrom(peekNode);	  Node    blockNode    =    tryBody.copyInformationFrom(catchNode);    	non-compiled	[CE]  cannot  find  symbol  peekNode	249	None	replace
1702	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(testNode);  [CE]  cannot  find  symbol  testNode  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(testNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.copyInformationFrom(testNode);	  Node    blockNode    =    tryBody.copyInformationFrom(catchNode);    	non-compiled	[CE]  cannot  find  symbol  testNode	249	None	replace
1703	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.FOR);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);	  	compilable	  [FE]  IllegalStateException  	138	3	add
1704	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.FOR);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);	  	compilable	  [FE]  IllegalStateException  	138	3	add
1705	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.FOR);    Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	138	None	add
1706	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction(),  tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isFunction(),  tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    stopBody    =    tryBody.isFunction();    Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	58	3	replace
1707	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction(),  tryBody.isFunction());  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction(),  tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction(),  tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    stopBody    =    tryBody.isFunction();    Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	58	3	replace
1708	[BUG]  [BUGGY]  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);	  Node    block(catchNode)    {    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	49	None	replace
1709	[BUG]  [BUGGY]  Node  block(tryNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  Node    block(catchNode)    {    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	49	None	replace
1710	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.isCatch());  Node  block(tryBody.isCatch());  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.isCatch());  Node  block(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.isCatch());  Node  block(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  ';'  expected	88	None	replace
1711	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    catchNode);    Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	39	None	add
1712	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  tryBody.getFirstChild();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    catchNode);    Node  catchNode  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	39	None	add
1713	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	62	None	add
1714	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	62	3	add
1715	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	62	3	add
1716	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	62	3	add
1717	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	62	3	add
1718	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	62	3	add
1719	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	62	3	add
1720	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	62	3	add
1721	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	62	3	add
1722	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	62	3	add
1723	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	62	3	add
1724	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	62	3	add
1725	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	62	3	add
1726	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	83	None	add
1727	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  block(tryBody);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  block(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    Node  tryBody  =  block(tryBody);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	83	None	add
1728	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    Node  tryBody  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	83	None	add
1729	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  ==  null  &&  tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  ==  null  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    Node  block(tryBody)  ==  null  &&  tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	83	None	add
1730	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	75	None	add
1731	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Node  catchNode  =  block(catchNode).copyInformationFrom(getBody());  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Node  catchNode  =  block(catchNode).copyInformationFrom(getBody());  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    Node  catchNode  =  block(catchNode).copyInformationFrom(getBody());  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	75	None	add
1732	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Node  catchNode  =  block(catchNode).copyInformationFrom(tryBody);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Node  catchNode  =  block(catchNode).copyInformationFrom(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    Node  catchNode  =  block(catchNode).copyInformationFrom(tryBody);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	75	None	add
1733	[BUG]  [BUGGY]  Node  block  =  tryBody.isEmpty();  [CE]  incompatible  types  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.isEmpty();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.isEmpty();	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.isEmpty();    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  incompatible  types	149	None	replace
1734	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.isEmpty();  [CE]  incompatible  types  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.isEmpty();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.isEmpty();	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.isEmpty();    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  incompatible  types	149	None	replace
1735	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty(),  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isEmpty(),  tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.isEmpty();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	149	3	replace
1736	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty(),  tryBody.isEmpty());  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty(),  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty(),  tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.isEmpty();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	149	3	replace
1737	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  catchNode  =  tryBody.getType();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  catchNode  =  tryBody.getType();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.CATCH);    Node  catchNode  =  tryBody.getType();	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	37	None	add
1738	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  catchNode  =  tryBody.getType()  &  Token.CATCH;  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  catchNode  =  tryBody.getType()  &  Token.CATCH;  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.CATCH);    Node  catchNode  =  tryBody.getType()  &  Token.CATCH;  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	37	None	add
1739	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  catchNode  =  block(tryBody.getType());  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  catchNode  =  block(tryBody.getType());  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.CATCH);    Node  catchNode  =  block(tryBody.getType());  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	37	None	add
1740	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY,  catchNode);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	243	3	replace
1741	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY,  catchNode);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY,  catchNode);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	243	3	replace
1742	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody)    {    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	227	None	replace
1743	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(batchNode.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(batchNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(batchNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody)    {    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	227	None	replace
1744	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  catchNode  =  block(tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  catchNode  =  block(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());  Node  catchNode  =  block(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchNode    =    block(tryBody.isCatch());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	159	None	replace
1745	[BUG]  [BUGGY]  Preconditions.checkNotNull(tryBody);  Node  catchNode  =  block(tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody);  Node  catchNode  =  block(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkNotNull(tryBody);  Node  catchNode  =  block(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchNode    =    block(tryBody.isCatch());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	159	None	replace
1746	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Node  catchNode  =  block(tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Node  catchNode  =  block(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isCatch());  Node  catchNode  =  block(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchNode    =    block(tryBody.isCatch());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	159	None	replace
1747	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	106	3	add
1748	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	106	3	add
1749	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  tryBody.getFirstChild();  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  tryBody  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	106	None	add
1750	[BUG]  [BUGGY]  Node  block  =  tryBody.getType()  ==  Token.CATCH;  [CE]  incompatible  types  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getType()  ==  Token.CATCH;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getType()  ==  Token.CATCH;	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getType()    ==    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	254	None	replace
1751	[BUG]  [BUGGY]  Node  tryBody  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getType()    ==    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	254	None	replace
1752	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType()  ==  Token.CATCH;  [CE]  incompatible  types  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType()  ==  Token.CATCH;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType()  ==  Token.CATCH;	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getType()    ==    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	254	None	replace
1753	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getType()  ==  Token.CATCH;  [CE]  cannot  find  symbol  tryNode  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getType()  ==  Token.CATCH;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getType()  ==  Token.CATCH;	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getType()    ==    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  tryNode	254	None	replace
1754	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch()  &&  tryCatchNode.isAssignmentOp());  [CE]  cannot  find  symbol  tryCatchNode  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch()  &&  tryCatchNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch()  &&  tryCatchNode.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    &&    tryCatchNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol  tryCatchNode	125	None	replace
1755	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  &&  tryCatchNode.isDeclarationOp());  [CE]  cannot  find  symbol  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  &&  tryCatchNode.isDeclarationOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp()  &&  tryCatchNode.isDeclarationOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    &&    tryCatchNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
1756	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody  ==  null);	          Preconditions.checkNotNull(tryBody);    	compilable	  [FE]  IllegalStateException  	180	3	replace
1757	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null);	          Preconditions.checkNotNull(tryBody);    	compilable	  [FE]  IllegalStateException  	180	3	replace
1758	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkNotNull(tryBody,  catchNode);	          Preconditions.checkNotNull(tryBody);    	compilable	  [FE]  IllegalStateException  	180	3	replace
1759	[BUG]  [BUGGY]  Preconditions.checkNotNull(tryBody,  catchNode);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkNotNull(tryBody,  catchNode);	          Preconditions.checkNotNull(tryBody);    	compilable	  [FE]  IllegalStateException  	180	3	replace
1760	[BUG]  [BUGGY]  Preconditions.checkNotNull(tryNode);  [CE]  cannot  find  symbol  tryNode  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkNotNull(tryNode);	          Preconditions.checkNotNull(tryBody);    	non-compiled	[CE]  cannot  find  symbol  tryNode	180	None	replace
1761	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  catchNode  =  tryBody.getParent();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  catchNode  =  tryBody.getParent();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());  Node  catchNode  =  tryBody.getParent();	  Preconditions.checkState(tryBody.isTry());    Node    catchNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	250	None	replace
1762	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.copyInformationFrom(tryBody);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.copyInformationFrom(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.copyInformationFrom(tryBody);	  Preconditions.checkState(tryBody.isCatch());    Node    tryBody    =    block(tryBody).copyInformationFrom(tryBody);    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	160	None	replace
1763	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.copyInformationFrom(tryBody);  Preconditions.checkState(callNode.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.copyInformationFrom(tryBody);  Preconditions.checkState(callNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.copyInformationFrom(tryBody);  Preconditions.checkState(callNode.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    tryBody    =    block(tryBody).copyInformationFrom(tryBody);    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	160	None	replace
1764	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(callNode.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(callNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(callNode.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    tryBody    =    block(tryBody).copyInformationFrom(tryBody);    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	160	None	replace
1765	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryBody.isFunction());  [CE]  cannot  find  symbol  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryBody.isFunction());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
1766	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryBody.isReferenceOp());  [CE]  cannot  find  symbol  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryBody.isReferenceOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryBody.isReferenceOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
1767	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryBody.isAssignmentOp(),  catchNode);  [CE]  cannot  find  symbol  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryBody.isAssignmentOp(),  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryBody.isAssignmentOp(),  catchNode);	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
1768	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	107	3	replace
1769	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	107	3	replace
1770	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.clone();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.clone();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.clone();	  Preconditions.checkState(tryBody.isEmpty());    Node    block(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	146	None	replace
1771	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.getType()  ==  Token.NAME);	  Preconditions.checkArgument(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	220	3	replace
1772	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()  ==  Token.NAME);	  Preconditions.checkArgument(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	220	3	replace
1773	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	169	None	add
1774	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	169	3	add
1775	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	169	3	add
1776	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getLastChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	169	None	add
1777	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.getParent().isNode());  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.getParent().isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  ||  tryBody.getParent().isNode());	  Preconditions.checkState(tryBody!=    null    ||    tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol	206	None	replace
1778	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(currNode);  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).copyInformationFrom(currNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(currNode);	  Node    block(tryBody).copyInformationFrom(peekNode);    	non-compiled	[CE]  ';'  expected	190	None	replace
1779	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(patchNode);  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).copyInformationFrom(patchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(patchNode);	  Node    block(tryBody).copyInformationFrom(peekNode);    	non-compiled	[CE]  ';'  expected	190	None	replace
1780	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	77	None	add
1781	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	77	None	add
1782	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Node  tryBody  =  null  ||  tryBody.isBlock();  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Node  tryBody  =  null  ||  tryBody.isBlock();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    Node  tryBody  =  null  ||  tryBody.isBlock();	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	77	None	add
1783	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Node  tryBody  =  null  ||  tryBody.isBlock();  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Node  tryBody  =  null  ||  tryBody.isBlock();  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    Node  tryBody  =  null  ||  tryBody.isBlock();  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	77	None	add
1784	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	77	None	add
1785	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNode()  ||  tryBody.isNode(),  catchNode);  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNode()  ||  tryBody.isNode(),  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNode()  ||  tryBody.isNode(),  catchNode);	  Preconditions.checkState(tryBody.isNode()    ||    tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
1786	[BUG]  [BUGGY]  Preconditions.checkState(truncateCatchNode.isBlock());  [CE]  cannot  find  symbol  truncateCatchNode  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(truncateCatchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(truncateCatchNode.isBlock());	  Preconditions.checkState(callNode.isBlock());    	non-compiled	[CE]  cannot  find  symbol  truncateCatchNode	97	None	replace
1787	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  [CE]  cannot  find  symbol  tryNode  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  tryNode	151	None	replace
1788	[BUG]  [BUGGY]  Node  tryBody  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	151	None	replace
1789	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isAssignmentOp(),  catchNode);  [CE]  cannot  find  symbol  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isAssignmentOp(),  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isAssignmentOp(),  catchNode);	  Preconditions.checkState(!tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
1790	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isAssignmentOp()  &&  tryBody.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isAssignmentOp()  &&  tryBody.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isAssignmentOp()  &&  tryBody.isAssignmentOp());	  Preconditions.checkState(!tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
1791	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isAssignmentOp()  &&  tryNode.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isAssignmentOp()  &&  tryNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isAssignmentOp()  &&  tryNode.isAssignmentOp());	  Preconditions.checkState(!tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
1792	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.THIS);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.THIS);	  Preconditions.checkState(tryBody.getType()    ==    Token.FOR);    	compilable	  [FE]  IllegalStateException  	139	3	replace
1793	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.THIS);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.THIS);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.THIS);	  Preconditions.checkState(tryBody.getType()    ==    Token.FOR);    	compilable	  [FE]  IllegalStateException  	139	3	replace
1794	[BUG]  [BUGGY]  Node  block(tryBody.isTry());  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  ';'  expected	7	None	replace
1795	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryNode.isAssignmentOp());  [CE]  cannot  find  symbol  tryNode  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryNode.isAssignmentOp());	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol  tryNode	124	None	replace
1796	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.isDeclaration());  [CE]  cannot  find  symbol  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.isDeclaration());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.isDeclaration());	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
1797	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.isFunction();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.isFunction();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.isFunction();	  Preconditions.checkState(tryBody.isFunction());    Node    catchNode    =    tryBody.isFunction();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	56	None	replace
1798	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.isFunction());  [CE]  cannot  find  symbol  tryNode  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    catchNode    =    tryBody.isFunction();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  cannot  find  symbol  tryNode	56	None	replace
1799	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.THIS);  Node  block(tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.THIS);  Node  block(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.THIS);  Node  block(tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	103	None	replace
1800	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.isEmpty());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  [CE]  cannot  find  symbol  tryNode  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.isEmpty());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.isEmpty());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  tryNode	155	None	replace
1801	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null);  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=  null);  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	155	3	replace
1802	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null);  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isEmpty());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null);  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null);  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	155	3	replace
1803	[BUG]  [BUGGY]  Preconditions.checkState(testNode.isCatch());  [CE]  cannot  find  symbol  testNode  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(testNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(testNode.isCatch());	  Preconditions.checkState(tryNode.isCatch());    	non-compiled	[CE]  cannot  find  symbol  testNode	187	None	replace
1804	[BUG]  [BUGGY]  Preconditions.checkState(tries.isCatch());  [CE]  cannot  find  symbol  tries  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tries.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries.isCatch());	  Preconditions.checkState(tryNode.isCatch());    	non-compiled	[CE]  cannot  find  symbol  tries	187	None	replace
1805	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Node  getBody  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.isFunction());    Node  getBody  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isFunction());	  	compilable	  [FE]  IllegalArgumentException  	136	3	add
1806	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Node  getBody  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isFunction());  [FE]  IllegalArgumentException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Node  getBody  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isFunction());    Node  getBody  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isFunction());	  	compilable	  [FE]  IllegalArgumentException  	136	3	add
1807	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isFunction());    Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isFunction());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	136	None	add
1808	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Node  blockNode  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.isFunction());    Node  blockNode  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isFunction());	  	compilable	  [FE]  IllegalArgumentException  	136	3	add
1809	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Node  blockNode  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isFunction());  [FE]  IllegalArgumentException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Node  blockNode  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isFunction());    Node  blockNode  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isFunction());	  	compilable	  [FE]  IllegalArgumentException  	136	3	add
1810	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    blockNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	171	None	add
1811	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    blockNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  tryBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	171	None	add
1812	[BUG]  [BUGGY]  Node  catchNode  =  findCatch(tryBody);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  findCatch(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  findCatch(tryBody);	          Node    catchNode    =    getCatch(tryBody);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	181	None	replace
1813	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getCatch();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getCatch();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getCatch();	          Node    catchNode    =    getCatch(tryBody);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	181	None	replace
1814	[BUG]  [BUGGY]  Node  catchNode  =  getCatch(triesBody);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  getCatch(triesBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  getCatch(triesBody);	          Node    catchNode    =    getCatch(tryBody);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	181	None	replace
1815	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.isCatch());	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryNode.isCatch());    	compilable	  [FE]  IllegalStateException  	191	3	replace
1816	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.isCatch());  [FE]  IllegalStateException  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.isCatch());	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryNode.isCatch());    	compilable	  [FE]  IllegalStateException  	191	3	replace
1817	[BUG]  [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.TRY  ||  tryNode.isCatch());  [CE]  cannot  find  symbol  tries  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.TRY  ||  tryNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries.getType()  ==  Token.TRY  ||  tryNode.isCatch());	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryNode.isCatch());    	non-compiled	[CE]  cannot  find  symbol  tries	191	None	replace
1818	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isCatch());    Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	73	None	add
1819	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  tryBody  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  tryBody  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isCatch());    Node  tryBody  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	73	None	add
1820	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isCatch());    Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	73	None	add
1821	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  tryBody  =  block(tryBody).copyInformationFrom(getCatchNode());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  tryBody  =  block(tryBody).copyInformationFrom(getCatchNode());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isCatch());    Node  tryBody  =  block(tryBody).copyInformationFrom(getCatchNode());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	73	None	add
1822	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  tryBody  =  null  &&  tryBody.isCatch();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  tryBody  =  null  &&  tryBody.isCatch();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isCatch());    Node  tryBody  =  null  &&  tryBody.isCatch();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	73	None	add
1823	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  tryBody  =  null  &&  tryBody.isCatch();  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  tryBody  =  null  &&  tryBody.isCatch();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isCatch());    Node  tryBody  =  null  &&  tryBody.isCatch();	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	73	None	add
1824	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp(),  tryBody);  [CE]  cannot  find  symbol  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp(),  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp(),  tryBody);	  Preconditions.checkState(tryBody.isAssignmentOp(),    catchNode);    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
1825	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp(),  catchNode,  tryBody);  [CE]  cannot  find  symbol  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp(),  catchNode,  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp(),  catchNode,  tryBody);	  Preconditions.checkState(tryBody.isAssignmentOp(),    catchNode);    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
1826	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  tryBody  =  block(tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  tryBody  =  block(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());  Node  tryBody  =  block(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    tryBody    =    block(tryBody.isCatch());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	161	None	replace
1827	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTwin());  Node  tryBody  =  block(tryBody.isCatch());  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTwin());  Node  tryBody  =  block(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTwin());  Node  tryBody  =  block(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    tryBody    =    block(tryBody.isCatch());    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
1828	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY)  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY)  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.TRY)	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY)    	non-compiled	[CE]  ';'  expected	192	None	replace
1829	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH)!=  ';'  [CE]  not  a  statement  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH)!=  ';'  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH)!=  ';'	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY)    	non-compiled	[CE]  not  a  statement	192	None	replace
1830	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	170	3	replace
1831	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	170	3	replace
1832	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  [CE]  cannot  find  symbol  tryNode  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  cannot  find  symbol  tryNode	170	None	replace
1833	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  blockNode  =  tryBody.getFirstChild();	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	170	3	replace
1834	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.getFirstChild();  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.getFirstChild();	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	170	3	replace
1835	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(!tryBody.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(!tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isFunction());    Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(!tryBody.isFunction());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	132	None	add
1836	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  catchNode  =  tryBody.getFunction();  Preconditions.checkState(!tryBody.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  catchNode  =  tryBody.getFunction();  Preconditions.checkState(!tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isFunction());    Node  catchNode  =  tryBody.getFunction();  Preconditions.checkState(!tryBody.isFunction());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	132	None	add
1837	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  tryBody  =  block(tryBody);  Preconditions.checkState(!tryBody.isFunction());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  tryBody  =  block(tryBody);  Preconditions.checkState(!tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isFunction());    Node  tryBody  =  block(tryBody);  Preconditions.checkState(!tryBody.isFunction());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	132	None	add
1838	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  catchNode  =  tryBody.getParent();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  catchNode  =  tryBody.getParent();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isFunction());    Node  catchNode  =  tryBody.getParent();	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	132	None	add
1839	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(!tryBody.isFunction());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(!tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isFunction());    Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(!tryBody.isFunction());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	132	None	add
1840	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  tryBody  =  block(tryBody).copyInformationFrom(trimNode);  Preconditions.checkState(!tryBody.isFunction());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  tryBody  =  block(tryBody).copyInformationFrom(trimNode);  Preconditions.checkState(!tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isFunction());    Node  tryBody  =  block(tryBody).copyInformationFrom(trimNode);  Preconditions.checkState(!tryBody.isFunction());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	132	None	add
1841	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  blockNode  =  block(catchNode);  Preconditions.checkState(catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(catchNode.isBlock());    Node  blockNode  =  block(catchNode);  Preconditions.checkState(catchNode.isBlock());	  	compilable	  [FE]  IllegalStateException  	95	3	add
1842	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  blockNode  =  block(catchNode);  Preconditions.checkState(catchNode.isBlock());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  blockNode  =  block(catchNode);  Preconditions.checkState(catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isBlock());    Node  blockNode  =  block(catchNode);  Preconditions.checkState(catchNode.isBlock());	  	compilable	  [FE]  IllegalStateException  	95	3	add
1843	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  catchNode  =  block(catchNode).copyInformationFrom(tryBody);  Preconditions.checkState(catchNode.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  catchNode  =  block(catchNode).copyInformationFrom(tryBody);  Preconditions.checkState(catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isBlock());    Node  catchNode  =  block(catchNode).copyInformationFrom(tryBody);  Preconditions.checkState(catchNode.isBlock());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	95	None	add
1844	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  catchNode  =  block(catchNode);  Preconditions.checkState(catchNode.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  catchNode  =  block(catchNode);  Preconditions.checkState(catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isBlock());    Node  catchNode  =  block(catchNode);  Preconditions.checkState(catchNode.isBlock());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	95	None	add
1845	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  blockNode  =  block(catchNode).copyInformationFrom(catchNode);  Preconditions.checkState(catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(catchNode.isBlock());    Node  blockNode  =  block(catchNode).copyInformationFrom(catchNode);  Preconditions.checkState(catchNode.isBlock());	  	compilable	  [FE]  IllegalStateException  	95	3	add
1846	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  blockNode  =  block(catchNode).copyInformationFrom(catchNode);  Preconditions.checkState(catchNode.isBlock());  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  blockNode  =  block(catchNode).copyInformationFrom(catchNode);  Preconditions.checkState(catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isBlock());    Node  blockNode  =  block(catchNode).copyInformationFrom(catchNode);  Preconditions.checkState(catchNode.isBlock());	  	compilable	  [FE]  IllegalStateException  	95	3	add
1847	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	198	None	add
1848	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  tryBody  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  tryBody  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    Node  tryBody  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	198	None	add
1849	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  tryBody  =  block(tryBody);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  tryBody  =  block(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    Node  tryBody  =  block(tryBody);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	198	None	add
1850	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	198	None	add
1851	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  tryBody  =  block(tryBody).copyInformationFrom(trimNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  tryBody  =  block(tryBody).copyInformationFrom(trimNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    Node  tryBody  =  block(tryBody).copyInformationFrom(trimNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	198	None	add
1852	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  tryBody  =  null  &&  tryBody.isEmpty();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  tryBody  =  null  &&  tryBody.isEmpty();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    Node  tryBody  =  null  &&  tryBody.isEmpty();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	198	None	add
1853	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(catchNode,  tryBody);  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).copyInformationFrom(catchNode,  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(catchNode,  tryBody);	  Node    block(tryBody).copyInformationFrom(catchNode,    catchNode);    	non-compiled	[CE]  ';'  expected	127	None	replace
1854	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(targetNode,  catchNode);  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).copyInformationFrom(targetNode,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(targetNode,  catchNode);	  Node    block(tryBody).copyInformationFrom(catchNode,    catchNode);    	non-compiled	[CE]  ';'  expected	127	None	replace
1855	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(null,  catchNode);  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).copyInformationFrom(null,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(null,  catchNode);	  Node    block(tryBody).copyInformationFrom(catchNode,    catchNode);    	non-compiled	[CE]  ';'  expected	127	None	replace
1856	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isEmpty());	  	compilable	  [FE]  IllegalArgumentException  	3	3	add
1857	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isEmpty());  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isEmpty());	  	compilable	  [FE]  IllegalArgumentException  	3	3	add
1858	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isEmpty());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isEmpty());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isEmpty());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isEmpty());    Node  catchNode  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isEmpty());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	3	None	add
1859	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  ||  tryNode.isCatch());  [CE]  cannot  find  symbol  tryNode  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  ||  tryNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  ||  tryNode.isCatch());	  Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  cannot  find  symbol  tryNode	245	None	replace
1860	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY)  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY)  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY)	  Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	245	None	replace
1861	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  tryNode);  [CE]  cannot  find  symbol  tryNode  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  tryNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  tryNode);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY,    catchNode);    	non-compiled	[CE]  cannot  find  symbol  tryNode	19	None	replace
1862	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  catchNode  =  tryBody.getFunction();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  catchNode  =  tryBody.getFunction();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());  Node  catchNode  =  tryBody.getFunction();	  Preconditions.checkState(tryBody.isFunction());    Node    catchNode    =    tryBody.getFunction();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	182	None	replace
1863	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getChildCount();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getChildCount();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getChildCount();	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	212	None	replace
1864	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getNode();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getNode();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getNode();	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	212	None	replace
1865	[BUG]  [BUGGY]  Node  catchNode  =  getCatchNode(tryBody,  catchNode);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  getCatchNode(tryBody,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  getCatchNode(tryBody,  catchNode);	          Node    catchNode    =    getCatchNode();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	233	None	replace
1866	[BUG]  [BUGGY]  Node  catchNode  =  getCatchNodeFrom(tryBody);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  getCatchNodeFrom(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  getCatchNodeFrom(tryBody);	          Node    catchNode    =    getCatchNode();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	233	None	replace
1867	[BUG]  [BUGGY]  Node  catchNode  =  getCatchNode().getParent();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  getCatchNode().getParent();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  getCatchNode().getParent();	          Node    catchNode    =    getCatchNode();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	233	None	replace
1868	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	217	None	add
1869	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	217	None	add
1870	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	217	None	add
1871	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	20	None	add
1872	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	20	3	add
1873	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	20	3	add
1874	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	20	None	add
1875	[BUG]  [BUGGY]  Node  block(peekNode).copyInformationFrom(triesBody);  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(peekNode).copyInformationFrom(triesBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(peekNode).copyInformationFrom(triesBody);	  Node    block(peekNode).copyInformationFrom(catchNode);    	non-compiled	[CE]  ';'  expected	130	None	replace
1876	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	211	3	replace
1877	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	211	3	replace
1878	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  [CE]  cannot  find  symbol  tryNode  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  tryNode	211	None	replace
1879	[BUG]  [BUGGY]  Node  block(tryBody.getParent());  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getParent());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getParent());	  Preconditions.checkState(tryBody.isFunction());    Node    block(tryBody.isFunction());    	non-compiled	[CE]  ';'  expected	59	None	replace
1880	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block(tryBody.isFunction());  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());  Node  block(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block(tryBody.isFunction());    	non-compiled	[CE]  ';'  expected	59	None	replace
1881	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isAssignmentOp()  :  tryBody);  [CE]  ')'  expected  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isAssignmentOp()  :  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  tryBody.isAssignmentOp()  :  tryBody);	  Preconditions.checkState(tryBody!=    null?    tryBody.isAssignmentOp()    :    tryBody);    	non-compiled	[CE]  ')'  expected	164	None	replace
1882	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNode(),  catchNode,  tryBody);  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNode(),  catchNode,  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNode(),  catchNode,  tryBody);	  Preconditions.checkState(tryBody.isNode(),    catchNode);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
1883	[BUG]  [BUGGY]  Preconditions.checkState(patchNode.isNode(),  tryBody);  [CE]  cannot  find  symbol  patchNode  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(patchNode.isNode(),  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(patchNode.isNode(),  tryBody);	  Preconditions.checkState(tryBody.isNode(),    catchNode);    	non-compiled	[CE]  cannot  find  symbol  patchNode	28	None	replace
1884	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp(),  tryBody.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp(),  tryBody.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp(),  tryBody.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp(),    catchNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
1885	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTwin()  ||  tryBody.isEmpty());  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTwin()  ||  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTwin()  ||  tryBody.isEmpty());	  Preconditions.checkState(tryBody.isTwin()    ||    tryBody.isTwin());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
1886	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTwin()  ||  tryBody.isTwin(),  catchNode);  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTwin()  ||  tryBody.isTwin(),  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTwin()  ||  tryBody.isTwin(),  catchNode);	  Preconditions.checkState(tryBody.isTwin()    ||    tryBody.isTwin());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
1887	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);	  	compilable	  [FE]  IllegalStateException  	22	3	add
1888	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);	  	compilable	  [FE]  IllegalStateException  	22	3	add
1889	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	22	None	add
1890	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Node  block(tryBody.getType()  ==  Token.TRY)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Node  block(tryBody.getType()  ==  Token.TRY)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    Node  block(tryBody.getType()  ==  Token.TRY)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);	  	non-compiled	[CE]  ';'  expected	22	None	add
1891	[BUG]  [BUGGY]  Node  stopBody  =  tryBody.isTry();  [CE]  incompatible  types  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.isTry();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  stopBody  =  tryBody.isTry();	  Preconditions.checkState(tryBody.isTry());    Node    stopBody    =    tryBody.isTry();    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  incompatible  types	11	None	replace
1892	[BUG]  [BUGGY]  Node  stopBody  =  tryBody.getBody();  Preconditions.checkState(tryBody.isTry());  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.getBody();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  stopBody  =  tryBody.getBody();  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    stopBody    =    tryBody.isTry();    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
1893	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.isTry());  Node  stopBody  =  tryBody.isTry();  [CE]  cannot  find  symbol  tryNode  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.isTry());  Node  stopBody  =  tryBody.isTry();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.isTry());  Node  stopBody  =  tryBody.isTry();	  Preconditions.checkState(tryBody.isTry());    Node    stopBody    =    tryBody.isTry();    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  cannot  find  symbol  tryNode	11	None	replace
1894	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  [CE]  cannot  find  symbol  tryNode  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  cannot  find  symbol  tryNode	13	None	replace
1895	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  tryBody.getFirstChild();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  tryBody.getFirstChild();	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	13	None	replace
1896	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stop  =  tryBody.getFirstChild();  Preconditions.checkState(stop.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  stop  =  tryBody.getFirstChild();  Preconditions.checkState(stop.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	13	3	replace
1897	[BUG]  [BUGGY]  Node  stop  =  tryBody.getFirstChild();  Preconditions.checkState(stop.isTry());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stop  =  tryBody.getFirstChild();  Preconditions.checkState(stop.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  stop  =  tryBody.getFirstChild();  Preconditions.checkState(stop.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	13	3	replace
1898	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block(tryBody.getFirstChild());  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block(tryBody.getFirstChild());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());  Node  block(tryBody.getFirstChild());	  Preconditions.checkState(tryBody.isEmpty());    Node    block(tryBody.isEmpty());    	non-compiled	[CE]  ';'  expected	153	None	replace
1899	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block(tryBody.getType());  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block(tryBody.getType());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());  Node  block(tryBody.getType());	  Preconditions.checkState(tryBody.isEmpty());    Node    block(tryBody.isEmpty());    	non-compiled	[CE]  ';'  expected	153	None	replace
1900	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	172	3	replace
1901	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	172	3	replace
1902	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [CE]  cannot  find  symbol  tryNode  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  cannot  find  symbol  tryNode	172	None	replace
1903	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getParent();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  blockNode  =  tryBody.getParent();	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	172	3	replace
1904	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.getParent();  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getParent();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.getParent();	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	172	3	replace
1905	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  [CE]  cannot  find  symbol  tryNode  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  cannot  find  symbol  tryNode	172	None	replace
1906	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY,    catchNode);    Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	18	None	add
1907	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  block(tryBody.getType());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  block(tryBody.getType());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY,    catchNode);    Node  catchNode  =  block(tryBody.getType());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	18	None	add
1908	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  block(tryBody);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  block(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY,    catchNode);    Node  catchNode  =  block(tryBody);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	18	None	add
1909	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  [CE]  cannot  find  symbol  tryNode  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  tryNode	255	None	replace
1910	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchBody    =    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	110	None	replace
1911	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody).copyInformationFrom(catchNode);  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody).copyInformationFrom(catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody).copyInformationFrom(catchNode);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody).copyInformationFrom(catchNode);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	70	None	replace
1912	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  {  Token.CATCH;  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  {  Token.CATCH;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  {  Token.CATCH;	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    {    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	213	None	replace
1913	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType()  {  Token.CATCH;  Preconditions.checkState(callNode.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType()  {  Token.CATCH;  Preconditions.checkState(callNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType()  {  Token.CATCH;  Preconditions.checkState(callNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    {    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	213	None	replace
1914	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  {  Token.CATCH;  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  {  Token.CATCH;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  {  Token.CATCH;	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    {    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	213	None	replace
1915	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody).copyInformationFrom(null);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody).copyInformationFrom(null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody).copyInformationFrom(null);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    block(tryBody).copyInformationFrom(tryBody);    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	203	None	replace
1916	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody).copyInformationFrom(tryBody);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody).copyInformationFrom(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody).copyInformationFrom(tryBody);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    block(tryBody).copyInformationFrom(tryBody);    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	203	None	replace
1917	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody).copyInformationFrom(getNode());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody).copyInformationFrom(getNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody).copyInformationFrom(getNode());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    block(tryBody).copyInformationFrom(tryBody);    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	203	None	replace
1918	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  catchNode.isTwin());  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  catchNode.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  ||  catchNode.isTwin());	  Preconditions.checkState(tryBody!=    null    ||    tryBody.isTwin());    	non-compiled	[CE]  cannot  find  symbol	209	None	replace
1919	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  ==  null;  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  ==  null;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  ==  null;	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody)    ==    null;    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	66	None	replace
1920	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody)    ==    null;    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	66	None	replace
1921	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody)    ==    null;    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	66	None	replace
1922	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.isCatch();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.isCatch();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.isCatch();	  Preconditions.checkState(tryBody.isCatch());    Node    catchNode    =    tryBody.isCatch();    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	94	None	replace
1923	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclared());  Node  tryBody  =  null  &&  tryBody.isBlock());  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclared());  Node  tryBody  =  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclared());  Node  tryBody  =  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    null    &&    tryBody.isBlock());    	non-compiled	[CE]  ';'  expected	113	None	replace
1924	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isVoid());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isVoid());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isVoid());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isVoid());	  	compilable	  [FE]  IllegalStateException  	111	3	add
1925	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isVoid());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isVoid());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isVoid());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isVoid());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isVoid());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isVoid());	  	compilable	  [FE]  IllegalStateException  	111	3	add
1926	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isTree());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isTree());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isTree());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  cannot  find  symbol	111	None	add
1927	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.isNode()  &&  catchNode.isNode());  [CE]  cannot  find  symbol  tryNode  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.isNode()  &&  catchNode.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.isNode()  &&  catchNode.isNode());	  Preconditions.checkState(tryBody.isNode()    &&    catchNode.isNode());    	non-compiled	[CE]  cannot  find  symbol  tryNode	29	None	replace
1928	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.getType());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkNotNull(tryBody.getType());	  Preconditions.checkNotNull(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	195	3	replace
1929	[BUG]  [BUGGY]  Preconditions.checkNotNull(tryBody.getType());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.getType());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkNotNull(tryBody.getType());	  Preconditions.checkNotNull(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	195	3	replace
1930	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.getClass());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkNotNull(tryBody.getClass());	  Preconditions.checkNotNull(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	195	3	replace
1931	[BUG]  [BUGGY]  Preconditions.checkNotNull(tryBody.getClass());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.getClass());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkNotNull(tryBody.getClass());	  Preconditions.checkNotNull(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	195	3	replace
1932	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	244	None	add
1933	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	244	3	add
1934	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]      IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	244	3	add
1935	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    Node  tryBody  =  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	244	None	add
1936	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getType()  {  Token.TRY;  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]          IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getType()  {  Token.TRY;  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    Node  catchNode  =  tryBody.getType()  {  Token.TRY;  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	244	None	add
1937	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isInterface());  Preconditions.checkState(tryBody.isInterface());  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isInterface());  Preconditions.checkState(tryBody.isInterface());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isInterface());  Preconditions.checkState(tryBody.isInterface());	  	non-compiled	[CE]  cannot  find  symbol	53	None	add
1938	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isInvocation());  Preconditions.checkState(tryBody.isInvocation());  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isInvocation());  Preconditions.checkState(tryBody.isInvocation());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isInvocation());  Preconditions.checkState(tryBody.isInvocation());	  	non-compiled	[CE]  cannot  find  symbol	53	None	add
1939	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isUnction());  Preconditions.checkState(tryBody.isUnction());  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isUnction());  Preconditions.checkState(tryBody.isUnction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isUnction());  Preconditions.checkState(tryBody.isUnction());	  	non-compiled	[CE]  cannot  find  symbol	53	None	add
1940	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isVar());  Preconditions.checkState(tryBody.isVar());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isFunction());        Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isVar());  Preconditions.checkState(tryBody.isVar());	  	compilable	  [FE]  IllegalStateException  	53	3	add
1941	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isVar());  Preconditions.checkState(tryBody.isVar());  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isVar());  Preconditions.checkState(tryBody.isVar());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isVar());  Preconditions.checkState(tryBody.isVar());	  	compilable	  [FE]  IllegalStateException  	53	3	add
1942	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	242	3	add
1943	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	242	3	add
1944	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	242	None	add
1945	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  ==  null;  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  ==  null;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    Node  block(tryBody)  ==  null;	  	non-compiled	[CE]  ';'  expected	242	None	add
1946	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isConstructor());  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isConstructor());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  ||  tryBody.isConstructor());	  Preconditions.checkState(tryBody!=    null    ||    tryBody.isBlock());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
1947	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  ||  tryBody.isAssignmentOp());	  Preconditions.checkState(tryBody!=    null    ||    tryBody.isBlock());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
1948	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.FUNCTION);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	134	3	add
1949	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.FUNCTION);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	134	3	add
1950	[BUG]  [BUGGY]  Preconditions.checkState(tries.isFunction());  Node  block  =  tryBody.getFunction();  Preconditions.checkState(tryBody.isFunction());  [CE]  cannot  find  symbol  tries  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tries.isFunction());  Node  block  =  tryBody.getFunction();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries.isFunction());  Node  block  =  tryBody.getFunction();  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block    =    tryBody.getFunction();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  cannot  find  symbol  tries	57	None	replace
1951	[BUG]  [BUGGY]  Node  tryBody  =  tryBody.getFunction();  Preconditions.checkState(tryBody.isFunction());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  tryBody.getFunction();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  tryBody.getFunction();  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block    =    tryBody.getFunction();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	57	None	replace
1952	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  Node  tryBody  =  block(tryBody.isTry());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  Node  tryBody  =  block(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isTry());    Node  tryBody  =  block(tryBody.isTry());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	219	None	add
1953	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.CATCH);    Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	43	None	add
1954	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	43	3	add
1955	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	43	3	add
1956	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.CATCH);    Node  block(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	43	None	add
1957	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody  ==  null  &&  catchNode.isCatch());	  Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    	compilable	  [FE]  IllegalStateException  	76	3	replace
1958	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  catchNode.isCatch());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  &&  catchNode.isCatch());	  Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    	compilable	  [FE]  IllegalStateException  	76	3	replace
1959	[BUG]  [BUGGY]  Preconditions.checkState(tryNode!=  null  &&  catchNode.isBlock());  [CE]  cannot  find  symbol  tryNode  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode!=  null  &&  catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode!=  null  &&  catchNode.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    	non-compiled	[CE]  cannot  find  symbol  tryNode	76	None	replace
1960	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody.getFirstChild());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody.getFirstChild());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody.getFirstChild());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    block(tryBody.getFirstChild());    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	232	None	replace
1961	[BUG]  [BUGGY]  Node  block(peekNode)  {  Preconditions.checkState(!block(peekNode).isCatch());  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(peekNode)  {  Preconditions.checkState(!block(peekNode).isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(peekNode)  {  Preconditions.checkState(!block(peekNode).isCatch());	  Node    block(catchNode)    {    Preconditions.checkState(!block(catchNode).isCatch());    	non-compiled	[CE]  ';'  expected	47	None	replace
1962	[BUG]  [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(!block(triesBody).isCatch());  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(!block(triesBody).isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode)  {  Preconditions.checkState(!block(triesBody).isCatch());	  Node    block(catchNode)    {    Preconditions.checkState(!block(catchNode).isCatch());    	non-compiled	[CE]  ';'  expected	47	None	replace
1963	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!block(tryBody).isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(!block(tryBody).isCatch());	  Node    block(catchNode)    {    Preconditions.checkState(!block(catchNode).isCatch());    	compilable	  [FE]  IllegalStateException  	47	3	replace
1964	[BUG]  [BUGGY]  Preconditions.checkState(!block(tryBody).isCatch());  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!block(tryBody).isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!block(tryBody).isCatch());	  Node    block(catchNode)    {    Preconditions.checkState(!block(catchNode).isCatch());    	compilable	  [FE]  IllegalStateException  	47	3	replace
1965	[BUG]  [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  Node  tryBody  =  block(tryBody.isTry());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  Node  tryBody  =  block(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkNotNull(tryBody.isTry());    Node  tryBody  =  block(tryBody.isTry());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	194	None	add
1966	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkNotNull(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkNotNull(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkNotNull(tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	194	3	add
1967	[BUG]  [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkNotNull(tryBody.isTry());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkNotNull(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkNotNull(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkNotNull(tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	194	3	add
1968	[BUG]  [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  Node  catchNode  =  block(tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  Node  catchNode  =  block(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkNotNull(tryBody.isTry());    Node  catchNode  =  block(tryBody.isTry());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	194	None	add
1969	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  [CE]  cannot  find  symbol  tryNode  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  cannot  find  symbol  tryNode	240	None	replace
1970	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	240	3	replace
1971	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	240	3	replace
1972	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  catchNode  =  tryBody.isEmpty();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  catchNode  =  tryBody.isEmpty();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());  Node  catchNode  =  tryBody.isEmpty();	  Preconditions.checkState(tryBody.isEmpty());    Node    catchNode    =    tryBody.isEmpty();    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	152	None	replace
1973	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	144	3	add
1974	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	144	3	add
1975	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	144	3	add
1976	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	144	3	add
1977	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	144	3	add
1978	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	144	3	add
1979	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	144	3	add
1980	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	144	3	add
1981	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.clone();  Preconditions.checkState(tryBody.isEmpty());  [CE]  clone()  has  protected  access  in  Object  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.clone();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.clone();  Preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  clone()  has  protected  access  in  Object	144	None	add
1982	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	210	None	add
1983	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	210	3	add
1984	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	210	3	add
1985	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isTwin());  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isTwin());	  Preconditions.checkState(!tryBody.isFunction());    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
1986	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody  ==  null  &&  tryBody.isFunction());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	157	3	replace
1987	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isFunction());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  &&  tryBody.isFunction());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	157	3	replace
1988	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isImplicitPrototype());  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isImplicitPrototype());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  tryBody.isImplicitPrototype());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
1989	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  block(tryBody.isCatch());  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  block(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());  Node  block(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block(tryBody.isCatch());    	non-compiled	[CE]  ';'  expected	241	None	replace
1990	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNode());  Node  block(tryBody.isCatch());  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNode());  Node  block(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNode());  Node  block(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block(tryBody.isCatch());    	non-compiled	[CE]  ';'  expected	241	None	replace
1991	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopNode  =  tryBody.getFirstChild();  Preconditions.checkState(stopNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  stopNode  =  tryBody.getFirstChild();  Preconditions.checkState(stopNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  NullPointerException  	63	3	replace
1992	[BUG]  [BUGGY]  Node  stopNode  =  tryBody.getFirstChild();  Preconditions.checkState(stopNode.getType()  ==  Token.TRY);  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopNode  =  tryBody.getFirstChild();  Preconditions.checkState(stopNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  stopNode  =  tryBody.getFirstChild();  Preconditions.checkState(stopNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  NullPointerException  	63	3	replace
1993	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	63	None	replace
1994	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(callNode.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(callNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(callNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	63	None	replace
1995	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(callNode  +  1);  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).copyInformationFrom(callNode  +  1);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(callNode  +  1);	  Node    block(tryBody).copyInformationFrom(callNode);    	non-compiled	[CE]  ';'  expected	129	None	replace
1996	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	64	None	replace
1997	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	64	None	replace
1998	[BUG]  [BUGGY]  Node  block(tryBody)  {  Preconditions.checkState(!block(catchNode).isTry());  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody)  {  Preconditions.checkState(!block(catchNode).isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody)  {  Preconditions.checkState(!block(catchNode).isTry());	  Node    block(catchNode)    {    Preconditions.checkState(!block(tryBody).isCatch());    	non-compiled	[CE]  ';'  expected	50	None	replace
1999	[BUG]  [BUGGY]  Node  blockNode)  {  Preconditions.checkState(!block(tryBody).isCatch());  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode)  {  Preconditions.checkState(!block(tryBody).isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode)  {  Preconditions.checkState(!block(tryBody).isCatch());	  Node    block(catchNode)    {    Preconditions.checkState(!block(tryBody).isCatch());    	non-compiled	[CE]  ';'  expected	50	None	replace
2000	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  Node  tryBody  =  tryBody.getParent();  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  Node  tryBody  =  tryBody.getParent();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    Node  tryBody  =  tryBody.getParent();	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	9	None	add
2001	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isConstructor());  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isConstructor());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  ||  tryBody.isConstructor());	  Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
2002	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETELEM);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETELEM);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    	compilable	  [FE]  IllegalStateException  	25	3	replace
2003	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETELEM);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETELEM);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETELEM);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    	compilable	  [FE]  IllegalStateException  	25	3	replace
2004	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [CE]  cannot  find  symbol  tryNode  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  cannot  find  symbol  tryNode	174	None	replace
2005	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  [CE]  cannot  find  symbol  tryNode  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  cannot  find  symbol  tryNode	174	None	replace
2006	[BUG]  [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(tryBody.isTry());  [CE]  ';'  expected  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode)  {  Preconditions.checkState(tryBody.isTry());	  Node    block(catchNode)    {    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  ';'  expected	46	None	replace
2007	[BUG]  [BUGGY]  Preconditions.checkState(truncateBatchNode.isBlock());  [CE]  cannot  find  symbol  truncateBatchNode  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(truncateBatchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(truncateBatchNode.isBlock());	  Preconditions.checkState(batchNode.isBlock());    	non-compiled	[CE]  cannot  find  symbol  truncateBatchNode	100	None	replace
2008	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [CE]  cannot  find  symbol  tryNode  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  tryNode	148	None	replace
2009	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	148	3	replace
2010	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isEmpty());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	148	3	replace
2011	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(trimNode);  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).copyInformationFrom(trimNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(trimNode);	  Node    block(catchNode).copyInformationFrom(trimNode);    	non-compiled	[CE]  ';'  expected	51	None	replace
2012	[BUG]  [BUGGY]  Node  block(trimNode).copyInformationFrom(tryBody);  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(trimNode).copyInformationFrom(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(trimNode).copyInformationFrom(tryBody);	  Node    block(catchNode).copyInformationFrom(trimNode);    	non-compiled	[CE]  ';'  expected	51	None	replace
2013	[BUG]  [BUGGY]  Node  block(tryNode).copyInformationFrom(trimNode);  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryNode).copyInformationFrom(trimNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryNode).copyInformationFrom(trimNode);	  Node    block(catchNode).copyInformationFrom(trimNode);    	non-compiled	[CE]  ';'  expected	51	None	replace
2014	[BUG]  [BUGGY]  Node  block(tryNode).copyInformationFrom(catchNode,  tryBody);  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryNode).copyInformationFrom(catchNode,  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryNode).copyInformationFrom(catchNode,  tryBody);	  Node    block(tryNode).copyInformationFrom(catchNode);    	non-compiled	[CE]  ';'  expected	128	None	replace
2015	[BUG]  [BUGGY]  Preconditions.checkState(testNode.isEmpty());  [CE]  cannot  find  symbol  testNode  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(testNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(testNode.isEmpty());	  Preconditions.checkState(tryNode.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  testNode	200	None	replace
2016	[BUG]  [BUGGY]  Preconditions.checkState(tries.isEmpty());  [CE]  cannot  find  symbol  tries  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tries.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries.isEmpty());	  Preconditions.checkState(tryNode.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  tries	200	None	replace
2017	[BUG]  [BUGGY]  Preconditions.checkState(tries.isTwin());  [CE]  cannot  find  symbol  tries  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tries.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries.isTwin());	  Preconditions.checkState(twinNode.isTwin());    	non-compiled	[CE]  cannot  find  symbol  tries	33	None	replace
2018	[BUG]  [BUGGY]  Preconditions.checkState(false.isTwin());  [CE]  boolean  cannot  be  dereferenced  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(false.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(false.isTwin());	  Preconditions.checkState(twinNode.isTwin());    	non-compiled	[CE]  boolean  cannot  be  dereferenced	33	None	replace
2019	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  catchNode.isCatch());  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp()  ||  catchNode.isCatch());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    catchNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	229	None	replace
2020	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.removeFirst();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.removeFirst();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.removeFirst();	          Node    catchNode    =    tryBody.getNext();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	143	None	replace
2021	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    ||    tryBody.isBlock());    Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	71	None	add
2022	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    ||    tryBody.isBlock());    Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	71	None	add
2023	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  tryBody  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  tryBody  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    ||    tryBody.isBlock());    Node  tryBody  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	71	None	add
2024	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    ||    tryBody.isBlock());    Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	71	None	add
2025	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  tryBody  =  block(tryBody);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  tryBody  =  block(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    ||    tryBody.isBlock());    Node  tryBody  =  block(tryBody);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	71	None	add
2026	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  tryBody  =  block(tryBody).copyInformationFrom(tryNode);  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  tryBody  =  block(tryBody).copyInformationFrom(tryNode);  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    ||    tryBody.isBlock());    Node  tryBody  =  block(tryBody).copyInformationFrom(tryNode);  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	71	None	add
2027	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  catchNode  =  tryBody.getParent();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  catchNode  =  tryBody.getParent();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());  Node  catchNode  =  tryBody.getParent();	  Preconditions.checkState(tryBody.isFunction());    Node    catchNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	60	None	replace
2028	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction(),  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isFunction(),  catchNode);	  Preconditions.checkState(tryBody.isFunction());    Node    catchNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	60	3	replace
2029	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction(),  catchNode);  [FE]  IllegalStateException  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction(),  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction(),  catchNode);	  Preconditions.checkState(tryBody.isFunction());    Node    catchNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	60	3	replace
2030	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  catchNode  =  block(tryBody.isTry());  Preconditions.checkState(!tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  catchNode  =  block(tryBody.isTry());  Preconditions.checkState(!tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isTry());    Node  catchNode  =  block(tryBody.isTry());  Preconditions.checkState(!tryBody.isTry());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	140	None	add
2031	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  catchNode  =  block(tryBody.getFirstChild());  Preconditions.checkState(!tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  catchNode  =  block(tryBody.getFirstChild());  Preconditions.checkState(!tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isTry());    Node  catchNode  =  block(tryBody.getFirstChild());  Preconditions.checkState(!tryBody.isTry());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	140	None	add
2032	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isTry());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isTry());    Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isTry());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	140	None	add
2033	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(!tryBody.isTry());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(!tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isTry());    Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(!tryBody.isTry());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	140	None	add
2034	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  tryBody  =  block(tryBody).copyInformationFrom(tryNode);  Preconditions.checkState(!tryBody.isTry());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  tryBody  =  block(tryBody).copyInformationFrom(tryNode);  Preconditions.checkState(!tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isTry());    Node  tryBody  =  block(tryBody).copyInformationFrom(tryNode);  Preconditions.checkState(!tryBody.isTry());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	140	None	add
2035	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  catchNode  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  catchNode  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isTry());    Node  catchNode  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isTry());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	140	None	add
2036	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  tryBody  =  block(tryBody.getFirstChild()).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isTry());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  tryBody  =  block(tryBody.getFirstChild()).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isTry());    Node  tryBody  =  block(tryBody.getFirstChild()).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isTry());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	140	None	add
2037	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	41	None	add
2038	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	41	3	add
2039	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	41	3	add
2040	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    Node  block(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	41	None	add
2041	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.getTwin()  :  null);  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.getTwin()  :  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null?  tryBody.getTwin()  :  null);	  Preconditions.checkState(tryBody!=    null?    tryBody.isTwin()    :    null);    	non-compiled	[CE]  cannot  find  symbol	260	None	replace
2042	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.getType()  :  null);  [CE]  no  suitable  method  found  for  checkState(Integer)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.getType()  :  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null?  tryBody.getType()  :  null);	  Preconditions.checkState(tryBody!=    null?    tryBody.isTwin()    :    null);    	non-compiled	[CE]  no  suitable  method  found  for  checkState(Integer)	260	None	replace
2043	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	24	None	add
2044	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);	  	compilable	  [FE]  IllegalStateException  	24	3	add
2045	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);	  	compilable	  [FE]  IllegalStateException  	24	3	add
2046	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	24	None	add
2047	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  block(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Preconditions.checkState(tryBody.getType()  ==  Token.GETPROP  ||  tryBody.getType()  ==  Token.GETPROP);  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  block(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Preconditions.checkState(tryBody.getType()  ==  Token.GETPROP  ||  tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    Node  block(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Preconditions.checkState(tryBody.getType()  ==  Token.GETPROP  ||  tryBody.getType()  ==  Token.GETPROP);	  	non-compiled	[CE]  ';'  expected	24	None	add
2048	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  tryBody.getFirstChild();  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  tryBody  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  tryBody  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	173	None	add
2049	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	173	3	add
2050	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	173	3	add
2051	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	173	None	add
2052	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryNode.getType()  ==  Token.CATCH);  [CE]  cannot  find  symbol  tryNode  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    tryNode);    	non-compiled	[CE]  cannot  find  symbol  tryNode	168	None	replace
2053	[BUG]  [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.CATCH,  tryBody);  [CE]  cannot  find  symbol  tries  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.CATCH,  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries.getType()  ==  Token.CATCH,  tryBody);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    tryNode);    	non-compiled	[CE]  cannot  find  symbol  tries	168	None	replace
2054	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()!=  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	16	3	add
2055	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()!=  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	16	3	add
2056	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.TRY);    Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()!=  Token.TRY);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	16	None	add
2057	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  block(tryBody.getType()!=  Token.TRY);  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  block(tryBody.getType()!=  Token.TRY);  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.TRY);    Node  block(tryBody.getType()!=  Token.TRY);  Preconditions.checkState(tryBody.getType()!=  Token.TRY);	  	non-compiled	[CE]  ';'  expected	16	None	add
2058	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  block(tryBody.getType()  >>  Token.TRY);  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  block(tryBody.getType()  >>  Token.TRY);  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.TRY);    Node  block(tryBody.getType()  >>  Token.TRY);  Preconditions.checkState(tryBody.getType()!=  Token.TRY);	  	non-compiled	[CE]  ';'  expected	16	None	add
2059	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()!=  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	16	3	add
2060	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()!=  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	16	3	add
2061	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	246	None	add
2062	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  tryBody.getType()  {  Token.TRY  &&  catchNode!=  null;  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  tryBody.getType()  {  Token.TRY  &&  catchNode!=  null;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    Node  catchNode  =  tryBody.getType()  {  Token.TRY  &&  catchNode!=  null;	  	non-compiled	[CE]  ';'  expected	246	None	add
2063	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null;  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    Node  catchNode  =  tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null;	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	246	None	add
2064	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  block(tryBody.getType());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  block(tryBody.getType());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    Node  catchNode  =  block(tryBody.getType());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	246	None	add
2065	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  [CE]  cannot  find  symbol  tryNode  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  cannot  find  symbol  tryNode	224	None	replace
2066	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH)  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH)  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH)	  Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	222	None	replace
2067	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody.isEmpty());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    tryBody    =    block(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	167	None	replace
2068	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    tryBody    =    block(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	167	None	replace
2069	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclaration());  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclaration());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclaration());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
2070	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryNode.isDeclarationOp());  [CE]  cannot  find  symbol  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryNode.isDeclarationOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryNode.isDeclarationOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    tryNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	230	None	replace
2071	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryNode.isAssignmentOp(),  catchNode.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryNode.isAssignmentOp(),  catchNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryNode.isAssignmentOp(),  catchNode.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    tryNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	230	None	replace
2072	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryNode.isInvocationOp());  [CE]  cannot  find  symbol  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryNode.isInvocationOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryNode.isInvocationOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    tryNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	230	None	replace
2073	[BUG]  [BUGGY]  Preconditions.checkState(!tryNode.isEmpty());  [CE]  cannot  find  symbol  tryNode  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryNode.isEmpty());	  Preconditions.checkState(!tryBody.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  tryNode	2	None	replace
2074	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isFalse());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(!tryBody.isFalse());	  Preconditions.checkState(!tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	2	3	replace
2075	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isFalse());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isFalse());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isFalse());	  Preconditions.checkState(!tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	2	3	replace
2076	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	223	None	add
2077	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Node  tryBody  =  tryBody.getFirstChild();  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Node  tryBody  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    Node  tryBody  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	223	None	add
2078	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isFunction());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	223	3	add
2079	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	223	3	add
2080	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	223	None	add
2081	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  [CE]  cannot  find  symbol  tryNode  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  cannot  find  symbol  tryNode	10	None	replace
2082	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	10	3	replace
2083	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isTry());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(block.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	10	3	replace
2084	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY  &&  tryBody!=  null);  [CE]  cannot  find  symbol  tryNode  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY  &&  tryBody!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.TRY  &&  tryBody!=  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    tryNode!=    null);    	non-compiled	[CE]  cannot  find  symbol  tryNode	193	None	replace
2085	[BUG]  [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.TRY  &&  tryNode!=  null);  [CE]  cannot  find  symbol  tries  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.TRY  &&  tryNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries.getType()  ==  Token.TRY  &&  tryNode!=  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    tryNode!=    null);    	non-compiled	[CE]  cannot  find  symbol  tries	193	None	replace
2086	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  catchNode!=  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    tryNode!=    null);    	compilable	  [FE]  IllegalStateException  	193	3	replace
2087	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  catchNode!=  null);  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  catchNode!=  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    tryNode!=    null);    	compilable	  [FE]  IllegalStateException  	193	3	replace
2088	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  catchNode  =  block(tryBody);  Preconditions.checkState(!tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  catchNode  =  block(tryBody);  Preconditions.checkState(!tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isCatch());    Node  catchNode  =  block(tryBody);  Preconditions.checkState(!tryBody.isCatch());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	35	None	add
2089	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  tryBody  =  block(tryBody);  Preconditions.checkState(!tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  tryBody  =  block(tryBody);  Preconditions.checkState(!tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isCatch());    Node  tryBody  =  block(tryBody);  Preconditions.checkState(!tryBody.isCatch());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	35	None	add
2090	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  catchNode  =  block(tryBody.getFirstChild());  Preconditions.checkState(!tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  catchNode  =  block(tryBody.getFirstChild());  Preconditions.checkState(!tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isCatch());    Node  catchNode  =  block(tryBody.getFirstChild());  Preconditions.checkState(!tryBody.isCatch());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	35	None	add
2091	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  catchNode  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  catchNode  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isCatch());    Node  catchNode  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isCatch());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	35	None	add
2092	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isCatch());    Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isCatch());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	35	None	add
2093	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  tryBody  =  block(tryBody).copyInformationFrom(tryNode);  Preconditions.checkState(!tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  tryBody  =  block(tryBody).copyInformationFrom(tryNode);  Preconditions.checkState(!tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isCatch());    Node  tryBody  =  block(tryBody).copyInformationFrom(tryNode);  Preconditions.checkState(!tryBody.isCatch());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	35	None	add
2094	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  catchNode  =  block(tryBody.getFirstChild()).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  catchNode  =  block(tryBody.getFirstChild()).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isCatch());    Node  catchNode  =  block(tryBody.getFirstChild()).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isCatch());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	35	None	add
2095	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  catchNode!=  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    catchNode);    	compilable	  [FE]  IllegalStateException  	40	3	replace
2096	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  catchNode!=  null);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  catchNode!=  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    catchNode);    	compilable	  [FE]  IllegalStateException  	40	3	replace
2097	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  tryBody  =  block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    Node  tryBody  =  block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	221	None	add
2098	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalArgumentException  	221	3	add
2099	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalArgumentException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalArgumentException  	221	3	add
2100	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Node  tryBody  =  tryBody.getParent();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Node  tryBody  =  tryBody.getParent();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    Node  tryBody  =  tryBody.getParent();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	156	None	add
2101	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Node  tryBody  =  null  &&  tryBody.isFunction();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Node  tryBody  =  null  &&  tryBody.isFunction();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    Node  tryBody  =  null  &&  tryBody.isFunction();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	156	None	add
2102	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	156	3	add
2103	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	156	3	add
2104	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Node  tryBody  =  null  &&  tryBody.isFunction();  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Node  tryBody  =  null  &&  tryBody.isFunction();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    Node  tryBody  =  null  &&  tryBody.isFunction();	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	156	None	add
2105	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Node  tryBody  =  tryBody.getParent();  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Node  tryBody  =  tryBody.getParent();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    Node  tryBody  =  tryBody.getParent();	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	156	None	add
2106	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isInitializing());  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isInitializing());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isInitializing());	  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
2107	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	12	None	add
2108	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  Node  tryBody  =  tryBody.getFirstChild();  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  Node  tryBody  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    Node  tryBody  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	12	None	add
2109	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	12	None	add
2110	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isTry());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	12	3	add
2111	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	12	3	add
2112	[BUG]  [BUGGY]  Preconditions.checkState(patchNode.isTwin(),  catchNode.isTwin());  [CE]  cannot  find  symbol  patchNode  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(patchNode.isTwin(),  catchNode.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(patchNode.isTwin(),  catchNode.isTwin());	  Preconditions.checkState(tryBody.isTwin(),    catchNode.isTwin());    	non-compiled	[CE]  cannot  find  symbol  patchNode	31	None	replace
2113	[BUG]  [BUGGY]  Preconditions.checkState(testNode.isTry());  [CE]  cannot  find  symbol  testNode  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(testNode.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(testNode.isTry());	  Preconditions.checkState(tryNode.isTry());    	non-compiled	[CE]  cannot  find  symbol  testNode	142	None	replace
2114	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY,  catchNode);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	84	3	replace
2115	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY,  catchNode);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY,  catchNode);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	84	3	replace
2116	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isEmpty());        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	165	3	add
2117	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	165	3	add
2118	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(lockNode.isEmpty());  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(lockNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(lockNode.isEmpty());	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	165	None	add
2119	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	165	None	add
2120	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(blockNode.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(blockNode.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(blockNode.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	165	None	add
2121	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNode(),  tryBody.isVoid());  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNode(),  tryBody.isVoid());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNode(),  tryBody.isVoid());	  Preconditions.checkState(tryBody.isNode(),    tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
2122	[BUG]  [BUGGY]  Node  stopBody  =  tryBody.isCatch();  [CE]  incompatible  types  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.isCatch();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  stopBody  =  tryBody.isCatch();	  Preconditions.checkState(tryBody.isCatch());    Node    stopBody    =    tryBody.isCatch();    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  incompatible  types	92	None	replace
2123	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.isCatch());  Node  stopBody  =  tryBody.isCatch();  [CE]  cannot  find  symbol  tryNode  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.isCatch());  Node  stopBody  =  tryBody.isCatch();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.isCatch());  Node  stopBody  =  tryBody.isCatch();	  Preconditions.checkState(tryBody.isCatch());    Node    stopBody    =    tryBody.isCatch();    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  cannot  find  symbol  tryNode	92	None	replace
2124	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isNode(),  catchBody.isNode());  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isNode(),  catchBody.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isNode(),  catchBody.isNode());	  Preconditions.checkState(tryBody.isNode(),    catchNode.isNode());    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
2125	[BUG]  [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  [CE]  cannot  find  symbol  tries  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    catchNode    =    tryBody.getType()    ==    Token.TRY;    	non-compiled	[CE]  cannot  find  symbol  tries	228	None	replace
2126	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY));  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY));  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY));  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    catchNode    =    tryBody.getType()    ==    Token.TRY;    	non-compiled	[CE]  ';'  expected	228	None	replace
2127	[BUG]  [BUGGY]  Node  tryBody  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getType()    ==    Token.TRY;    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	226	None	replace
2128	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType()  ==  Token.TRY;  [CE]  cannot  find  symbol  tryNode  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType()  ==  Token.TRY;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType()  ==  Token.TRY;	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getType()    ==    Token.TRY;    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  cannot  find  symbol  tryNode	226	None	replace
2129	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    tryBody    =    block(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	183	None	replace
2130	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    tryBody    =    block(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	183	None	replace
2131	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isTwin()  &&  tryBody.isCatch());  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isTwin()  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isTwin()  &&  tryBody.isCatch());	  Preconditions.checkState(tryBody.isTwin()    &&    catchNode.isCatch());    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
2132	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  [CE]  cannot  find  symbol  tryNode  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  cannot  find  symbol  tryNode	91	None	replace
2133	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	91	3	replace
2134	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	91	3	replace
2135	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Node  attemptBody  =  block(tryBody.isCatch());  Preconditions.checkArgument(tryBody.isCatch());  [CE]  no  suitable  method  found  for  block(boolean)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Node  attemptBody  =  block(tryBody.isCatch());  Preconditions.checkArgument(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isCatch());    Node  attemptBody  =  block(tryBody.isCatch());  Preconditions.checkArgument(tryBody.isCatch());	  	non-compiled	[CE]  no  suitable  method  found  for  block(boolean)	257	None	add
2136	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Node  catchNode  =  block(tryBody.getParent());  Preconditions.checkArgument(tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Node  catchNode  =  block(tryBody.getParent());  Preconditions.checkArgument(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isCatch());    Node  catchNode  =  block(tryBody.getParent());  Preconditions.checkArgument(tryBody.isCatch());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	257	None	add
2137	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getFirstChild();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getFirstChild();	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	256	None	replace
2138	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.cloneTry(false);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.cloneTry(false);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.cloneTry(false);	          Node    catchNode    =    tryBody.cloneTry();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	235	None	replace
2139	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Node  tryBody  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	147	None	add
2140	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  tryBody  =  tryBody.getFirstChild();  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  tryBody  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Node  tryBody  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	147	None	add
2141	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	147	3	add
2142	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	147	3	add
2143	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  preconditions.checkState(tryBody.isEmpty());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	147	None	add
2144	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.isTry();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.isTry();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.isTry();	  Preconditions.checkState(tryBody.isTry());    Node    catchNode    =    tryBody.isTry();    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	14	None	replace
2145	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNone(),  catchNode);  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNone(),  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNone(),  catchNode);	  Preconditions.checkState(tryBody.isNone());    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
2146	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isNone());  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isNone());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  tryBody.isNone());	  Preconditions.checkState(tryBody.isNone());    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
2147	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isNone());  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isNone());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  ||  tryBody.isNone());	  Preconditions.checkState(tryBody.isNone());    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
2148	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isNone());  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isNone());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  ||  tryBody.isNone());	  Preconditions.checkState(tryBody.isNone());    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
2149	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNone()  &&  catchNode.isNone());  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNone()  &&  catchNode.isNone());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNone()  &&  catchNode.isNone());	  Preconditions.checkState(tryBody.isNone());    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
2150	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Node  tryBody  =  null  ||  tryBody.isBlock();  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Node  tryBody  =  null  ||  tryBody.isBlock();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Node  tryBody  =  null  ||  tryBody.isBlock();	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    null    &&    tryBody.isBlock();    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	204	None	replace
2151	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  catchNode  =  block(tryBody);  Preconditions.checkState(!tryBody.isEmpty());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  catchNode  =  block(tryBody);  Preconditions.checkState(!tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isEmpty());    Node  catchNode  =  block(tryBody);  Preconditions.checkState(!tryBody.isEmpty());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	1	None	add
2152	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(!tryBody.isEmpty());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(!tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isEmpty());    Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(!tryBody.isEmpty());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	1	None	add
2153	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  tryBody  =  block(tryBody.isEmpty());  Preconditions.checkState(!tryBody.isEmpty());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  tryBody  =  block(tryBody.isEmpty());  Preconditions.checkState(!tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isEmpty());    Node  tryBody  =  block(tryBody.isEmpty());  Preconditions.checkState(!tryBody.isEmpty());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	1	None	add
2154	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=  Token.CATCH  &&  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	42	3	replace
2155	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH  &&  tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.CATCH  &&  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	42	3	replace
2156	[BUG]  [BUGGY]  Preconditions.checkState(tryCatch.getType()  ==  Token.CATCH);  [CE]  cannot  find  symbol  tryCatch  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryCatch.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryCatch.getType()  ==  Token.CATCH);	  Preconditions.checkState(tries.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  tryCatch	45	None	replace
2157	[BUG]  [BUGGY]  Preconditions.checkState(comparables.getType()  ==  Token.CATCH);  [CE]  cannot  find  symbol  comparables  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(comparables.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(comparables.getType()  ==  Token.CATCH);	  Preconditions.checkState(tries.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  comparables	45	None	replace
2158	[BUG]  [BUGGY]  Node  block(tryBody.getType())  ==  Token.CATCH);  Preconditions.checkState(block(tryBody.getType())  ==  Token.CATCH);  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType())  ==  Token.CATCH);  Preconditions.checkState(block(tryBody.getType())  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType())  ==  Token.CATCH);  Preconditions.checkState(block(tryBody.getType())  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	104	None	replace
2159	[BUG]  [BUGGY]  Node  block(tryBody.getType())  ==  Token.CATCH;  Preconditions.checkState(block(tryBody.getType())  ==  Token.CATCH);  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType())  ==  Token.CATCH;  Preconditions.checkState(block(tryBody.getType())  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType())  ==  Token.CATCH;  Preconditions.checkState(block(tryBody.getType())  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	104	None	replace
2160	[BUG]  [BUGGY]          Preconditions.checkNotNull(tryBody);  Node  tryBody  =  block(tryBody);  Preconditions.checkNotNull(tryBody);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]          Preconditions.checkNotNull(tryBody);  Node  tryBody  =  block(tryBody);  Preconditions.checkNotNull(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	                Preconditions.checkNotNull(tryBody);    Node  tryBody  =  block(tryBody);  Preconditions.checkNotNull(tryBody);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	179	None	add
2161	[BUG]  [BUGGY]          Preconditions.checkNotNull(tryBody);  Node  tryBody  =  block(tryBody);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]          Preconditions.checkNotNull(tryBody);  Node  tryBody  =  block(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	                Preconditions.checkNotNull(tryBody);    Node  tryBody  =  block(tryBody);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	179	None	add
2162	[BUG]  [BUGGY]          Preconditions.checkNotNull(tryBody);  Node  catchNode  =  block(tryBody);  Preconditions.checkNotNull(tryBody);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]          Preconditions.checkNotNull(tryBody);  Node  catchNode  =  block(tryBody);  Preconditions.checkNotNull(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	                Preconditions.checkNotNull(tryBody);    Node  catchNode  =  block(tryBody);  Preconditions.checkNotNull(tryBody);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	179	None	add
2163	[BUG]  [BUGGY]          Preconditions.checkNotNull(tryBody);  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]          Preconditions.checkNotNull(tryBody);  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	                Preconditions.checkNotNull(tryBody);    Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	179	None	add
2164	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.GETPROP);	  Preconditions.checkState(tryBody.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	135	3	replace
2165	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.GETPROP);	  Preconditions.checkState(tryBody.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	135	3	replace
2166	[BUG]  [BUGGY]  Node  catchNode  =  tryBody!=  null?  null  :  tryBody.cloneTree();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody!=  null?  null  :  tryBody.cloneTree();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody!=  null?  null  :  tryBody.cloneTree();	          Node    catchNode    =    tryBody.cloneTree();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	177	None	replace
2167	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.cloneTree(this);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.cloneTree(this);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.cloneTree(this);	          Node    catchNode    =    tryBody.cloneTree();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	177	None	replace
2168	[BUG]  [BUGGY]  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [CE]  cannot  find  symbol  block  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(block.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  block	108	None	replace
2169	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getType();  [CE]  cannot  find  symbol  tryNode  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getType();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getType();	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  tryNode	108	None	replace
2170	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTwin(),  catchNode,  tryBody);  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTwin(),  catchNode,  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTwin(),  catchNode,  tryBody);	  Preconditions.checkState(tryBody.isTwin(),    catchNode);    	non-compiled	[CE]  cannot  find  symbol	207	None	replace
2171	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  [CE]  cannot  find  symbol  tryNode  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  cannot  find  symbol  tryNode	237	None	replace
2172	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	237	3	replace
2173	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	237	3	replace
2174	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isInstance());  Node  tryBody  =  block(tryBody.isTry());  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isInstance());  Node  tryBody  =  block(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isInstance());  Node  tryBody  =  block(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    tryBody    =    block(tryBody.isTry());    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
2175	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	114	3	add
2176	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	114	3	add
2177	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  catchNode.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  catchNode.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	114	3	add
2178	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  catchNode.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  catchNode.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  catchNode.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	114	3	add
2179	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	114	3	add
2180	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	114	3	add
2181	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isTree());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [CE]  cannot  find  symbol  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isTree());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isTree());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  cannot  find  symbol	114	None	add
2182	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclared());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isDeclared());  [CE]  cannot  find  symbol  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclared());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isDeclared());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclared());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isDeclared());	  	non-compiled	[CE]  cannot  find  symbol	114	None	add
2183	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType();  [CE]  cannot  find  symbol  tryNode  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType();	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  cannot  find  symbol  tryNode	68	None	replace
2184	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  tryBody.getType());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  tryBody.getType());	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	68	3	replace
2185	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  tryBody.getType());  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  tryBody.getType());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  tryBody.getType());	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	68	3	replace
2186	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(peekNode));  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).copyInformationFrom(peekNode));  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(peekNode));	  Node    block(tryBody).copyInformationFrom(catchNode));    	non-compiled	[CE]  ';'  expected	131	None	replace
2187	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [CE]  cannot  find  symbol  tryNode  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  tryNode	166	None	replace
2188	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	166	3	replace
2189	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.isEmpty());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	166	3	replace
2190	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  stopBody  =  tryBody.getType();  [CE]  cannot  find  symbol  tryNode  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  stopBody  =  tryBody.getType();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  stopBody  =  tryBody.getType();	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    stopBody    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  tryNode	214	None	replace
2191	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody).copyInformationFrom(peekNode);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody).copyInformationFrom(peekNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody).copyInformationFrom(peekNode);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    block(tryBody).copyInformationFrom(peekNode);    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	202	None	replace
2192	[BUG]  [BUGGY]  Node  block(catchNode).copyInformationFrom(tryBody.cloneTry());  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode).copyInformationFrom(tryBody.cloneTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode).copyInformationFrom(tryBody.cloneTry());	  Node    block(catchNode).copyInformationFrom(tryBody);    	non-compiled	[CE]  ';'  expected	48	None	replace
2193	[BUG]  [BUGGY]  Node  block(catchNode).copyInformationFrom(tryBody.cloneTree());  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode).copyInformationFrom(tryBody.cloneTree());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode).copyInformationFrom(tryBody.cloneTree());	  Node    block(catchNode).copyInformationFrom(tryBody);    	non-compiled	[CE]  ';'  expected	48	None	replace
2194	[BUG]  [BUGGY]  Preconditions.checkState(tryNode  ==  null  &&  tryNode.isBlock());  [CE]  cannot  find  symbol  tryNode  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode  ==  null  &&  tryNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode  ==  null  &&  tryNode.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    	non-compiled	[CE]  cannot  find  symbol  tryNode	115	None	replace
2195	[BUG]  [BUGGY]  Preconditions.checkState(tryNode  ==  null  &&  tryBody.isBlock());  [CE]  cannot  find  symbol  tryNode  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode  ==  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode  ==  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    	non-compiled	[CE]  cannot  find  symbol  tryNode	115	None	replace
2196	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY)&&  catchNode!=  null;  [CE]  not  a  statement  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY)&&  catchNode!=  null;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY)&&  catchNode!=  null;	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    	non-compiled	[CE]  not  a  statement	247	None	replace
2197	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  catchNode  ==  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  catchNode  ==  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    	compilable	  [FE]  IllegalStateException  	247	3	replace
2198	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  catchNode  ==  null);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  catchNode  ==  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  catchNode  ==  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    	compilable	  [FE]  IllegalStateException  	247	3	replace
2199	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isCatch());    Node  tryBody  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	239	None	add
2200	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isCatch());    Node  tryBody  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	239	None	add
2201	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  preconditions.checkState(tryBody.isCatch());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  preconditions.checkState(tryBody.isCatch());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	239	None	add
2202	[BUG]  [BUGGY]  Preconditions.checkState(matchNode.isEmpty());  [CE]  cannot  find  symbol  matchNode  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(matchNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(matchNode.isEmpty());	  Preconditions.checkState(tryNode.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  matchNode	200	None	replace
2203	[BUG]  [BUGGY]  Node  block(tryNode).copyInformationFrom(atchNode);  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryNode).copyInformationFrom(atchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryNode).copyInformationFrom(atchNode);	  Node    block(tryNode).copyInformationFrom(catchNode);    	non-compiled	[CE]  ';'  expected	128	None	replace
2204	[BUG]  [BUGGY]  Node  block(tryNode).copyInformationFrom(matchNode);  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryNode).copyInformationFrom(matchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryNode).copyInformationFrom(matchNode);	  Node    block(tryNode).copyInformationFrom(catchNode);    	non-compiled	[CE]  ';'  expected	128	None	replace
2205	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY  ||  catchNode.isCatch());  [CE]  cannot  find  symbol  tryNode  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY  ||  catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.TRY  ||  catchNode.isCatch());	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryNode.isCatch());    	non-compiled	[CE]  cannot  find  symbol  tryNode	191	None	replace
2206	[BUG]  [BUGGY]  Preconditions.checkState(trial.getType()  ==  Token.TRY  ||  catchNode.isCatch());  [CE]  cannot  find  symbol  trial  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(trial.getType()  ==  Token.TRY  ||  catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(trial.getType()  ==  Token.TRY  ||  catchNode.isCatch());	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryNode.isCatch());    	non-compiled	[CE]  cannot  find  symbol  trial	191	None	replace
2207	[BUG]  [BUGGY]  Preconditions.checkState(testBody.getType()  ==  Token.TRY  ||  catchNode.isCatch());  [CE]  cannot  find  symbol  testBody  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(testBody.getType()  ==  Token.TRY  ||  catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(testBody.getType()  ==  Token.TRY  ||  catchNode.isCatch());	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryNode.isCatch());    	non-compiled	[CE]  cannot  find  symbol  testBody	191	None	replace
2208	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	114	3	add
2209	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	114	3	add
2210	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isVarArgs());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isVarArgs());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isVarArgs());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isVarArgs());	  	compilable	  [FE]  IllegalStateException  	114	3	add
2211	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isVarArgs());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isVarArgs());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isVarArgs());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isVarArgs());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isVarArgs());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isVarArgs());	  	compilable	  [FE]  IllegalStateException  	114	3	add
2212	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclared());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclared());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclared());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  cannot  find  symbol	114	None	add
2213	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclaration());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [CE]  cannot  find  symbol  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclaration());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isDeclaration());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  cannot  find  symbol	114	None	add
2214	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	221	None	add
2215	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    Node  catchNode  =  block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	221	None	add
2216	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [CE]  incompatible  types  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  incompatible  types	221	None	add
2217	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.isAssignmentOp()  :  catchNode,  tryBody);  [CE]  cannot  find  symbol  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.isAssignmentOp()  :  catchNode,  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null?  tryBody.isAssignmentOp()  :  catchNode,  tryBody);	  Preconditions.checkState(tryBody!=    null?    tryBody.isAssignmentOp()    :    tryBody);    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
2218	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.isCatch()  :  tryBody);  [CE]  no  suitable  method  found  for  checkState(Serializable)  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.isCatch()  :  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null?  tryBody.isCatch()  :  tryBody);	  Preconditions.checkState(tryBody!=    null?    tryBody.isAssignmentOp()    :    tryBody);    	non-compiled	[CE]  no  suitable  method  found  for  checkState(Serializable)	164	None	replace
2219	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.isAssignmentOp()  :  callNode);  [CE]  cannot  find  symbol  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.isAssignmentOp()  :  callNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null?  tryBody.isAssignmentOp()  :  callNode);	  Preconditions.checkState(tryBody!=    null?    tryBody.isAssignmentOp()    :    tryBody);    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
2220	[BUG]  [BUGGY]  Preconditions.checkState(matchNode.isBlock());  [CE]  cannot  find  symbol  matchNode  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(matchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(matchNode.isBlock());	  Preconditions.checkState(testNode.isBlock());    	non-compiled	[CE]  cannot  find  symbol  matchNode	185	None	replace
2221	[BUG]  [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isFunction());  [CE]  cannot  find  symbol  lock  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  cannot  find  symbol  lock	224	None	replace
2222	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.getType()  ==  Token.TRY);  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	173	None	add
2223	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	173	None	add
2224	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryNode.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [CE]  cannot  find  symbol  tryNode  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryNode.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryNode.isEmpty());  Preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  cannot  find  symbol  tryNode	144	None	add
2225	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Preconditions.check(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Preconditions.check(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Preconditions.check(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  cannot  find  symbol	144	None	add
2226	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkArgument(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkArgument(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	144	3	add
2227	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkArgument(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkArgument(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkArgument(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	144	3	add
2228	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkNotNull(tryBody);  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkNotNull(tryBody);  Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	144	3	add
2229	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkNotNull(tryBody);  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkNotNull(tryBody);  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkNotNull(tryBody);  Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	144	3	add
2230	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.isEmpty());	  	compilable	  [FE]  IllegalStateException  	144	3	add
2231	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.isEmpty());  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.isEmpty());	  	compilable	  [FE]  IllegalStateException  	144	3	add
2232	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Node  catchNode  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Node  catchNode  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    Node  catchNode  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	77	None	add
2233	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Node  catchNode  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  Node  catchNode  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    Node  catchNode  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	77	None	add
2234	[BUG]  [BUGGY]          Preconditions.checkNotNull(tryBody);  Node  catchNode  =  tryBody.getParent();  Preconditions.checkNotNull(tryBody);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]          Preconditions.checkNotNull(tryBody);  Node  catchNode  =  tryBody.getParent();  Preconditions.checkNotNull(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	                Preconditions.checkNotNull(tryBody);    Node  catchNode  =  tryBody.getParent();  Preconditions.checkNotNull(tryBody);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	179	None	add
2235	[BUG]  [BUGGY]  Node  catchBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  catchBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchBody    =    block(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  catchBody  is  already  defined  in  method  tryCatch(Node,Node)	93	None	replace
2236	[BUG]  [BUGGY]  Node  catchBody  =  tryBody.isCatch();  [CE]  incompatible  types  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchBody  =  tryBody.isCatch();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchBody  =  tryBody.isCatch();	  Preconditions.checkState(tryBody.isCatch());    Node    catchBody    =    block(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  incompatible  types	93	None	replace
2237	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch()  ||  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch()  ||  tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchBody    =    block(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	93	3	replace
2238	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch()  ||  tryBody.isCatch());  [FE]  IllegalStateException  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch()  ||  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch()  ||  tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchBody    =    block(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	93	3	replace
2239	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	102	None	replace
2240	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	198	None	add
2241	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  block(tryBody)  {  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  block(tryBody)  {  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    Node  block(tryBody)  {  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());	  	non-compiled	[CE]  ';'  expected	198	None	add
2242	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	198	None	add
2243	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  block(tryBody)  ==  null  &&  tryBody.isEmpty());  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  Node  block(tryBody)  ==  null  &&  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isEmpty());    Node  block(tryBody)  ==  null  &&  tryBody.isEmpty());	  	non-compiled	[CE]  ';'  expected	198	None	add
2244	[BUG]  [BUGGY]  Node  block(tryNode).copyInformationFrom(tryBody);  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryNode).copyInformationFrom(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryNode).copyInformationFrom(tryBody);	  Node    block(catchNode).copyInformationFrom(tryBody);    	non-compiled	[CE]  ';'  expected	48	None	replace
2245	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.TRY);    Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	242	None	add
2246	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTwin());  Node  block(tryBody.isCatch());  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTwin());  Node  block(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTwin());  Node  block(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block(tryBody.isCatch());    	non-compiled	[CE]  ';'  expected	241	None	replace
2247	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	150	None	add
2248	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody!=  null  &&  tryBody.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock());  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody!=  null  &&  tryBody.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody!=  null  &&  tryBody.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    null    &&    tryBody.isBlock());    	non-compiled	[CE]  ';'  expected	113	None	replace
2249	[BUG]  [BUGGY]  Node  catchNode  =  new  Node(Token.CATCH,  catchNode,  tryBody);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  new  Node(Token.CATCH,  catchNode,  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  new  Node(Token.CATCH,  catchNode,  tryBody);	          Node    catchNode    =    new    Node(Token.CATCH,    tryBody);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	234	None	replace
2250	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(peek);  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).copyInformationFrom(peek);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(peek);	  Node    block(tryBody).copyInformationFrom(t);    	non-compiled	[CE]  ';'  expected	188	None	replace
2251	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTwin()  ||  tryBody.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTwin()  ||  tryBody.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTwin()  ||  tryBody.isAssignmentOp());	  Preconditions.checkState(tryBody.isTwin()    ||    tryBody.isTwin());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
2252	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTwin()  ||  tryBody.isImplicitPrototype());  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTwin()  ||  tryBody.isImplicitPrototype());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTwin()  ||  tryBody.isImplicitPrototype());	  Preconditions.checkState(tryBody.isTwin()    ||    tryBody.isTwin());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
2253	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType();	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	212	None	replace
2254	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  catchNode.getType();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  catchNode.getType();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  catchNode.getType();	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	212	None	replace
2255	[BUG]  [BUGGY]  Preconditions.checkState(twinNode.getType()  ==  Token.CATCH);  [CE]  cannot  find  symbol  twinNode  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(twinNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(twinNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tries.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  twinNode	45	None	replace
2256	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY,    catchNode);    Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	18	None	add
2257	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY,    catchNode);    Node  catchNode  =  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	18	None	add
2258	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY,    catchNode);    Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);	  	non-compiled	[CE]  ';'  expected	18	None	add
2259	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  block(tryBody.getType()  ==  Token.TRY,  catchNode);  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  block(tryBody.getType()  ==  Token.TRY,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY,    catchNode);    Node  block(tryBody.getType()  ==  Token.TRY,  catchNode);	  	non-compiled	[CE]  ';'  expected	18	None	add
2260	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY,  catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY,  catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY,    catchNode);    Node  catchNode  =  tryBody.getType()  ==  Token.TRY,  catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);	  	non-compiled	[CE]  ';'  expected	18	None	add
2261	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(lockNode.getType()  ==  Token.CATCH);  [CE]  cannot  find  symbol  lockNode  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(lockNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(lockNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  lockNode	211	None	replace
2262	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  cannot  find  symbol  tryNode  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  tryNode	211	None	replace
2263	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isCatch());    Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	81	None	add
2264	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isCatch());    Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	81	None	add
2265	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isCatch());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	81	3	add
2266	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isCatch());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	81	3	add
2267	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isCatch());    Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	81	None	add
2268	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isCatch());    Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	81	None	add
2269	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  [CE]  ')'  expected  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&	  	non-compiled	[CE]  ')'  expected	118	None	add
2270	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	222	3	replace
2271	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	222	3	replace
2272	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.THIS);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.THIS);	  Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	222	3	replace
2273	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.THIS);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.THIS);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.THIS);	  Preconditions.checkArgument(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	222	3	replace
2274	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody!=  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody!=  null  &&  tryBody.isCatch());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	74	3	replace
2275	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody!=  null  &&  tryBody.isCatch());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody!=  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody!=  null  &&  tryBody.isCatch());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	74	3	replace
2276	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isTwin(),  catchBody.isTwin());  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isTwin(),  catchBody.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isTwin(),  catchBody.isTwin());	  Preconditions.checkState(tryBody.isTwin(),    catchNode.isTwin());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
2277	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(blockNode.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.isEmpty());  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(blockNode.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(blockNode.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.isEmpty());	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	165	None	add
2278	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody!=  null);	          Preconditions.checkNotNull(tryBody);    	compilable	  [FE]  IllegalStateException  	180	3	replace
2279	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody!=  null);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody!=  null);	          Preconditions.checkNotNull(tryBody);    	compilable	  [FE]  IllegalStateException  	180	3	replace
2280	[BUG]  [BUGGY]  Preconditions.checkState(!tryNode.isCatch());  [CE]  cannot  find  symbol  tryNode  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryNode.isCatch());	          Preconditions.checkNotNull(tryBody);    	non-compiled	[CE]  cannot  find  symbol  tryNode	180	None	replace
2281	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.check(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.check(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.check(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  cannot  find  symbol	101	None	add
2282	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  cannot  find  symbol  tryNode  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryNode.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  cannot  find  symbol  tryNode	101	None	add
2283	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	101	None	add
2284	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	101	3	add
2285	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	101	3	add
2286	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	101	3	add
2287	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	101	3	add
2288	[BUG]  [BUGGY]  Node  block  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(lock.getType()  ==  Token.CATCH);  [CE]  incompatible  types  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(lock.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(lock.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getType()    ==    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	254	None	replace
2289	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getType()  ==  Token.CATCH;  [CE]  incompatible  types  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getType()  ==  Token.CATCH;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getType()  ==  Token.CATCH;	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block    =    tryBody.getType()    ==    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	254	None	replace
2290	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Preconditions.checkState(tryBody.isEmpty());  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node    blockNode    =    tryBody.copyInformationFrom(catchNode);    Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	248	None	add
2291	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Preconditions.checkState(peekNode.isCatch());  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Preconditions.checkState(peekNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node    blockNode    =    tryBody.copyInformationFrom(catchNode);    Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  Preconditions.checkState(peekNode.isCatch());	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	248	None	add
2292	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	246	None	add
2293	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	246	None	add
2294	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  block(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  block(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    Node  catchNode  =  block(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	246	None	add
2295	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  tryBody.getFirstChild();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    Node  catchNode  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	246	None	add
2296	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  tryBody.getType()!=  Token.TRY  &&  catchNode!=  null);  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  Node  catchNode  =  tryBody.getType()!=  Token.TRY  &&  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    Node  catchNode  =  tryBody.getType()!=  Token.TRY  &&  catchNode!=  null);	  	non-compiled	[CE]  ';'  expected	246	None	add
2297	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isFunction());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.isFunction());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	223	None	add
2298	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isFunction());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isFunction());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	223	None	add
2299	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isFunction());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isFunction());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	223	None	add
2300	[BUG]  [BUGGY]  Node  block(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	64	None	replace
2301	[BUG]  [BUGGY]  Node  block(tryBody.getType()  >>  Token.TRY);  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  >>  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  >>  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	64	None	replace
2302	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.THIS);  Node  block(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.THIS);  Node  block(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.THIS);  Node  block(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	64	None	replace
2303	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody  ==  null  &&  catchNode.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    	compilable	  [FE]  IllegalStateException  	76	3	replace
2304	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  catchNode.isBlock());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  &&  catchNode.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    	compilable	  [FE]  IllegalStateException  	76	3	replace
2305	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode!=  null  &&  catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(catchNode!=  null  &&  catchNode.isCatch());	  Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    	compilable	  [FE]  IllegalStateException  	76	3	replace
2306	[BUG]  [BUGGY]  Preconditions.checkState(catchNode!=  null  &&  catchNode.isCatch());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode!=  null  &&  catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode!=  null  &&  catchNode.isCatch());	  Preconditions.checkState(tryBody!=    null    &&    catchNode.isBlock());    	compilable	  [FE]  IllegalStateException  	76	3	replace
2307	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Node  catchNode  =  tryBody.getType()  ==  Token.FOR;  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Node  catchNode  =  tryBody.getType()  ==  Token.FOR;  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.FOR);    Node  catchNode  =  tryBody.getType()  ==  Token.FOR;  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	138	None	add
2308	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.FOR);    Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);	  	non-compiled	[CE]  ';'  expected	138	None	add
2309	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Node  catchNode  =  tryBody.getType()  ==  Token.FOR;  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  Node  catchNode  =  tryBody.getType()  ==  Token.FOR;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.FOR);    Node  catchNode  =  tryBody.getType()  ==  Token.FOR;	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	138	None	add
2310	[BUG]  [BUGGY]  Preconditions.checkState(block.getType()  ==  Token.TRY);  [CE]  cannot  find  symbol  block  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(block.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getType();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  cannot  find  symbol  block	68	None	replace
2311	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	218	3	replace
2312	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody!=  null  &&  tryBody.isBlock());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	218	3	replace
2313	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody  ==  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody  ==  null  ||  tryBody.isBlock());	  Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	218	3	replace
2314	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody  ==  null  ||  tryBody.isBlock());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody  ==  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody  ==  null  ||  tryBody.isBlock());	  Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	218	3	replace
2315	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(!tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(!tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(!tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	140	3	add
2316	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(!tryBody.isTry());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(!tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(!tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	140	3	add
2317	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  block(tryBody)  {  Preconditions.checkState(!tryBody.isTry());  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  block(tryBody)  {  Preconditions.checkState(!tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isTry());    Node  block(tryBody)  {  Preconditions.checkState(!tryBody.isTry());	  	non-compiled	[CE]  ';'  expected	140	None	add
2318	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  catchNode  =  block(tryBody).copyInformationFrom(tryNode);  Preconditions.checkState(!tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  catchNode  =  block(tryBody).copyInformationFrom(tryNode);  Preconditions.checkState(!tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isTry());    Node  catchNode  =  block(tryBody).copyInformationFrom(tryNode);  Preconditions.checkState(!tryBody.isTry());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	140	None	add
2319	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  catchNode  =  block(tryBody).copyInformationFrom(getNode());  Preconditions.checkState(!tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isTry());  Node  catchNode  =  block(tryBody).copyInformationFrom(getNode());  Preconditions.checkState(!tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isTry());    Node  catchNode  =  block(tryBody).copyInformationFrom(getNode());  Preconditions.checkState(!tryBody.isTry());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	140	None	add
2320	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    Node  block(tryBody)  {  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	83	None	add
2321	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	83	None	add
2322	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    Node  catchNode  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	83	None	add
2323	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    Node  catchNode  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	83	None	add
2324	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(tryBody!=  null  &&  catchNode.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(tryBody!=  null  &&  catchNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    Node  block(tryBody)  {  Preconditions.checkState(tryBody!=  null  &&  catchNode.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	83	None	add
2325	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  catchNode.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  catchNode.getType()  ==  Token.GETPROP);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    	compilable	  [FE]  IllegalStateException  	25	3	replace
2326	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  catchNode.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  catchNode.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  catchNode.getType()  ==  Token.GETPROP);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    	compilable	  [FE]  IllegalStateException  	25	3	replace
2327	[BUG]  [BUGGY]  Node  block  =  tryBody.getNext();  Preconditions.checkState(lock.isCatch());  [CE]  cannot  find  symbol  lock  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getNext();  Preconditions.checkState(lock.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getNext();  Preconditions.checkState(lock.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  cannot  find  symbol  lock	240	None	replace
2328	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    ==    Token.CATCH;    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	253	None	replace
2329	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  catchNode.getType()  ==  Token.CATCH;  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  catchNode.getType()  ==  Token.CATCH;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  catchNode.getType()  ==  Token.CATCH;	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchNode    =    tryBody.getType()    ==    Token.CATCH;    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	253	None	replace
2330	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(lockNode.getType()  ==  Token.TRY);  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(lockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(lockNode.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	169	None	add
2331	[BUG]  [BUGGY]  Preconditions.checkState(trial.getType()  ==  Token.TRY  &&  catchNode!=  null);  [CE]  cannot  find  symbol  trial  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(trial.getType()  ==  Token.TRY  &&  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(trial.getType()  ==  Token.TRY  &&  catchNode!=  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    tryNode!=    null);    	non-compiled	[CE]  cannot  find  symbol  trial	193	None	replace
2332	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  block(tryBody)  {  Preconditions.checkState(!tryBody.isCatch());  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  block(tryBody)  {  Preconditions.checkState(!tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isCatch());    Node  block(tryBody)  {  Preconditions.checkState(!tryBody.isCatch());	  	non-compiled	[CE]  ';'  expected	35	None	add
2333	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(!tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(!tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(!tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	35	3	add
2334	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(!tryBody.isCatch());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(!tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(!tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	35	3	add
2335	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  catchNode  =  block(tryBody).copyInformationFrom(trimNode);  Preconditions.checkState(!tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  Node  catchNode  =  block(tryBody).copyInformationFrom(trimNode);  Preconditions.checkState(!tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isCatch());    Node  catchNode  =  block(tryBody).copyInformationFrom(trimNode);  Preconditions.checkState(!tryBody.isCatch());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	35	None	add
2336	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	156	None	add
2337	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	156	None	add
2338	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isStatement());  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isStatement());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isStatement());	  Preconditions.checkArgument(tryBody.isCatch());    	non-compiled	[CE]  cannot  find  symbol	258	None	replace
2339	[BUG]  [BUGGY]  Preconditions.checkArgument(tryNode.isCatch());  [CE]  cannot  find  symbol  tryNode  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryNode.isCatch());	  Preconditions.checkArgument(tryBody.isCatch());    	non-compiled	[CE]  cannot  find  symbol  tryNode	258	None	replace
2340	[BUG]  [BUGGY]  Node  block  =  tryBody.getParent();  Preconditions.checkState(lock.isTry());  [CE]  cannot  find  symbol  lock  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getParent();  Preconditions.checkState(lock.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getParent();  Preconditions.checkState(lock.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  cannot  find  symbol  lock	10	None	replace
2341	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(lock.isCatch());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(lock.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getNext();    Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(lock.isCatch());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	239	None	add
2342	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNode()  ||  tryBody.isVoid());  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNode()  ||  tryBody.isVoid());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNode()  ||  tryBody.isVoid());	  Preconditions.checkState(tryBody.isNode()    ||    tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
2343	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(atchNode.getType()  ==  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(atchNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(atchNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchBody    =    tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	110	None	replace
2344	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    tryBody    =    block(tryBody).copyInformationFrom(tryBody);    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	160	None	replace
2345	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);	  Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalArgumentException  	245	3	replace
2346	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);	  Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalArgumentException  	245	3	replace
2347	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalArgumentException  	245	3	replace
2348	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalArgumentException  	245	3	replace
2349	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody!=  null  &&  tryBody.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock();  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody!=  null  &&  tryBody.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody!=  null  &&  tryBody.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock();	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    null    &&    tryBody.isBlock();    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	204	None	replace
2350	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  tryBody  =  null  &&  tryBody.isBlock();  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  tryBody  =  null  &&  tryBody.isBlock();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  tryBody  =  null  &&  tryBody.isBlock();	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    null    &&    tryBody.isBlock();    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	204	None	replace
2351	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    catchNode);    Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	39	None	add
2352	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH,  catchNode);  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    catchNode);    Node  catchNode  =  tryBody.getType()  ==  Token.CATCH,  catchNode);	  	non-compiled	[CE]  ';'  expected	39	None	add
2353	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH,  catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH,  catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    catchNode);    Node  catchNode  =  tryBody.getType()  ==  Token.CATCH,  catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);	  	non-compiled	[CE]  ';'  expected	39	None	add
2354	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  block(tryBody.getType()  ==  Token.CATCH,  catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  block(tryBody.getType()  ==  Token.CATCH,  catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    catchNode);    Node  catchNode  =  block(tryBody.getType()  ==  Token.CATCH,  catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	39	None	add
2355	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  Node  catchNode  =  block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    catchNode);    Node  catchNode  =  block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	39	None	add
2356	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  catchNode.getType()  ==  Token.TRY;  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  catchNode.getType()  ==  Token.TRY;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  catchNode.getType()  ==  Token.TRY;	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    catchNode    =    tryBody.getType()    ==    Token.TRY;    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	228	None	replace
2357	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    catchNode    =    tryBody.getType()    ==    Token.TRY;    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	228	None	replace
2358	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(glock.isCatch());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(glock.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(glock.isCatch());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	90	None	add
2359	[BUG]  [BUGGY]  Node  catchNode  =  tryBody!=  null?  tryBody.getFirstChild()  :  null;  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody!=  null?  tryBody.getFirstChild()  :  null;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody!=  null?  tryBody.getFirstChild()  :  null;	  Node    catchNode    =    tryBody.getFirstChild();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	52	None	replace
2360	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalArgumentException  	80	3	replace
2361	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalArgumentException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalArgumentException  	80	3	replace
2362	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody!=  null  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody!=  null  ||  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	80	3	replace
2363	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody!=  null  ||  tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody!=  null  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody!=  null  ||  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	80	3	replace
2364	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  catchNode.isNode());  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  catchNode.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  ||  catchNode.isNode());	  Preconditions.checkState(tryBody    ==    null    ||    tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol	205	None	replace
2365	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  block(tryBody)  {  Preconditions.checkState(!tryBody.isEmpty());  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  block(tryBody)  {  Preconditions.checkState(!tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isEmpty());    Node  block(tryBody)  {  Preconditions.checkState(!tryBody.isEmpty());	  	non-compiled	[CE]  ';'  expected	1	None	add
2366	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  catchNode  =  block(tryBody.getFirstChild());  Preconditions.checkState(!tryBody.isEmpty());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  catchNode  =  block(tryBody.getFirstChild());  Preconditions.checkState(!tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isEmpty());    Node  catchNode  =  block(tryBody.getFirstChild());  Preconditions.checkState(!tryBody.isEmpty());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	1	None	add
2367	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  catchNode  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isEmpty());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  catchNode  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isEmpty());    Node  catchNode  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(!tryBody.isEmpty());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	1	None	add
2368	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  catchNode  =  block(tryBody).copyInformationFrom(trimNode);  Preconditions.checkState(!tryBody.isEmpty());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  Node  catchNode  =  block(tryBody).copyInformationFrom(trimNode);  Preconditions.checkState(!tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isEmpty());    Node  catchNode  =  block(tryBody).copyInformationFrom(trimNode);  Preconditions.checkState(!tryBody.isEmpty());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	1	None	add
2369	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isCatch());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isCatch());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	236	None	add
2370	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	236	None	add
2371	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isCatch());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isCatch());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	236	None	add
2372	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.cloneTry();  Preconditions.checkState(tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.cloneTry();  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.cloneTry();  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    catchNode    =    tryBody.isTry();    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	14	None	replace
2373	[BUG]  [BUGGY]  Preconditions.checkState(taskNode.isBlock());  [CE]  cannot  find  symbol  taskNode  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(taskNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(taskNode.isBlock());	  Preconditions.checkState(callNode.isBlock());    	non-compiled	[CE]  cannot  find  symbol  taskNode	97	None	replace
2374	[BUG]  [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isCatch());  [CE]  cannot  find  symbol  lock  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  cannot  find  symbol  lock	237	None	replace
2375	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  block(tryBody)  {  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  block(tryBody)  {  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    ||    tryBody.isBlock());    Node  block(tryBody)  {  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());	  	non-compiled	[CE]  ';'  expected	71	None	add
2376	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    ||    tryBody.isBlock());    Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	71	None	add
2377	[BUG]  [BUGGY]  Preconditions.checkState(atchNode.isAssignmentOp()  ||  catchNode.isAssignmentOp());  [CE]  cannot  find  symbol  atchNode  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(atchNode.isAssignmentOp()  ||  catchNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(atchNode.isAssignmentOp()  ||  catchNode.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    catchNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol  atchNode	229	None	replace
2378	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isAssignmentOp()  ||  catchBody.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isAssignmentOp()  ||  catchBody.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isAssignmentOp()  ||  catchBody.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    catchNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	229	None	replace
2379	[BUG]  [BUGGY]  Preconditions.checkState(CatchNode.isAssignmentOp()  ||  catchNode.isAssignmentOp());  [CE]  cannot  find  symbol  CatchNode  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(CatchNode.isAssignmentOp()  ||  catchNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(CatchNode.isAssignmentOp()  ||  catchNode.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    catchNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol  CatchNode	229	None	replace
2380	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	41	None	add
2381	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isConstructor());  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isConstructor());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isConstructor());	  Preconditions.checkState(catchNode.isBlock());    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
2382	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(catchNode.isBlock());	  Preconditions.checkState(catchNode.isBlock());    	compilable	  [FE]  IllegalStateException  	96	3	replace
2383	[BUG]  [BUGGY]  Preconditions.checkArgument(catchNode.isBlock());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(catchNode.isBlock());	  Preconditions.checkState(catchNode.isBlock());    	compilable	  [FE]  IllegalStateException  	96	3	replace
2384	[BUG]  [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);	  Node    block(catchNode)    {    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	49	None	replace
2385	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	217	None	add
2386	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	217	3	add
2387	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	217	3	add
2388	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [CE]  cannot  find  symbol  preconditions  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody    ==    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  cannot  find  symbol  preconditions	217	None	add
2389	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  Node  catchNode  =  tryBody.getType()  ==  Token.FUNCTION;  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  Node  catchNode  =  tryBody.getType()  ==  Token.FUNCTION;  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.FUNCTION);    Node  catchNode  =  tryBody.getType()  ==  Token.FUNCTION;  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	134	None	add
2390	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.FUNCTION);    Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  ';'  expected	134	None	add
2391	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.check(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.check(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.check(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  cannot  find  symbol	62	None	add
2392	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  cannot  find  symbol  tryNode  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  cannot  find  symbol  tryNode	62	None	add
2393	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(block.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block(tryBody)  {  Preconditions.checkState(block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(block.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	62	None	add
2394	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	62	3	add
2395	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	62	3	add
2396	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	62	3	add
2397	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.TRY);        Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	62	3	add
2398	[BUG]  [BUGGY]  Preconditions.checkState(patchNode.isNode()  ||  catchNode.isNode());  [CE]  cannot  find  symbol  patchNode  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(patchNode.isNode()  ||  catchNode.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(patchNode.isNode()  ||  catchNode.isNode());	  Preconditions.checkState(tryBody.isNode()    ||    catchNode.isNode());    	non-compiled	[CE]  cannot  find  symbol  patchNode	251	None	replace
2399	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNone());  Node  block(tryBody.isEmpty());  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNone());  Node  block(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNone());  Node  block(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block(tryBody.isEmpty());    	non-compiled	[CE]  ';'  expected	153	None	replace
2400	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNull());  Node  block(tryBody.isEmpty());  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNull());  Node  block(tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNull());  Node  block(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block(tryBody.isEmpty());    	non-compiled	[CE]  ';'  expected	153	None	replace
2401	[BUG]  [BUGGY]  Node  block(tryBody).getType()  ==  Token.TRY;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).getType()  ==  Token.TRY;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).getType()  ==  Token.TRY;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody).getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	69	None	replace
2402	[BUG]  [BUGGY]  Node  block(tryBody).getType()  ==  Token.TRY;  Preconditions.checkState(block(tryBody).getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).getType()  ==  Token.TRY;  Preconditions.checkState(block(tryBody).getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).getType()  ==  Token.TRY;  Preconditions.checkState(block(tryBody).getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody).getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	69	None	replace
2403	[BUG]  [BUGGY]  Node  attemptBody  =  block(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  [CE]  no  suitable  method  found  for  block(boolean)  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  attemptBody  =  block(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  attemptBody  =  block(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    tryBody    =    block(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  no  suitable  method  found  for  block(boolean)	15	None	replace
2404	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isAssignmentOp()  ||!tryBody.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isAssignmentOp()  ||!tryBody.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isAssignmentOp()  ||!tryBody.isAssignmentOp());	  Preconditions.checkState(!tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
2405	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isAssignmentOp()  ||  catchNode.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isAssignmentOp()  ||  catchNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isAssignmentOp()  ||  catchNode.isAssignmentOp());	  Preconditions.checkState(!tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
2406	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	23	3	replace
2407	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	23	3	replace
2408	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.FOR  ||  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.FOR);    	compilable	  [FE]  IllegalStateException  	139	3	replace
2409	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR  ||  tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.FOR  ||  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.FOR);    	compilable	  [FE]  IllegalStateException  	139	3	replace
2410	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null,  tryBody.isTwin());  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null,  tryBody.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null,  tryBody.isTwin());	  Preconditions.checkState(tryBody!=    null    ||    tryBody.isTwin());    	non-compiled	[CE]  cannot  find  symbol	209	None	replace
2411	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryNode.isTwin());  [CE]  cannot  find  symbol  tryNode  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryNode.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  ||  tryNode.isTwin());	  Preconditions.checkState(tryBody!=    null    ||    tryBody.isTwin());    	non-compiled	[CE]  cannot  find  symbol  tryNode	209	None	replace
2412	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.CATCH);    Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	43	None	add
2413	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(lockNode.getType()  ==  Token.CATCH);  [CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(lockNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(lockNode.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  blockNode  is  already  defined  in  method  tryCatch(Node,Node)	210	None	add
2414	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(stopBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(stopBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    stopBody    =    tryBody.isTry();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	11	3	replace
2415	[BUG]  [BUGGY]  Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(stopBody.isTry());  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(stopBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(stopBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    stopBody    =    tryBody.isTry();    Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	11	3	replace
2416	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalArgumentException  	84	3	replace
2417	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [FE]  IllegalArgumentException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalArgumentException  	84	3	replace
2418	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	219	3	add
2419	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isTry());  [FE]  IllegalStateException  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkArgument(tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	219	3	add
2420	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isTry());    Node  catchNode  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isTry());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	219	None	add
2421	[BUG]  [BUGGY]  Preconditions.checkState(matchNode.isTwin()  ||  catchNode.isTwin());  [CE]  cannot  find  symbol  matchNode  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(matchNode.isTwin()  ||  catchNode.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(matchNode.isTwin()  ||  catchNode.isTwin());	  Preconditions.checkState(tryBody.isTwin()    ||    catchNode.isTwin());    	non-compiled	[CE]  cannot  find  symbol  matchNode	259	None	replace
2422	[BUG]  [BUGGY]  Node  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(block(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(block(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(block(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	65	None	replace
2423	[BUG]  [BUGGY]  Node  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(blockNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	65	None	replace
2424	[BUG]  [BUGGY]  Node  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(lockNode.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(lockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(lockNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	65	None	replace
2425	[BUG]  [BUGGY]  Node  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	65	None	replace
2426	[BUG]  [BUGGY]  Node  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(block.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(block.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	65	None	replace
2427	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isCatch());    Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	73	None	add
2428	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isCatch());    Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	73	None	add
2429	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isVarArgs());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isVarArgs());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isVarArgs());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isVarArgs());	  	compilable	  [FE]  IllegalStateException  	111	3	add
2430	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isVarArgs());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isVarArgs());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isVarArgs());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isVarArgs());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isVarArgs());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isVarArgs());	  	compilable	  [FE]  IllegalStateException  	111	3	add
2431	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isLabel());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isLabel());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isLabel());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isLabel());	  	compilable	  [FE]  IllegalStateException  	111	3	add
2432	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isLabel());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isLabel());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isLabel());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isLabel());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=        null        &&        tryBody.isBlock());        Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isLabel());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isLabel());	  	compilable	  [FE]  IllegalStateException  	111	3	add
2433	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isNone());  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isNone());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isNone());	  Preconditions.checkArgument(tryBody.isEmpty());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
2434	[BUG]  [BUGGY]  Preconditions.checkState(tryNode!=  null  &&  tryBody.isBlock());  preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  cannot  find  symbol  tryNode  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode!=  null  &&  tryBody.isBlock());  preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode!=  null  &&  tryBody.isBlock());  preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  cannot  find  symbol  tryNode	120	None	replace
2435	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  cannot  find  symbol  preconditions  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  cannot  find  symbol  preconditions	120	None	replace
2436	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  cannot  find  symbol  tryNode  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  cannot  find  symbol  tryNode	170	None	replace
2437	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(lockNode.getType()  ==  Token.TRY);  [CE]  cannot  find  symbol  lockNode  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(lockNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(lockNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    blockNode    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  cannot  find  symbol  lockNode	170	None	replace
2438	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isInstance());  Preconditions.checkState(tryBody.isInstance());  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isInstance());  Preconditions.checkState(tryBody.isInstance());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());        Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isInstance());  Preconditions.checkState(tryBody.isInstance());	  	non-compiled	[CE]  cannot  find  symbol	53	None	add
2439	[BUG]  [BUGGY]  Preconditions.checkState(atchNode.isAssignmentOp(),  tryBody);  [CE]  cannot  find  symbol  atchNode  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(atchNode.isAssignmentOp(),  tryBody);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(atchNode.isAssignmentOp(),  tryBody);	  Preconditions.checkState(tryBody.isAssignmentOp(),    catchNode);    	non-compiled	[CE]  cannot  find  symbol  atchNode	163	None	replace
2440	[BUG]  [BUGGY]  Node  block  =  tryBody.getParent();  Preconditions.checkState(lock.isCatch());  [CE]  cannot  find  symbol  lock  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getParent();  Preconditions.checkState(lock.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getParent();  Preconditions.checkState(lock.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  cannot  find  symbol  lock	91	None	replace
2441	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(catchNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(catchNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody).copyInformationFrom(catchNode);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	70	3	replace
2442	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(catchNode.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(catchNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(catchNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody).copyInformationFrom(catchNode);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	70	3	replace
2443	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	63	None	replace
2444	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getNext();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getNext();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getNext();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	63	None	replace
2445	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  catchNode  =  tryBody.getType()!=  Token.CATCH;  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  catchNode  =  tryBody.getType()!=  Token.CATCH;  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.CATCH);    Node  catchNode  =  tryBody.getType()!=  Token.CATCH;  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	37	None	add
2446	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  catchNode  =  tryBody.getType()  >>  Token.CATCH;  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  catchNode  =  tryBody.getType()  >>  Token.CATCH;  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.CATCH);    Node  catchNode  =  tryBody.getType()  >>  Token.CATCH;  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	37	None	add
2447	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.CATCH);    Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	37	None	add
2448	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  catchNode  =  tryBody.getType()!=  Token.CATCH;  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  catchNode  =  tryBody.getType()!=  Token.CATCH;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.CATCH);    Node  catchNode  =  tryBody.getType()!=  Token.CATCH;	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	37	None	add
2449	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  catchNode  =  tryBody.getType()  [Delete]  Token.CATCH;  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  catchNode  =  tryBody.getType()  [Delete]  Token.CATCH;  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.CATCH);    Node  catchNode  =  tryBody.getType()  [Delete]  Token.CATCH;  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	37	None	add
2450	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isEmpty());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isEmpty());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	147	None	add
2451	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isEmpty());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isEmpty());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	147	None	add
2452	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.isNode(),  catchNode.isNode());  [CE]  cannot  find  symbol  tryNode  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryNode.isNode(),  catchNode.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.isNode(),  catchNode.isNode());	  Preconditions.checkState(tryBody.isNode(),    catchNode.isNode());    	non-compiled	[CE]  cannot  find  symbol  tryNode	26	None	replace
2453	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  Node  block  =  catchNode.getParent();  Preconditions.checkState(block.isTry());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  Node  block  =  catchNode.getParent();  Preconditions.checkState(block.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Node  block  =  catchNode.getParent();  Preconditions.checkState(block.isTry());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	9	None	add
2454	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkState(lock.isTry());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkState(lock.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkState(lock.isTry());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	9	None	add
2455	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody!=  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody!=  null  ||  tryBody.isBlock());	  Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	78	3	replace
2456	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody!=  null  ||  tryBody.isBlock());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody!=  null  ||  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody!=  null  ||  tryBody.isBlock());	  Preconditions.checkState(tryBody    ==    null    ||    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	78	3	replace
2457	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryNode.isInstanceOp());  [CE]  cannot  find  symbol  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryNode.isInstanceOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryNode.isInstanceOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    tryNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	230	None	replace
2458	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryNode.isDeclaration());  [CE]  cannot  find  symbol  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryNode.isDeclaration());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryNode.isDeclaration());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    tryNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	230	None	replace
2459	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  catchNode  =  tryBody.getType()!=  Token.TRY;  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  catchNode  =  tryBody.getType()!=  Token.TRY;  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.TRY);    Node  catchNode  =  tryBody.getType()!=  Token.TRY;  Preconditions.checkState(tryBody.getType()!=  Token.TRY);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	16	None	add
2460	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  catchNode  =  tryBody.getType()  >>  Token.TRY;  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  catchNode  =  tryBody.getType()  >>  Token.TRY;  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.TRY);    Node  catchNode  =  tryBody.getType()  >>  Token.TRY;  Preconditions.checkState(tryBody.getType()!=  Token.TRY);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	16	None	add
2461	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.TRY);    Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(tryBody.getType()!=  Token.TRY);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	16	None	add
2462	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  catchNode  =  tryBody.getType()!=  Token.TRY;  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  Node  catchNode  =  tryBody.getType()!=  Token.TRY;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=    Token.TRY);    Node  catchNode  =  tryBody.getType()!=  Token.TRY;	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	16	None	add
2463	[BUG]  [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(!block(batchNode).isCatch());  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(!block(batchNode).isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode)  {  Preconditions.checkState(!block(batchNode).isCatch());	  Node    block(catchNode)    {    Preconditions.checkState(!block(catchNode).isCatch());    	non-compiled	[CE]  ';'  expected	47	None	replace
2464	[BUG]  [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(!block(catchNode).isCatch());  }  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(!block(catchNode).isCatch());  }  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode)  {  Preconditions.checkState(!block(catchNode).isCatch());  }	  Node    block(catchNode)    {    Preconditions.checkState(!block(catchNode).isCatch());    	non-compiled	[CE]  ';'  expected	47	None	replace
2465	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);	  	non-compiled	[CE]  ';'  expected	22	None	add
2466	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Node  block(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Node  block(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.NAME);    Node  block(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);	  	non-compiled	[CE]  ';'  expected	22	None	add
2467	[BUG]  [BUGGY]  Preconditions.checkState(this.isBlock());  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(this.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(this.isBlock());	  Preconditions.checkState(false.isBlock());    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	99	None	replace
2468	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNone()  ||  catchNode.isNone());  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isNone()  ||  catchNode.isNone());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNone()  ||  catchNode.isNone());	  Preconditions.checkState(tryBody.isNone());    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
2469	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(catchNode.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(catchNode.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	238	None	replace
2470	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [CE]  incompatible  types  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  incompatible  types	244	None	add
2471	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    Node  catchNode  =  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	244	None	add
2472	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]        IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()    ==    Token.TRY);    Node  block(tryBody)  {  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	244	None	add
2473	[BUG]  [BUGGY]  Node  attemptBody  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [CE]  no  suitable  method  found  for  block(boolean)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  attemptBody  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  attemptBody  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    tryBody    =    block(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  no  suitable  method  found  for  block(boolean)	89	None	replace
2474	[BUG]  [BUGGY]  Node  tryBody  =  block(tryBody.isCatch());  preconditions.checkState(tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  tryBody  =  block(tryBody.isCatch());  preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  tryBody  =  block(tryBody.isCatch());  preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    tryBody    =    block(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	89	None	replace
2475	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isTrue());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(!tryBody.isTrue());	  Preconditions.checkState(!tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	2	3	replace
2476	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isTrue());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isTrue());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isTrue());	  Preconditions.checkState(!tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	2	3	replace
2477	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isOK());  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isOK());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isOK());	  Preconditions.checkState(!tryBody.isEmpty());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
2478	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isOn());  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isOn());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isOn());	  Preconditions.checkState(!tryBody.isEmpty());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
2479	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Preconditions.check(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Preconditions.check(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Preconditions.checkState(tryBody.isCatch());    Preconditions.check(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());	  	non-compiled	[CE]  cannot  find  symbol	85	None	add
2480	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Preconditions.checkCatch(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Preconditions.checkCatch(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Preconditions.checkState(tryBody.isCatch());    Preconditions.checkCatch(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());	  	non-compiled	[CE]  cannot  find  symbol	85	None	add
2481	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryNode.isCatch());  Preconditions.checkState(tryBody.isCatch());  [CE]  cannot  find  symbol  tryNode  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryNode.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryNode.isCatch());  Preconditions.checkState(tryBody.isCatch());	  	non-compiled	[CE]  cannot  find  symbol  tryNode	85	None	add
2482	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(matchNode.isCatch());  Preconditions.checkState(matchNode.isCatch());  [CE]  cannot  find  symbol  matchNode  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(matchNode.isCatch());  Preconditions.checkState(matchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());        Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(matchNode.isCatch());  Preconditions.checkState(matchNode.isCatch());	  	non-compiled	[CE]  cannot  find  symbol  matchNode	85	None	add
2483	[BUG]  [BUGGY]  Node  catchNode  =  block(peekNode).copyInformationFrom(peekNode);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(peekNode).copyInformationFrom(peekNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(peekNode).copyInformationFrom(peekNode);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    block(tryBody).copyInformationFrom(peekNode);    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	202	None	replace
2484	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  Node  catchNode  =  block(tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  Node  catchNode  =  block(tryBody.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isTry());  Node  catchNode  =  block(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    catchNode    =    block(tryBody.isTry());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	196	None	replace
2485	[BUG]  [BUGGY]  Node  catchNode  =  tryBody!=  null?  tryBody.getLastChild()  :  null;  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody!=  null?  tryBody.getLastChild()  :  null;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody!=  null?  tryBody.getLastChild()  :  null;	          Node    catchNode    =    tryBody.getLastChild();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	178	None	replace
2486	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  catchNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  catchNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	21	3	replace
2487	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  catchNode.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  catchNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.TRY  ||  catchNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	21	3	replace
2488	[BUG]  [BUGGY]  Node  catchNode  =  tryCatch(tryBody,  catchNode);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryCatch(tryBody,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryCatch(tryBody,  catchNode);	          Node    catchNode    =    getCatch(tryBody);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	181	None	replace
2489	[BUG]  [BUGGY]  Node  catchNode  =  block(tryBody.isCatch());  preconditions.checkState(tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(tryBody.isCatch());  preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(tryBody.isCatch());  preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchNode    =    block(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	87	None	replace
2490	[BUG]  [BUGGY]  preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  cannot  find  symbol  preconditions  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  cannot  find  symbol  preconditions	119	None	replace
2491	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.cloneTree();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  blockNode  =  tryBody.cloneTree();	  Preconditions.checkState(tryBody.isEmpty());    Node    block(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	146	3	replace
2492	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.cloneTree();  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.cloneTree();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.cloneTree();	  Preconditions.checkState(tryBody.isEmpty());    Node    block(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	146	3	replace
2493	[BUG]  [BUGGY]  Node  block(tryBody.cloneTree());  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.cloneTree());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.cloneTree());	  Preconditions.checkState(tryBody.isEmpty());    Node    block(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  ';'  expected	146	None	replace
2494	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Node  block  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.isFunction());    Node  block  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	136	3	add
2495	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Node  block  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isFunction());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  Node  block  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isFunction());    Node  block  =  tryBody.getParent();  Preconditions.checkArgument(tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	136	3	add
2496	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	20	None	add
2497	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	20	3	add
2498	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	20	3	add
2499	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isTry());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.isTry());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	12	None	add
2500	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.cloneTree(),  catchNode;  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.cloneTree(),  catchNode;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.cloneTree(),  catchNode;	          Node    catchNode    =    tryBody.cloneTree();    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	177	None	replace
2501	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isConstructor());  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isConstructor());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  tryBody.isConstructor());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody    >=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
2502	[BUG]  [BUGGY]  Node  catchNode  =  block(TRY).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  block(TRY).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  block(TRY).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node    tryBody    =    block(tryBody).copyInformationFrom(tryBody);    Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	203	None	replace
2503	[BUG]  [BUGGY]  Node  block(tryBody.cloneTry());  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.cloneTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.cloneTry());	  Preconditions.checkState(tryBody.isCatch());    Node    block(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  ';'  expected	88	None	replace
2504	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.cloneTry();  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  blockNode  =  tryBody.cloneTry();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.cloneTry();	  Preconditions.checkState(tryBody.isCatch());    Node    block(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
2505	[BUG]  [BUGGY]  Preconditions.checkState(matchNode.isTwin());  [CE]  cannot  find  symbol  matchNode  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(matchNode.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(matchNode.isTwin());	  Preconditions.checkState(twinNode.isTwin());    	non-compiled	[CE]  cannot  find  symbol  matchNode	33	None	replace
2506	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody  ==  null  ||  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody  ==  null  ||  tryBody.isCatch());	  Preconditions.checkState(tryBody    ==    null    &&    tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	82	3	replace
2507	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody  ==  null  ||  tryBody.isCatch());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody  ==  null  ||  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody  ==  null  ||  tryBody.isCatch());	  Preconditions.checkState(tryBody    ==    null    &&    tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	82	3	replace
2508	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody!=  null  ||  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody!=  null  ||  tryBody.isCatch());	  Preconditions.checkState(tryBody    ==    null    &&    tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	82	3	replace
2509	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody!=  null  ||  tryBody.isCatch());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody!=  null  ||  tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody!=  null  ||  tryBody.isCatch());	  Preconditions.checkState(tryBody    ==    null    &&    tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	82	3	replace
2510	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH)  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH)  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH)	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY)    	non-compiled	[CE]  ';'  expected	192	None	replace
2511	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryNode.isCatch())  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryNode.isCatch())  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryNode.isCatch())	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY)    	non-compiled	[CE]  ';'  expected	192	None	replace
2512	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(matchNode,  catchNode);  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).copyInformationFrom(matchNode,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(matchNode,  catchNode);	  Node    block(tryBody).copyInformationFrom(catchNode,    catchNode);    	non-compiled	[CE]  ';'  expected	127	None	replace
2513	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(trimNode,  catchNode);  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).copyInformationFrom(trimNode,  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(trimNode,  catchNode);	  Node    block(tryBody).copyInformationFrom(catchNode,    catchNode);    	non-compiled	[CE]  ';'  expected	127	None	replace
2514	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  catchNode  ==  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  catchNode  ==  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    catchNode);    	compilable	  [FE]  IllegalStateException  	40	3	replace
2515	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  catchNode  ==  null);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  catchNode  ==  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  catchNode  ==  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    catchNode);    	compilable	  [FE]  IllegalStateException  	40	3	replace
2516	[BUG]  [BUGGY]  Node  block  =  tryBody.getParent();  Preconditions.checkState(lock.isEmpty());  [CE]  cannot  find  symbol  lock  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block  =  tryBody.getParent();  Preconditions.checkState(lock.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block  =  tryBody.getParent();  Preconditions.checkState(lock.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  lock	155	None	replace
2517	[BUG]  [BUGGY]  Preconditions.checkState(trial.getType()  ==  Token.CATCH,  tryNode);  [CE]  cannot  find  symbol  trial  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(trial.getType()  ==  Token.CATCH,  tryNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(trial.getType()  ==  Token.CATCH,  tryNode);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH,    tryNode);    	non-compiled	[CE]  cannot  find  symbol  trial	168	None	replace
2518	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  block(tryBody)  {  Preconditions.checkState(!tryBody.isFunction());  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  block(tryBody)  {  Preconditions.checkState(!tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isFunction());    Node  block(tryBody)  {  Preconditions.checkState(!tryBody.isFunction());	  	non-compiled	[CE]  ';'  expected	132	None	add
2519	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  block  =  tryBody.getNext();  Preconditions.checkState(!tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(!tryBody.isFunction());    Node  block  =  tryBody.getNext();  Preconditions.checkState(!tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	132	3	add
2520	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  block  =  tryBody.getNext();  Preconditions.checkState(!tryBody.isFunction());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  Node  block  =  tryBody.getNext();  Preconditions.checkState(!tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isFunction());    Node  block  =  tryBody.getNext();  Preconditions.checkState(!tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	132	3	add
2521	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  patchNode.isTwin());  [CE]  cannot  find  symbol  patchNode  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  patchNode.isTwin());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  patchNode.isTwin());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isTwin());    	non-compiled	[CE]  cannot  find  symbol  patchNode	208	None	replace
2522	[BUG]  [BUGGY]  Preconditions.checkState(atchNode.isAssignmentOp(),  catchNode.isAssignmentOp());  [CE]  cannot  find  symbol  atchNode  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(atchNode.isAssignmentOp(),  catchNode.isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(atchNode.isAssignmentOp(),  catchNode.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp(),    catchNode.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol  atchNode	122	None	replace
2523	[BUG]  [BUGGY]  Preconditions.checkArgument(tryNode.isTry());  [CE]  cannot  find  symbol  tryNode  [FE]    IllegalArgumentException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryNode.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryNode.isTry());	  Preconditions.checkArgument(tryBody.isTry());    	non-compiled	[CE]  cannot  find  symbol  tryNode	220	None	replace
2524	[BUG]  [BUGGY]  Node  block(tryNode)  {  Preconditions.checkState(!block(tryBody).isCatch());  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryNode)  {  Preconditions.checkState(!block(tryBody).isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryNode)  {  Preconditions.checkState(!block(tryBody).isCatch());	  Node    block(catchNode)    {    Preconditions.checkState(!block(tryBody).isCatch());    	non-compiled	[CE]  ';'  expected	50	None	replace
2525	[BUG]  [BUGGY]  Node  block(tryBody)  {  Preconditions.checkState(!block(catchNode).isAssignmentOp());  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody)  {  Preconditions.checkState(!block(catchNode).isAssignmentOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody)  {  Preconditions.checkState(!block(catchNode).isAssignmentOp());	  Node    block(catchNode)    {    Preconditions.checkState(!block(tryBody).isCatch());    	non-compiled	[CE]  ';'  expected	50	None	replace
2526	[BUG]  [BUGGY]  final  Node  block(tryBody)  {  Preconditions.checkState(!block(catchNode).isCatch());  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  final  Node  block(tryBody)  {  Preconditions.checkState(!block(catchNode).isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	final  Node  block(tryBody)  {  Preconditions.checkState(!block(catchNode).isCatch());	  Node    block(catchNode)    {    Preconditions.checkState(!block(tryBody).isCatch());    	non-compiled	[CE]  ';'  expected	50	None	replace
2527	[BUG]  [BUGGY]  Node  block(tryBody)  {  Preconditions.checkState(!block(catchNode).isEmpty());  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody)  {  Preconditions.checkState(!block(catchNode).isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody)  {  Preconditions.checkState(!block(catchNode).isEmpty());	  Node    block(catchNode)    {    Preconditions.checkState(!block(tryBody).isCatch());    	non-compiled	[CE]  ';'  expected	50	None	replace
2528	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkArgument(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkArgument(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	257	3	add
2529	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkArgument(tryBody.isCatch());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkArgument(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkArgument(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	257	3	add
2530	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody!=  null  &&  tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody!=  null  &&  tryBody.isFunction());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	157	3	replace
2531	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody!=  null  &&  tryBody.isFunction());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody!=  null  &&  tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody!=  null  &&  tryBody.isFunction());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	157	3	replace
2532	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(matchNode);  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody).copyInformationFrom(matchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(matchNode);	  Node    block(tryBody).copyInformationFrom(callNode);    	non-compiled	[CE]  ';'  expected	129	None	replace
2533	[BUG]  [BUGGY]  Node  block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(block(tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(block(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(block(tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	104	None	replace
2534	[BUG]  [BUGGY]  Node  block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(blockNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	104	None	replace
2535	[BUG]  [BUGGY]  Node  block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(lockNode.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(lockNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(lockNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	104	None	replace
2536	[BUG]  [BUGGY]  Node  block(tryBody.getType()  {  Token.CATCH);  Preconditions.checkState(lockNode.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  {  Token.CATCH);  Preconditions.checkState(lockNode.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  {  Token.CATCH);  Preconditions.checkState(lockNode.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	104	None	replace
2537	[BUG]  [BUGGY]  Node  block(tryBody)  ==  null;  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody)  ==  null;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody)  ==  null;	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block(tryBody)    ==    null;    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	66	None	replace
2538	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.getType()  ==  Token.CATCH);  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	106	None	add
2539	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.getType()  ==  Token.CATCH);  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()        ==        Token.CATCH);        Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(lock.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	106	None	add
2540	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  tryNode.getFirstChild()  ==  null);  [CE]  cannot  find  symbol  tryNode  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  tryNode.getFirstChild()  ==  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  tryNode.getFirstChild()  ==  null);	  Preconditions.checkState(tryBody.getType()!=    Token.TRY);    	non-compiled	[CE]  cannot  find  symbol  tryNode	17	None	replace
2541	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  tryNode.getFirstChild()  ==  catchNode);  [CE]  cannot  find  symbol  tryNode  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  tryNode.getFirstChild()  ==  catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.TRY  &&  tryNode.getFirstChild()  ==  catchNode);	  Preconditions.checkState(tryBody.getType()!=    Token.TRY);    	non-compiled	[CE]  cannot  find  symbol  tryNode	17	None	replace
2542	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(catchNode.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(catchNode.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(catchNode.isCatch());	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    catchNode    =    tryBody.getType()    ==    Token.TRY;    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	225	None	replace
2543	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.isEmpty());	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.isAssignmentOp());    	compilable	  [FE]  IllegalStateException  	124	3	replace
2544	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.isEmpty());  [FE]  IllegalStateException  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.isEmpty());	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.isAssignmentOp());    	compilable	  [FE]  IllegalStateException  	124	3	replace
2545	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.isInstanceOp());  [CE]  cannot  find  symbol  [FE]                            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.isInstanceOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.isInstanceOp());	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
2546	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.isOp());  [CE]  cannot  find  symbol  [FE]                              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.isOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.isOp());	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
2547	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody)  {  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody)  {  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    Node  block(tryBody)  {  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	79	None	add
2548	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	79	None	add
2549	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.getType()    ==    Token.CATCH);    Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	79	None	add
2550	[BUG]  [BUGGY]  Preconditions.checkState(patchNode.isBlock());  [CE]  cannot  find  symbol  patchNode  [FE]                                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(patchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(patchNode.isBlock());	  Preconditions.checkState(batchNode.isBlock());    	non-compiled	[CE]  cannot  find  symbol  patchNode	100	None	replace
2551	[BUG]  [BUGGY]  Preconditions.checkState(twinNode.isBlock());  [CE]  cannot  find  symbol  twinNode  [FE]                                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(twinNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(twinNode.isBlock());	  Preconditions.checkState(batchNode.isBlock());    	non-compiled	[CE]  cannot  find  symbol  twinNode	100	None	replace
2552	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY)&&  catchNode!=  null);  [CE]  not  a  statement  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY)&&  catchNode!=  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY)&&  catchNode!=  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY    &&    catchNode!=    null);    	non-compiled	[CE]  not  a  statement	247	None	replace
2553	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  Preconditions.checkState(lock.isEmpty());  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  Preconditions.checkState(lock.isEmpty());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(lock.isEmpty());	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	154	None	add
2554	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  [CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());        Node    block    =    tryBody.getParent();    Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();	  	non-compiled	[CE]  variable  block  is  already  defined  in  method  tryCatch(Node,Node)	154	None	add
2555	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);	  	non-compiled	[CE]  ';'  expected	24	None	add
2556	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  block(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.GETPROP);  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  Node  block(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.GETPROP);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY    ||    tryBody.getType()    ==    Token.GETPROP);    Node  block(tryBody.getType()  ==  Token.TRY  ||  catchNode.getType()  ==  Token.GETPROP);	  	non-compiled	[CE]  ';'  expected	24	None	add
2557	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isReference());  Preconditions.checkState(tryBody.isReference());  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isReference());  Preconditions.checkState(tryBody.isReference());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isReference());  Preconditions.checkState(tryBody.isReference());	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
2558	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isRequired());  Preconditions.checkState(tryBody.isRequired());  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isRequired());  Preconditions.checkState(tryBody.isRequired());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());        Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isRequired());  Preconditions.checkState(tryBody.isRequired());	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
2559	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  catchNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  catchNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	42	3	replace
2560	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  catchNode.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  catchNode.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.CATCH  ||  catchNode.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH    ||    tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	42	3	replace
2561	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null?  catchNode.isTwin()  :  null);  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody!=  null?  catchNode.isTwin()  :  null);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null?  catchNode.isTwin()  :  null);	  Preconditions.checkState(tryBody!=    null?    tryBody.isTwin()    :    null);    	non-compiled	[CE]  cannot  find  symbol	260	None	replace
2562	[BUG]  [BUGGY]  Node  block(peekNode).copyInformationFrom(trimNode);  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(peekNode).copyInformationFrom(trimNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(peekNode).copyInformationFrom(trimNode);	  Node    block(catchNode).copyInformationFrom(trimNode);    	non-compiled	[CE]  ';'  expected	51	None	replace
2563	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchBody  =  catchBody.getType()  ==  Token.CATCH;  [CE]  incompatible  types  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchBody  =  catchBody.getType()  ==  Token.CATCH;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchBody  =  catchBody.getType()  ==  Token.CATCH;	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchBody    =    tryBody.getType()    ==    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	109	None	replace
2564	[BUG]  [BUGGY]  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH;  [CE]  incompatible  types  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH;  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchBody  =  tryBody.getType()  ==  Token.CATCH;	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    catchBody    =    tryBody.getType()    ==    Token.CATCH;    Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  incompatible  types	109	None	replace
2565	[BUG]  [BUGGY]  Preconditions.checkState(tryBody,  tryBody.isNode(),  catchNode.isNode());  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody,  tryBody.isNode(),  catchNode.isNode());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody,  tryBody.isNode(),  catchNode.isNode());	  Preconditions.checkState(tryBody.isNode(),    tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
2566	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	174	3	replace
2567	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(block.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node    block    =    tryBody.getFirstChild();    Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	174	3	replace
2568	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Node  tryBody  =  block(tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  Node  tryBody  =  block(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isCatch());  Node  tryBody  =  block(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    tryBody    =    block(tryBody.isCatch());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	161	None	replace
2569	[BUG]  [BUGGY]  Preconditions.checkNotNull(tryBody);  Node  tryBody  =  block(tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkNotNull(tryBody);  Node  tryBody  =  block(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkNotNull(tryBody);  Node  tryBody  =  block(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    tryBody    =    block(tryBody.isCatch());    	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	161	None	replace
2570	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(stopBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(stopBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    stopBody    =    tryBody.isCatch();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	92	3	replace
2571	[BUG]  [BUGGY]  Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(stopBody.isCatch());  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(stopBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(stopBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    stopBody    =    tryBody.isCatch();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	92	3	replace
2572	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    stopBody    =    tryBody.isCatch();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	92	3	replace
2573	[BUG]  [BUGGY]  Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  stopBody  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    stopBody    =    tryBody.isCatch();    Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	92	3	replace
2574	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(catchNode.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(catchNode.isTry());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(catchNode.isTry());	  Preconditions.checkState(tryBody.isTry());    Node    catchNode    =    tryBody.getParent();    Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	250	None	replace
2575	[BUG]  [BUGGY]  Node  block(tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	103	None	replace
2576	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	103	None	replace
2577	[BUG]  [BUGGY]  Node  block(tryBody.getType()  >>  Token.CATCH);  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Node  block(tryBody.getType()  >>  Token.CATCH);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody.getType()  >>  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node    block(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  ';'  expected	103	None	replace
2578	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryBody.isDeclaration());  [CE]  cannot  find  symbol  [FE]                        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryBody.isDeclaration());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryBody.isDeclaration());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
2579	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryBody.isInstanceOp());  [CE]  cannot  find  symbol  [FE]                          IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryBody.isInstanceOp());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryBody.isInstanceOp());	  Preconditions.checkState(tryBody.isAssignmentOp()    ||    tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
2580	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFunction();  Preconditions.checkState(truncate.isFunction());  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFunction();  Preconditions.checkState(truncate.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFunction();  Preconditions.checkState(truncate.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block    =    tryBody.getFunction();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
2581	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFunction();  preconditions.checkState(tryBody.isFunction());  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFunction();  preconditions.checkState(tryBody.isFunction());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFunction();  preconditions.checkState(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    Node    block    =    tryBody.getFunction();    Preconditions.checkState(tryBody.isFunction());    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
2582	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  blockNode  =  block(catchNode.isBlock());  Preconditions.checkState(catchNode.isBlock());  [CE]  no  suitable  method  found  for  block(boolean)  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  blockNode  =  block(catchNode.isBlock());  Preconditions.checkState(catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isBlock());    Node  blockNode  =  block(catchNode.isBlock());  Preconditions.checkState(catchNode.isBlock());	  	non-compiled	[CE]  no  suitable  method  found  for  block(boolean)	95	None	add
2583	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  blockNode  =  block(catchNode).copyInformationFrom(catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(catchNode.isBlock());    Node  blockNode  =  block(catchNode).copyInformationFrom(catchNode);	  	compilable	  [FE]  IllegalStateException  	95	3	add
2584	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  blockNode  =  block(catchNode).copyInformationFrom(catchNode);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  blockNode  =  block(catchNode).copyInformationFrom(catchNode);  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isBlock());    Node  blockNode  =  block(catchNode).copyInformationFrom(catchNode);	  	compilable	  [FE]  IllegalStateException  	95	3	add
2585	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  blockNode  =  block(catchNode).copyInformationFrom(blockNode);  Preconditions.checkState(catchNode.isBlock());  [CE]  variable  blockNode  might  not  have  been  initialized  [FE]        IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  blockNode  =  block(catchNode).copyInformationFrom(blockNode);  Preconditions.checkState(catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isBlock());    Node  blockNode  =  block(catchNode).copyInformationFrom(blockNode);  Preconditions.checkState(catchNode.isBlock());	  	non-compiled	[CE]  variable  blockNode  might  not  have  been  initialized	95	None	add
2586	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  blockNode  =  block(catchNode.getFirstChild());  Preconditions.checkState(catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(catchNode.isBlock());    Node  blockNode  =  block(catchNode.getFirstChild());  Preconditions.checkState(catchNode.isBlock());	  	compilable	  [FE]  IllegalStateException  	95	3	add
2587	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  blockNode  =  block(catchNode.getFirstChild());  Preconditions.checkState(catchNode.isBlock());  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(catchNode.isBlock());  Node  blockNode  =  block(catchNode.getFirstChild());  Preconditions.checkState(catchNode.isBlock());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isBlock());    Node  blockNode  =  block(catchNode.getFirstChild());  Preconditions.checkState(catchNode.isBlock());	  	compilable	  [FE]  IllegalStateException  	95	3	add
2588	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isAssignableFrom(tryNode));  [CE]  cannot  find  symbol  tryNode  [FE]    IllegalStateException    [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(!tryBody.isAssignableFrom(tryNode));  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isAssignableFrom(tryNode));	  Preconditions.checkState(!tryBody.isCatch());    	non-compiled	[CE]  cannot  find  symbol  tryNode	36	None	replace
2589	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTwin());  Node  catchNode  =  block(tryBody.isCatch());  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {      [BUGGY]  Preconditions.checkState(tryBody.isTwin());  Node  catchNode  =  block(tryBody.isCatch());  [BUGGY]      Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTwin());  Node  catchNode  =  block(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    Node    catchNode    =    block(tryBody.isCatch());    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
