bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(!tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	17	3	replace
2	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(!tryBody.isEmpty());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	17	3	replace
3	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkArgument(tryBody.isEmpty());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalArgumentException  	17	3	replace
4	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isEmpty());  [FE]  IllegalArgumentException  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkArgument(tryBody.isEmpty());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalArgumentException  	17	3	replace
5	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	18	3	add
6	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());    Preconditions.checkState(tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	18	3	add
7	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  block(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  block(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());    Node  block(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());	  	non-compiled	[CE]  ';'  expected	18	None	add
8	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  catchNode  =  block(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  catchNode  =  block(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());    Node  catchNode  =  block(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	18	None	add
9	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	18	3	add
10	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	18	3	add
11	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  stopBody  =  tryBody.isTry();  Preconditions.checkState(tryBody.isTry());  [CE]  incompatible  types  [FE]            IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  stopBody  =  tryBody.isTry();  Preconditions.checkState(tryBody.isTry());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());    Node  stopBody  =  tryBody.isTry();  Preconditions.checkState(tryBody.isTry());	  	non-compiled	[CE]  incompatible  types	18	None	add
12	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	18	3	add
13	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isTry());	  	compilable	  [FE]  IllegalStateException  	18	3	add
14	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  catchNode  =  tryBody.isTry();  Preconditions.checkState(tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  catchNode  =  tryBody.isTry();  Preconditions.checkState(tryBody.isTry());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());    Node  catchNode  =  tryBody.isTry();  Preconditions.checkState(tryBody.isTry());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	18	None	add
15	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  tryBody  =  block(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  tryBody  =  block(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());    Node  tryBody  =  block(tryBody.isTry());  Preconditions.checkState(tryBody.isTry());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	18	None	add
16	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	8	3	replace
17	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	8	3	replace
18	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	8	3	replace
19	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY,  catchNode);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	8	3	replace
20	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	8	3	replace
21	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	8	3	replace
22	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	8	3	replace
23	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.NAME);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	8	3	replace
24	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	8	3	replace
25	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.GETPROP);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	8	3	replace
26	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNode(),  catchNode.isNode());  [CE]  cannot  find  symbol  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isNode(),  catchNode.isNode());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNode(),  catchNode.isNode());	  Preconditions.checkState(tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
27	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNode()  ||  tryBody.isNode());  [CE]  cannot  find  symbol  [FE]            IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isNode()  ||  tryBody.isNode());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNode()  ||  tryBody.isNode());	  Preconditions.checkState(tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
28	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNode(),  catchNode);  [CE]  cannot  find  symbol  [FE]              IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isNode(),  catchNode);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNode(),  catchNode);	  Preconditions.checkState(tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
29	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNode()  &&  catchNode.isNode());  [CE]  cannot  find  symbol  [FE]                IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isNode()  &&  catchNode.isNode());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNode()  &&  catchNode.isNode());	  Preconditions.checkState(tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
30	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNode(),  tryBody.isNode());  [CE]  cannot  find  symbol  [FE]                  IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isNode(),  tryBody.isNode());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNode(),  tryBody.isNode());	  Preconditions.checkState(tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
31	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTwin(),  catchNode.isTwin());  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isTwin(),  catchNode.isTwin());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTwin(),  catchNode.isTwin());	  Preconditions.checkState(tryBody.isTwin());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
32	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTwin()  ||  tryBody.isTwin());  [CE]  cannot  find  symbol  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isTwin()  ||  tryBody.isTwin());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTwin()  ||  tryBody.isTwin());	  Preconditions.checkState(tryBody.isTwin());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
33	[BUG]  [BUGGY]  Preconditions.checkState(twinNode.isTwin());  [CE]  cannot  find  symbol  twinNode  [FE]            IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(twinNode.isTwin());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(twinNode.isTwin());	  Preconditions.checkState(tryBody.isTwin());    	non-compiled	[CE]  cannot  find  symbol  twinNode	20	None	replace
34	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTwin()  &&  catchNode.isCatch());  [CE]  cannot  find  symbol  [FE]              IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isTwin()  &&  catchNode.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTwin()  &&  catchNode.isCatch());	  Preconditions.checkState(tryBody.isTwin());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
35	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(!tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	2	3	replace
36	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(!tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	2	3	replace
37	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()!=  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	4	3	replace
38	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()!=  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()!=  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	4	3	replace
39	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	4	3	replace
40	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  catchNode);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	4	3	replace
41	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	4	3	replace
42	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	4	3	replace
43	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	4	3	replace
44	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	4	3	replace
45	[BUG]  [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.CATCH);  [CE]  cannot  find  symbol  tries  [FE]            IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tries.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  tries	4	None	replace
46	[BUG]  [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(tryBody.isCatch());  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode)  {  Preconditions.checkState(tryBody.isCatch());	      	non-compiled	[CE]  ';'  expected	13	None	replace
47	[BUG]  [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(!block(catchNode).isCatch());  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(!block(catchNode).isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode)  {  Preconditions.checkState(!block(catchNode).isCatch());	      	non-compiled	[CE]  ';'  expected	13	None	replace
48	[BUG]  [BUGGY]  Node  block(catchNode).copyInformationFrom(tryBody);  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Node  block(catchNode).copyInformationFrom(tryBody);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode).copyInformationFrom(tryBody);	      	non-compiled	[CE]  ';'  expected	13	None	replace
49	[BUG]  [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode)  {  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	      	non-compiled	[CE]  ';'  expected	13	None	replace
50	[BUG]  [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(!block(tryBody).isCatch());  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Node  block(catchNode)  {  Preconditions.checkState(!block(tryBody).isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode)  {  Preconditions.checkState(!block(tryBody).isCatch());	      	non-compiled	[CE]  ';'  expected	13	None	replace
51	[BUG]  [BUGGY]  Node  block(catchNode).copyInformationFrom(trimNode);  [CE]  ';'  expected  [FE]              IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Node  block(catchNode).copyInformationFrom(trimNode);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(catchNode).copyInformationFrom(trimNode);	      	non-compiled	[CE]  ';'  expected	13	None	replace
52	[BUG]  [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Node  catchNode  =  tryBody.getFirstChild();  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  catchNode  =  tryBody.getFirstChild();	      	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	13	None	replace
53	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	5	3	add
54	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());    Preconditions.checkState(tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	5	3	add
55	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  block(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  block(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());    Node  block(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());	  	non-compiled	[CE]  ';'  expected	5	None	add
56	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  catchNode  =  tryBody.isFunction();  Preconditions.checkState(tryBody.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  catchNode  =  tryBody.isFunction();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());    Node  catchNode  =  tryBody.isFunction();  Preconditions.checkState(tryBody.isFunction());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	5	None	add
57	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFunction();  Preconditions.checkState(tryBody.isFunction());  [CE]  cannot  find  symbol  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFunction();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFunction();  Preconditions.checkState(tryBody.isFunction());	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
58	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  stopBody  =  tryBody.isFunction();  Preconditions.checkState(tryBody.isFunction());  [CE]  incompatible  types  [FE]            IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  stopBody  =  tryBody.isFunction();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());    Node  stopBody  =  tryBody.isFunction();  Preconditions.checkState(tryBody.isFunction());	  	non-compiled	[CE]  incompatible  types	5	None	add
59	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  block(tryBody.isFunction());  [CE]  ';'  expected  [FE]              IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  block(tryBody.isFunction());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());    Node  block(tryBody.isFunction());	  	non-compiled	[CE]  ';'  expected	5	None	add
60	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());    Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.isFunction());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	5	None	add
61	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.isFunction();  Preconditions.checkState(tryBody.isFunction());  [CE]  incompatible  types  [FE]                  IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.isFunction();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.isFunction();  Preconditions.checkState(tryBody.isFunction());	  	non-compiled	[CE]  incompatible  types	5	None	add
62	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	7	3	add
63	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	7	3	add
64	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	7	None	add
65	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block(tryBody.getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	7	None	add
66	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block(tryBody)  ==  null;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	7	None	add
67	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	7	None	add
68	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  incompatible  types  [FE]              IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  incompatible  types	7	None	add
69	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody).getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody).getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block(tryBody).getType()  ==  Token.TRY);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	7	None	add
70	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block(tryBody).copyInformationFrom(catchNode);  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	7	None	add
71	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	15	3	replace
72	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  ||  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	15	3	replace
73	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	15	3	replace
74	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  tryBody.isCatch());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	15	3	replace
75	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	15	3	replace
76	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  catchNode.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	15	3	replace
77	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	15	3	replace
78	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  ||  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	15	3	replace
79	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	15	3	replace
80	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	15	3	replace
81	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	15	3	replace
82	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  &&  tryBody.isCatch());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	15	3	replace
83	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	15	3	replace
84	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	15	3	replace
85	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	1	3	add
86	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());    Preconditions.checkState(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	1	3	add
87	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());    Node  catchNode  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	1	None	add
88	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());    Node  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());	  	non-compiled	[CE]  ';'  expected	1	None	add
89	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());    Node  tryBody  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	1	None	add
90	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	1	3	add
91	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	1	3	add
92	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  stopBody  =  tryBody.isCatch();  Preconditions.checkState(tryBody.isCatch());  [CE]  incompatible  types  [FE]              IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  stopBody  =  tryBody.isCatch();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());    Node  stopBody  =  tryBody.isCatch();  Preconditions.checkState(tryBody.isCatch());	  	non-compiled	[CE]  incompatible  types	1	None	add
93	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  catchBody  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [CE]  no  suitable  method  found  for  block(boolean)  [FE]                IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  catchBody  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());    Node  catchBody  =  block(tryBody.isCatch());  Preconditions.checkState(tryBody.isCatch());	  	non-compiled	[CE]  no  suitable  method  found  for  block(boolean)	1	None	add
94	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  tryBody.isCatch();  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]                  IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  tryBody.isCatch();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());    Node  catchNode  =  tryBody.isCatch();  Preconditions.checkState(tryBody.isCatch());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	1	None	add
95	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(catchNode.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(catchNode.isBlock());	  Preconditions.checkState(tryNode.isBlock());    	compilable	  [FE]  IllegalStateException  	11	3	replace
96	[BUG]  [BUGGY]  Preconditions.checkState(catchNode.isBlock());  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(catchNode.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(catchNode.isBlock());	  Preconditions.checkState(tryNode.isBlock());    	compilable	  [FE]  IllegalStateException  	11	3	replace
97	[BUG]  [BUGGY]  Preconditions.checkState(callNode.isBlock());  [CE]  cannot  find  symbol  callNode  [FE]                      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(callNode.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(callNode.isBlock());	  Preconditions.checkState(tryNode.isBlock());    	non-compiled	[CE]  cannot  find  symbol  callNode	11	None	replace
98	[BUG]  [BUGGY]  Preconditions.checkState(t.isBlock());  [CE]  cannot  find  symbol  t  [FE]                        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(t.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(t.isBlock());	  Preconditions.checkState(tryNode.isBlock());    	non-compiled	[CE]  cannot  find  symbol  t	11	None	replace
99	[BUG]  [BUGGY]  Preconditions.checkState(false.isBlock());  [CE]  boolean  cannot  be  dereferenced  [FE]                          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(false.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(false.isBlock());	  Preconditions.checkState(tryNode.isBlock());    	non-compiled	[CE]  boolean  cannot  be  dereferenced	11	None	replace
100	[BUG]  [BUGGY]  Preconditions.checkState(batchNode.isBlock());  [CE]  cannot  find  symbol  batchNode  [FE]                            IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(batchNode.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(batchNode.isBlock());	  Preconditions.checkState(tryNode.isBlock());    	non-compiled	[CE]  cannot  find  symbol  batchNode	11	None	replace
101	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	3	3	add
102	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	3	3	add
103	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	3	None	add
104	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block(tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	3	None	add
105	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  catchNode  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	3	None	add
106	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	3	3	add
107	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	3	3	add
108	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  incompatible  types  [FE]              IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  incompatible  types	3	None	add
109	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  incompatible  types  [FE]                IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  catchBody  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  incompatible  types	3	None	add
110	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchBody  =  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  catchBody  =  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	3	None	add
111	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	14	3	add
112	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	14	3	add
113	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock());  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node  tryBody  =  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  ';'  expected	14	None	add
114	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	14	3	add
115	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	14	3	add
116	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node  tryBody  =  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  ';'  expected	14	None	add
117	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	14	None	add
118	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	14	3	add
119	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	compilable	  [FE]  IllegalStateException  	14	3	add
120	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  cannot  find  symbol  preconditions  [FE]                IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  cannot  find  symbol  preconditions	14	None	add
121	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  >=  null  &&  tryBody.isBlock());  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Preconditions.checkState(tryBody  >=  null  &&  tryBody.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Preconditions.checkState(tryBody  >=  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	14	None	add
122	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp(),  catchNode.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                  IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp(),  catchNode.isAssignmentOp());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp(),  catchNode.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
123	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryBody.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryBody.isAssignmentOp());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryBody.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
124	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.isAssignmentOp());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH  ||  tryBody.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
125	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  &&  tryCatchNode.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  &&  tryCatchNode.isAssignmentOp());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp()  &&  tryCatchNode.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
126	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(!tryBody.isAssignmentOp());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
127	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(catchNode,  catchNode);  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Node  block(tryBody).copyInformationFrom(catchNode,  catchNode);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(catchNode,  catchNode);	  Node    block(tryBody).copyInformationFrom(catchNode);    	non-compiled	[CE]  ';'  expected	9	None	replace
128	[BUG]  [BUGGY]  Node  block(tryNode).copyInformationFrom(catchNode);  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Node  block(tryNode).copyInformationFrom(catchNode);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryNode).copyInformationFrom(catchNode);	  Node    block(tryBody).copyInformationFrom(catchNode);    	non-compiled	[CE]  ';'  expected	9	None	replace
129	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(callNode);  [CE]  ';'  expected  [FE]                    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Node  block(tryBody).copyInformationFrom(callNode);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(callNode);	  Node    block(tryBody).copyInformationFrom(catchNode);    	non-compiled	[CE]  ';'  expected	9	None	replace
130	[BUG]  [BUGGY]  Node  block(peekNode).copyInformationFrom(catchNode);  [CE]  ';'  expected  [FE]                      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Node  block(peekNode).copyInformationFrom(catchNode);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(peekNode).copyInformationFrom(catchNode);	  Node    block(tryBody).copyInformationFrom(catchNode);    	non-compiled	[CE]  ';'  expected	9	None	replace
131	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(catchNode));  [CE]  ';'  expected  [FE]                        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Node  block(tryBody).copyInformationFrom(catchNode));  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(catchNode));	  Node    block(tryBody).copyInformationFrom(catchNode);    	non-compiled	[CE]  ';'  expected	9	None	replace
132	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(!tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	6	3	replace
133	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(!tryBody.isFunction());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	6	3	replace
134	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	6	3	replace
135	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	6	3	replace
136	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	6	3	replace
137	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkArgument(tryBody.isFunction());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isFunction());	  Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	6	3	replace
138	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.FOR);	  Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	6	3	replace
139	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.FOR);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.FOR);	  Preconditions.checkState(tryBody.isFunction());    	compilable	  [FE]  IllegalStateException  	6	3	replace
140	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(!tryBody.isTry());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(!tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	19	3	replace
141	[BUG]  [BUGGY]  Preconditions.checkState(!tryBody.isTry());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(!tryBody.isTry());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(!tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	19	3	replace
142	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.isTry());  [CE]  cannot  find  symbol  tryNode  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryNode.isTry());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.isTry());	  Preconditions.checkState(tryBody.isTry());    	non-compiled	[CE]  cannot  find  symbol  tryNode	19	None	replace
143	[BUG]  [BUGGY]      Node  catchNode  =  tryBody.getNext();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]      Node  catchNode  =  tryBody.getNext();  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	        Node  catchNode  =  tryBody.getNext();	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	12	None	add
144	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	16	3	add
145	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());    Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	16	3	add
146	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());    Node  block(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  ';'  expected	16	None	add
147	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	16	3	add
148	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	16	3	add
149	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.isEmpty();  Preconditions.checkState(tryBody.isEmpty());  [CE]  incompatible  types  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.isEmpty();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.isEmpty();  Preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  incompatible  types	16	None	add
150	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	16	3	add
151	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	16	3	add
152	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  catchNode  =  tryBody.isEmpty();  Preconditions.checkState(tryBody.isEmpty());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]              IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  catchNode  =  tryBody.isEmpty();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());    Node  catchNode  =  tryBody.isEmpty();  Preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	16	None	add
153	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block(tryBody.isEmpty());  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block(tryBody.isEmpty());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());    Node  block(tryBody.isEmpty());	  	non-compiled	[CE]  ';'  expected	16	None	add
154	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	16	3	add
155	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());    Node  block  =  tryBody.getParent();  Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	16	3	add
156	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	15	3	replace
157	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  tryBody.isFunction());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	15	3	replace
158	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isNode());  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isNode());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  tryBody.isNode());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
159	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  block(tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  block(tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());    Node  catchNode  =  block(tryBody.isCatch());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	1	None	add
160	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());    Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody.isCatch());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	1	None	add
161	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  block(tryBody.isCatch());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  tryBody  =  block(tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());    Node  tryBody  =  block(tryBody.isCatch());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	1	None	add
162	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                  IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isAssignmentOp());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  tryBody.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
163	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp(),  catchNode);  [CE]  cannot  find  symbol  [FE]                    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp(),  catchNode);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp(),  catchNode);	  Preconditions.checkState(tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
164	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.isAssignmentOp()  :  tryBody);  [CE]  cannot  find  symbol  [FE]                      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.isAssignmentOp()  :  tryBody);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null?  tryBody.isAssignmentOp()  :  tryBody);	  Preconditions.checkState(tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
165	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	16	3	add
166	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isEmpty());	  	compilable	  [FE]  IllegalStateException  	16	3	add
167	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  tryBody  =  block(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isEmpty());  Node  tryBody  =  block(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isEmpty());    Node  tryBody  =  block(tryBody.isEmpty());  Preconditions.checkState(tryBody.isEmpty());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	16	None	add
168	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  tryNode);  [CE]  cannot  find  symbol  tryNode  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  tryNode);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.CATCH,  tryNode);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	non-compiled	[CE]  cannot  find  symbol  tryNode	4	None	replace
169	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	7	3	add
170	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	7	3	add
171	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	7	3	add
172	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  blockNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	7	3	add
173	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	7	3	add
174	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	compilable	  [FE]  IllegalStateException  	7	3	add
175	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  block(tryBody.getType());  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  block(tryBody.getType());  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  catchNode  =  block(tryBody.getType());  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	7	None	add
176	[BUG]  [BUGGY]      Node  catchNode  =  tryBody.getParent();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]      Node  catchNode  =  tryBody.getParent();  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	        Node  catchNode  =  tryBody.getParent();	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	12	None	add
177	[BUG]  [BUGGY]      Node  catchNode  =  tryBody.cloneTree();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]      Node  catchNode  =  tryBody.cloneTree();  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	        Node  catchNode  =  tryBody.cloneTree();	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	12	None	add
178	[BUG]  [BUGGY]      Node  catchNode  =  tryBody.getLastChild();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]      Node  catchNode  =  tryBody.getLastChild();  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	        Node  catchNode  =  tryBody.getLastChild();	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	12	None	add
179	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]      Preconditions.checkNotNull(tryBody);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	        Preconditions.checkNotNull(tryBody);	  	compilable	  [FE]  IllegalStateException  	12	3	add
180	[BUG]  [BUGGY]      Preconditions.checkNotNull(tryBody);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]      Preconditions.checkNotNull(tryBody);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	        Preconditions.checkNotNull(tryBody);	  	compilable	  [FE]  IllegalStateException  	12	3	add
181	[BUG]  [BUGGY]      Node  catchNode  =  getCatch(tryBody);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]      Node  catchNode  =  getCatch(tryBody);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	        Node  catchNode  =  getCatch(tryBody);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	12	None	add
182	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  catchNode  =  tryBody.getFunction();  Preconditions.checkState(tryBody.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  catchNode  =  tryBody.getFunction();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());    Node  catchNode  =  tryBody.getFunction();  Preconditions.checkState(tryBody.isFunction());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	5	None	add
183	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  tryBody  =  block(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  tryBody  =  block(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());    Node  tryBody  =  block(tryBody.isFunction());  Preconditions.checkState(tryBody.isFunction());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	5	None	add
184	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());    Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	5	None	add
185	[BUG]  [BUGGY]  Preconditions.checkState(testNode.isBlock());  [CE]  cannot  find  symbol  testNode  [FE]                    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(testNode.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(testNode.isBlock());	  Preconditions.checkState(tryNode.isBlock());    	non-compiled	[CE]  cannot  find  symbol  testNode	11	None	replace
186	[BUG]  [BUGGY]  Preconditions.checkState(tries.isBlock());  [CE]  cannot  find  symbol  tries  [FE]                      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tries.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tries.isBlock());	  Preconditions.checkState(tryNode.isBlock());    	non-compiled	[CE]  cannot  find  symbol  tries	11	None	replace
187	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.isCatch());  [CE]  cannot  find  symbol  tryNode  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryNode.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.isCatch());	  Preconditions.checkState(tryBody.isCatch());    	non-compiled	[CE]  cannot  find  symbol  tryNode	2	None	replace
188	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(t);  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Node  block(tryBody).copyInformationFrom(t);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(t);	  Node    block(tryBody).copyInformationFrom(catchNode);    	non-compiled	[CE]  ';'  expected	9	None	replace
189	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(false);  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Node  block(tryBody).copyInformationFrom(false);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(false);	  Node    block(tryBody).copyInformationFrom(catchNode);    	non-compiled	[CE]  ';'  expected	9	None	replace
190	[BUG]  [BUGGY]  Node  block(tryBody).copyInformationFrom(peekNode);  [CE]  ';'  expected  [FE]                    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Node  block(tryBody).copyInformationFrom(peekNode);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  block(tryBody).copyInformationFrom(peekNode);	  Node    block(tryBody).copyInformationFrom(catchNode);    	non-compiled	[CE]  ';'  expected	9	None	replace
191	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryNode.isCatch());  [CE]  cannot  find  symbol  tryNode  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryNode.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryNode.isCatch());	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  cannot  find  symbol  tryNode	8	None	replace
192	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY)  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY)  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY)	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  ';'  expected	8	None	replace
193	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryNode!=  null);  [CE]  cannot  find  symbol  tryNode  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryNode!=  null);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  tryNode!=  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	non-compiled	[CE]  cannot  find  symbol  tryNode	8	None	replace
194	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkNotNull(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	19	3	replace
195	[BUG]  [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkNotNull(tryBody.isTry());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkNotNull(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalStateException  	19	3	replace
196	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  catchNode  =  block(tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  catchNode  =  block(tryBody.isTry());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());    Node  catchNode  =  block(tryBody.isTry());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	18	None	add
197	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  tryBody  =  block(tryBody.isTry());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  tryBody  =  block(tryBody.isTry());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());    Node  tryBody  =  block(tryBody.isTry());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	18	None	add
198	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	17	3	replace
199	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  tryBody.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    	compilable	  [FE]  IllegalStateException  	17	3	replace
200	[BUG]  [BUGGY]  Preconditions.checkState(tryNode.isEmpty());  [CE]  cannot  find  symbol  tryNode  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryNode.isEmpty());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryNode.isEmpty());	  Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  tryNode	17	None	replace
201	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node  tryBody  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	14	None	add
202	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Node  tryBody  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Node  tryBody  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node  tryBody  =  block(tryBody).copyInformationFrom(peekNode);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	14	None	add
203	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node  tryBody  =  block(tryBody).copyInformationFrom(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	14	None	add
204	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock();  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Node  tryBody  =  null  &&  tryBody.isBlock();  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node  tryBody  =  null  &&  tryBody.isBlock();	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	14	None	add
205	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isNode());  [CE]  cannot  find  symbol  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody  ==  null  ||  tryBody.isNode());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  ||  tryBody.isNode());	  Preconditions.checkState(tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
206	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isNode());  [CE]  cannot  find  symbol  [FE]            IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isNode());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  ||  tryBody.isNode());	  Preconditions.checkState(tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
207	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTwin(),  catchNode);  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isTwin(),  catchNode);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTwin(),  catchNode);	  Preconditions.checkState(tryBody.isTwin());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
208	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isTwin());  [CE]  cannot  find  symbol  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isTwin());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  &&  tryBody.isTwin());	  Preconditions.checkState(tryBody.isTwin());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
209	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isTwin());  [CE]  cannot  find  symbol  [FE]            IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  ||  tryBody.isTwin());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null  ||  tryBody.isTwin());	  Preconditions.checkState(tryBody.isTwin());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
210	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	3	3	add
211	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  blockNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	compilable	  [FE]  IllegalStateException  	3	3	add
212	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType();  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  catchNode  =  tryBody.getType();	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	3	None	add
213	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  {  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  {  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  catchNode  =  tryBody.getType()  {  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	3	None	add
214	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  stopBody  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  incompatible  types  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  stopBody  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  stopBody  =  tryBody.getType();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  incompatible  types	3	None	add
215	[BUG]  [BUGGY]  Preconditions.checkState(this.tryNode.isBlock());  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(this.tryNode.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(this.tryNode.isBlock());	  Preconditions.checkState(tryNode.isBlock());    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	11	None	replace
216	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNone());  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isNone());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNone());	  Preconditions.checkState(tryBody.isEmpty());    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
217	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	15	3	replace
218	[BUG]  [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody  ==  null  &&  tryBody.isBlock());	  Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    	compilable	  [FE]  IllegalStateException  	15	3	replace
219	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalArgumentException  	19	3	replace
220	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  [FE]  IllegalArgumentException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkArgument(tryBody.isTry());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isTry());	  Preconditions.checkState(tryBody.isTry());    	compilable	  [FE]  IllegalArgumentException  	19	3	replace
221	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	4	3	replace
222	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()  ==  Token.CATCH);	  Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    	compilable	  [FE]  IllegalStateException  	4	3	replace
223	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	5	3	add
224	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isFunction());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isFunction());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isFunction());	  	compilable	  [FE]  IllegalStateException  	5	3	add
225	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	7	None	add
226	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  incompatible  types  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block  =  tryBody.getType()  ==  Token.TRY;  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  incompatible  types	7	None	add
227	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  block(tryBody)  {  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);	  	non-compiled	[CE]  ';'  expected	7	None	add
228	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY);  Node  catchNode  =  tryBody.getType()  ==  Token.TRY;  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    Node  catchNode  =  tryBody.getType()  ==  Token.TRY;	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	7	None	add
229	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  catchNode.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                  IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  catchNode.isAssignmentOp());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp()  ||  catchNode.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
230	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryNode.isAssignmentOp());  [CE]  cannot  find  symbol  [FE]                    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryNode.isAssignmentOp());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isAssignmentOp()  ||  tryNode.isAssignmentOp());	  Preconditions.checkState(tryBody.isAssignmentOp());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
231	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node  catchNode  =  block(tryBody);  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	14	None	add
232	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=    null    &&    tryBody.isBlock());    Node  tryBody  =  block(tryBody.getFirstChild());  Preconditions.checkState(tryBody!=  null  &&  tryBody.isBlock());	  	non-compiled	[CE]  variable  tryBody  is  already  defined  in  method  tryCatch(Node,Node)	14	None	add
233	[BUG]  [BUGGY]      Node  catchNode  =  getCatchNode();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]      Node  catchNode  =  getCatchNode();  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	        Node  catchNode  =  getCatchNode();	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	12	None	add
234	[BUG]  [BUGGY]      Node  catchNode  =  new  Node(Token.CATCH,  tryBody);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]      Node  catchNode  =  new  Node(Token.CATCH,  tryBody);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	        Node  catchNode  =  new  Node(Token.CATCH,  tryBody);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	12	None	add
235	[BUG]  [BUGGY]      Node  catchNode  =  tryBody.cloneTry();  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]      Node  catchNode  =  tryBody.cloneTry();  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	        Node  catchNode  =  tryBody.cloneTry();	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	12	None	add
236	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	1	3	add
237	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	1	3	add
238	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());    Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.isCatch());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	1	None	add
239	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	1	3	add
240	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());    Node  block  =  tryBody.getNext();  Preconditions.checkState(tryBody.isCatch());	  	compilable	  [FE]  IllegalStateException  	1	3	add
241	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block(tryBody.isCatch());  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isCatch());  Node  block(tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isCatch());    Node  block(tryBody.isCatch());	  	non-compiled	[CE]  ';'  expected	1	None	add
242	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	8	3	replace
243	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  ||  tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	8	3	replace
244	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalArgumentException  	8	3	replace
245	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [FE]  IllegalArgumentException  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.getType()  ==  Token.TRY);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalArgumentException  	8	3	replace
246	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	8	3	replace
247	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()  ==  Token.TRY  &&  catchNode!=  null);	  Preconditions.checkState(tryBody.getType()    ==    Token.TRY);    	compilable	  [FE]  IllegalStateException  	8	3	replace
248	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Node  blockNode  =  tryBody.copyInformationFrom(catchNode);	  Node    block(tryBody).copyInformationFrom(catchNode);    	compilable	  [FE]  IllegalStateException  	9	3	replace
249	[BUG]  [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Node  blockNode  =  tryBody.copyInformationFrom(catchNode);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Node  blockNode  =  tryBody.copyInformationFrom(catchNode);	  Node    block(tryBody).copyInformationFrom(catchNode);    	compilable	  [FE]  IllegalStateException  	9	3	replace
250	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isTry());  Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTry());    Node  catchNode  =  tryBody.getParent();  Preconditions.checkState(tryBody.isTry());	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	18	None	add
251	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isNode()  ||  catchNode.isNode());  [CE]  cannot  find  symbol  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isNode()  ||  catchNode.isNode());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isNode()  ||  catchNode.isNode());	  Preconditions.checkState(tryBody.isNode());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
252	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	3	None	add
253	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]      IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  catchNode  =  tryBody.getType()  ==  Token.CATCH;	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	3	None	add
254	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  incompatible  types  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  block  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  block  =  tryBody.getType()  ==  Token.CATCH;  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  incompatible  types	3	None	add
255	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  catchNode  =  tryBody.getType()  ==  Token.CATCH);  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  ';'  expected	3	None	add
256	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)  [FE]            IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.getType()    ==    Token.CATCH);    Node  catchNode  =  tryBody.getFirstChild();  Preconditions.checkState(tryBody.getType()  ==  Token.CATCH);	  	non-compiled	[CE]  variable  catchNode  is  already  defined  in  method  tryCatch(Node,Node)	3	None	add
257	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	add	Preconditions.checkArgument(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	2	3	replace
258	[BUG]  [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkArgument(tryBody.isCatch());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkArgument(tryBody.isCatch());	  Preconditions.checkState(tryBody.isCatch());    	compilable	  [FE]  IllegalStateException  	2	3	replace
259	[BUG]  [BUGGY]  Preconditions.checkState(tryBody.isTwin()  ||  catchNode.isTwin());  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody.isTwin()  ||  catchNode.isTwin());  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody.isTwin()  ||  catchNode.isTwin());	  Preconditions.checkState(tryBody.isTwin());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
260	[BUG]  [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.isTwin()  :  null);  [CE]  cannot  find  symbol  [FE]          IllegalStateException    [CONTEXT]    public  static  Node  tryCatch(Node  tryBody,  Node  catchNode)  {    [BUGGY]  Preconditions.checkState(tryBody!=  null?  tryBody.isTwin()  :  null);  [BUGGY]    Preconditions.checkState(catchNode.isCatch());  Node  catchBody  =  block(catchNode).copyInformationFrom(catchNode);  return  new  Node(Token.TRY,  tryBody,  catchBody);  }  [CLASS]  IR  [METHOD]  tryCatch  [RETURN_TYPE]  Node  Node  tryBody  Node  catchNode  [VARIABLES]  boolean  Node  catchBody  catchNode  tryBody  	projects/Closure27/src/com/google/javascript/rhino/IR.java	0.8164965809277261	231	231	3	replace	Preconditions.checkState(tryBody!=  null?  tryBody.isTwin()  :  null);	  Preconditions.checkState(tryBody.isTwin());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
