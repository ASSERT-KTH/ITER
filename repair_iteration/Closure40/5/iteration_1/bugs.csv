bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  nameInfo.name;  [CE]  incompatible  types  [FE]    junit.framework.AssertionFailedError:  Expected:  Result:  goog.inherits(ns.PageSelectionModel.ChangeEvent  [CONTEXT]    if  (parent.isCall()  &&  t.inGlobalScope())  {  CodingConvention  convention  =  compiler.getCodingConvention();  SubclassRelationship  classes  =  convention.getClassesDefinedByCall(parent);  if  (classes  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  [BUGGY]  return  nameInfo.name;  [BUGGY]  }  String  singletonGetterClass  =  convention.getSingletonGetterClassName(parent);  if  (singletonGetterClass  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  singletonGetterClass;  nameInfo.onlyAffectsClassDef  =  true;  return  nameInfo;  }  [CLASS]  NameAnalyzer  AliasSet  RefType  ReferencePropagationCallback  NameInformation  JsName  JsNameRefNode  PrototypeSetNode  SpecialReferenceNode  ClassDefiningFunctionNode  InstanceOfCheckNode  ProcessExternals  FindDependencyScopes  HoistVariableAndFunctionDeclarations  FindDeclarationsAndSetters  1  FindReferences  NodeAccumulator  RemoveListener  TriState  [METHOD]  createNameInformation  [RETURN_TYPE]  NameAnalyzer$NameInformation  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  globalNames  names  nodesToKeep  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  decl  elseBranch  externs  gramps  hook  input  iter  n  nameNode  node  objLit  objLitParent  original  parent  pred  prop  rhs  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  alias  className  curName  fromName  name  name1  name2  nodeName  parentName  prototypeClass  prototypeProperty  referringName  singletonGetterClass  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  Predicate  NON_LOCAL_RESULT_PREDICATE  RefType  INHERITANCE  REGULAR  callSite  depType  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  hasInstanceOfReference  hasWrittenDescendants  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parent  parentJsName  rhs  to  CodingConvention  convention  List  prototypeNames  refNodes  referencedBy  refersTo  DiGraph  referenceGraph  TriState  BOTH  FALSE  TRUE  Map  aliases  allNames  scopes  AstChangeProxy  changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1372	1372	2	replace	return  nameInfo.name;	return  nameInfo;  	non-compiled	[CE]  incompatible  types	9	None	replace
2	[BUG]  [BUGGY]  if(nameInfo.name!=  null)  {  return  nameInfo;  }  else  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  }  [CE]  variable  nameInfo  is  already  defined  in  method  createNameInformation(NodeTraversal,Node,Node)  [FE]      junit.framework.AssertionFailedError:  Expected:  Result:  goog.inherits(ns.PageSelectionModel.ChangeEvent  [CONTEXT]    if  (parent.isCall()  &&  t.inGlobalScope())  {  CodingConvention  convention  =  compiler.getCodingConvention();  SubclassRelationship  classes  =  convention.getClassesDefinedByCall(parent);  if  (classes  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  [BUGGY]  if(nameInfo.name!=  null)  {  return  nameInfo;  }  else  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  }  [BUGGY]  }  String  singletonGetterClass  =  convention.getSingletonGetterClassName(parent);  if  (singletonGetterClass  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  singletonGetterClass;  nameInfo.onlyAffectsClassDef  =  true;  return  nameInfo;  }  [CLASS]  NameAnalyzer  AliasSet  RefType  ReferencePropagationCallback  NameInformation  JsName  JsNameRefNode  PrototypeSetNode  SpecialReferenceNode  ClassDefiningFunctionNode  InstanceOfCheckNode  ProcessExternals  FindDependencyScopes  HoistVariableAndFunctionDeclarations  FindDeclarationsAndSetters  1  FindReferences  NodeAccumulator  RemoveListener  TriState  [METHOD]  createNameInformation  [RETURN_TYPE]  NameAnalyzer$NameInformation  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  globalNames  names  nodesToKeep  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  decl  elseBranch  externs  gramps  hook  input  iter  n  nameNode  node  objLit  objLitParent  original  parent  pred  prop  rhs  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  alias  className  curName  fromName  name  name1  name2  nodeName  parentName  prototypeClass  prototypeProperty  referringName  singletonGetterClass  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  Predicate  NON_LOCAL_RESULT_PREDICATE  RefType  INHERITANCE  REGULAR  callSite  depType  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  hasInstanceOfReference  hasWrittenDescendants  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parent  parentJsName  rhs  to  CodingConvention  convention  List  prototypeNames  refNodes  referencedBy  refersTo  DiGraph  referenceGraph  TriState  BOTH  FALSE  TRUE  Map  aliases  allNames  scopes  AstChangeProxy  changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1372	1372	2	replace	if(nameInfo.name!=  null)  {  return  nameInfo;  }  else  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  }	return  nameInfo;  	non-compiled	[CE]  variable  nameInfo  is  already  defined  in  method  createNameInformation(NodeTraversal,Node,Node)	9	None	replace
3	[BUG]  [BUGGY]  if(nameInfo.name!=  null)  {  return  nameInfo;  }  else  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  names.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  }  [CE]  variable  nameInfo  is  already  defined  in  method  createNameInformation(NodeTraversal,Node,Node)  [FE]        junit.framework.AssertionFailedError:  Expected:  Result:  goog.inherits(ns.PageSelectionModel.ChangeEvent  [CONTEXT]    if  (parent.isCall()  &&  t.inGlobalScope())  {  CodingConvention  convention  =  compiler.getCodingConvention();  SubclassRelationship  classes  =  convention.getClassesDefinedByCall(parent);  if  (classes  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  [BUGGY]  if(nameInfo.name!=  null)  {  return  nameInfo;  }  else  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  names.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  }  [BUGGY]  }  String  singletonGetterClass  =  convention.getSingletonGetterClassName(parent);  if  (singletonGetterClass  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  singletonGetterClass;  nameInfo.onlyAffectsClassDef  =  true;  return  nameInfo;  }  [CLASS]  NameAnalyzer  AliasSet  RefType  ReferencePropagationCallback  NameInformation  JsName  JsNameRefNode  PrototypeSetNode  SpecialReferenceNode  ClassDefiningFunctionNode  InstanceOfCheckNode  ProcessExternals  FindDependencyScopes  HoistVariableAndFunctionDeclarations  FindDeclarationsAndSetters  1  FindReferences  NodeAccumulator  RemoveListener  TriState  [METHOD]  createNameInformation  [RETURN_TYPE]  NameAnalyzer$NameInformation  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  globalNames  names  nodesToKeep  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  decl  elseBranch  externs  gramps  hook  input  iter  n  nameNode  node  objLit  objLitParent  original  parent  pred  prop  rhs  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  alias  className  curName  fromName  name  name1  name2  nodeName  parentName  prototypeClass  prototypeProperty  referringName  singletonGetterClass  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  Predicate  NON_LOCAL_RESULT_PREDICATE  RefType  INHERITANCE  REGULAR  callSite  depType  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  hasInstanceOfReference  hasWrittenDescendants  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parent  parentJsName  rhs  to  CodingConvention  convention  List  prototypeNames  refNodes  referencedBy  refersTo  DiGraph  referenceGraph  TriState  BOTH  FALSE  TRUE  Map  aliases  allNames  scopes  AstChangeProxy  changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1372	1372	2	replace	if(nameInfo.name!=  null)  {  return  nameInfo;  }  else  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  names.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  }	return  nameInfo;  	non-compiled	[CE]  variable  nameInfo  is  already  defined  in  method  createNameInformation(NodeTraversal,Node,Node)	9	None	replace
4	[BUG]  [BUGGY]  if(nameInfo.name!=  null)  {  return  nameInfo;  }  else  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName  [CE]  ';'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  Result:  goog.inherits(ns.PageSelectionModel.ChangeEvent  [CONTEXT]    if  (parent.isCall()  &&  t.inGlobalScope())  {  CodingConvention  convention  =  compiler.getCodingConvention();  SubclassRelationship  classes  =  convention.getClassesDefinedByCall(parent);  if  (classes  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  [BUGGY]  if(nameInfo.name!=  null)  {  return  nameInfo;  }  else  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName  [BUGGY]  }  String  singletonGetterClass  =  convention.getSingletonGetterClassName(parent);  if  (singletonGetterClass  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  singletonGetterClass;  nameInfo.onlyAffectsClassDef  =  true;  return  nameInfo;  }  [CLASS]  NameAnalyzer  AliasSet  RefType  ReferencePropagationCallback  NameInformation  JsName  JsNameRefNode  PrototypeSetNode  SpecialReferenceNode  ClassDefiningFunctionNode  InstanceOfCheckNode  ProcessExternals  FindDependencyScopes  HoistVariableAndFunctionDeclarations  FindDeclarationsAndSetters  1  FindReferences  NodeAccumulator  RemoveListener  TriState  [METHOD]  createNameInformation  [RETURN_TYPE]  NameAnalyzer$NameInformation  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  globalNames  names  nodesToKeep  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  decl  elseBranch  externs  gramps  hook  input  iter  n  nameNode  node  objLit  objLitParent  original  parent  pred  prop  rhs  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  alias  className  curName  fromName  name  name1  name2  nodeName  parentName  prototypeClass  prototypeProperty  referringName  singletonGetterClass  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  Predicate  NON_LOCAL_RESULT_PREDICATE  RefType  INHERITANCE  REGULAR  callSite  depType  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  hasInstanceOfReference  hasWrittenDescendants  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parent  parentJsName  rhs  to  CodingConvention  convention  List  prototypeNames  refNodes  referencedBy  refersTo  DiGraph  referenceGraph  TriState  BOTH  FALSE  TRUE  Map  aliases  allNames  scopes  AstChangeProxy  changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1372	1372	2	replace	if(nameInfo.name!=  null)  {  return  nameInfo;  }  else  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName	return  nameInfo;  	non-compiled	[CE]  ';'  expected	9	None	replace
5	[BUG]  [BUGGY]  if(nameInfo.name!=  null)  {  return  nameInfo;  }  else  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  return  nameInfo;  }  [CE]  variable  nameInfo  is  already  defined  in  method  createNameInformation(NodeTraversal,Node,Node)  [FE]            junit.framework.AssertionFailedError:  Expected:  Result:  goog.inherits(ns.PageSelectionModel.ChangeEvent  [CONTEXT]    if  (parent.isCall()  &&  t.inGlobalScope())  {  CodingConvention  convention  =  compiler.getCodingConvention();  SubclassRelationship  classes  =  convention.getClassesDefinedByCall(parent);  if  (classes  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  [BUGGY]  if(nameInfo.name!=  null)  {  return  nameInfo;  }  else  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  return  nameInfo;  }  [BUGGY]  }  String  singletonGetterClass  =  convention.getSingletonGetterClassName(parent);  if  (singletonGetterClass  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  singletonGetterClass;  nameInfo.onlyAffectsClassDef  =  true;  return  nameInfo;  }  [CLASS]  NameAnalyzer  AliasSet  RefType  ReferencePropagationCallback  NameInformation  JsName  JsNameRefNode  PrototypeSetNode  SpecialReferenceNode  ClassDefiningFunctionNode  InstanceOfCheckNode  ProcessExternals  FindDependencyScopes  HoistVariableAndFunctionDeclarations  FindDeclarationsAndSetters  1  FindReferences  NodeAccumulator  RemoveListener  TriState  [METHOD]  createNameInformation  [RETURN_TYPE]  NameAnalyzer$NameInformation  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  globalNames  names  nodesToKeep  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  decl  elseBranch  externs  gramps  hook  input  iter  n  nameNode  node  objLit  objLitParent  original  parent  pred  prop  rhs  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  alias  className  curName  fromName  name  name1  name2  nodeName  parentName  prototypeClass  prototypeProperty  referringName  singletonGetterClass  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  Predicate  NON_LOCAL_RESULT_PREDICATE  RefType  INHERITANCE  REGULAR  callSite  depType  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  hasInstanceOfReference  hasWrittenDescendants  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parent  parentJsName  rhs  to  CodingConvention  convention  List  prototypeNames  refNodes  referencedBy  refersTo  DiGraph  referenceGraph  TriState  BOTH  FALSE  TRUE  Map  aliases  allNames  scopes  AstChangeProxy  changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1372	1372	2	replace	if(nameInfo.name!=  null)  {  return  nameInfo;  }  else  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  return  nameInfo;  }	return  nameInfo;  	non-compiled	[CE]  variable  nameInfo  is  already  defined  in  method  createNameInformation(NodeTraversal,Node,Node)	9	None	replace
6	[BUG]  [BUGGY]  if(nameInfo.name!=  null)  {  return  nameInfo;  }  else  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  names.superclassName;  }  [CE]  variable  nameInfo  is  already  defined  in  method  createNameInformation(NodeTraversal,Node,Node)  [FE]              junit.framework.AssertionFailedError:  Expected:  Result:  goog.inherits(ns.PageSelectionModel.ChangeEvent  [CONTEXT]    if  (parent.isCall()  &&  t.inGlobalScope())  {  CodingConvention  convention  =  compiler.getCodingConvention();  SubclassRelationship  classes  =  convention.getClassesDefinedByCall(parent);  if  (classes  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  [BUGGY]  if(nameInfo.name!=  null)  {  return  nameInfo;  }  else  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  names.superclassName;  }  [BUGGY]  }  String  singletonGetterClass  =  convention.getSingletonGetterClassName(parent);  if  (singletonGetterClass  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  singletonGetterClass;  nameInfo.onlyAffectsClassDef  =  true;  return  nameInfo;  }  [CLASS]  NameAnalyzer  AliasSet  RefType  ReferencePropagationCallback  NameInformation  JsName  JsNameRefNode  PrototypeSetNode  SpecialReferenceNode  ClassDefiningFunctionNode  InstanceOfCheckNode  ProcessExternals  FindDependencyScopes  HoistVariableAndFunctionDeclarations  FindDeclarationsAndSetters  1  FindReferences  NodeAccumulator  RemoveListener  TriState  [METHOD]  createNameInformation  [RETURN_TYPE]  NameAnalyzer$NameInformation  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  globalNames  names  nodesToKeep  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  decl  elseBranch  externs  gramps  hook  input  iter  n  nameNode  node  objLit  objLitParent  original  parent  pred  prop  rhs  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  alias  className  curName  fromName  name  name1  name2  nodeName  parentName  prototypeClass  prototypeProperty  referringName  singletonGetterClass  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  Predicate  NON_LOCAL_RESULT_PREDICATE  RefType  INHERITANCE  REGULAR  callSite  depType  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  hasInstanceOfReference  hasWrittenDescendants  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parent  parentJsName  rhs  to  CodingConvention  convention  List  prototypeNames  refNodes  referencedBy  refersTo  DiGraph  referenceGraph  TriState  BOTH  FALSE  TRUE  Map  aliases  allNames  scopes  AstChangeProxy  changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1372	1372	2	replace	if(nameInfo.name!=  null)  {  return  nameInfo;  }  else  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  names.superclassName;  }	return  nameInfo;  	non-compiled	[CE]  variable  nameInfo  is  already  defined  in  method  createNameInformation(NodeTraversal,Node,Node)	9	None	replace
7	[BUG]  [BUGGY]  timeout  [FE]                junit.framework.AssertionFailedError:  Expected:  Result:  goog.inherits(ns.PageSelectionModel.ChangeEvent  [CONTEXT]    if  (parent.isCall()  &&  t.inGlobalScope())  {  CodingConvention  convention  =  compiler.getCodingConvention();  SubclassRelationship  classes  =  convention.getClassesDefinedByCall(parent);  if  (classes  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  [BUGGY]    [BUGGY]  }  String  singletonGetterClass  =  convention.getSingletonGetterClassName(parent);  if  (singletonGetterClass  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  singletonGetterClass;  nameInfo.onlyAffectsClassDef  =  true;  return  nameInfo;  }  [CLASS]  NameAnalyzer  AliasSet  RefType  ReferencePropagationCallback  NameInformation  JsName  JsNameRefNode  PrototypeSetNode  SpecialReferenceNode  ClassDefiningFunctionNode  InstanceOfCheckNode  ProcessExternals  FindDependencyScopes  HoistVariableAndFunctionDeclarations  FindDeclarationsAndSetters  1  FindReferences  NodeAccumulator  RemoveListener  TriState  [METHOD]  createNameInformation  [RETURN_TYPE]  NameAnalyzer$NameInformation  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  globalNames  names  nodesToKeep  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  decl  elseBranch  externs  gramps  hook  input  iter  n  nameNode  node  objLit  objLitParent  original  parent  pred  prop  rhs  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  alias  className  curName  fromName  name  name1  name2  nodeName  parentName  prototypeClass  prototypeProperty  referringName  singletonGetterClass  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  Predicate  NON_LOCAL_RESULT_PREDICATE  RefType  INHERITANCE  REGULAR  callSite  depType  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  hasInstanceOfReference  hasWrittenDescendants  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parent  parentJsName  rhs  to  CodingConvention  convention  List  prototypeNames  refNodes  referencedBy  refersTo  DiGraph  referenceGraph  TriState  BOTH  FALSE  TRUE  Map  aliases  allNames  scopes  AstChangeProxy  changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1372	1372	2	add	  	return  nameInfo;  	compilable	timeout	9	1	replace
8	[BUG]  [BUGGY]    timeout  [FE]                junit.framework.AssertionFailedError:  Expected:  Result:  goog.inherits(ns.PageSelectionModel.ChangeEvent  [CONTEXT]    if  (parent.isCall()  &&  t.inGlobalScope())  {  CodingConvention  convention  =  compiler.getCodingConvention();  SubclassRelationship  classes  =  convention.getClassesDefinedByCall(parent);  if  (classes  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  [BUGGY]    [BUGGY]  }  String  singletonGetterClass  =  convention.getSingletonGetterClassName(parent);  if  (singletonGetterClass  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  singletonGetterClass;  nameInfo.onlyAffectsClassDef  =  true;  return  nameInfo;  }  [CLASS]  NameAnalyzer  AliasSet  RefType  ReferencePropagationCallback  NameInformation  JsName  JsNameRefNode  PrototypeSetNode  SpecialReferenceNode  ClassDefiningFunctionNode  InstanceOfCheckNode  ProcessExternals  FindDependencyScopes  HoistVariableAndFunctionDeclarations  FindDeclarationsAndSetters  1  FindReferences  NodeAccumulator  RemoveListener  TriState  [METHOD]  createNameInformation  [RETURN_TYPE]  NameAnalyzer$NameInformation  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  globalNames  names  nodesToKeep  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  decl  elseBranch  externs  gramps  hook  input  iter  n  nameNode  node  objLit  objLitParent  original  parent  pred  prop  rhs  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  alias  className  curName  fromName  name  name1  name2  nodeName  parentName  prototypeClass  prototypeProperty  referringName  singletonGetterClass  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  Predicate  NON_LOCAL_RESULT_PREDICATE  RefType  INHERITANCE  REGULAR  callSite  depType  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  hasInstanceOfReference  hasWrittenDescendants  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parent  parentJsName  rhs  to  CodingConvention  convention  List  prototypeNames  refNodes  referencedBy  refersTo  DiGraph  referenceGraph  TriState  BOTH  FALSE  TRUE  Map  aliases  allNames  scopes  AstChangeProxy  changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1372	1372	2	replace	  	return  nameInfo;  	compilable	timeout	9	1	replace
9	[BUG]  [BUGGY]  timeout  [FE]    junit.framework.AssertionFailedError:  Expected:  Result:  goog.inherits(ns.PageSelectionModel.ChangeEvent  [CONTEXT]    if  (parent.isCall()  &&  t.inGlobalScope())  {  CodingConvention  convention  =  compiler.getCodingConvention();  SubclassRelationship  classes  =  convention.getClassesDefinedByCall(parent);  if  (classes  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  [BUGGY]  nameInfo.name  =  classes.subclassName;  [BUGGY]  }  String  singletonGetterClass  =  convention.getSingletonGetterClassName(parent);  if  (singletonGetterClass  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  singletonGetterClass;  nameInfo.onlyAffectsClassDef  =  true;  return  nameInfo;  }  [CLASS]  NameAnalyzer  AliasSet  RefType  ReferencePropagationCallback  NameInformation  JsName  JsNameRefNode  PrototypeSetNode  SpecialReferenceNode  ClassDefiningFunctionNode  InstanceOfCheckNode  ProcessExternals  FindDependencyScopes  HoistVariableAndFunctionDeclarations  FindDeclarationsAndSetters  1  FindReferences  NodeAccumulator  RemoveListener  TriState  [METHOD]  createNameInformation  [RETURN_TYPE]  NameAnalyzer$NameInformation  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  globalNames  names  nodesToKeep  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  decl  elseBranch  externs  gramps  hook  input  iter  n  nameNode  node  objLit  objLitParent  original  parent  pred  prop  rhs  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  alias  className  curName  fromName  name  name1  name2  nodeName  parentName  prototypeClass  prototypeProperty  referringName  singletonGetterClass  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  Predicate  NON_LOCAL_RESULT_PREDICATE  RefType  INHERITANCE  REGULAR  callSite  depType  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  hasInstanceOfReference  hasWrittenDescendants  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parent  parentJsName  rhs  to  CodingConvention  convention  List  prototypeNames  refNodes  referencedBy  refersTo  DiGraph  referenceGraph  TriState  BOTH  FALSE  TRUE  Map  aliases  allNames  scopes  AstChangeProxy  changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1372	1372	2	add	nameInfo.name  =  classes.subclassName;	return  nameInfo;  	compilable	timeout	9	1	replace
10	[BUG]  [BUGGY]  nameInfo.name  =  classes.subclassName;  timeout  [FE]    junit.framework.AssertionFailedError:  Expected:  Result:  goog.inherits(ns.PageSelectionModel.ChangeEvent  [CONTEXT]    if  (parent.isCall()  &&  t.inGlobalScope())  {  CodingConvention  convention  =  compiler.getCodingConvention();  SubclassRelationship  classes  =  convention.getClassesDefinedByCall(parent);  if  (classes  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  [BUGGY]  nameInfo.name  =  classes.subclassName;  [BUGGY]  }  String  singletonGetterClass  =  convention.getSingletonGetterClassName(parent);  if  (singletonGetterClass  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  singletonGetterClass;  nameInfo.onlyAffectsClassDef  =  true;  return  nameInfo;  }  [CLASS]  NameAnalyzer  AliasSet  RefType  ReferencePropagationCallback  NameInformation  JsName  JsNameRefNode  PrototypeSetNode  SpecialReferenceNode  ClassDefiningFunctionNode  InstanceOfCheckNode  ProcessExternals  FindDependencyScopes  HoistVariableAndFunctionDeclarations  FindDeclarationsAndSetters  1  FindReferences  NodeAccumulator  RemoveListener  TriState  [METHOD]  createNameInformation  [RETURN_TYPE]  NameAnalyzer$NameInformation  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  globalNames  names  nodesToKeep  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  decl  elseBranch  externs  gramps  hook  input  iter  n  nameNode  node  objLit  objLitParent  original  parent  pred  prop  rhs  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  alias  className  curName  fromName  name  name1  name2  nodeName  parentName  prototypeClass  prototypeProperty  referringName  singletonGetterClass  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  Predicate  NON_LOCAL_RESULT_PREDICATE  RefType  INHERITANCE  REGULAR  callSite  depType  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  hasInstanceOfReference  hasWrittenDescendants  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parent  parentJsName  rhs  to  CodingConvention  convention  List  prototypeNames  refNodes  referencedBy  refersTo  DiGraph  referenceGraph  TriState  BOTH  FALSE  TRUE  Map  aliases  allNames  scopes  AstChangeProxy  changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1372	1372	2	replace	nameInfo.name  =  classes.subclassName;	return  nameInfo;  	compilable	timeout	9	1	replace
11	[BUG]  [BUGGY]  return  new  NameInformation(nameInfo.name);  [CE]  constructor  NameInformation  in  class  NameInformation  cannot  be  applied  to  given  types;  [FE]      junit.framework.AssertionFailedError:  Expected:  Result:  goog.inherits(ns.PageSelectionModel.ChangeEvent  [CONTEXT]    if  (parent.isCall()  &&  t.inGlobalScope())  {  CodingConvention  convention  =  compiler.getCodingConvention();  SubclassRelationship  classes  =  convention.getClassesDefinedByCall(parent);  if  (classes  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  [BUGGY]  return  new  NameInformation(nameInfo.name);  [BUGGY]  }  String  singletonGetterClass  =  convention.getSingletonGetterClassName(parent);  if  (singletonGetterClass  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  singletonGetterClass;  nameInfo.onlyAffectsClassDef  =  true;  return  nameInfo;  }  [CLASS]  NameAnalyzer  AliasSet  RefType  ReferencePropagationCallback  NameInformation  JsName  JsNameRefNode  PrototypeSetNode  SpecialReferenceNode  ClassDefiningFunctionNode  InstanceOfCheckNode  ProcessExternals  FindDependencyScopes  HoistVariableAndFunctionDeclarations  FindDeclarationsAndSetters  1  FindReferences  NodeAccumulator  RemoveListener  TriState  [METHOD]  createNameInformation  [RETURN_TYPE]  NameAnalyzer$NameInformation  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  globalNames  names  nodesToKeep  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  decl  elseBranch  externs  gramps  hook  input  iter  n  nameNode  node  objLit  objLitParent  original  parent  pred  prop  rhs  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  alias  className  curName  fromName  name  name1  name2  nodeName  parentName  prototypeClass  prototypeProperty  referringName  singletonGetterClass  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  Predicate  NON_LOCAL_RESULT_PREDICATE  RefType  INHERITANCE  REGULAR  callSite  depType  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  hasInstanceOfReference  hasWrittenDescendants  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parent  parentJsName  rhs  to  CodingConvention  convention  List  prototypeNames  refNodes  referencedBy  refersTo  DiGraph  referenceGraph  TriState  BOTH  FALSE  TRUE  Map  aliases  allNames  scopes  AstChangeProxy  changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1372	1372	2	replace	return  new  NameInformation(nameInfo.name);	return  nameInfo;  	non-compiled	[CE]  constructor  NameInformation  in  class  NameInformation  cannot  be  applied  to  given  types;	9	None	replace
12	[BUG]  [BUGGY]  timeout  [FE]        junit.framework.AssertionFailedError:  Expected:  Result:  goog.inherits(ns.PageSelectionModel.ChangeEvent  [CONTEXT]    if  (parent.isCall()  &&  t.inGlobalScope())  {  CodingConvention  convention  =  compiler.getCodingConvention();  SubclassRelationship  classes  =  convention.getClassesDefinedByCall(parent);  if  (classes  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  [BUGGY]  return  new  NameInformation();  [BUGGY]  }  String  singletonGetterClass  =  convention.getSingletonGetterClassName(parent);  if  (singletonGetterClass  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  singletonGetterClass;  nameInfo.onlyAffectsClassDef  =  true;  return  nameInfo;  }  [CLASS]  NameAnalyzer  AliasSet  RefType  ReferencePropagationCallback  NameInformation  JsName  JsNameRefNode  PrototypeSetNode  SpecialReferenceNode  ClassDefiningFunctionNode  InstanceOfCheckNode  ProcessExternals  FindDependencyScopes  HoistVariableAndFunctionDeclarations  FindDeclarationsAndSetters  1  FindReferences  NodeAccumulator  RemoveListener  TriState  [METHOD]  createNameInformation  [RETURN_TYPE]  NameAnalyzer$NameInformation  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  globalNames  names  nodesToKeep  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  decl  elseBranch  externs  gramps  hook  input  iter  n  nameNode  node  objLit  objLitParent  original  parent  pred  prop  rhs  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  alias  className  curName  fromName  name  name1  name2  nodeName  parentName  prototypeClass  prototypeProperty  referringName  singletonGetterClass  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  Predicate  NON_LOCAL_RESULT_PREDICATE  RefType  INHERITANCE  REGULAR  callSite  depType  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  hasInstanceOfReference  hasWrittenDescendants  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parent  parentJsName  rhs  to  CodingConvention  convention  List  prototypeNames  refNodes  referencedBy  refersTo  DiGraph  referenceGraph  TriState  BOTH  FALSE  TRUE  Map  aliases  allNames  scopes  AstChangeProxy  changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1372	1372	2	add	return  new  NameInformation();	return  nameInfo;  	compilable	timeout	9	1	replace
13	[BUG]  [BUGGY]  return  new  NameInformation();  timeout  [FE]        junit.framework.AssertionFailedError:  Expected:  Result:  goog.inherits(ns.PageSelectionModel.ChangeEvent  [CONTEXT]    if  (parent.isCall()  &&  t.inGlobalScope())  {  CodingConvention  convention  =  compiler.getCodingConvention();  SubclassRelationship  classes  =  convention.getClassesDefinedByCall(parent);  if  (classes  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  [BUGGY]  return  new  NameInformation();  [BUGGY]  }  String  singletonGetterClass  =  convention.getSingletonGetterClassName(parent);  if  (singletonGetterClass  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  singletonGetterClass;  nameInfo.onlyAffectsClassDef  =  true;  return  nameInfo;  }  [CLASS]  NameAnalyzer  AliasSet  RefType  ReferencePropagationCallback  NameInformation  JsName  JsNameRefNode  PrototypeSetNode  SpecialReferenceNode  ClassDefiningFunctionNode  InstanceOfCheckNode  ProcessExternals  FindDependencyScopes  HoistVariableAndFunctionDeclarations  FindDeclarationsAndSetters  1  FindReferences  NodeAccumulator  RemoveListener  TriState  [METHOD]  createNameInformation  [RETURN_TYPE]  NameAnalyzer$NameInformation  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  globalNames  names  nodesToKeep  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  decl  elseBranch  externs  gramps  hook  input  iter  n  nameNode  node  objLit  objLitParent  original  parent  pred  prop  rhs  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  alias  className  curName  fromName  name  name1  name2  nodeName  parentName  prototypeClass  prototypeProperty  referringName  singletonGetterClass  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  Predicate  NON_LOCAL_RESULT_PREDICATE  RefType  INHERITANCE  REGULAR  callSite  depType  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  hasInstanceOfReference  hasWrittenDescendants  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parent  parentJsName  rhs  to  CodingConvention  convention  List  prototypeNames  refNodes  referencedBy  refersTo  DiGraph  referenceGraph  TriState  BOTH  FALSE  TRUE  Map  aliases  allNames  scopes  AstChangeProxy  changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1372	1372	2	replace	return  new  NameInformation();	return  nameInfo;  	compilable	timeout	9	1	replace
14	[BUG]  [BUGGY]  return  new  NameInformation(nameInfo.name,  classes);  [CE]  constructor  NameInformation  in  class  NameInformation  cannot  be  applied  to  given  types;  [FE]          junit.framework.AssertionFailedError:  Expected:  Result:  goog.inherits(ns.PageSelectionModel.ChangeEvent  [CONTEXT]    if  (parent.isCall()  &&  t.inGlobalScope())  {  CodingConvention  convention  =  compiler.getCodingConvention();  SubclassRelationship  classes  =  convention.getClassesDefinedByCall(parent);  if  (classes  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  [BUGGY]  return  new  NameInformation(nameInfo.name,  classes);  [BUGGY]  }  String  singletonGetterClass  =  convention.getSingletonGetterClassName(parent);  if  (singletonGetterClass  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  singletonGetterClass;  nameInfo.onlyAffectsClassDef  =  true;  return  nameInfo;  }  [CLASS]  NameAnalyzer  AliasSet  RefType  ReferencePropagationCallback  NameInformation  JsName  JsNameRefNode  PrototypeSetNode  SpecialReferenceNode  ClassDefiningFunctionNode  InstanceOfCheckNode  ProcessExternals  FindDependencyScopes  HoistVariableAndFunctionDeclarations  FindDeclarationsAndSetters  1  FindReferences  NodeAccumulator  RemoveListener  TriState  [METHOD]  createNameInformation  [RETURN_TYPE]  NameAnalyzer$NameInformation  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  globalNames  names  nodesToKeep  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  decl  elseBranch  externs  gramps  hook  input  iter  n  nameNode  node  objLit  objLitParent  original  parent  pred  prop  rhs  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  alias  className  curName  fromName  name  name1  name2  nodeName  parentName  prototypeClass  prototypeProperty  referringName  singletonGetterClass  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  Predicate  NON_LOCAL_RESULT_PREDICATE  RefType  INHERITANCE  REGULAR  callSite  depType  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  hasInstanceOfReference  hasWrittenDescendants  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parent  parentJsName  rhs  to  CodingConvention  convention  List  prototypeNames  refNodes  referencedBy  refersTo  DiGraph  referenceGraph  TriState  BOTH  FALSE  TRUE  Map  aliases  allNames  scopes  AstChangeProxy  changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1372	1372	2	replace	return  new  NameInformation(nameInfo.name,  classes);	return  nameInfo;  	non-compiled	[CE]  constructor  NameInformation  in  class  NameInformation  cannot  be  applied  to  given  types;	9	None	replace
15	[BUG]  [BUGGY]  timeout  [FE]            junit.framework.AssertionFailedError:  Expected:  Result:  goog.inherits(ns.PageSelectionModel.ChangeEvent  [CONTEXT]    if  (parent.isCall()  &&  t.inGlobalScope())  {  CodingConvention  convention  =  compiler.getCodingConvention();  SubclassRelationship  classes  =  convention.getClassesDefinedByCall(parent);  if  (classes  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  [BUGGY]  return  nameInfo  =  new  NameInformation();  [BUGGY]  }  String  singletonGetterClass  =  convention.getSingletonGetterClassName(parent);  if  (singletonGetterClass  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  singletonGetterClass;  nameInfo.onlyAffectsClassDef  =  true;  return  nameInfo;  }  [CLASS]  NameAnalyzer  AliasSet  RefType  ReferencePropagationCallback  NameInformation  JsName  JsNameRefNode  PrototypeSetNode  SpecialReferenceNode  ClassDefiningFunctionNode  InstanceOfCheckNode  ProcessExternals  FindDependencyScopes  HoistVariableAndFunctionDeclarations  FindDeclarationsAndSetters  1  FindReferences  NodeAccumulator  RemoveListener  TriState  [METHOD]  createNameInformation  [RETURN_TYPE]  NameAnalyzer$NameInformation  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  globalNames  names  nodesToKeep  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  decl  elseBranch  externs  gramps  hook  input  iter  n  nameNode  node  objLit  objLitParent  original  parent  pred  prop  rhs  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  alias  className  curName  fromName  name  name1  name2  nodeName  parentName  prototypeClass  prototypeProperty  referringName  singletonGetterClass  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  Predicate  NON_LOCAL_RESULT_PREDICATE  RefType  INHERITANCE  REGULAR  callSite  depType  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  hasInstanceOfReference  hasWrittenDescendants  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parent  parentJsName  rhs  to  CodingConvention  convention  List  prototypeNames  refNodes  referencedBy  refersTo  DiGraph  referenceGraph  TriState  BOTH  FALSE  TRUE  Map  aliases  allNames  scopes  AstChangeProxy  changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1372	1372	2	add	return  nameInfo  =  new  NameInformation();	return  nameInfo;  	compilable	timeout	9	1	replace
16	[BUG]  [BUGGY]  return  nameInfo  =  new  NameInformation();  timeout  [FE]            junit.framework.AssertionFailedError:  Expected:  Result:  goog.inherits(ns.PageSelectionModel.ChangeEvent  [CONTEXT]    if  (parent.isCall()  &&  t.inGlobalScope())  {  CodingConvention  convention  =  compiler.getCodingConvention();  SubclassRelationship  classes  =  convention.getClassesDefinedByCall(parent);  if  (classes  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  [BUGGY]  return  nameInfo  =  new  NameInformation();  [BUGGY]  }  String  singletonGetterClass  =  convention.getSingletonGetterClassName(parent);  if  (singletonGetterClass  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  singletonGetterClass;  nameInfo.onlyAffectsClassDef  =  true;  return  nameInfo;  }  [CLASS]  NameAnalyzer  AliasSet  RefType  ReferencePropagationCallback  NameInformation  JsName  JsNameRefNode  PrototypeSetNode  SpecialReferenceNode  ClassDefiningFunctionNode  InstanceOfCheckNode  ProcessExternals  FindDependencyScopes  HoistVariableAndFunctionDeclarations  FindDeclarationsAndSetters  1  FindReferences  NodeAccumulator  RemoveListener  TriState  [METHOD]  createNameInformation  [RETURN_TYPE]  NameAnalyzer$NameInformation  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  globalNames  names  nodesToKeep  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  decl  elseBranch  externs  gramps  hook  input  iter  n  nameNode  node  objLit  objLitParent  original  parent  pred  prop  rhs  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  alias  className  curName  fromName  name  name1  name2  nodeName  parentName  prototypeClass  prototypeProperty  referringName  singletonGetterClass  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  Predicate  NON_LOCAL_RESULT_PREDICATE  RefType  INHERITANCE  REGULAR  callSite  depType  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  hasInstanceOfReference  hasWrittenDescendants  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parent  parentJsName  rhs  to  CodingConvention  convention  List  prototypeNames  refNodes  referencedBy  refersTo  DiGraph  referenceGraph  TriState  BOTH  FALSE  TRUE  Map  aliases  allNames  scopes  AstChangeProxy  changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1372	1372	2	replace	return  nameInfo  =  new  NameInformation();	return  nameInfo;  	compilable	timeout	9	1	replace
17	[BUG]  [BUGGY]  return  new  NameInformation(nameInfo.name,  ns.PageSelectionModel.ChangeEvent));  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  Expected:  Result:  goog.inherits(ns.PageSelectionModel.ChangeEvent  [CONTEXT]    if  (parent.isCall()  &&  t.inGlobalScope())  {  CodingConvention  convention  =  compiler.getCodingConvention();  SubclassRelationship  classes  =  convention.getClassesDefinedByCall(parent);  if  (classes  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  [BUGGY]  return  new  NameInformation(nameInfo.name,  ns.PageSelectionModel.ChangeEvent));  [BUGGY]  }  String  singletonGetterClass  =  convention.getSingletonGetterClassName(parent);  if  (singletonGetterClass  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  singletonGetterClass;  nameInfo.onlyAffectsClassDef  =  true;  return  nameInfo;  }  [CLASS]  NameAnalyzer  AliasSet  RefType  ReferencePropagationCallback  NameInformation  JsName  JsNameRefNode  PrototypeSetNode  SpecialReferenceNode  ClassDefiningFunctionNode  InstanceOfCheckNode  ProcessExternals  FindDependencyScopes  HoistVariableAndFunctionDeclarations  FindDeclarationsAndSetters  1  FindReferences  NodeAccumulator  RemoveListener  TriState  [METHOD]  createNameInformation  [RETURN_TYPE]  NameAnalyzer$NameInformation  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  globalNames  names  nodesToKeep  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  decl  elseBranch  externs  gramps  hook  input  iter  n  nameNode  node  objLit  objLitParent  original  parent  pred  prop  rhs  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  alias  className  curName  fromName  name  name1  name2  nodeName  parentName  prototypeClass  prototypeProperty  referringName  singletonGetterClass  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  Predicate  NON_LOCAL_RESULT_PREDICATE  RefType  INHERITANCE  REGULAR  callSite  depType  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  hasInstanceOfReference  hasWrittenDescendants  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parent  parentJsName  rhs  to  CodingConvention  convention  List  prototypeNames  refNodes  referencedBy  refersTo  DiGraph  referenceGraph  TriState  BOTH  FALSE  TRUE  Map  aliases  allNames  scopes  AstChangeProxy  changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1372	1372	2	replace	return  new  NameInformation(nameInfo.name,  ns.PageSelectionModel.ChangeEvent));	return  nameInfo;  	non-compiled	[CE]  ';'  expected	9	None	replace
18	[BUG]  [BUGGY]  return  new  NameInformation(nameInfo.name,  ns.PageSelectionModel.ChangeEvent());  [CE]  package  ns  does  not  exist  [FE]      junit.framework.AssertionFailedError:  Expected:  Result:  goog.inherits(ns.PageSelectionModel.ChangeEvent  [CONTEXT]    if  (parent.isCall()  &&  t.inGlobalScope())  {  CodingConvention  convention  =  compiler.getCodingConvention();  SubclassRelationship  classes  =  convention.getClassesDefinedByCall(parent);  if  (classes  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  [BUGGY]  return  new  NameInformation(nameInfo.name,  ns.PageSelectionModel.ChangeEvent());  [BUGGY]  }  String  singletonGetterClass  =  convention.getSingletonGetterClassName(parent);  if  (singletonGetterClass  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  singletonGetterClass;  nameInfo.onlyAffectsClassDef  =  true;  return  nameInfo;  }  [CLASS]  NameAnalyzer  AliasSet  RefType  ReferencePropagationCallback  NameInformation  JsName  JsNameRefNode  PrototypeSetNode  SpecialReferenceNode  ClassDefiningFunctionNode  InstanceOfCheckNode  ProcessExternals  FindDependencyScopes  HoistVariableAndFunctionDeclarations  FindDeclarationsAndSetters  1  FindReferences  NodeAccumulator  RemoveListener  TriState  [METHOD]  createNameInformation  [RETURN_TYPE]  NameAnalyzer$NameInformation  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  globalNames  names  nodesToKeep  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  decl  elseBranch  externs  gramps  hook  input  iter  n  nameNode  node  objLit  objLitParent  original  parent  pred  prop  rhs  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  alias  className  curName  fromName  name  name1  name2  nodeName  parentName  prototypeClass  prototypeProperty  referringName  singletonGetterClass  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  Predicate  NON_LOCAL_RESULT_PREDICATE  RefType  INHERITANCE  REGULAR  callSite  depType  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  hasInstanceOfReference  hasWrittenDescendants  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parent  parentJsName  rhs  to  CodingConvention  convention  List  prototypeNames  refNodes  referencedBy  refersTo  DiGraph  referenceGraph  TriState  BOTH  FALSE  TRUE  Map  aliases  allNames  scopes  AstChangeProxy  changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1372	1372	2	replace	return  new  NameInformation(nameInfo.name,  ns.PageSelectionModel.ChangeEvent());	return  nameInfo;  	non-compiled	[CE]  package  ns  does  not  exist	9	None	replace
19	[BUG]  [BUGGY]  return  new  NameInformation(nameInfo.name,  classes.subclassName,  ns.PageSelectionModel.ChangeEvent));  [CE]  ';'  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  Result:  goog.inherits(ns.PageSelectionModel.ChangeEvent  [CONTEXT]    if  (parent.isCall()  &&  t.inGlobalScope())  {  CodingConvention  convention  =  compiler.getCodingConvention();  SubclassRelationship  classes  =  convention.getClassesDefinedByCall(parent);  if  (classes  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  [BUGGY]  return  new  NameInformation(nameInfo.name,  classes.subclassName,  ns.PageSelectionModel.ChangeEvent));  [BUGGY]  }  String  singletonGetterClass  =  convention.getSingletonGetterClassName(parent);  if  (singletonGetterClass  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  singletonGetterClass;  nameInfo.onlyAffectsClassDef  =  true;  return  nameInfo;  }  [CLASS]  NameAnalyzer  AliasSet  RefType  ReferencePropagationCallback  NameInformation  JsName  JsNameRefNode  PrototypeSetNode  SpecialReferenceNode  ClassDefiningFunctionNode  InstanceOfCheckNode  ProcessExternals  FindDependencyScopes  HoistVariableAndFunctionDeclarations  FindDeclarationsAndSetters  1  FindReferences  NodeAccumulator  RemoveListener  TriState  [METHOD]  createNameInformation  [RETURN_TYPE]  NameAnalyzer$NameInformation  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  globalNames  names  nodesToKeep  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  decl  elseBranch  externs  gramps  hook  input  iter  n  nameNode  node  objLit  objLitParent  original  parent  pred  prop  rhs  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  alias  className  curName  fromName  name  name1  name2  nodeName  parentName  prototypeClass  prototypeProperty  referringName  singletonGetterClass  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  Predicate  NON_LOCAL_RESULT_PREDICATE  RefType  INHERITANCE  REGULAR  callSite  depType  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  hasInstanceOfReference  hasWrittenDescendants  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parent  parentJsName  rhs  to  CodingConvention  convention  List  prototypeNames  refNodes  referencedBy  refersTo  DiGraph  referenceGraph  TriState  BOTH  FALSE  TRUE  Map  aliases  allNames  scopes  AstChangeProxy  changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1372	1372	2	replace	return  new  NameInformation(nameInfo.name,  classes.subclassName,  ns.PageSelectionModel.ChangeEvent));	return  nameInfo;  	non-compiled	[CE]  ';'  expected	9	None	replace
20	[BUG]  [BUGGY]  return  new  NameInformation(nameInfo.name,  ns.PageSelectionModel.ChangeEvent);  [CE]  package  ns  does  not  exist  [FE]          junit.framework.AssertionFailedError:  Expected:  Result:  goog.inherits(ns.PageSelectionModel.ChangeEvent  [CONTEXT]    if  (parent.isCall()  &&  t.inGlobalScope())  {  CodingConvention  convention  =  compiler.getCodingConvention();  SubclassRelationship  classes  =  convention.getClassesDefinedByCall(parent);  if  (classes  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  [BUGGY]  return  new  NameInformation(nameInfo.name,  ns.PageSelectionModel.ChangeEvent);  [BUGGY]  }  String  singletonGetterClass  =  convention.getSingletonGetterClassName(parent);  if  (singletonGetterClass  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  singletonGetterClass;  nameInfo.onlyAffectsClassDef  =  true;  return  nameInfo;  }  [CLASS]  NameAnalyzer  AliasSet  RefType  ReferencePropagationCallback  NameInformation  JsName  JsNameRefNode  PrototypeSetNode  SpecialReferenceNode  ClassDefiningFunctionNode  InstanceOfCheckNode  ProcessExternals  FindDependencyScopes  HoistVariableAndFunctionDeclarations  FindDeclarationsAndSetters  1  FindReferences  NodeAccumulator  RemoveListener  TriState  [METHOD]  createNameInformation  [RETURN_TYPE]  NameAnalyzer$NameInformation  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  globalNames  names  nodesToKeep  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  decl  elseBranch  externs  gramps  hook  input  iter  n  nameNode  node  objLit  objLitParent  original  parent  pred  prop  rhs  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  alias  className  curName  fromName  name  name1  name2  nodeName  parentName  prototypeClass  prototypeProperty  referringName  singletonGetterClass  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  Predicate  NON_LOCAL_RESULT_PREDICATE  RefType  INHERITANCE  REGULAR  callSite  depType  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  hasInstanceOfReference  hasWrittenDescendants  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parent  parentJsName  rhs  to  CodingConvention  convention  List  prototypeNames  refNodes  referencedBy  refersTo  DiGraph  referenceGraph  TriState  BOTH  FALSE  TRUE  Map  aliases  allNames  scopes  AstChangeProxy  changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1372	1372	2	replace	return  new  NameInformation(nameInfo.name,  ns.PageSelectionModel.ChangeEvent);	return  nameInfo;  	non-compiled	[CE]  package  ns  does  not  exist	9	None	replace
21	[BUG]  [BUGGY]  return  new  NameInformation(nameInfo.name,  ns.PageSelectionModel.ChangeEvent)?  nameInfo  :  nameInfo;  [CE]  package  ns  does  not  exist  [FE]            junit.framework.AssertionFailedError:  Expected:  Result:  goog.inherits(ns.PageSelectionModel.ChangeEvent  [CONTEXT]    if  (parent.isCall()  &&  t.inGlobalScope())  {  CodingConvention  convention  =  compiler.getCodingConvention();  SubclassRelationship  classes  =  convention.getClassesDefinedByCall(parent);  if  (classes  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  [BUGGY]  return  new  NameInformation(nameInfo.name,  ns.PageSelectionModel.ChangeEvent)?  nameInfo  :  nameInfo;  [BUGGY]  }  String  singletonGetterClass  =  convention.getSingletonGetterClassName(parent);  if  (singletonGetterClass  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  singletonGetterClass;  nameInfo.onlyAffectsClassDef  =  true;  return  nameInfo;  }  [CLASS]  NameAnalyzer  AliasSet  RefType  ReferencePropagationCallback  NameInformation  JsName  JsNameRefNode  PrototypeSetNode  SpecialReferenceNode  ClassDefiningFunctionNode  InstanceOfCheckNode  ProcessExternals  FindDependencyScopes  HoistVariableAndFunctionDeclarations  FindDeclarationsAndSetters  1  FindReferences  NodeAccumulator  RemoveListener  TriState  [METHOD]  createNameInformation  [RETURN_TYPE]  NameAnalyzer$NameInformation  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  globalNames  names  nodesToKeep  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  decl  elseBranch  externs  gramps  hook  input  iter  n  nameNode  node  objLit  objLitParent  original  parent  pred  prop  rhs  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  alias  className  curName  fromName  name  name1  name2  nodeName  parentName  prototypeClass  prototypeProperty  referringName  singletonGetterClass  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  Predicate  NON_LOCAL_RESULT_PREDICATE  RefType  INHERITANCE  REGULAR  callSite  depType  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  hasInstanceOfReference  hasWrittenDescendants  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parent  parentJsName  rhs  to  CodingConvention  convention  List  prototypeNames  refNodes  referencedBy  refersTo  DiGraph  referenceGraph  TriState  BOTH  FALSE  TRUE  Map  aliases  allNames  scopes  AstChangeProxy  changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1372	1372	2	replace	return  new  NameInformation(nameInfo.name,  ns.PageSelectionModel.ChangeEvent)?  nameInfo  :  nameInfo;	return  nameInfo;  	non-compiled	[CE]  package  ns  does  not  exist	9	None	replace
22	[BUG]  [BUGGY]  return  new  NameInformation(nameInfo.name,  classes.subclassName,  ns.PageSelectionModel.ChangeEvent());  [CE]  package  ns  does  not  exist  [FE]              junit.framework.AssertionFailedError:  Expected:  Result:  goog.inherits(ns.PageSelectionModel.ChangeEvent  [CONTEXT]    if  (parent.isCall()  &&  t.inGlobalScope())  {  CodingConvention  convention  =  compiler.getCodingConvention();  SubclassRelationship  classes  =  convention.getClassesDefinedByCall(parent);  if  (classes  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  classes.subclassName;  nameInfo.onlyAffectsClassDef  =  true;  nameInfo.superclass  =  classes.superclassName;  [BUGGY]  return  new  NameInformation(nameInfo.name,  classes.subclassName,  ns.PageSelectionModel.ChangeEvent());  [BUGGY]  }  String  singletonGetterClass  =  convention.getSingletonGetterClassName(parent);  if  (singletonGetterClass  !=  null)  {  NameInformation  nameInfo  =  new  NameInformation();  nameInfo.name  =  singletonGetterClass;  nameInfo.onlyAffectsClassDef  =  true;  return  nameInfo;  }  [CLASS]  NameAnalyzer  AliasSet  RefType  ReferencePropagationCallback  NameInformation  JsName  JsNameRefNode  PrototypeSetNode  SpecialReferenceNode  ClassDefiningFunctionNode  InstanceOfCheckNode  ProcessExternals  FindDependencyScopes  HoistVariableAndFunctionDeclarations  FindDeclarationsAndSetters  1  FindReferences  NodeAccumulator  RemoveListener  TriState  [METHOD]  createNameInformation  [RETURN_TYPE]  NameAnalyzer$NameInformation  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  NameInformation  nameInfo  Set  DEFAULT_GLOBAL_NAMES  allNamesCopy  externalNames  globalNames  names  nodesToKeep  NodeTraversal  t  Node  ancestor  callNode  child  condition  containingNode  decl  elseBranch  externs  gramps  hook  input  iter  n  nameNode  node  objLit  objLitParent  original  parent  pred  prop  rhs  root  rootNameNode  step  thenBranch  value  SubclassRelationship  classes  String  FUNCTION  PROTOTYPE_SUBSTRING  WINDOW  alias  className  curName  fromName  name  name1  name2  nodeName  parentName  prototypeClass  prototypeProperty  referringName  singletonGetterClass  superclass  text  toName  int  PROTOTYPE_SUBSTRING_LEN  PROTOTYPE_SUFFIX_LEN  Predicate  NON_LOCAL_RESULT_PREDICATE  RefType  INHERITANCE  REGULAR  callSite  depType  AbstractCompiler  compiler  boolean  bNameWasShortened  canCreate  elseHasSideEffects  externallyDefined  hasInstanceOfReference  hasWrittenDescendants  isExternallyReferenceable  isPrototype  onlyAffectsClassDef  referenced  removeUnreferenced  thenHasSideEffects  JsName  checkedClass  curJsName  from  jsName  jsn  name  nameInfo  node  parent  parentJsName  rhs  to  CodingConvention  convention  List  prototypeNames  refNodes  referencedBy  refersTo  DiGraph  referenceGraph  TriState  BOTH  FALSE  TRUE  Map  aliases  allNames  scopes  AstChangeProxy  changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1372	1372	2	replace	return  new  NameInformation(nameInfo.name,  classes.subclassName,  ns.PageSelectionModel.ChangeEvent());	return  nameInfo;  	non-compiled	[CE]  package  ns  does  not  exist	9	None	replace
