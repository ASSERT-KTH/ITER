bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] NameInformation nameInfo = new NameInformation(); [FE] junit.framework.AssertionFailedError: Expected: Result: goog.inherits(ns.PageSelectionModel.ChangeEvent [CONTEXT] break; } }   if (parent.isCall() && t.inGlobalScope()) { CodingConvention convention = compiler.getCodingConvention(); SubclassRelationship classes = convention.getClassesDefinedByCall(parent); if (classes != null) { [BUGGY] NameInformation nameInfo = new NameInformation(); [BUGGY] nameInfo.name = classes.subclassName; nameInfo.onlyAffectsClassDef = true; nameInfo.superclass = classes.superclassName; return nameInfo; } String singletonGetterClass = convention.getSingletonGetterClassName(parent); if (singletonGetterClass != null) { NameInformation nameInfo = new NameInformation(); [CLASS] NameAnalyzer AliasSet RefType ReferencePropagationCallback NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters 1 FindReferences NodeAccumulator RemoveListener TriState [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation  NodeTraversal t Node n Node parent [VARIABLES] NameInformation nameInfo Set DEFAULT_GLOBAL_NAMES allNamesCopy externalNames globalNames names nodesToKeep NodeTraversal t Node ancestor callNode child condition containingNode decl elseBranch externs gramps hook input iter n nameNode node objLit objLitParent original parent pred prop rhs root rootNameNode step thenBranch value SubclassRelationship classes String FUNCTION PROTOTYPE_SUBSTRING WINDOW alias className curName fromName name name1 name2 nodeName parentName prototypeClass prototypeProperty referringName singletonGetterClass superclass text toName int PROTOTYPE_SUBSTRING_LEN PROTOTYPE_SUFFIX_LEN Predicate NON_LOCAL_RESULT_PREDICATE RefType INHERITANCE REGULAR callSite depType AbstractCompiler compiler boolean bNameWasShortened canCreate elseHasSideEffects externallyDefined hasInstanceOfReference hasWrittenDescendants isExternallyReferenceable isPrototype onlyAffectsClassDef referenced removeUnreferenced thenHasSideEffects JsName checkedClass curJsName from jsName jsn name nameInfo node parent parentJsName rhs to CodingConvention convention List prototypeNames refNodes referencedBy refersTo DiGraph referenceGraph TriState BOTH FALSE TRUE Map aliases allNames scopes AstChangeProxy changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1368	1368	2	replace	
2	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: Expected: Result: goog.inherits(ns.PageSelectionModel.ChangeEvent [CONTEXT] break; } }   if (parent.isCall() && t.inGlobalScope()) { CodingConvention convention = compiler.getCodingConvention(); SubclassRelationship classes = convention.getClassesDefinedByCall(parent); if (classes != null) { [BUGGY] [BUGGY] NameInformation nameInfo = new NameInformation(); nameInfo.name = classes.subclassName; nameInfo.onlyAffectsClassDef = true; nameInfo.superclass = classes.superclassName; return nameInfo; } String singletonGetterClass = convention.getSingletonGetterClassName(parent); if (singletonGetterClass != null) { NameInformation nameInfo = new NameInformation(); [CLASS] NameAnalyzer AliasSet RefType ReferencePropagationCallback NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters 1 FindReferences NodeAccumulator RemoveListener TriState [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation  NodeTraversal t Node n Node parent [VARIABLES] NameInformation nameInfo Set DEFAULT_GLOBAL_NAMES allNamesCopy externalNames globalNames names nodesToKeep NodeTraversal t Node ancestor callNode child condition containingNode decl elseBranch externs gramps hook input iter n nameNode node objLit objLitParent original parent pred prop rhs root rootNameNode step thenBranch value SubclassRelationship classes String FUNCTION PROTOTYPE_SUBSTRING WINDOW alias className curName fromName name name1 name2 nodeName parentName prototypeClass prototypeProperty referringName singletonGetterClass superclass text toName int PROTOTYPE_SUBSTRING_LEN PROTOTYPE_SUFFIX_LEN Predicate NON_LOCAL_RESULT_PREDICATE RefType INHERITANCE REGULAR callSite depType AbstractCompiler compiler boolean bNameWasShortened canCreate elseHasSideEffects externallyDefined hasInstanceOfReference hasWrittenDescendants isExternallyReferenceable isPrototype onlyAffectsClassDef referenced removeUnreferenced thenHasSideEffects JsName checkedClass curJsName from jsName jsn name nameInfo node parent parentJsName rhs to CodingConvention convention List prototypeNames refNodes referencedBy refersTo DiGraph referenceGraph TriState BOTH FALSE TRUE Map aliases allNames scopes AstChangeProxy changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1368	1368	2	add	
3	[BUG] [BUGGY] nameInfo.name = classes.subclassName; [FE] junit.framework.AssertionFailedError: Expected: Result: goog.inherits(ns.PageSelectionModel.ChangeEvent [CONTEXT] } }   if (parent.isCall() && t.inGlobalScope()) { CodingConvention convention = compiler.getCodingConvention(); SubclassRelationship classes = convention.getClassesDefinedByCall(parent); if (classes != null) { NameInformation nameInfo = new NameInformation(); [BUGGY] nameInfo.name = classes.subclassName; [BUGGY] nameInfo.onlyAffectsClassDef = true; nameInfo.superclass = classes.superclassName; return nameInfo; } String singletonGetterClass = convention.getSingletonGetterClassName(parent); if (singletonGetterClass != null) { NameInformation nameInfo = new NameInformation(); nameInfo.name = singletonGetterClass; [CLASS] NameAnalyzer AliasSet RefType ReferencePropagationCallback NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters 1 FindReferences NodeAccumulator RemoveListener TriState [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation  NodeTraversal t Node n Node parent [VARIABLES] NameInformation nameInfo Set DEFAULT_GLOBAL_NAMES allNamesCopy externalNames globalNames names nodesToKeep NodeTraversal t Node ancestor callNode child condition containingNode decl elseBranch externs gramps hook input iter n nameNode node objLit objLitParent original parent pred prop rhs root rootNameNode step thenBranch value SubclassRelationship classes String FUNCTION PROTOTYPE_SUBSTRING WINDOW alias className curName fromName name name1 name2 nodeName parentName prototypeClass prototypeProperty referringName singletonGetterClass superclass text toName int PROTOTYPE_SUBSTRING_LEN PROTOTYPE_SUFFIX_LEN Predicate NON_LOCAL_RESULT_PREDICATE RefType INHERITANCE REGULAR callSite depType AbstractCompiler compiler boolean bNameWasShortened canCreate elseHasSideEffects externallyDefined hasInstanceOfReference hasWrittenDescendants isExternallyReferenceable isPrototype onlyAffectsClassDef referenced removeUnreferenced thenHasSideEffects JsName checkedClass curJsName from jsName jsn name nameInfo node parent parentJsName rhs to CodingConvention convention List prototypeNames refNodes referencedBy refersTo DiGraph referenceGraph TriState BOTH FALSE TRUE Map aliases allNames scopes AstChangeProxy changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1369	1369	2	replace	
4	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: Expected: Result: goog.inherits(ns.PageSelectionModel.ChangeEvent [CONTEXT] } }   if (parent.isCall() && t.inGlobalScope()) { CodingConvention convention = compiler.getCodingConvention(); SubclassRelationship classes = convention.getClassesDefinedByCall(parent); if (classes != null) { NameInformation nameInfo = new NameInformation(); [BUGGY] [BUGGY] nameInfo.name = classes.subclassName; nameInfo.onlyAffectsClassDef = true; nameInfo.superclass = classes.superclassName; return nameInfo; } String singletonGetterClass = convention.getSingletonGetterClassName(parent); if (singletonGetterClass != null) { NameInformation nameInfo = new NameInformation(); nameInfo.name = singletonGetterClass; [CLASS] NameAnalyzer AliasSet RefType ReferencePropagationCallback NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters 1 FindReferences NodeAccumulator RemoveListener TriState [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation  NodeTraversal t Node n Node parent [VARIABLES] NameInformation nameInfo Set DEFAULT_GLOBAL_NAMES allNamesCopy externalNames globalNames names nodesToKeep NodeTraversal t Node ancestor callNode child condition containingNode decl elseBranch externs gramps hook input iter n nameNode node objLit objLitParent original parent pred prop rhs root rootNameNode step thenBranch value SubclassRelationship classes String FUNCTION PROTOTYPE_SUBSTRING WINDOW alias className curName fromName name name1 name2 nodeName parentName prototypeClass prototypeProperty referringName singletonGetterClass superclass text toName int PROTOTYPE_SUBSTRING_LEN PROTOTYPE_SUFFIX_LEN Predicate NON_LOCAL_RESULT_PREDICATE RefType INHERITANCE REGULAR callSite depType AbstractCompiler compiler boolean bNameWasShortened canCreate elseHasSideEffects externallyDefined hasInstanceOfReference hasWrittenDescendants isExternallyReferenceable isPrototype onlyAffectsClassDef referenced removeUnreferenced thenHasSideEffects JsName checkedClass curJsName from jsName jsn name nameInfo node parent parentJsName rhs to CodingConvention convention List prototypeNames refNodes referencedBy refersTo DiGraph referenceGraph TriState BOTH FALSE TRUE Map aliases allNames scopes AstChangeProxy changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1369	1369	2	add	
5	[BUG] [BUGGY] nameInfo.onlyAffectsClassDef = true; [FE] junit.framework.AssertionFailedError: Expected: Result: goog.inherits(ns.PageSelectionModel.ChangeEvent [CONTEXT] }   if (parent.isCall() && t.inGlobalScope()) { CodingConvention convention = compiler.getCodingConvention(); SubclassRelationship classes = convention.getClassesDefinedByCall(parent); if (classes != null) { NameInformation nameInfo = new NameInformation(); nameInfo.name = classes.subclassName; [BUGGY] nameInfo.onlyAffectsClassDef = true; [BUGGY] nameInfo.superclass = classes.superclassName; return nameInfo; } String singletonGetterClass = convention.getSingletonGetterClassName(parent); if (singletonGetterClass != null) { NameInformation nameInfo = new NameInformation(); nameInfo.name = singletonGetterClass; nameInfo.onlyAffectsClassDef = true; [CLASS] NameAnalyzer AliasSet RefType ReferencePropagationCallback NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters 1 FindReferences NodeAccumulator RemoveListener TriState [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation  NodeTraversal t Node n Node parent [VARIABLES] NameInformation nameInfo Set DEFAULT_GLOBAL_NAMES allNamesCopy externalNames globalNames names nodesToKeep NodeTraversal t Node ancestor callNode child condition containingNode decl elseBranch externs gramps hook input iter n nameNode node objLit objLitParent original parent pred prop rhs root rootNameNode step thenBranch value SubclassRelationship classes String FUNCTION PROTOTYPE_SUBSTRING WINDOW alias className curName fromName name name1 name2 nodeName parentName prototypeClass prototypeProperty referringName singletonGetterClass superclass text toName int PROTOTYPE_SUBSTRING_LEN PROTOTYPE_SUFFIX_LEN Predicate NON_LOCAL_RESULT_PREDICATE RefType INHERITANCE REGULAR callSite depType AbstractCompiler compiler boolean bNameWasShortened canCreate elseHasSideEffects externallyDefined hasInstanceOfReference hasWrittenDescendants isExternallyReferenceable isPrototype onlyAffectsClassDef referenced removeUnreferenced thenHasSideEffects JsName checkedClass curJsName from jsName jsn name nameInfo node parent parentJsName rhs to CodingConvention convention List prototypeNames refNodes referencedBy refersTo DiGraph referenceGraph TriState BOTH FALSE TRUE Map aliases allNames scopes AstChangeProxy changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1370	1370	2	replace	
6	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: Expected: Result: goog.inherits(ns.PageSelectionModel.ChangeEvent [CONTEXT] }   if (parent.isCall() && t.inGlobalScope()) { CodingConvention convention = compiler.getCodingConvention(); SubclassRelationship classes = convention.getClassesDefinedByCall(parent); if (classes != null) { NameInformation nameInfo = new NameInformation(); nameInfo.name = classes.subclassName; [BUGGY] [BUGGY] nameInfo.onlyAffectsClassDef = true; nameInfo.superclass = classes.superclassName; return nameInfo; } String singletonGetterClass = convention.getSingletonGetterClassName(parent); if (singletonGetterClass != null) { NameInformation nameInfo = new NameInformation(); nameInfo.name = singletonGetterClass; nameInfo.onlyAffectsClassDef = true; [CLASS] NameAnalyzer AliasSet RefType ReferencePropagationCallback NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters 1 FindReferences NodeAccumulator RemoveListener TriState [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation  NodeTraversal t Node n Node parent [VARIABLES] NameInformation nameInfo Set DEFAULT_GLOBAL_NAMES allNamesCopy externalNames globalNames names nodesToKeep NodeTraversal t Node ancestor callNode child condition containingNode decl elseBranch externs gramps hook input iter n nameNode node objLit objLitParent original parent pred prop rhs root rootNameNode step thenBranch value SubclassRelationship classes String FUNCTION PROTOTYPE_SUBSTRING WINDOW alias className curName fromName name name1 name2 nodeName parentName prototypeClass prototypeProperty referringName singletonGetterClass superclass text toName int PROTOTYPE_SUBSTRING_LEN PROTOTYPE_SUFFIX_LEN Predicate NON_LOCAL_RESULT_PREDICATE RefType INHERITANCE REGULAR callSite depType AbstractCompiler compiler boolean bNameWasShortened canCreate elseHasSideEffects externallyDefined hasInstanceOfReference hasWrittenDescendants isExternallyReferenceable isPrototype onlyAffectsClassDef referenced removeUnreferenced thenHasSideEffects JsName checkedClass curJsName from jsName jsn name nameInfo node parent parentJsName rhs to CodingConvention convention List prototypeNames refNodes referencedBy refersTo DiGraph referenceGraph TriState BOTH FALSE TRUE Map aliases allNames scopes AstChangeProxy changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1370	1370	2	add	
7	[BUG] [BUGGY] nameInfo.superclass = classes.superclassName; [FE] junit.framework.AssertionFailedError: Expected: Result: goog.inherits(ns.PageSelectionModel.ChangeEvent [CONTEXT]   if (parent.isCall() && t.inGlobalScope()) { CodingConvention convention = compiler.getCodingConvention(); SubclassRelationship classes = convention.getClassesDefinedByCall(parent); if (classes != null) { NameInformation nameInfo = new NameInformation(); nameInfo.name = classes.subclassName; nameInfo.onlyAffectsClassDef = true; [BUGGY] nameInfo.superclass = classes.superclassName; [BUGGY] return nameInfo; } String singletonGetterClass = convention.getSingletonGetterClassName(parent); if (singletonGetterClass != null) { NameInformation nameInfo = new NameInformation(); nameInfo.name = singletonGetterClass; nameInfo.onlyAffectsClassDef = true; return nameInfo; [CLASS] NameAnalyzer AliasSet RefType ReferencePropagationCallback NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters 1 FindReferences NodeAccumulator RemoveListener TriState [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation  NodeTraversal t Node n Node parent [VARIABLES] NameInformation nameInfo Set DEFAULT_GLOBAL_NAMES allNamesCopy externalNames globalNames names nodesToKeep NodeTraversal t Node ancestor callNode child condition containingNode decl elseBranch externs gramps hook input iter n nameNode node objLit objLitParent original parent pred prop rhs root rootNameNode step thenBranch value SubclassRelationship classes String FUNCTION PROTOTYPE_SUBSTRING WINDOW alias className curName fromName name name1 name2 nodeName parentName prototypeClass prototypeProperty referringName singletonGetterClass superclass text toName int PROTOTYPE_SUBSTRING_LEN PROTOTYPE_SUFFIX_LEN Predicate NON_LOCAL_RESULT_PREDICATE RefType INHERITANCE REGULAR callSite depType AbstractCompiler compiler boolean bNameWasShortened canCreate elseHasSideEffects externallyDefined hasInstanceOfReference hasWrittenDescendants isExternallyReferenceable isPrototype onlyAffectsClassDef referenced removeUnreferenced thenHasSideEffects JsName checkedClass curJsName from jsName jsn name nameInfo node parent parentJsName rhs to CodingConvention convention List prototypeNames refNodes referencedBy refersTo DiGraph referenceGraph TriState BOTH FALSE TRUE Map aliases allNames scopes AstChangeProxy changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1371	1371	2	replace	
8	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: Expected: Result: goog.inherits(ns.PageSelectionModel.ChangeEvent [CONTEXT]   if (parent.isCall() && t.inGlobalScope()) { CodingConvention convention = compiler.getCodingConvention(); SubclassRelationship classes = convention.getClassesDefinedByCall(parent); if (classes != null) { NameInformation nameInfo = new NameInformation(); nameInfo.name = classes.subclassName; nameInfo.onlyAffectsClassDef = true; [BUGGY] [BUGGY] nameInfo.superclass = classes.superclassName; return nameInfo; } String singletonGetterClass = convention.getSingletonGetterClassName(parent); if (singletonGetterClass != null) { NameInformation nameInfo = new NameInformation(); nameInfo.name = singletonGetterClass; nameInfo.onlyAffectsClassDef = true; return nameInfo; [CLASS] NameAnalyzer AliasSet RefType ReferencePropagationCallback NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters 1 FindReferences NodeAccumulator RemoveListener TriState [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation  NodeTraversal t Node n Node parent [VARIABLES] NameInformation nameInfo Set DEFAULT_GLOBAL_NAMES allNamesCopy externalNames globalNames names nodesToKeep NodeTraversal t Node ancestor callNode child condition containingNode decl elseBranch externs gramps hook input iter n nameNode node objLit objLitParent original parent pred prop rhs root rootNameNode step thenBranch value SubclassRelationship classes String FUNCTION PROTOTYPE_SUBSTRING WINDOW alias className curName fromName name name1 name2 nodeName parentName prototypeClass prototypeProperty referringName singletonGetterClass superclass text toName int PROTOTYPE_SUBSTRING_LEN PROTOTYPE_SUFFIX_LEN Predicate NON_LOCAL_RESULT_PREDICATE RefType INHERITANCE REGULAR callSite depType AbstractCompiler compiler boolean bNameWasShortened canCreate elseHasSideEffects externallyDefined hasInstanceOfReference hasWrittenDescendants isExternallyReferenceable isPrototype onlyAffectsClassDef referenced removeUnreferenced thenHasSideEffects JsName checkedClass curJsName from jsName jsn name nameInfo node parent parentJsName rhs to CodingConvention convention List prototypeNames refNodes referencedBy refersTo DiGraph referenceGraph TriState BOTH FALSE TRUE Map aliases allNames scopes AstChangeProxy changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1371	1371	2	add	
9	[BUG] [BUGGY] return nameInfo; [FE] junit.framework.AssertionFailedError: Expected: Result: goog.inherits(ns.PageSelectionModel.ChangeEvent [CONTEXT]   if (parent.isCall() && t.inGlobalScope()) { CodingConvention convention = compiler.getCodingConvention(); SubclassRelationship classes = convention.getClassesDefinedByCall(parent); if (classes != null) { NameInformation nameInfo = new NameInformation(); nameInfo.name = classes.subclassName; nameInfo.onlyAffectsClassDef = true; nameInfo.superclass = classes.superclassName; [BUGGY] return nameInfo; [BUGGY] } String singletonGetterClass = convention.getSingletonGetterClassName(parent); if (singletonGetterClass != null) { NameInformation nameInfo = new NameInformation(); nameInfo.name = singletonGetterClass; nameInfo.onlyAffectsClassDef = true; return nameInfo; } [CLASS] NameAnalyzer AliasSet RefType ReferencePropagationCallback NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters 1 FindReferences NodeAccumulator RemoveListener TriState [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation  NodeTraversal t Node n Node parent [VARIABLES] NameInformation nameInfo Set DEFAULT_GLOBAL_NAMES allNamesCopy externalNames globalNames names nodesToKeep NodeTraversal t Node ancestor callNode child condition containingNode decl elseBranch externs gramps hook input iter n nameNode node objLit objLitParent original parent pred prop rhs root rootNameNode step thenBranch value SubclassRelationship classes String FUNCTION PROTOTYPE_SUBSTRING WINDOW alias className curName fromName name name1 name2 nodeName parentName prototypeClass prototypeProperty referringName singletonGetterClass superclass text toName int PROTOTYPE_SUBSTRING_LEN PROTOTYPE_SUFFIX_LEN Predicate NON_LOCAL_RESULT_PREDICATE RefType INHERITANCE REGULAR callSite depType AbstractCompiler compiler boolean bNameWasShortened canCreate elseHasSideEffects externallyDefined hasInstanceOfReference hasWrittenDescendants isExternallyReferenceable isPrototype onlyAffectsClassDef referenced removeUnreferenced thenHasSideEffects JsName checkedClass curJsName from jsName jsn name nameInfo node parent parentJsName rhs to CodingConvention convention List prototypeNames refNodes referencedBy refersTo DiGraph referenceGraph TriState BOTH FALSE TRUE Map aliases allNames scopes AstChangeProxy changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1372	1372	2	replace	
10	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: Expected: Result: goog.inherits(ns.PageSelectionModel.ChangeEvent [CONTEXT]   if (parent.isCall() && t.inGlobalScope()) { CodingConvention convention = compiler.getCodingConvention(); SubclassRelationship classes = convention.getClassesDefinedByCall(parent); if (classes != null) { NameInformation nameInfo = new NameInformation(); nameInfo.name = classes.subclassName; nameInfo.onlyAffectsClassDef = true; nameInfo.superclass = classes.superclassName; [BUGGY] [BUGGY] return nameInfo; } String singletonGetterClass = convention.getSingletonGetterClassName(parent); if (singletonGetterClass != null) { NameInformation nameInfo = new NameInformation(); nameInfo.name = singletonGetterClass; nameInfo.onlyAffectsClassDef = true; return nameInfo; } [CLASS] NameAnalyzer AliasSet RefType ReferencePropagationCallback NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters 1 FindReferences NodeAccumulator RemoveListener TriState [METHOD] createNameInformation [RETURN_TYPE] NameAnalyzer$NameInformation  NodeTraversal t Node n Node parent [VARIABLES] NameInformation nameInfo Set DEFAULT_GLOBAL_NAMES allNamesCopy externalNames globalNames names nodesToKeep NodeTraversal t Node ancestor callNode child condition containingNode decl elseBranch externs gramps hook input iter n nameNode node objLit objLitParent original parent pred prop rhs root rootNameNode step thenBranch value SubclassRelationship classes String FUNCTION PROTOTYPE_SUBSTRING WINDOW alias className curName fromName name name1 name2 nodeName parentName prototypeClass prototypeProperty referringName singletonGetterClass superclass text toName int PROTOTYPE_SUBSTRING_LEN PROTOTYPE_SUFFIX_LEN Predicate NON_LOCAL_RESULT_PREDICATE RefType INHERITANCE REGULAR callSite depType AbstractCompiler compiler boolean bNameWasShortened canCreate elseHasSideEffects externallyDefined hasInstanceOfReference hasWrittenDescendants isExternallyReferenceable isPrototype onlyAffectsClassDef referenced removeUnreferenced thenHasSideEffects JsName checkedClass curJsName from jsName jsn name nameInfo node parent parentJsName rhs to CodingConvention convention List prototypeNames refNodes referencedBy refersTo DiGraph referenceGraph TriState BOTH FALSE TRUE Map aliases allNames scopes AstChangeProxy changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.3333333333333333	1372	1372	2	add	
11	[BUG] [BUGGY] return getRhsSubexpressions(n.getFirstChild()); [FE] junit.framework.AssertionFailedError: Expected: Result: goog.inherits(ns.PageSelectionModel.ChangeEvent [CONTEXT] private List<Node> getRhsSubexpressions(Node n) { switch (n.getType()) { case Token.EXPR_RESULT:  [BUGGY] return getRhsSubexpressions(n.getFirstChild()); [BUGGY] case Token.FUNCTION:  return Collections.emptyList(); case Token.NAME: {  Node rhs = n.getFirstChild(); if (rhs != null) { return Lists.newArrayList(rhs); } else { [CLASS] NameAnalyzer AliasSet RefType ReferencePropagationCallback NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters 1 FindReferences NodeAccumulator RemoveListener TriState [METHOD] getRhsSubexpressions [RETURN_TYPE] List  Node n [VARIABLES] Set DEFAULT_GLOBAL_NAMES allNamesCopy externalNames globalNames names nodesToKeep Node ancestor callNode child condition containingNode decl elseBranch expr externs function gramps hook input iter lhs n nameNode node objLit objLitParent original parent pred prop rep replacement rhs root rootNameNode step subexpression thenBranch value valueExpr String FUNCTION PROTOTYPE_SUBSTRING WINDOW alias className curName fromName name name1 name2 nodeName parentName prototypeClass prototypeProperty referringName rootName s singletonGetterClass superclass text toName int PROTOTYPE_SUBSTRING_LEN PROTOTYPE_SUFFIX_LEN count i idx Predicate NON_LOCAL_RESULT_PREDICATE RefType INHERITANCE REGULAR callSite depType AbstractCompiler compiler boolean bNameWasShortened canCreate classMatch elseHasSideEffects externallyDefined hasInstanceOfReference hasWrittenDescendants isExtern isExternallyReferenceable isGlobalRef isPrototype nodeIsClass onlyAffectsClassDef referenceMatch referenced removeUnreferenced thenHasSideEffects JsName checkedClass curJsName from function jsName jsn name nameInfo node parent parentJsName rhs to window List newReplacements nodes prototypeNames refNodes referencedBy refersTo replacements subexpressions DiGraph referenceGraph TriState BOTH FALSE TRUE isClass referenced Map aliases allNames scopes AstChangeProxy changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.22086305214969307	1770	1770	2	replace	
12	[BUG] [BUGGY] [FE] junit.framework.AssertionFailedError: Expected: Result: goog.inherits(ns.PageSelectionModel.ChangeEvent [CONTEXT] private List<Node> getRhsSubexpressions(Node n) { switch (n.getType()) { case Token.EXPR_RESULT:  [BUGGY] [BUGGY] return getRhsSubexpressions(n.getFirstChild()); case Token.FUNCTION:  return Collections.emptyList(); case Token.NAME: {  Node rhs = n.getFirstChild(); if (rhs != null) { return Lists.newArrayList(rhs); } else { [CLASS] NameAnalyzer AliasSet RefType ReferencePropagationCallback NameInformation JsName JsNameRefNode PrototypeSetNode SpecialReferenceNode ClassDefiningFunctionNode InstanceOfCheckNode ProcessExternals FindDependencyScopes HoistVariableAndFunctionDeclarations FindDeclarationsAndSetters 1 FindReferences NodeAccumulator RemoveListener TriState [METHOD] getRhsSubexpressions [RETURN_TYPE] List  Node n [VARIABLES] Set DEFAULT_GLOBAL_NAMES allNamesCopy externalNames globalNames names nodesToKeep Node ancestor callNode child condition containingNode decl elseBranch expr externs function gramps hook input iter lhs n nameNode node objLit objLitParent original parent pred prop rep replacement rhs root rootNameNode step subexpression thenBranch value valueExpr String FUNCTION PROTOTYPE_SUBSTRING WINDOW alias className curName fromName name name1 name2 nodeName parentName prototypeClass prototypeProperty referringName rootName s singletonGetterClass superclass text toName int PROTOTYPE_SUBSTRING_LEN PROTOTYPE_SUFFIX_LEN count i idx Predicate NON_LOCAL_RESULT_PREDICATE RefType INHERITANCE REGULAR callSite depType AbstractCompiler compiler boolean bNameWasShortened canCreate classMatch elseHasSideEffects externallyDefined hasInstanceOfReference hasWrittenDescendants isExtern isExternallyReferenceable isGlobalRef isPrototype nodeIsClass onlyAffectsClassDef referenceMatch referenced removeUnreferenced thenHasSideEffects JsName checkedClass curJsName from function jsName jsn name nameInfo node parent parentJsName rhs to window List newReplacements nodes prototypeNames refNodes referencedBy refersTo replacements subexpressions DiGraph referenceGraph TriState BOTH FALSE TRUE isClass referenced Map aliases allNames scopes AstChangeProxy changeProxy  	projects/Closure40/src/com/google/javascript/jscomp/NameAnalyzer.java	0.22086305214969307	1770	1770	2	add	
