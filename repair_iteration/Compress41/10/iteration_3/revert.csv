projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getKey());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getEntry());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getKey(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getKey(),val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getKey());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getKey());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.length-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.length+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getValue(),val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getValue(),val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.length-2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getEntry(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getEntry());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getEntry(),val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getEntry(),val.getEnd());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val,val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736currentEntry.setCrc(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val,false);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getValue(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736currentEntry.setCrc(val.getValue(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getValue(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),z);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.toString());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.intValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.getValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue()/1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.entry.setCrc(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue(),val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val,val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(ZipLong.DD_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.setLength(0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736newZipLong(val.longValue(),val.longValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736Inflaterinf=getInputStream();if(inf!=null){return;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736newZipLong(val.longValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(ZipLong.DD_SIG).append('n');
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736Inflaterinf=getInputStream();if(inf==null){return;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val.getValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val.getValue(),val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val.getValue()-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val.getKey());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setValue(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setValue(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getValue(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getKey());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val,val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getValue(),val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val.getValue(),0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getEntry());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),zipEncoding);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.toUpperCase());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue(),0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736CurrentEntryhasDataDescriptor=current.entry.setCrc(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.toByteArray());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736readFully(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736readFully(val);val=newZipLong(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append('n');
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(zipEncoding.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getShortValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(crc);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(zipEncoding);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(newZipLong(val));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.toString());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getBytes());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.toByteArray());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),ZipLong.DD_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getEntry());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.trim());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.remainder);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getKey(),val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.clone());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getEntry());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736newZipLong(val.longValue());val.longValue();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(ZipLong.DD_SIG).append(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736Inflaterinf=ZipLong.getInstance();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.getSize());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.getEnd());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.write(ZipLong.DD_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.setLength(1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.reset();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.setLength(2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.write(ZipLong.DECEMBER);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val,val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736currentEntry.setValue(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736CurrentEntryval=currentEntry.getValue();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setValue(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val,0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(ZipLong.DD_SIG).append(value);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(zipLong.DD_SIG).append(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(ZipLong.DD_SIG).append(shortValue);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(ZipLong.DD_SIG).append(val+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(ZipLong.DD_SIG).append(v);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue(),1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue(),0,val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue(),4);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue(),2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue(),10);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setValue(val.getValue(),0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setZipEncoding(val.getKey());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setZipEncoding(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getLongValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getShortName());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736currentEntry.setValue(val.getValue(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setValue(val.getValue(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue(),z);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.getValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.length+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.getLength()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(zipEncoding.getValue(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getValue(),zipEncoding);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736currentEntry.setCrc(zipEncoding.getValue(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setValue(val.getValue(),zipEncoding);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),encoding);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.getShortValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setValue(val.getKey(),val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.getLongValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.getCharacterEncoding());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.toString());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.toLowerCase());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.toUpperCase(),val.toLowerCase());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.toUpperCase(),val.toUpperCase());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val,val.toUpperCase());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.toUpperCase()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.toUpperCase(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val,z);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val,crc);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val,zipEncoding);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val,0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val,val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val,val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getKey(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val,val.getKey());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getKey(),val.length());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getValue(),val.length-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getValue(),val.length+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val,val.getValue(),val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getValue(),val.length,val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getValue(),val.length+1,val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getKey(),val.length-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getKey(),val.length,val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getKey(),val.length+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getKey(),val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getKey(),val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getValue(),val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getValue(),val.getValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getEntry(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736currentEntry.setCrc(val.getEntry(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getName(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getEntry(),crc);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getIntValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getShortValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setZipEncoding(val.getShortValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getShortValue(),val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getShortValue(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue(),val.getValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue(),val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue()/1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue(),val.length+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736newZipLong(val.length());val.longValue();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736readFully(val.longValue());val.longValue();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val=newZipLong(ZipLong.DD_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736newZipLong(val.length());val.length();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val=newZipLong(val.longValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(zip.getValue(),ZipLong.DD_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(zipLong.getValue(),ZipLong.DD_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(ZipLong.DD_SIG.getValue(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),ZipLong.DD_SIG,val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getKey(),ZipLong.DD_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getValue(),ZipLong.DD_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setZipEncoding(val.toString());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.toUpperCase());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(zipEncoding.toString());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val,val.toString());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(encoding.toString());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.entry.setCrc(val.getKey());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.entry.setCrc(val.getValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.entry.setCrc(val.getValue(),val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.entry.setCrc(val.getValue(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.entry.setCrc(val,val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.entry.setCrc(val.getValue(),val.intValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getValue(),val.getValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getValue(),val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736EntryEncoding.setCrc(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getValue()/1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setValue(val.getValue(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getValue(),z);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getValue(),encoding);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getKey(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setZipEncoding(val.getValue(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getValue(),0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setValue(val.getValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setValue(val.getValue(),val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setValue(val.getKey());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setValue(val,val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getValue(),val.length-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.length-1,val.length-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.length-1,val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val.getValue(),val.length-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val.getValue(),val.length+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue(),val.length-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val.getValue(),val.length-2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.getKey());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.getShortValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.getCharacterEncoding());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getValue(),val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),0,val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getKey(),0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getValue(),0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),4);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getValue(),0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val,val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736EntryEncodingcrc=entryEncoding.getCrc();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.setCrc(entryEncoding);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val,crc);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(crc);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(zipEncoding,val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(zipEncoding.getValue(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setValue(zipEncoding.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(zipEncoding.getValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.length-4);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.length-3);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.length-1,val.length-2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getValue(),val.length-2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.toString(),val.toByteArray());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736currentEntry.setValue(val.toString());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.toString(),val.toLowerCase());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.toString(),val.toUpperCase());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.substring(0,val.length()-1));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setZipEncoding(val.getEntry());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setZipEncoding(val.getEntry());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getEntry(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getRawEntry());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getVersion());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736Inflaterinf=getInputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736Inflaterinf=getInputStream();if(val==null){return;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736InputStreaminf=getInputStream();if(inf!=null){return;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736InputStreaminf=getInputStream();if(inf==null){return;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736CurrentEntryhasDataDescriptor=crc.setCrc(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736CurrentEntryhasDataDescriptor=val.setCrc(current.entry.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736CurrentEntryhasDataDescriptor=current.entry.setCrc(val.getKey());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736CurrentEntryhasDataDescriptor=currentEntry.setCrc(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736CurrentEntryhasDataDescriptor=current.entry.setCrc(val.getValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736CurrentEntryhasDataDescriptor=current.entry.setCrc(val.getValue(),val.length());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736CurrentEntryhasDataDescriptor=current.entry.setCrc(val.getValue(),val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736currentEntry.setCrc(val,val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736currentEntry.setCrc(val,false);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736currentEntry.setCrc(zipEncoding);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getBytes(),val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setZipEncoding(val.getBytes());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getBytes(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setBytes(val.getBytes());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val,val.getBytes());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getBytes()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736Inflaterinf=val.getInstance();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736Inflaterinf=ZipLong.getInstance(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736Inflaterinf=newZipLong(ZipLong.getInstance());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736Inflaterinf=ZipLong.parseZipLong(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736Inflaterinf=ZipLong.getInstanceUTF8();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736Inflaterinf=zipLong.getInstance();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setZipEncoding(val,val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(encoding,val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val,zipEncoding.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val,val.getValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val,encoding.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getValue(),z);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(entry.getValue(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(zipEncoding.getValue(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.length());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.longValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.byteValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.doubleValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.intValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setValue(val.getKey(),val.intValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736newZipLong(val.longValue(),val.longValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736newZipLong(val.doubleValue(),val.doubleValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736newZipLong(val.intValue(),val.intValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736newZipLong(val.length(),val.longValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val=newZipLong(val.longValue(),val.longValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736newZipLong(val.longValue(),val.longValue(),0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val.getLongValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val.getKey(),val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val.getLength());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val.getSize());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736readFully(val,val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736readFully(val,val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736readFully(val,val.intValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736readFully(val,val.longValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val.getValue(),val.getValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val.getValue(),val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val.getValue()/1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getValue(),val.length+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736Entryentry=crc.getEntry(val.getValue(),val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getValue(),val.length,val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getValue(),val.length+1,val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getValue(),val.toByteArray());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getKey(),val.toByteArray());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getValue(),val.toByteArray());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.toByteArray(),0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.toByteArray()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736Entryentry=crc.getEntry();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getEntry(),val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getEntry(),val.getEnd());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getKey(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736currentEntry.setCrc(val.getKey(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736Entryentry=crc.getEntry(val.getKey(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getValue(),val.length-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setZipEncoding(val.getValue(),val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setValue(val.getValue(),val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getValue(),val.length+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getKey(),val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getValue(),val.length-2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getValue(),z);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736Entryentry=crc.getEntry(val.getValue(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getValue(),encoding);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getKey(),val.getValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getKey(),val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getKey(),val.getShortValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getKey(),val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getKey(),val.getValue(),SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(ZipLong.DD_SIG).append('n',val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(ZipLong.DD_SIG).append('N');
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(ZipLong.DD_SIG).append('n',val.longValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(ZipLong.DD_SIG).append('0');
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getEntry(),val.getValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getEntry(),val.getKey());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getEntry(),val.getShortValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getEntry(),val.getLongValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getEntry(),val.getValue(),SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getName(),val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getEntry(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val,val.getEntry());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(crc.getEntry());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.getStart());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.getLength());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.getEnd()-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setValue(val.getKey(),val.getEnd());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.getEnd()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getValue(),val.intValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val,val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.getSize()-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.getSize()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setValue(val.getKey(),val.getSize());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.getMask());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.getOffset());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(newZipLong(val),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(newZipLong(val));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(ZipLong.valueOf(val));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(newZipLong(val,val));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(newZipLong(val,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setZipEncoding(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setZipEncoding(crc);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.setZipEncoding(crc);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrcEncoding(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736newZipLong(val.length());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736newZipLong(val.longValue(),0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736newZipLong(ZipLong.DD_SIG.longValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736newZipLong(val.longValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736newZipLong(val.doubleValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue()*1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue()/2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue()/4);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue()/3);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getKey(),val.remainder);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getValue(),val.remainder);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.toString());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.in);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.getValue()*1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.getValue()-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(z.getValue(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getKey(),z);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.intValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val,val.getKey());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val,val.toString());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val,val.getValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val,val.toByteArray());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val,val.cloneTree());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val,val.next());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getShortValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736Entryentry=crc.getEntry(val.getKey());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val,val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val,false);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val,true);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.length-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setValue(val.getKey(),val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.length,val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.length-2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.length+1,val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.length+1,val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.length+2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.length+3);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val.getValue(),1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val.getValue(),0,val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val.getValue(),2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val.getValue(),4);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736currentEntry.setValue(val.getKey(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setValue(val.getKey(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getValue(),val.intValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.length());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getValue(),val.trim());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getKey(),val.trim());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getValue(),val.trim());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.substring(1));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setValue(val,val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setValue(val.getValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setValue(val.getKey());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setValue(val.getValue(),0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue(),val.length-2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue(),val.length-1,val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.toByteArray(),val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.toByteArray(),val.toByteArray());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setValue(val.toByteArray());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.toByteArray()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736currentEntry.setValue(val.toByteArray());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append('N');
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append('[');
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append('$');
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(zipEncoding,val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val,zipEncoding);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736currentEntry.setZipEncoding(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736readFully(WORD_BUF);val=newZipLong(WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736readFully(ZipLong.DD_SIG);val=newZipLong(ZipLong.DD_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val=newZipLong(SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736readFully(ZipLong.DD_SIG);val=newZipLong(ZipLong.DS_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(ZipLong.DD_SIG,val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(ZipLong.DD_SIG+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(ZipLong.DD_SIG,val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(ZipLong.DD_SIG));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val,val.clone());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.clone(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.clone());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736currentEntry.setCrc(val.clone());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getEntry(),val.getStart());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getEntry(),val.getLength());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getEntry(),val.getEnd()-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getEntry(),val.getCharacterEncoding());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getEntry(),val.getChars(0,val.getEnd()));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val.longValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val,val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setLength(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setPosition(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val,true);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val,false);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val,false,0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val,false,true);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val,false,null);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736currentEntry.setCrc(val,true);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736currentEntry.setCrc(val.getValue(),val.intValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736currentEntry.setCrc(val.getValue(),z);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736currentEntry.setCrc(val.getValue(),val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736currentEntry.setCrc(val.getValue(),0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val.getValue()*1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getEntry(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setValue(val.getEntry());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getUpperBound());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736CurrentEntryhasDataDescriptor=current.entry.setCrc(val.getValue(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736CurrentEntryhasDataDescriptor=val.entrySet().setCrc(current.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736readFully(ZipLong.DEFAULT_SIG);val=newZipLong(DEFAULT_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val=newZipLong(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.substring(0,val.length));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(ZipLong.DD_SIG).append('/');
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(ZipLong.DD_SIG).append('ufffd');
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.addValue(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.toPlainString());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.bytesToByteArray());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(zipEncoding.getValue(),val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736CurrentEntry.setCrc(zipEncoding.getValue(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.longValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.getChars());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.getDelimiter());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.getUpperBound());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.toInt());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getName());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getEntry()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.length*1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(newZipLong(val));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(zipEncoding);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(null);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setZipEncoding(crc);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.clone());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getEntry(),z);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getEntry(),zipEncoding);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getEntry(),0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(newZipLong(val));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding=crc.getZipEncoding();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding=crc.setZipEncoding(encoding);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736nextEntry.setCrc(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.setCrc(currentEntry);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append('n').append('n');
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(zipEncoding.getEntry());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getImplicitReturn());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(zipEncoding.encode(val));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(encoding.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val,ze.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val,z.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val,val.getEntry());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getValue(),val.length*2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736CurrentEntryhasDataDescriptor=current.entry.setValue(val.getKey());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736CurrentEntryhasDataDescriptor=current.entry.getValue();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.write('n');
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.setLength(256);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.setLength(0L);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val=newZipLong(val.longValue());val.longValue();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736newZipLong(val.longValue()+1);val.longValue();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736newZipLong(val.doubleValue());val.doubleValue();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.length*2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getValue(),val.length-2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.getLongValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.getChars());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getLongValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val,newZipLong(val));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val,0L);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val,d);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setSize(val.getKey());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue(),i);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue(),d);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736currentEntry.setCrc(val.getValue(),d);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736currentEntry.setCrc(val.getValue(),x);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736currentEntry.setCrc(val.getValue(),ZipLong.DD_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736CurrentEntryhasDataDescriptor=current.entry.setCrc(val,false);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736newZipLong(val.intValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736newZipLong(val.longValue(),0.5);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.entry.setCrc(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.entry.setValue(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.entry.setZipEncoding(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.substring(1));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.toPlainString());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.toString(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.trim());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val,this.zipEncoding.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getKey(),val.substring(0,val.length));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.trim());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getKey()/1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue()/10);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736Inflaterinf=currentEntry.getInstance();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736Inflaterinf=ze.getInstance();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736Inflaterinf=ZipLong.getInstanceUTF();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue()-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.toByteArray(),0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.toByteArray(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(ZipLong.DD_SIG).append('[');
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(ZipLong.DD_SIG).append('$');
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(ZipLong.DD_SIG).append('-');
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(encoding);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(zipEncoding.getBytes());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getBytes("UTF-8"));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.bytes);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.buffer);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.inputStream);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getEntry(),val.getChars());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getEntry(),val.getChronology());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(entry.getEntry());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getInputStream());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(zipLong.DD_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(ZipLong.DD_SIG).append("n");
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(ZipLong.DD_SIG+File.separatorChar);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736CurrentEntryhasDataDescriptor=current.entry.setSize(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getValue(),ze);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(zipEncoding.getShortValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setValue(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736EntryEncodingentryEncoding=crc.getEntryEncoding();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(z.getValue(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setValue(z.getValue(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(zipEncoding.getValue(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getValue(),ze);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getValue(),ZERO);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setSize(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue(),val.length*2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getKey(),zipEncoding);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setValue(val.toUpperCase());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setValue(val.toString());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.length*2+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setValue(val.toString());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),newZipLong(ZipLong.DD_SIG));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),ZipLong.DD_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),z);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736CurrentEntryhasDataDescriptor=current.entry.setValue(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736CurrentEntry.setValue(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736newZipLong(val.longValue(),val.intValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(zipEncoding.getEntry());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getZipEncoding());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getZip());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getUpperBound());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(zipEncoding.getKey());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736CurrentEntryhasDataDescriptor=current.entry.setZipEncoding(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.getEntry());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getEntry(),val.getEnd());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736nextEntry.setValue(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.writeValue(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(ZipLong.DD_SIG).append(':');
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(zipEncoding);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736if(ZipLong.DD_SIG.equals(val)){readFully(val);val=newZipLong(val);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736if(ZipLong.DD_SIG.equals(val)||ZipLong.DD_SIG.equals(val)){readFully(val);val=newZipLong(val);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736if(ZipLong.DD_SIG.equals(val)){readFully(val);val=newZipLong(val);}else{return;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getEntry(),val.getName());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(ZipLong.DD_SIG).append(short);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getValue(),zip);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getValue(),encoding);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736CurrentEntryhasDataDescriptor=current.entry.setCrc(val.getValue(),val.getEnd());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736CurrentEntryhasDataDescriptor=val.entrySet().setCrc(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.cloneTwin());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getImplicitReturn());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getTarget());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736EntryEncodingentryEncoding=crc.getEntry();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey()-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getValue(),val.getEnd());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736Inflaterinf=val.inflate(ZipLong.getInstance());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736Inflaterinf=ZipLong.valueOf(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736Inflaterinf=newZipLong(ZipLong.DD_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736Inflaterinf=val.inflate(ZipLong.ZERO);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.entry.setCrc(val.getEntry());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.add(ZipLong.DD_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.remainder);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.read());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue(),val.trim());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue(),val.substring(0,val.length));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue(),val.remainder);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getValue(),ZipLong.DD_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.getValue(),d);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val,val.cloneTwin());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val,val.clone());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736Entryentry=val.getEntry();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(zipEncoding.getValue(),ZipLong.DD_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),zipLong.DD_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val,false,val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setValue(val.getValue(),val.getEnd());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736CurrentEntrycurrentEntry=val.getValue();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736currentEntry.setZipEncoding(zipEncoding);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getValue()/1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue()/2.0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.toByteArray(),val.toByteArray());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.toUpperCase());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.getEntry());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getName(),val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.intValue();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(newZipLong(val,val.length));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.toLowerCase(),val.toLowerCase());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val.getValue(),val.remainder);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.cloneTree());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.intValue(),val.intValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.shortValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getValue(),ZipLong.DD_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setPosition(0,val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setPath(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val.longValue);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(',');
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append(':');
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736val.append('/');
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.toByteArray());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736currentEntry.setCrc(val.getValue(),val.trim());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736currentEntry.setCrc(val.getValue(),val.toByteArray());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736EntryEncodingentryEncoding=zipEncoding.encode(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736EntryEncodingentryEncoding=zipEncoding.getEntry();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736EntryEncodingentryEncoding=getEntryEncoding();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736if(val==null){Inflaterinf=getInputStream();if(inf!=null){return;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setSize(val.getTime());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getValue(),val.trim());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.toByteArray());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.toUTF8());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736newZipLong(val.longValue(),val.longValue(),val.longValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736newZipLong(val.longValue(),val.longValue(),val.intValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736newZipLong(val.longValue()+1,val.longValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.remaining());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getValue(),val.remainder());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(zipLong);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setZipEncoding(zipEncoding);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736if(val==null){Inflaterinf=getInputStream();if(inf==null){return;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736CurrentEntrycurrent.entry.setValue(val.getKey());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736CurrentEntrycurrent=val.getValue();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue(),val.toByteArray());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue(),val.intValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getValue(),val.longValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(zipEncoding.getValue(),z);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.read());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736EntryEncodingentryEncoding=crc.getValue();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736EntryEncodingentryEncoding=val.getValue();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val.getBytes(encoding));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setValue(val.getKey(),val.getEnd(),val.getCharacterEncoding());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val.getEntry(),ZipLong.DD_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entry.setCrc(val.cloneTree());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setCrc(val,ZipLong.DD_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736entryEncoding.setCrc(val,current);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val,ZipLong.DD_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java736current.entry.setZipEncoding(val,ZipLong.DD_SIG.getValue());
