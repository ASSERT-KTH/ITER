projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=x;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=rem;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped/=x;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x*2;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x-1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x*(skipped-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped/=x+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped/=rem;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped/=x*2;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped/=x.length;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped/=x+2;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped/=x*4;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=x+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=rem;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=x*2;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=x-1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=x.length;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=x+2;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x/2;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x*4;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x*1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x*3;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=x;x-=x;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=x;finalintx=read(x,0,x);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=x;finalintx=read(rem,0,x);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=x;finalintx=read(x,0,(int)(rem-x));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=x;finalintx=read(x,0,value);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=x;intx=read(rem,0,x);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=x;finalintx=read(x,0,(int)(x+rem));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=x;finalintx=read(x,0,(int)(x<0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=rem-1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x/1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x-2;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x-3;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped/=SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=X;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=XHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped*=x;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x+1;x+=x+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x+1;finalintx=read(x,0,x);skipped+=x+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x+1;finalintx=read(rem,0,x);skipped+=x+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x+1;finalintx=read(x,0,(int)(x+1));skipped+=x+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x+1;finalintx=read(x,0,x);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x+1;finalintx=read(rem,0,(int)(x+1));skipped+=x+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x+1;finalintx=read(x,0,(int)(x+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x+1;finalintx=read(x,0,(int)(x+1);skipped+=x+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556if(x<=0){thrownewIllegalArgumentException("");}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556if(x==-1){thrownewIllegalArgumentException("");}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556if(x>max){for(inti=0;i<x;i++){skipped+=Math.min(rem,x);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556if(x>max){for(inti=0;i<x;i++){skipped+=x;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556if(x>max){for(inti=0;i<x;++i){skipped+=Math.min(rem,x);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556if(x<=0){for(inti=0;i<x;i++){skipped+=x;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556if(x>max){for(inti=0;i<x;i++){skipped+=Math.max(rem,x);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped*=rem;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=rem+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped&=rem;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x+2;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x+3;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x+4;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x*(rem-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x*(value-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=rem*(x-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x*(x-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=rem*(skipped-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x*(read-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=x;intx=read(value,0,x);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=x;x=read(x,0,x);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=x;intx=read(x,0,x);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=x;finalintx=read(value,0,x);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=x;longx=read(x,0,x);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=value;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=x*(skipped-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=x*(value-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=(x<0)?rem:x;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=(x<=0)?rem:x;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=(x<>0)?rem:x;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped/=2;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x+1;if(x<0){for(inti=0;i<x;i++){skipped+=x+1;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x+1;if(x<0){for(inti=0;i<x;++i){skipped+=x+1;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x+1;intx=read(rem,0,x);skipped+=x+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x+1;intx=read(value,0,x);skipped+=x+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x+1;intx=read(x,0,x);skipped+=x+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x+1;if(x<0){for(inti=0;i<x;i++){skip+=x+1;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x*2+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x*2+length;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped*=SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556if(skipped>0){for(inti=0;i<x;i++){skip(i,x);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556if(x<0){for(inti=0;i<x;i++){if(skipped>0){returnskip;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556if(x<=0){for(inti=0;i<x;i++){if(skipped>0){returnskipped;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556lastStoredEntry=ze.getValue();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556if(x<=0){for(inti=0;i<x;i++){if(skipped>0){returnskip;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556if(skipped>0){for(inti=0;i<x;++i){skipped+=read(x);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556if(x<0){for(inti=0;i<x;i++){if(skipped>0){skipped+=x;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556if(x>0){for(inti=0;i<x;++i){skip(x);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556if(x>0){for(inti=0;i<x;++i){skipped+=Math.min(skipped,x);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556if(x>0){for(inti=0;i<x;++i){finalintcsize=read(x,0,csize);if(csize>0){returnskipped;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556if(x>0){for(inti=0;i<x;++i){finalintcsize=read(x,0,csize);if(csize>=0){returnskipped;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556if(x>0){for(inti=0;i<x;++i){finalintcsize=read(x,0,csize);if(csize>=0){skipped=0;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556if(x>0){for(inti=0;i<x;++i){finalintcsize=read(x,0,csize);if(csize>0){skipped=csize;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556if(x>0){for(inti=0;i<x;++i){finalintcsize=read(x,0,csize);if(csize>0){skip=csize;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=x*(rem-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x+1;intx=read(SKIP_BUF,0,x);skipped+=x+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x+1;intx=read(SKIP_BUF,0,x+1);skipped+=x+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x+1;intx=read(SKIP_BUF,0,x+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x+1;intx=read(SKIP_BUF,0,x);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x+1;intx=read(value,x+1);skipped+=x+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped+=x+1;((ZipArchiveEntry)rem).skip();skipped+=x+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=x;((ZipArchiveEntry)rem).skipped-=x;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=x;skipped-=x;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=x;((ZipArchiveEntry)rem).skip();skipped-=x;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=x;intx=read(x,0,x);skipped-=x;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=MIN_WORD_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipped-=MIN_DWORD_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipd-=rem;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java556skipd+=x;
