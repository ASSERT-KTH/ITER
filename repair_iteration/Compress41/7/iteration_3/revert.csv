projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(ZipLong.DD_SIG.equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(ZipLong.DD_SIG.equals(val.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DECEMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||ZipLong.DD_SIG.equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(ZipLong.DD_SIG.equals(val)||val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT||val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.entry)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)&&!current.entry.getValue().equals(val.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)||!current.entry.getValue().equals(val.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)&&!current.entry.getValue().equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(ZipLong.DD_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(ZipLong.DD_SIG.equals(current.entry.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(Value.DD_SIG.equals(val.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(ZipLong.DD_SIG.equals(val.getKey())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(ZipLong.DECEMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DECEMBER)||val.equals(ZipLong.SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DECEMBER)||val.equals(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DECEMBER)||val.equals(ZipLong.BLOCK)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DECEMBER)||val.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DECEMBER)||val.equals(ZipLong.NUMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||ZipLong.DD_SIG.equals(val.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||ZipLong.DD_SIG.equals(current.entry)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.equals(ZipLong.DD_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||!ZipLong.DD_SIG.equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||ZipLong.DD_SIG.equals(current.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||ZipLong.DD_SIG.equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==ZipLong.DEFAULT||val.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DEFAULT||val.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getType()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DEFAULT||val.getValue()==ZipLong.BLOCK){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.NUMBER_INT||val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT||val.getType()!=ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getKey()==ZipLong.NUMBER_INT||val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()>=ZipLong.NUMBER_INT||val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()<ZipLong.NUMBER_INT||val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==ZipLong.NUMBER_INT||current.entry.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)||val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==null||ZipLong.DD_SIG.equals(val)||val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(ZipLong.DD_SIG.equals(val)||current.entry.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(Value.DD_SIG.equals(val)||val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)||val.getValue()!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)&&val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(ZipLong.DD)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD)||val.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD)||val.equals(ZipLong.SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD)||val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()!=ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.SHORT_BUF){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.NUMBER_INT||val.getValue()==ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT||val.getValue()!=ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)||val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)||val.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.DD_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)||val.equals(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.BLOCK){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.SHORT_BUF){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.valueOf(val.getValue()));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setValue(current.entry.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.MAX_VALUE);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setLength(0);current.entry.setValue(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setLength(0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.equals(ZipLong.DECEMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.DECEMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.NUMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DECEMBER)||val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()==ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.getValue()==ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.TWO_EXP_32){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||ZipLong.DD_SIG.equals(value)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()==ZipLong.NUMBER_INT||val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INTEGER||val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(ZipLong.DD_SIG.equals(val)&&val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(ZipLong.DD_SIG.equals(current.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DD_SIG){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.getValue()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(value)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)&&isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)||!ZipLong.DD_BIGINT.equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.equals(ZipLong.DD)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.DD)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.SHORT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731readFully(val);val=newZipLong(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setValue(current.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731readFully(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731readFully(val);val=newZipLong(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.DD_SIG){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)||val.equals(ZipLong.EQUALS)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)||val.equals(ZipLong.DECEMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.BIGINT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)||val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731newZipLong(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731Inflaterinf=val.getInputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731newZipLong(val.getValue());current.entry.setSize(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setLength(0);current.entry.setZipEncoding(getZipEncoding());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DECEMBER||val.getType()==ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DEFAULT||val.getValue()!=ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DEFAULT||val.getValue()==ZipLong.NONE){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DECEMBER||val.getValue()==ZipLong.BLOCK){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DECEMBER||val.getValue()==ZipLong.NUMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)||!current.entry.getValue().equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)&&!current.entry.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.VERTICAL){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.NUMBER_FIRST){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.NUMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.DEFAULT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.DECEMBER)||!val.equals(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.BLOCK)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.DECEMBER)||!val.equals(ZipLong.SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.BIGINT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()!=ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()==ZipLong.NUMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()==ZipLong.BLOCK){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()==ZipLong.SHORT_BUF){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DECEMBER&&val.getValue()==ZipLong.NUMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER||val.getValue()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DECEMBER||val.getValue()!=ZipLong.NUMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.DECEMBER||val.getValue()==ZipLong.NUMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DEFAULT||val.getValue()==ZipLong.NUMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getKey()==ZipLong.DECEMBER||val.getValue()==ZipLong.NUMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(Value.DD_SIG)||val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(Value.DD_SIG.equals(val)||current.entry.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(Value.DD_SIG)||val.getValue()!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(Value.DD_SIG.equals(val)||val.getValue()!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.DD_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.DD_SIG||val.equals(ZipLong.DD_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.DD_SIG)||!val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.DD_SIG)||!val.equals(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.DECEMBER_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731Inflaterinf=current.getInputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731Inflaterinf=current.entry.getInputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731Inflaterinf=currentEntry.getInputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731Inflaterinf=current.in.getInputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731Inflaterinf=current.inputStream;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731Inflaterinf=current.readInputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry!=null||val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry==null||val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getCrc()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.entry.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.getKey())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.getValue())||!val.equals(current.entry.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setValue(current.entry.getValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setValue(current.entry.getKey());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setValue(current.getEntry().getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setValue(current.entry.getValue(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setValue(current.entry.getValue()+2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.equals(ZipLong.DD_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.equals(ZipLong.DECEMBER_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.equals(ZipLong.DD_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.equals(ZipLong.DD_SIG,current.entry.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.equals(ZipLong.DECEMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.equals(ZipLong.SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.equals(ZipLong.NUMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.equals(ZipLong.DEFAULT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.equals(ZipLong.BIGINT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.equals(ZipLong.DEFAULT_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(current.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(current.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)&&!ZipLong.DD_BIGINT.equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.entry)||!ZipLong.DD_BIGINT.equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(value)||!ZipLong.DD_BIGINT.equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)||!ZipLong.DD_BUF.equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DECEMBER)&&val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.LP)||val.equals(ZipLong.DECEMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT)||val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.SHORT_BUF)||val.equals(ZipLong.DECEMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.NUMBER)||val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DECEMBER||val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_FLOAT||val.getValue()==ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getKey()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT||val.getValue()>=ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getType()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DECEMBER&&val.getValue()==ZipLong.BLOCK){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DECEMBER||val.getValue()!=ZipLong.BLOCK){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.BLOCK||val.getValue()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.DECEMBER||val.getValue()==ZipLong.BLOCK){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getKey()==ZipLong.DECEMBER||val.getValue()==ZipLong.BLOCK){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val.getKey())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val.getValue())&&current.entry.getCrc()!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getType()==ZipLong.DEFAULT||current.entry.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getType()==ZipLong.DEFAULT||current.entry.getCrc()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getType()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getType()==ZipLong.DEFAULT||val.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getType()==ZipLong.DEFAULT||current.entry.getValue()!=ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT_SIG)||val.equals(ZipLong.DEFAULT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT_SIG)||val.equals(ZipLong.DEFAULT_QUOTE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT_SIG)||val.equals(ZipLong.DEFAULT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(ZipLong.DEFAULT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT_SIG)||val.equals(ZipLong.DEFAULT_WRITE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT_SIG)||val.equals(ZipLong.DEFAULT_BYTE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT_SIG)||val.equals(ZipLong.DEFAULT_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||!ZipLong.DD_SIG.equals(value)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||ZipLong.DD_SIG.equals(current.value)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||ZipLong.DD_SIG.equals(value)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.valueOf(val));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.NaN);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()!=ZipLong.DD_SIG){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()>=ZipLong.DD_SIG){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.DECEMBER_SIG){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.DD_SIG||val.getValue()!=ZipLong.LP){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.DD_SIG||val.getValue()!=ZipLong.BLOCK){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getKey()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getKey()!=ZipLong.NUMBER_INT||val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getKey()==ZipLong.NUMBER_INT||val.getType()!=ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getKey()==ZipLong.NUMBER_INT||current.entry.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getKey()==ZipLong.NUMBER_INT&&val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==ZipLong.NUMBER_INT||current.entry.getValue()==ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()!=ZipLong.NUMBER_INT||current.entry.getValue()==ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==ZipLong.NUMBER_INT||current.entry.getCrc()==ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==ZipLong.NUMBER_INT||current.entry.getValue()!=ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||!ZipLong.DD_SIG.equals(val.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||!ZipLong.DD_SIG.equals(current.entry)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||!ZipLong.DD_SIG.equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||!ZipLong.DD_SIG.equals(current.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD)&&val.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.SHORT_BUF)||val.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.LP)||val.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT)||val.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.MAX_VALUE)||val.equals(ZipLong.DD)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.value)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.entry.getKey())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD)&&val.equals(ZipLong.SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.SHORT_BUF)||val.equals(ZipLong.DD)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.LP)||val.equals(ZipLong.SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD)||val.equals(ZipLong.SKIP_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT)||val.equals(ZipLong.SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()!=ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null&&val.getValue()==ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()<ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.getValue()==ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.getValue()<ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==ZipLong.DD_SIG){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.DD_SIG){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT||val.getValue()!=ZipLong.DD_SIG){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DECEMBER_SIG){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(Value.DD_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(Value.DD_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(Value.DD_SIG.equals(val.getKey())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(Value.DD_SIG.equals(current.entry.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(ZipLong.DD_SIG.equals(val)&&current.entry.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(ZipLong.DD_SIG.equals(current.entry)&&val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)&&current.entry.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(Value.DD_SIG.equals(val)&&val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731newZipLong(current.entry.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731newZipLong(val.getValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731newZipLong(current.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731newZipLong(val.getValue(),0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731newZipLong(val.getKey());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)&&current.entry.getValue()!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DECEMBER)&&val.equals(ZipLong.SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DECEMBER)||val.startsWith(ZipLong.SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.contains(ZipLong.DECEMBER)||val.contains(ZipLong.SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DECEMBER&&val.getType()==ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.DECEMBER||val.getType()==ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DEFAULT||val.getType()==ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DECEMBER||val.getType()!=ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getKey()==ZipLong.DECEMBER||val.getType()==ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getType()==ZipLong.DECEMBER||val.getValue()==ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||ZipLong.DD_SIG.equals(current.entry.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue().equals(ZipLong.DD_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry==null||ZipLong.DD_SIG.equals(val.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||ZipLong.DD_SIG.equals(val.getKey())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_FIRST||val.getValue()==ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT||val.getValue()!=ZipLong.NUMBER_FIRST){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.NUMBER_INT||val.getValue()==ZipLong.NUMBER_FIRST){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getKey()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.NUMBER_FIRST){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT||val.getValue()>=ZipLong.NUMBER_FIRST){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getType()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.NUMBER_FIRST){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.NUMBER_INT||val.getValue()!=ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_FLOAT||val.getValue()!=ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getKey()==ZipLong.NUMBER_INT||val.getValue()!=ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.entry)||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(value)||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.LP)||val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.LP||val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.LP,val.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==null||ZipLong.DD_SIG.equals(val)||val.getValue()!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=null||ZipLong.DD_SIG.equals(val)||val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getKey()==null||ZipLong.DD_SIG.equals(val)||val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)&&val.equals(ZipLong.DECEMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DECEMBER)||val.equals(ZipLong.DD_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_BUF)||val.equals(ZipLong.DECEMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)||val.startsWith(ZipLong.DECEMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.SIG)||val.equals(ZipLong.DECEMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.BIGINT)||val.equals(ZipLong.SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(ZipLong.BIGINT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.BIGINT)||val.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.BIGINT)||val.equals(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.BIGINT)||val.equals(ZipLong.UTF8)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.BIGINT)||val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DEFAULT&&val.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getKey()==ZipLong.DEFAULT||val.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.DEFAULT||val.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getType()==ZipLong.DEFAULT||val.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DEFAULT||val.getType()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setLength(1);current.entry.setZipEncoding(getZipEncoding());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setLength(0);entryEncoding.setZipEncoding(getZipEncoding());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setLength(0);current.entry.setZipEncoding(getZipEncoding()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setLength(0);current.entry.setCrc(getZipEncoding());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731current.entry.setZipEncoding(getZipEncoding());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(ZipLong.DD_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_BUF)||val.equals(ZipLong.SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_BUF)||val.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_BUF)||val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==ZipLong.NUMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.NUMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()!=ZipLong.NUMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getCrc()==ZipLong.NUMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER||val.getValue()==ZipLong.BLOCK){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER||val.getValue()==ZipLong.NUMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.entry)&&isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(value)&&isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)&&isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731readFully(val,val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731readFully(val,val.length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731readFully(val,val.intValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731readFully(val,current.entry);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||ZipLong.DD_SIG.equals(val.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null&&ZipLong.DD_SIG.equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||ZipLong.DD_SIG.equals(current.entry)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||ZipLong.DD_SIG.equals(current.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.entry)&&!current.entry.getValue().equals(val.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)&&!current.entry.getValue().equals(val.getKey())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)&&!current.entry.getCrc().equals(val.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.LP||val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.LP,val.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.LP)||!val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.LP)||val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT||val.getValue()!=ZipLong.SHORT_BUF){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.NUMBER_INT||val.getValue()==ZipLong.SHORT_BUF){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getKey()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.SHORT_BUF){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT||val.getValue()>=ZipLong.SHORT_BUF){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.SHORT_BUF||val.getValue()==ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT||val.getValue()<ZipLong.SHORT_BUF){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DEFAULT||val.getValue()!=ZipLong.NONE){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DEFAULT&&val.getValue()==ZipLong.NONE){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.DEFAULT||val.getValue()==ZipLong.NONE){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getKey()==ZipLong.DEFAULT||val.getValue()==ZipLong.NONE){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getType()==ZipLong.DEFAULT||val.getValue()==ZipLong.NONE){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DEFAULT||val.getValue()>=ZipLong.NONE){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)||!current.entry.getCrc().equals(val.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)||!current.entry.getValue().equals(val.getKey())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)||current.entry.getValue().equals(val.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()==ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||current.entry.getValue()==ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()>=ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DECEMBER)&&val.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DECEMBER)||val.equals(ZipLong.MIN_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DECEMBER||val.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()!=ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==ZipLong.DECEMBER||current.entry.getCrc()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getCrc()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(ZipLong.DECEMBER)||val.getValue().equals(ZipLong.SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue().equals(ZipLong.DECEMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(ZipLong.SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(ZipLong.DECEMBER)||val.getValue().equals(ZipLong.NUMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(ZipLong.DECEMBER)||val.getValue().equals(ZipLong.BLOCK)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(ZipLong.DECEMBER)||val.getValue().equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(ZipLong.DECEMBER)||val.getValue().equals(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)&&val.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)||val.equals(ZipLong.MIN_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)||val.startsWith(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==ZipLong.BLOCK){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.BLOCK){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.BLOCK){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()!=ZipLong.BLOCK){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.BLOCK||val.getValue()==ZipLong.SHORT_BUF){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.BLOCK||val.getValue()==ZipLong.NUMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.SHORT_BUF)||val.equals(ZipLong.SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.SHORT_BUF)||val.equals(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.SKIP_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.SHORT_BUF)||val.equals(ZipLong.UTF8)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.SHORT_BUF)||val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.valueOf(val))){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.NUMBER_INT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()>ZipLong.NUMBER_INT||val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()<=ZipLong.NUMBER_INT||val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()<zipLong.NUMBER_INT||val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.LP)||val.equals(ZipLong.DD)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD)&&val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.LC)||val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)&&val.getValue()!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT||val.getValue()!=ZipLong.TWO_EXP_32){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.NUMBER_INT||val.getValue()==ZipLong.TWO_EXP_32){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.TWO_EXP_32||val.getValue()==ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT||val.getValue()>=ZipLong.TWO_EXP_32){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getKey()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.TWO_EXP_32){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()>=ZipLong.NUMBER_INT||val.getValue()==ZipLong.TWO_EXP_32){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT&&val.getType()!=ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getType()==ZipLong.NUMBER_INT||val.getValue()!=ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()!=ZipLong.NUMBER_INT||val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()<ZipLong.NUMBER_INT||val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()>=ZipLong.NUMBER_INT||val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()>ZipLong.NUMBER_INT||val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()==ZipLong.NUMBER_INT||val.getType()!=ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getKey()==ZipLong.NUMBER_INT||val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(ZipLong.SHORT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.SHORT)||val.equals(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.SHORT)||val.equals(ZipLong.UTF8)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.SHORT)||val.equals(ZipLong.BLOCK)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.SHORT)||val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.SHORT)||val.equals(ZipLong.BIGINT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)||current.entry.getValue()!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.entry)&&!current.entry.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)||!current.entry.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.val)&&!current.entry.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)||current.entry.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)&&current.entry.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.getValue())&&!current.entry.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()!=ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||current.entry.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()<ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()>=ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getType()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DEFAULT||val.getValue()!=ZipLong.BLOCK){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DEFAULT&&val.getValue()==ZipLong.BLOCK){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.DEFAULT||val.getValue()==ZipLong.BLOCK){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getKey()==ZipLong.DEFAULT||val.getValue()==ZipLong.BLOCK){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getType()==ZipLong.DEFAULT||val.getValue()==ZipLong.BLOCK){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DEFAULT||val.getValue()>=ZipLong.BLOCK){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DEFAULT||current.entry.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DEFAULT||current.entry.getValue()!=ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DEFAULT||current.entry.getCrc()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==ZipLong.DEFAULT&&val.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DEFAULT||current.entry.getType()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()!=ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==ZipLong.DEFAULT||current.entry.getCrc()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()!=ZipLong.DEFAULT||current.entry.getCrc()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getCrc()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getKey().equals(ZipLong.DD_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue().equals(ZipLong.DD)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(ZipLong.DEFAULT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(ZipLong.BLOCK)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(ZipLong.valueOf(val.getValue()))){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry==null||ZipLong.DD_SIG.equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||current.entry.equals(ZipLong.DD_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||current.entry.getValue().equals(ZipLong.DD_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||zipLong.DD_SIG.equals(current.entry)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry!=null||ZipLong.DD_SIG.equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.NUMBER_INT||val.getValue()!=ZipLong.SHORT_BUF){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()>=ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.NUMBER_INT||val.getValue()!=ZipLong.TWO_EXP_32){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()!=ZipLong.NUMBER_INT||current.entry.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getType()==ZipLong.NUMBER_INT||current.entry.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==ZipLong.NUMBER_INT||current.entry.getType()!=ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==ZipLong.NUMBER_INT||current.entry.getCrc()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()>=ZipLong.NUMBER_INT||current.entry.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(ZipLong.DD_SIG.equals(val)||current.entry.getCrc()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)||current.entry.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(ZipLong.DD_SIG.equals(current.entry)||val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.equals(ZipLong.ADD)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null&&val.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setLength(1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setLength(2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setLength(256);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setLength(0L);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.getValue();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(SHORT_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(SHORT_BUF+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.valueOf(sHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(SHORT_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null&&val.getValue()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.getValue()==ZipLong.NUMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(value)||!val.equals(value)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(value.equals(ZipLong.DD_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(value)||val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.NUMBER_INTEGER||val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INTEGER||val.getType()!=ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INTEGER&&val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getKey()==ZipLong.NUMBER_INTEGER||val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==ZipLong.NUMBER_INTEGER||current.entry.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.NUMBER)||val.equals(ZipLong.SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.NUMBER)||val.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(ZipLong.NUMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.NUMBER)||val.equals(ZipLong.BLOCK)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.NUMBER)||val.equals(ZipLong.valueOf(max))){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()>=ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.getValue()!=ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()!=ZipLong.DEFAULT||val.getValue()!=ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.DEFAULT||val.getValue()!=ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DEFAULT&&val.getValue()!=ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getKey()==ZipLong.DEFAULT||val.getValue()!=ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.DEFAULT&&val.getValue()!=ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()!=ZipLong.NUMBER_INT||current.entry.getValue()!=ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()!=ZipLong.NUMBER_INT||current.entry.getValue()!=ZipLong.SHORT_BUF){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()>=ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==ZipLong.SHORT_BUF){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.SHORT_BUF){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()!=ZipLong.SHORT_BUF){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.SHORT_BUF||val.getValue()==ZipLong.SHORT_BUF){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.getValue()==ZipLong.SHORT_BUF){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)&&val.equals(ZipLong.EQUALS)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_BUF)||val.equals(ZipLong.EQUALS)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)||val.equals(ZipLong.FIELD_NAME)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DECEMBER)||val.equals(ZipLong.EQUALS)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)||val.equals(ZipLong.EXPR_SYNTHETIC)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)||val.equals(ZipLong.EQUALS)&&hasUTF8Flag){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DECEMBER)&&val.equals(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.NaN)||val.equals(ZipLong.DECEMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT)||val.equals(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DECEMBER||val.equals(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DECEMBER)&&val.equals(ZipLong.NUMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.NUMBER)||val.equals(ZipLong.DECEMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT)||val.equals(ZipLong.NUMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.SHORT_BUF)||val.equals(ZipLong.NUMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.MAX_VALUE+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.MAX_VALUE,1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.MAX_VALUE,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.MIN_VALUE);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.MAX_VALUE,10);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.MAX_VALUE,max);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)||!current.entry.getCrc().equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)||current.entry.getValue().equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.entry)||!current.entry.getValue().equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)||!current.entry.getKey().equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)||current.entry.getCrc().equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(current.entry.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(current.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.parseZipLong(current.entry.getValue()));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.valueOf(current.getValue()));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731current.entry.setSize(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(val.getValue());current.entry.setSize(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731newZipLong(val.getValue());current.entry.setCrc(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731newZipLong(val.getValue(),0);current.entry.setSize(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731newZipLong(val.getKey());current.entry.setSize(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)&&val.equals(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_BUF)||val.equals(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.NaN)||val.equals(ZipLong.DD_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD)||val.equals(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()>=ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)||current.entry.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)&&val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)&&val.getValue()!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)||current.entry.getValue()!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.entry)||val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)||current.entry.getCrc()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setLength(0);current.entry.setCrc(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731current.entry.setValue(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setLength(1);current.entry.setValue(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setLength(0);current.entry.setValue(val.getKey());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setLength(0);current.entry.setRaw(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getKey()!=ZipLong.NUMBER_INT||val.getValue()==ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()>=ZipLong.NUMBER_INT||val.getValue()==ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731readFully(current.entry);val=newZipLong(current.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731readFully(SHORT_BUF);val=newZipLong(SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()!=ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_FLOAT||val.getValue()==ZipLong.SHORT_BUF){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DECEMBER)&&val.equals(ZipLong.BLOCK)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.BLOCK)||val.equals(ZipLong.DECEMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT)||val.equals(ZipLong.BLOCK)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DECEMBER)||val.startsWith(ZipLong.BLOCK)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(ZipLong.DD_SIG)||val.getValue().equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue().equals(ZipLong.DD_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(ZipLong.DD_SIG)||val.getValue().equals(ZipLong.DOUBLE_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.entry)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(value)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)&&isEnabled(Feature.QUOTE_FIELD_NAMES,true)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT||val.getValue()!=ZipLong.VERTICAL){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.NUMBER_INT||val.getValue()==ZipLong.VERTICAL){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getKey()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.VERTICAL){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==ZipLong.NUMBER_INT||current.entry.getValue()==ZipLong.VERTICAL){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()>=ZipLong.NUMBER_INT||val.getValue()==ZipLong.VERTICAL){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getType()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.VERTICAL){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.entry)||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(value)||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)&&val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.LP)||val.equals(ZipLong.DD_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SUB)||val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current==null||ZipLong.DD_SIG.equals(val.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||ZipLong.DD_SIG.equals(current.getKey())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current!=null||ZipLong.DD_SIG.equals(val.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT)||val.equals(ZipLong.DEFAULT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT||val.equals(ZipLong.DEFAULT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT)||val.equals(ZipLong.UTF8)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT&&val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.entry)&&!current.entry.getValue().equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)&&!current.entry.getCrc().equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)&&!current.entry.getKey().equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.valueOf(current.entry.getValue()));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.valueOf(short.getValue()));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.valueOf(current.nextValue()));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.valueOf(SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.valueOf(val.getValue()+1));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DEFAULT||val.getValue()==ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT||val.getValue()!=ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.NUMBER_INT||val.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getKey()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT||val.getType()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getType()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(current.entry.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(ZipLong.DD_SIG.equals(current.entry.getKey())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(current.entry.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setValue(current.getValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setValue(current.getValue(),val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getKey()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()==ZipLong.MIN_VALUE){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.DD_SIG)&&val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(value==null||ZipLong.DD_SIG.equals(value)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(VALUE_SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731longval=newZipLong(val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setLength(0);current.entry.setFileName(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setLength(0);current.entry.setSize(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry!=null){val.setLength(0);current.entry.setZipEncoding(getZipEncoding());}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry!=null){val.setLength(0);current.entry.setZipEncoding(getZipEncoding());}else{in.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry!=null){val.setLength(0);current.entry.setZipEncoding(getZipEncoding());}else{return;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry!=null){val.setLength(0);current.entry.setZipEncoding(getZipEncoding());}else{inputStream.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.getValue()==ZipLong.SHORT_BUF){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_OF_RANGE){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.equals(ZipLong.NUMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.NUMBER)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.NUMBER)||val.equals(SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current==null||ZipLong.DD_SIG.equals(current.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.equals(current.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current)||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT)&&val.equals(ZipLong.BLOCK)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.equals(ZipLong.SHORT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.equals(ZipLong.SHORT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.valueOf)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.equals(ZipLong.DECEMBER)||val.equals(ZipLong.SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.SHORT)||val.equals(ZipLong.DECEMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(value.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.equals(ZipLong.DEFAULT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.LP)||val.equals(ZipLong.DD_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry!=null){readFully(val);val=newZipLong(val.getValue());}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry==null){readFully(val);val=newZipLong(val.getValue());}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry!=null){readFully(val);val=newZipLong(val.getValue());}else{thrownewIllegalStateException("");}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry!=null){readFully(val);val=newZipLong(val.getValue());}else{return;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry!=null){readFully(val);val=newZipLong(val.getValue());}else{thrownewIllegalArgumentException("");}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry==null){readFully(val);val=newZipLong(val.getValue());}else{return;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry==null||ZipLong.DD_SIG.equals(value)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(value==null||ZipLong.DD_SIG.equals(current.entry)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current==null||ZipLong.DD_SIG.equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.RD)||val.equals(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.SIG)||val.equals(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||!ZipLong.DD_SIG.equals(newZipLong(val))){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.getValue()==ZipLong.NUMBER_INT||val.getValue()!=ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getType()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()==ZipLong.NUMBER_FLOAT||val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(sourceName)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.entry)||!current.entry.getValue().equals(val.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.WRITE)||val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.entry)&&!current.getValue().equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)||current.entry.getCrc()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.SHORT_BUF)||val.equals(ZipLong.TWO_DWORD_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.NUMBER_OF_RANGE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getType()==ZipLong.DEFAULT||hasDataDescriptor){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry!=null||current.entry.getType()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry==null||current.entry.getType()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getType()==ZipLong.DEFAULT&&hasDataDescriptor){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(Value.DD_SIG)&&val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(Value.DEFAULT.equals(val)||val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.equals(ZipLong.DEFAULT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(Value.DD_SIG.equals(current.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(Value.DD_SIG.equals(val.getValue())||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.VERTICAL){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.getValue()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.VERTICAL){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setValue(current.entry.getValue()+3);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.MAX_VALUE,MAX_VALUE);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()==ZipLong.DD_SIG){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val.getValue())&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val.getValue())&&isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.equals(ZipLong.BLOCK)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.EQUALS)||val.equals(ZipLong.DD_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.RD)||val.equals(ZipLong.EQUALS)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT)||val.equals(ZipLong.EQUALS)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.LP)||val.equals(ZipLong.EQUALS)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.equals(ZipLong.DECEMBER)||val.equals(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DECEMBER)||val.startsWith(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.TWO_EXP_32){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.getValue()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.TWO_EXP_32){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.getValue()!=ZipLong.NUMBER_INT||val.getValue()==ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()!=ZipLong.NUMBER_INT||val.getValue()==ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.NUMBER_FIRST){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)||!ZipLong.DD_BIGINT.equals(value)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current)||!ZipLong.DD_BIGINT.equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.DEFAULT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.valueOf)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.getValue()!=ZipLong.NUMBER_INT||val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getKey()==ZipLong.DEFAULT||val.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==ZipLong.DEFAULT||current.entry.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setLength(length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.getValue()==ZipLong.BLOCK){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.BLOCK||val.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.entry)||val.getValue()!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.key)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.entry)&&!current.getValue().equals(val.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD)||val.equals(ZipLong.DECEMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT)||val.equals(ZipLong.DECEMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.RD)||val.equals(ZipLong.DECEMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(ZipLong.DD_SIG.equals(current.getKey())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(ZipLong.DD_SIG.equals(val.getKey())||val.getValue()!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(ZipLong.DD_SIG.equals(val.getKey())||val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.SHORT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.SHORT_BUF){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731newZipLong(val.getValue()+2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.getValue()!=ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getKey()==ZipLong.SHORT_BUF||val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getKey()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(ZipLong.valueOf)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry!=null||current.entry.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry==null||current.entry.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==ZipLong.DEFAULT||hasDataDescriptor){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current)||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD)&&val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()==ZipLong.BIGINT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(WRITE_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DECEMBER)||val.startsWith(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(ZipLong.DD_SIG.equals(current.entry.getValue())||hasDataDescriptor){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(val.getValue()+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(short.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setValue(newZipLong(current.getValue()));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setValue(current.getKey());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setValue(current.getValue()+2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setValue(current.getValue()+3);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.getValue())&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.getValue())&&hasUTF8Flag&&current.entry!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731readFully(val,val);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731readFully(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(value)&&!current.entry.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.name)&&!current.entry.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)&&!current.entry.getValue().isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()==ZipLong.DEFAULT||val.getValue()==ZipLong.BLOCK){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.getValue()==ZipLong.DEFAULT||val.getValue()==ZipLong.BLOCK){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_BYTE||val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_FLOAT||val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==null||ZipLong.DD_SIG.equals(value)||val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.LC)||val.equals(ZipLong.DD_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.RD)||val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.getValue()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD)&&val.getValue()!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.SHORT)||val.equals(ZipLong.DD)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getCrc()==ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.SIG)||val.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.RD)||val.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getType()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.valueOf(val.getValue()+2));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.valueOf(val.getKey()));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.valueOf(val.toString()));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()==ZipLong.DEFAULT||val.getValue()==ZipLong.NONE){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.getValue()==ZipLong.DEFAULT||val.getValue()==ZipLong.NONE){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)||val.getValue()!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(value)&&val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()!=ZipLong.NUMBER_INT||current.entry.getValue()!=ZipLong.NUMBER_F){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getCrc()!=ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getKey()!=ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getKey()<ZipLong.NUMBER_INT||val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()!=ZipLong.DD_SIG){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.getValue()!=ZipLong.DD_SIG){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()==ZipLong.NUMBER_FIRST){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current)&&isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(sourceName)&&isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT)&&val.equals(ZipLong.NUMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DECEMBER)||val.startsWith(ZipLong.NUMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731Inflaterinf=current.inputStream.getInputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731Inflaterinf=current.readIn();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731Inflaterinf=val.readIn();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.getValue()==ZipLong.DEFAULT||val.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.getValue()==ZipLong.DEFAULT||val.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.equals(ZipLong.DECEMBER)||val.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.getValue()!=ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(value)||val.getValue()!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.SHORT_BUF||val.getType()==ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.DECEMBER&&val.getType()==ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.equals(ZipLong.BIGINT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||!val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.LP)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.LP)||!val.equals(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.equals(ZipLong.DEFAULT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT_SIG)||val.equals(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT_SIG)||val.equals(ZipLong.UTF8)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT_SIG)||val.equals(ZipLong.DEFAULT_ARRAY)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.DECEMBER)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)||val.equals(ZipLong.NaN+1)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DL)||val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.LP)||val.equals(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.LP)&&val.getValue()>0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setLength(length+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.POSITIVE_SIZE){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.MAX_VALUE,2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(ZipLong.DD_SIG.equals(val)||current.entry.setCrc(val.getValue())==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.BIGINT)||val.equals(ZipLong.DEFAULT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT||val.getValue()<ZipLong.TWO_EXP_32){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()<ZipLong.NUMBER_INT||val.getValue()>ZipLong.TWO_EXP_32){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731intval.setLength(0);current.entry.setZipEncoding(getZipEncoding());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setLength(0);this.current.entry.setZipEncoding(getZipEncoding());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.DECEMBER)&&val.equals(ZipLong.BLOCK)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DECEMBER||val.equals(ZipLong.BLOCK)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==null||ZipLong.DD_SIG.equals(val)&&val.getValue()!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.NaN)||val.equals(ZipLong.SHORT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)&&isEnabled(Feature.QUOTE_FIELD_NAME)||current.entry.getValue()!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT||val.getValue()<ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.NEGATIVE_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.MIN_VALUE||val.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!Value.DD_SIG.equals(val.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==null||Value.DD_SIG.equals(val.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(Value.DEFAULT.equals(val.getKey())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(value.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_FLOAT||val.getValue()==ZipLong.TWO_EXP_32){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_FLOAT||val.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_FLOAT||val.getValue()==ZipLong.VERTICAL){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==ZipLong.DEFAULT||val.getValue()==ZipLong.BLOCK){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.NUMBER)||val.equals(ZipLong.EQUALS)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.NUMBER)||val.equals(ZipLong.NUMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.NUMBER)||val.equals(ZipLong.NEGATIVE_SIZE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DOUBLE)||val.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.EQUALS)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==null||val.getValue()!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER||val.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER||val.getValue()==ZipLong.TWO_EXP_32){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER||val.getValue()==ZipLong.SHORT_BUF){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER||val.getValue()==ZipLong.VERTICAL){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==ZipLong.DECEMBER||current.entry.getCrc()==ZipLong.SHORT_BUF){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.NUMBER_FLOAT||val.getValue()!=ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getKey()!=ZipLong.NUMBER_INT||val.getValue()!=ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.equals(ZipLong.EQUALS)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null&&ZIPLong.DD_SIG.equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.NUMBER_INT&&val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(current.entry.getKey());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.UTF8);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.valueOf(short));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.DEFAULT);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==ZipLong.NUMBER_FIRST||current.entry.getValue()==ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==ZipLong.NUMBER_INT||current.entry.getValue()==ZipLong.SHORT_BUF){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==ZipLong.NUMBER_INT||current.entry.getCrc()==ZipLong.NUMBER_BYTE){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT)||val.equals(SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DECEMBER)&&val.equals(ZipLong.DD_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731newZipLong(val.getShortValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.getValue()==ZipLong.NUMBER_INT||val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.WRITE)||val.equals(ZipLong.EQUALS)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.entry)&&val.getValue()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.DECEMBER&&val.getValue()==ZipLong.BLOCK){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setValue(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731Inflaterinf=current.in.read();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731Inflaterinf=val.read();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.getValue())||!val.isEmpty()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)||!current.entry.getName().equals(val)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(ZipLong.valueOf(str.getValue()));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DEFAULT||current.entry.getKey()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DEFAULT||current.entry.getName()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.DD_SIG||val.getValue()!=ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.DD_SIG||val.getValue()!=ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.DECEMBER)&&val.equals(ZipLong.NUMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.DEFAULT||val.getValue()!=ZipLong.BLOCK){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.DEFAULT||val.getValue()!=ZipLong.MAX_VALUE){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry==null||ZipLong.DD_SIG.equals(current.entry)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry==null||ZipLong.DD_SIG.equals(val.entry)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()<ZipLong.NUMBER_INT||val.getValue()>ZipLong.SHORT_BUF){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_SIG)&&current.entry.getCrc()==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val.getValue())&&!current.entry.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val=newZipLong(SHORT_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.DECEMBER)&&val.equals(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT)&&val.equals(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(ZipLong.DD_SIG)||val.getValue().equals(ZipLong.DECEMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(ZipLong.DD_SIG)||val.getValue().equals(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(ZipLong.DD_SIG)||val.getValue().equals(ZipLong.DS_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.VERTICAL||val.getValue()==ZipLong.NUMBER_INT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NULL||val.getValue()==ZipLong.VERTICAL){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()<ZipLong.NUMBER_INT||val.getValue()>ZipLong.VERTICAL){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.NUMBER_INT||val.getValue()!=ZipLong.VERTICAL){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.NUMBER_INT||val.getValue()!=ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue().equals(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry!=null){readFully(val);val=newZipLong(val.getValue());}else{current.entry.setCrc(val.getValue());}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setValue(newZipLong(current.entry.getValue()));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731val.setValue(current.entry.getName());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(value!=null&&!ZipLong.DD_SIG.equals(value)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(value)&&val.getValue()>0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(value)||!zipEncoding.equals(value)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()!=ZipLong.NUMBER_INT||current.entry.getValue()!=ZipLong.TWO_EXP_32){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()!=ZipLong.NUMBER_INT||current.entry.getValue()!=ZipLong.VERTICAL){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.getValue())||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.BLOCK||val.getValue()==ZipLong.MAX_VALUE){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT)&&val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.DECEMBER)&&val.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.getValue())||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getType()!=ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT)&&val.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()<ZipLong.NUMBER_INT||current.entry.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.NUMBER_INT&&val.getValue()==ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==ZipLong.NUMBER_INT||val.getValue()==ZipLong.NUMBER_FLOAT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.entry)&&val.getValue()>0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.entry)||!zipEncoding.equals(current.entry)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.entry)||!val.equals(current.entry)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_INT||val.getValue()==ZipLong.NEGATIVE_FIRST){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.SKIP_BUF)||val.equals(ZipLong.SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DD_BUF)||val.equals(SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||!val.getValue().equals(ZipLong.DEFAULT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DECEMBER)||val.equals(ZipLong.SKIP_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.DECEMBER)&&val.equals(ZipLong.SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.DECEMBER||val.equals(ZipLong.SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==ZipLong.DEFAULT||val.getValue()==ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current!=null||ZipLong.DD_SIG.equals(current.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT_SIG)||val.equals(ZipLong.DEFAULT_SPACE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.DEFAULT_SIG)||val.equals(ZipLong.DEFAULT_SUB)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()<ZipLong.NUMBER_INT||val.getType()!=ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry!=null){val.setLength(0);current.entry.setValue(val.getValue());}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry!=null){val.setLength(0);current.entry.setValue(val.getValue());}else{ZipLongval=newZipLong(val.getValue());}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(val)&&!current.entry.getKey().equals(val.getValue())){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.equals(ZipLong.LP)&&val.equals(ZipLong.DD)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.equals(ZipLong.NaN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val==null||val.equals(ZipLong.INTEGER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getKey()!=ZipLong.DEFAULT||val.getValue()!=ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731readFully(val.getValue());current.entry.setSize(val.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.NUMBER_INT||val.getType()!=ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.SHORT_BUF||val.getType()!=ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!ZipLong.DD_SIG.equals(current.zipEncoding)&&!current.entry.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(!val.equals(ZipLong.DD_SIG)&&val.getValue()!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(current.entry.getValue()==ZipLong.DEFAULT||current.entry.getCrc()!=ZipLong.DEFAULT){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()<ZipLong.NUMBER_INTEGER||val.getType()==ZipLong.DECEMBER){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val!=null||val.equals(ZipLong.DD)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()!=ZipLong.DECEMBER||val.getValue()!=ZipLong.BLOCK){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()==ZipLong.NUMBER_FIRST||val.getValue()==ZipLong.SHORT_BUF){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java731if(val.getValue()<ZipLong.SHORT_BUF){
