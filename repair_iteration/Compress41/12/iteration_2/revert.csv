projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_EXP_32,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_EXP_32,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_EXP_32,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SHORT_BUF,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,TWO_DWORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SHORT_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD_BUF,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,WORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,WORD_BUF,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,TWO_WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,WORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_WORD_BUF,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,WORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD_BUF+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SHORT_BUF,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD_BUF,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,CFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,WRITE_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(WORD_BUF),WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_DWORD_BUF,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(SWORD_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_EXP_32,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SHORT_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_DWORD_BUF,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_SHORT_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_EXP_32,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(SWORD,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_DWORD_BUF,DWORD,DWORD);current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_DWORD_BUF,DWORD,DWORD);}else{pushback(TWO_DWORD_BUF,DWORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry==null){pushback(TWO_DWORD_BUF,DWORD,DWORD);}else{pushback(TWO_DWORD_BUF,DWORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_DWORD_BUF,DWORD,DWORD);}else{pushback(TWO_DWORD_BUF,WORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry==null){pushback(TWO_DWORD_BUF,DWORD,DWORD);}else{pushback(TWO_DWORD_BUF,WORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_DWORD_BUF,DWORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_WORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(WORD,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT_PREFIX,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT_SIG,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WRITE_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WRORD,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,TWO_DWORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,TWO_DWORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(length,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD_BUF,TWO_WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NUMBER,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NaN,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.FLOAT,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry==null){pushback(TWO_DWORD_BUF,DWORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_DWORD_BUF,DWORD,DWORD);}else{pushback(TWO_DWORD_BUF,DWORD,WORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.FOR,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NUMBER,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(SWORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(SWORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD_BUF,WORD_BUF,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD_BUF,WORD_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT_SIG,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT_SIG,DWORD,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT_SIG,CFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentielSig=newZipLong(ZipLong.DEFAULT_SIG,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT_SIG,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT_SIG,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT_SPACE,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD_BUF,CFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD,CFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_EXP_32,CFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_WORD_BUF,SKIP_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_WORD_BUF,WORD_BUF),SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_WORD_BUF,WORD_BUF)+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_EXP_32,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NUMBER,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NUMBER,DWORD,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NUMBER,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(ZipLong.NUMBER,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NUMBER,CFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentielSig=newZipLong(ZipLong.NUMBER,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WRITE_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,WRITE_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,WRITE_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WRITE_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_EXP_32,WORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,WORD_BUF,SHORT_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,SHORT_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,WORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT_PREFIX,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT_PREFIX,DWORD,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentielSig=newZipLong(ZipLong.DEFAULT_PREFIX,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT_PREFIX,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT_PREFIX,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT_PREFIX,CFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT_PREFIX,CFH_LEN);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750readFully(TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750Integercurrent.entry=readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750Integercurrent.entry=readFully(ZipLong.getValue(TWO_DWORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750Integercurrent.entry=readFully(ZipLong.getValue(TWO_DWORD_BUF),WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750Integercurrent.entry=readInt(ZipLong.getValue(TWO_DWORD_BUF),WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750readFully(current.entry);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750Integercurrent.entry=readInt(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,SHORT_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SKIP_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,WORD_BUF,SHORT_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,SKIP_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,SHORT_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,SHORT_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD_BUF,WORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_EXP_32,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_EXP_32,TWO_WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_EXP_32,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_EXP_32,DEFAULT_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_EXP_32,DEFAULT_SIZE);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(SWORD,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750readFully(ZipLong.getValue(TWO_DWORD_BUF,0));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD)
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750reader.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,SHORT_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,LFH_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SHORT_BUF,TWO_WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750Integercurrent.entry=readFully(ZipLong.getValue(TWO_WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750Integercurrent.entry=readFully(TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_DWORD_BUF,SKIP_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_EXP_32,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_WORD_BUF,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_DWORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,SHORT_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,SHORT_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(SWORD,TWO_DWORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(wORD,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750pushback(TWO_DWORD_BUF,DWORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750readFully(TWO_DWORD_BUF,DWORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750pushback(TWO_DWORD_BUF,DWORD,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750pushback(TWO_DWORD_BUF,DWORD,current.entry);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(WORD,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(WORD,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(TWO_EXP_32,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(TWO_DWORD_BUF,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(WORD_BUF,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(TWO_WORD_BUF,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(TWO_EXP_32,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,TWO_EXP_32,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,TWO_EXP_32+WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD,WORD_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD,WORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD_BUF,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD_BUF,WORD_BUF+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD_BUF-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD_BUF+2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD_BUF,TWO_DWORD_BUF+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD_BUF*1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750readFully(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750readFully(ZipLong.getValue(TWO_DWORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750reader.readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750readFully(ZipLong.getValue(TWO_DWORD_BUF,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750readFully(ZipLong.getValue(TWO_DWORD_BUF,0));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD)
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NaN,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NaN,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NaN,WORD+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NaN,WORD,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NaN,CFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NaN,WORD_SIZE);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NaN,CFH_LEN);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WRORD,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WRORD,TWO_DWORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(wORD,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WRORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,SHORT_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,LFH_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD_BUF,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD_BUF,CFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,SKIP_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD_BUF,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,10);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,4);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,0L);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_EXP_32,TWO_WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD_BUF,SHORT_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,SKIP_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,SHORT_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,WORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_EXP_32,WORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,WORD_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,WORD_BUF,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_EXP_32,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_EXP_32,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_EXP_32,DEFAULT_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_EXP_32,DEFAULT_SIZE);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,WORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_EXP_32,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.getValue(WORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentielSig=newZipLong(ZipLong.getValue(TWO_WORD_BUF,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.FOR,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.FOR,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.FOR,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.FOR,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.FOR,DWORD,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.FOR,CFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750readFully(ZipLong.getValue(TWO_DWORD_BUF,0));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentielSig=newZipLong(TWO_EXP_32,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750Integercurrent.entry=readFully(ZipLong.getValue(TWO_DWORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(TWO_DWORD_BUF),WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(TWO_WORD_BUF),WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(TWO_BUF,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(TWO_EXP_32),WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(WORD_BUF)+1,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,WORD_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_EXP_32,WORD_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_DWORD_BUF,DWORD,WORD);current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_DWORD_BUF,DWORD,LFH_LEN);current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_DWORD_BUF,-1,-1);current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_DWORD_BUF,0);current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NUMBER,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NUMBER,WORD+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NUMBER,10);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NUMBER,WORD-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NUMBER,WORD_SIZE);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NUMBER,WORD)+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,SHORT_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,LFH_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD_BUF,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,SKIP_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD_BUF,CFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD_BUF,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(SWORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_DWORD_BUF,SKIP_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_DWORD_BUF,WORD_BUF)+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WRITE_BUF,TWO_WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(length,TWO_WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD_BUF,SHORT_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,SKIP_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,SHORT_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_EXP_32,WORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_DWORD_BUF,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_DWORD_BUF,WORD)+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,SKIP_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,LFH_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,WORD_BUF,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,WORD_BUF,CFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,WORD_BUF,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,SHORT_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWITCH_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD_BUF,0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD,0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(SWORD_BUF,0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,0L);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD_BUF,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SHORT_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(length,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(wORD,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,TWO_SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_SHORT_BUF,WORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_SHORT_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_SHORT_BUF,WORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_SHORT_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_SHORT_BUF,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD_BUF,TWO_SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_EXP_32,WORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_EXP_32,WORD_BUF,csize);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_EXP_32,WORD_BUF,CFH_LEN);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD_BUF,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,WORD)
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750readFully(ZipLong.getValue(TWO_WORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750readFully(ZipLong.getValue(TWO_WORD_BUF,0));current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,TWO_WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(length,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD_BUF,WORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SHORT_BUF,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,TWO_EXP_32+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_EXP_64,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_EXP_32,WORD_BUF,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_EXP_32,WORD_BUF,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_EXP_32,WORD_BUF,LFH_LEN);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,WORD_BUF,TWO_EXP_32,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SKIP_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD_BUF,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.FLOAT,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.FLOAT,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.FLOAT,DWORD,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.FLOAT,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.BLOCK,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.FLOAT,CFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentielSig=newZipLong(ZipLong.FLOAT,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,TWO_WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SHORT_BUF,WORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SKIP_BUF,TWO_WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(length,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750Integercurrent.entry=readFully(ZipLong.getValue(TWO_DWORD_BUF),0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,TWO_DWORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,LFH_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,LFH_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,WORD_BUF,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_EXP_32,WORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_EXP_32,WORD_BUF,csize);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_EXP_32,WORD_BUF,CFH_LEN);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_EXP_32,WORD_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_WORD_BUF,WORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SHORT_BUF,WORD_BUF,TWO_WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){readFully(ZipLong.getValue(TWO_WORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){readFully(ZipLong.getValue(TWO_WORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry==null){readFully(ZipLong.getValue(TWO_WORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){readFully(ZipLong.getValue(TWO_WORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){readFully(ZipLong.getValue(TWO_WORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BU
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WRITE_BUF,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SHORT_BUF,WORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,SKIP_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SHORT_BUF,WORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_DWORD_BUF,WORD,DWORD);}else{pushback(TWO_DWORD_BUF,WORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry==null){pushback(TWO_DWORD_BUF,WORD,DWORD);}else{pushback(TWO_DWORD_BUF,WORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry==null){pushback(TWO_DWORD_BUF,DWORD,WORD);}else{pushback(TWO_DWORD_BUF,WORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_DWORD_BUF,DWORD,WORD);}else{pushback(TWO_DWORD_BUF,WORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry==null){pushback(TWO_DWORD_BUF,DWORD,DWORD);}else{pushback(TWO_WORD_BUF,WORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SHORT_BUF,WORD_BUF,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,WORD_BUF,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry==null){pushback(TWO_DWORD_BUF,DWORD,DWORD);current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_DWORD_BUF,DWORD,0);current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(LFH_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SHORT_BUF,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WRITE_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WRITE_BUF,SWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SHORT_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WRITE_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD_BUF,TWO_DWORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_EXP_32,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_EXP_32,0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(SWORD,0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(WORD,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(SWORD,WSORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(SHORT_BUF,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(WORD,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry==null){pushback(TWO_DWORD_BUF,DWORD,DWORD);}else{pushback(TWO_DWORD_BUF,DWORD,WORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry==null){pushback(TWO_DWORD_BUF,DWORD,WORD);}else{pushback(TWO_DWORD_BUF,DWORD,WORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_DWORD_BUF,DWORD,WORD);}else{pushback(TWO_DWORD_BUF,DWORD,WORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_WORD_BUF,DWORD,DWORD);}else{pushback(TWO_WORD_BUF,DWORD,WORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry==null){pushback(TWO_DWORD_BUF,DWORD,DWORD);}else{pushback(TWO_WORD_BUF,DWORD,WORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry==null){pushback(TWO_DWORD_BUF,DWORD,DWORD);}else{pushback(TWO_DWORD_BUF,WORD,WORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NaN,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NaN,10);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NaN,0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD_BUF,WRITE_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_EXP_32,TWO_DWORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD_BUF,WORD_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_BUF,WORD_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,WORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_BUF,WORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(SWORD,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(SWORD,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(length,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.BOR,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.FOR,LFH);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.FOR,DWORD,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(SWORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(SWORD_BUF),WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(SWORD_BUF),SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,LFH_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_DWORD_BUF,WORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.getValue(WORD_BUF,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SHORT_BUF,WORD_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,WORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT_PREFIX,0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT_PREFIX,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT_PREFIX,LFH);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WRORD,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,TWO_DWORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SHORT_BUF,TWO_DWORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_DWORD_BUF,WORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_DWORD_BUF,DWORD,WORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NUMBER_BUF,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.MAX_VALUE,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NUMBER,0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NUMBER,LFH);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WRORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(SHORT_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD,TWO_DWORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(SWORD,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_DWORD_BUF,WORD,DWORD);}else{pushback(TWO_DWORD_BUF,DWORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry==null){pushback(TWO_DWORD_BUF,WORD,DWORD);}else{pushback(TWO_DWORD_BUF,DWORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_WORD_BUF,DWORD,DWORD);}else{pushback(TWO_WORD_BUF,DWORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_DWORD_BUF,-1,-1);}else{pushback(TWO_DWORD_BUF,-1,-1);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,WRITE_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.SHORT_BUF,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.FLOAT,0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(SWORD_BUF,WORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD_BUF,TWO_DWORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750readFully(ZipLong.getValue(TWO_EXP_32,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750readFully(ZipLong.getValue(TWO_WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750readFully(ZipLong.getValue(TWO_DWORD_BUF,SKIP_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry==null){pushback(TWO_DWORD_BUF,WORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,16);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WRITE_BUF,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_WORD_BUF,DWORD,DWORD);}else{pushback(TWO_WORD_BUF,WORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_DWORD_BUF,DWORD,DWORD);}else{pushback(TWO_WORD_BUF,WORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(SWORD_BUF,TWO_DWORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry==null){pushback(TWO_DWORD_BUF,DWORD,DWORD);}else{pushback(TWO_WORD_BUF,DWORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_DWORD_BUF,DWORD,DWORD);}else{pushback(TWO_WORD_BUF,DWORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(SWORD_BUF,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_EXP_32,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_EXP_32,WORD_BUF+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,WRORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_WORD_BUF,WORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(SWORD_BUF,WORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD_BUF,WORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BU
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry==null){readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry==null){readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(length,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_WORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(SKIP_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(SWORD,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_EXP_32,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_EXP_32,WORD_BUF-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(LFH_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WRITE_BUF,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(SWORD,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_SHORT_BUF,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_EXP_32,0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NUMBER,1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NUMBER,2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry==null){readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry==null){readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry==null){readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD)
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(SWORD,CFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(SWORD_BUF,CFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WRITE_BUF,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(SWORD,TWO_WORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(SWORD,TWO_DWORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT_SIG,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT_SIG,0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT_SIG,LFH);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WRORD,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,SHORT_BUF,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,WORD_BUF,TWO_EXP_32+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WRORD_BUF,TWO_WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_EXP_32,BYTE_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WRITE_BUF,0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_DWORD_BUF,DWORD,DWORD);}else{pushback(TWO_DWORD_BUF,WORD,WORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WRITE,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_EXP_32,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD,TWO_DWORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WRORD,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.SHORT_BUF,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,TWO_EXP_32+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.SHORT_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WRORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD)+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750readFully(ZipLong.getValue(TWO_DWORD_BUF,DEFAULT_SIZE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD_BUF,TWO_DWORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT_PREFIX,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT_PREFIX,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT_PREFIX,DWORD,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_DWORD_BUF,0,0);current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(length,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry==null){readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,WORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WRORD_BUF,TWO_SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,TWO_DWORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,SHORT_BUF+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WRORD,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NaN,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,TWO_EXP_32-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_DWORD_BUF,WORD+1));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_DWORD_BUF,DEFAULT_SPACE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(length,0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_DWORD_BUF,DWORD,DWORD);}else{pushback(TWO_DWORD_BUF,DWORD,DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WRITE_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750pushback(TWO_DWORD_BUF,WORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry==null){readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(ZipLong.FOR,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.FOR,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750readFully(current.entry){pushback(TWO_DWORD_BUF,DWORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(WORD,WSORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(WORD,WORD)+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_EXP_32,LAST_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_EXP_32,WORD+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NaN,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT_SIG,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT_SIG,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WRITE_BUF,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(wORD,length);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(ZipLong.FLOAT,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.FLOAT,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.FLOAT_BUF,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_WORD_BUF,DWORD,DWORD);}else{pushback(TWO_DWORD_BUF,DWORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NUMBER,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WRORD_BUF,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,SHORT_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.getValue(WORD,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,TWO_DWORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_DWORD_BUF,WORD_BUF)+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(SHORT_BUF),WORD);
