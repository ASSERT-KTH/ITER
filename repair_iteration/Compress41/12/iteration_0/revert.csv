projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_EXP_32,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD);
