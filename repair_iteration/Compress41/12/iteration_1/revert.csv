projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_EXP_32,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_EXP_32,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_EXP_32,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SHORT_BUF,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,TWO_DWORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SHORT_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD_BUF,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,WORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,WORD_BUF,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,TWO_WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,WORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_WORD_BUF,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,WORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,TWO_EXP_32);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,WORD_BUF+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SHORT_BUF,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD_BUF,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(WORD,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,CFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,0);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,WRITE_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(WORD_BUF),WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_DWORD_BUF,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(SWORD_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_EXP_32,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SHORT_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_DWORD_BUF,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_SHORT_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(TWO_EXP_32,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750staticfinalZipLongpotentialSig=newZipLong(SWORD,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_DWORD_BUF,DWORD,DWORD);current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_DWORD_BUF,DWORD,DWORD);}else{pushback(TWO_DWORD_BUF,DWORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry==null){pushback(TWO_DWORD_BUF,DWORD,DWORD);}else{pushback(TWO_DWORD_BUF,DWORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_DWORD_BUF,DWORD,DWORD);}else{pushback(TWO_DWORD_BUF,WORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry==null){pushback(TWO_DWORD_BUF,DWORD,DWORD);}else{pushback(TWO_DWORD_BUF,WORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_DWORD_BUF,DWORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_WORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.getValue(TWO_WORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.valueOf(WORD,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT_PREFIX,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.DEFAULT_SIG,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WRITE_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WRORD,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,TWO_DWORD_BUF,SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(WORD,TWO_DWORD_BUF,WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(length,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD_BUF,TWO_WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(SWORD_BUF,TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(TWO_DWORD_BUF,SKIP_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NUMBER,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NaN,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.FLOAT,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry==null){pushback(TWO_DWORD_BUF,DWORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750if(current.entry!=null){pushback(TWO_DWORD_BUF,DWORD,DWORD);}else{pushback(TWO_DWORD_BUF,DWORD,WORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.FOR,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java750finalZipLongpotentialSig=newZipLong(ZipLong.NUMBER,DWORD);
