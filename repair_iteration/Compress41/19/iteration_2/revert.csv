projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(this.closed){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed||in!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null||in.length()==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null||in.isEnabled()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null||in.size()==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getInputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521inf.close();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521in.close();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521InputStreaminf=getInputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null){in.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getEntryInputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getOutputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||in.isEnabled()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||in.length()==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in>=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in>>null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed&&in!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed||in==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed||in<null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed||in>=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed||in.isEnabled()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.closed){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in<null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.isOpen()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||in!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null||in.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521InputStreamin=getInputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getOutputFile();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521ze.close();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed||in.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!this.closed){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null||in.length==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null||in.length<0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null||in.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null||in.length<0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null||in.isEnabled()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null||in.length()==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null){for(inti=0;i<inf.length;++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone();current.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone();current.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null){for(inti=0;i<inf.length;++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.get(i);if(entry.getMethod().equals(entry.getMethod
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.get(i);if(entry.getMethod().equals(entry.getMethod())
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||in.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||isEnabled(Feature.AUTO_CLOSE_TOP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||isEnabled(Feature.AUTO_CLOSE_CLOSED)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed||inf!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.isEnabled()||isEnabled(Feature.AUTO_CLOSE_CLOSED)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.close()||isEnabled(Feature.AUTO_CLOSE_CLOSED)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed||isEnabled(Feature.AUTO_CLOSE_CLOSED)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inferred||isEnabled(Feature.AUTO_CLOSE_CLOSED)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(current||isEnabled(Feature.AUTO_CLOSE_CLOSED)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(open||isEnabled(Feature.AUTO_CLOSE_CLOSED)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(isEnabled(Feature.AUTO_CLOSE_CLOSED)||isEnabled(Feature.AUTO_CLOSE_FLOAT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.close()!=null){in.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521in.flush();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.close()){in.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null||in.size()==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in>=null||in.size()==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null||in.size()>0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null||in.size()>=0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null&&in.size()==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in<null||in.size()==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null||in.length<=0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null||in.length<=0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null||inf.length<0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null||in.length<2){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(current!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone();current.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(entry!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone();current.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone();current.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(entry==null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone();current.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(current!=null){if(inf!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone();current.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(current!=null){if(inf!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone();current.close()
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null&&in.isEnabled()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null||inf.isEnabled()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in>=null||in.isEnabled()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in<null||in.isEnabled()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null&&in.isEnabled()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null||inf.length<0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null||in.length>=0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed&&inf!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed&&in<null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed&&in==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.isEnabled()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inf.isEnabled()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!closed||in.isEnabled()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inferred||in.isEnabled()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||inf.isEnabled()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed||inf==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inf!=null||!closed||inf!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!open||inf!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||inf!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inf!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getInputFile();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getOutputFile().getInputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getOutputFile().openInputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getOutputFileInput();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inferred||in!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.close()||in!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inf==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in<null||closed||in!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null&&in.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null||inf.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in>=null||in.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in<null||in.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!in.closed){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!open){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.length()==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inf.length()==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.length()==0||closed.length()==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inferred||in.length()==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!closed||in.length()==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in<null||in.length()==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null||inf.isEnabled()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(entry!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.get(i);if(entry.getMethod().equals(entry.getMetho
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(entry!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.get(i);if(entry.getMethod().equals(entry.getMethod())
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(entry!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.get(i);if(entry.getMethod().equals(entry
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(entry!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.get(i);if(entry.getMethod().equals(entry.getMeth
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(entry!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.get(i);if(entry.getMethod().equals(entry.get
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.get(i);if(entry.getMethod().equals(entry.getMethod())
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inf!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.get(i);if(entry.getMethod().equals(entry.getMetho
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.close()||closed){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.close()||in.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inf.close()||in.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inf.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521InputStreaminf=getOutputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521InputStreaminf=getReadInputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521InputStreaminf=this.inputStream;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521InputStreaminf=getInputStream(outputBuffer);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521InputStreaminf=getInputStream(in);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521InputStreaminf=getInputStream().openStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed||in{null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null||!closed){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null||in.length==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null||in.length>=0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null||inf.length==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null||in.length>0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in<null||in.closed){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null||in.closed){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=this.getOutputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getCurrentEntry();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getCurrentInputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getOutputStream().getInputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getOutputStream(outputStream);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.isEnabled()||isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.close()||isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed||isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inferred||isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(current||isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(current!=null){for(inti=0;i<inf.length;++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone();current.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(entry!=null){for(inti=0;i<inf.length;++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone();current.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521for(inti=0;i<inf.length;++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone();current.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(entry==null){for(inti=0;i<inf.length;++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone();current.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(current!=null){if(inf!=null){for(inti=0;i<inf.length;++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone();current.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(current!=null){if(inf!=null){for(inti=0;i<inf.length;++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone();current.close();}}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(current!=null){if(inf==null){for(inti=0;i<inf.length;++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone();current.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!open||in<null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.close()>0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!in.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null){inf.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null){in.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(entry!=null){for(inti=0;i<inf.length;++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(entry==null){for(inti=0;i<inf.length;++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inf!=null){for(inti=0;i<inf.length;++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521for(inti=0;i<inf.length;++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(entry!=null){for(inti=0;i<inf.length;++i){ZipArchiveEntryentry=(ZipArchiveEntry)entry.clone();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(entry==null){for(inti=0;i<inf.length;++i){ZipArchiveEntryentry=(ZipArchiveEntry)entry.clone();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(entry!=null){for(inti=0;i<entry.length;++i){ZipArchiveEntryentry=(ZipArchiveEntry)entry.clone();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(entry!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inf!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(entry==null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(entry!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)entry.clone();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(entry==null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)entry.clone();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(entry!=null){for(inti=0;i<entry.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)entry.clone();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null||inf.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null&&in.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in>=null||in.length()==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null||inf.length()==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null||in.length()>=0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in>>null||in.length()==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521ze.flush();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521ze.closeEntry();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521this.entryEncoding.close();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521fileName.close();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed&&in.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed||inf.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.close()||!closed){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!open()||in.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null||in.length()!=0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null||inf.length()==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null||in.length()>=0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null||in.length()<=0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521InputStreamin=getInputStream("UTF-8");
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521InputStreamin=getOutputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521InputStreamin=getInputStream(inf);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521InputStreamin=getInputStream()+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521InputStreamin=getInputStream().openStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=this.getInputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getInputStream(true);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getInputStream(in);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getInputStream().openStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=this.inputStream;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed||in>>null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inf!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.get(i);if(entry.getMethod().equals(entry
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.get(i);if(entry.getMethod().equals(entry.getMethod
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inf!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.get(i);if(entry.getMethod().equals(entry.get
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed){if(in!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.get(i);if(entry.getMethod().equals(entry
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(entry==null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.get(i);if(entry.getMethod().equals(entry
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.isEnabled()||isEnabled(Feature.AUTO_CLOSE_TOP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.close()||isEnabled(Feature.AUTO_CLOSE_TOP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed||isEnabled(Feature.AUTO_CLOSE_TOP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inferred||isEnabled(Feature.AUTO_CLOSE_TOP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(current||isEnabled(Feature.AUTO_CLOSE_TOP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(isEnabled(Feature.AUTO_CLOSE_TOP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(isEnabled(Feature.AUTO_CLOSE_TOP)||isEnabled(Feature.SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getCurrentEntryInputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=this.entryEncoding.getInputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=this.entryEncoding;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=this.getEntryInputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.isOpen()||in.isVersion()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.isOpen()||in.isEnabled()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.isOpen()||in.isDirectory()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.isOpen()||in.isVerticalFile()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.isOpen()||in.isInput()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed&&in.isEnabled()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed||inf.isEnabled()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!open||in.isEnabled()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!in.isEnabled()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.isEnabled()||!closed){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inf!=null){inf.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inf==null){inf.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521inf.flush();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521InputStreamin=getInputStream(inf.getCharset());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521InputStreamin=getInputStream(inf.getChars());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521InputStreamin=getInputStream(true);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(this.closed||isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(open||isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||isEnabled(Feature.AUTO_CLOSE_SOURCE)||hasUTF8Flag){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null&&in.length==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed||inf.isOpen()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed||inf.length==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getFullInputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getOpenInputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null||in.closed){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inf!=null){inf.close();}else{System.arraycopy(inf,0,inf,0,inf.length);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inf!=null){inf.close();}else{System.err.println("UnicodeExtraFieldsclosed:"+Integer.toHexString(inf.getValue()));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inf!=null){inf.close();}else{System.err.println("UnicodeExtraFieldsclosed:"+inf.getClass().getName());}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inf!=null){inf.close();}else{System.err.println("UnicodeExtraFieldsclosed:"+entryEncoding);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inf!=null){inf.close();}else{System.err.println("UnicodeExtraFieldsclosed:"+Integer.toHexString(inf.readLine()));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521InputStreaminf=getInputStream().readLine();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521InputStreaminf=getInputStream(in.read());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getInputStream(in.read());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=isEnabled(Feature.QUOTE_FIELD_NAMES);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getInputStream().close();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf.close();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521ze.close(in);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in[Delete]null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.get(i);if(entry.getMethod().equals(entry
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.get(i);if(entry.getMethod().equals(entry
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.get(i);if(entry.getMethod().equals(entry.get
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.get(i);if(entry.getMethod().equals(entry.
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.get(i);if(entry.getMethod().equals(entry.
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.get(i);if(entry.getMethod().equals
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null||in.size()<=0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(current!=null){for(inti=0;i<inf.length;++i){ZipArchiveEntryentry=(ZipArchiveEntry)entry.clone();current.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(entry!=null){for(inti=0;i<inf.length;++i){ZipArchiveEntryentry=(ZipArchiveEntry)entry.clone();current.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null&&in.length()==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null||in.length()>0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null||in.length()<0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in>>null||in.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getOutputStream().openInputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getOutputStream(in);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=isEnabled(Feature.AUTO_CLOSE_ERROR);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null||in.length<2){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(this.closed||in.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inferred||in.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null){in.close();}else{System.err.println("UnicodeExtraFieldsclosed:"+Integer.toHexString(inputStream));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null){in.close();}else{System.err.println("UnicodeExtraFieldsclosed:"+Integer.toHexString(Integer.toHexString(inputStream));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null){in.close();}else{System.err.println("UnicodeExtraFieldsclosed:"+entryEncoding);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null){in.close();}else{System.err.println("UnicodeExtraFieldsclosed:"+in.getClass().getName());}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null){in.close();}else{System.err.println("UnicodeExtraFieldsclosed:"+Integer.toString(inputStream));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed!=null&&in.isEnabled()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null||in.canClose()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in>>null||in.isEnabled()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null||in.open()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null||in.open()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null||in.isOpen()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inmoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoaleif(closed||in!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inmoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoale();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inmoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoale(in||in!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inmoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoaleif(closed){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inmoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoaleif(closed||in==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inmoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoale(closed||in!=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inmoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoalemoale(in||in==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone();current.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(current!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone()
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(current!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)entry.clone();current.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null){in=null;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null){in=newZipArchiveEntry();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(this.closed||isEnabled(Feature.AUTO_CLOSE_CLOSED)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(enabled||isEnabled(Feature.AUTO_CLOSE_CLOSED)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||isEnabled(Feature.AUTO_CLOSE_CLOSED)||hasUTF8Flag){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in<null||!closed||in.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null||!closed||in.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null||in.length()>0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.isOpen()||in.isShutdown()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!in.isOpen()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.isOpen()||in.isAbsolute()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.get(i);if(entry.getMethod().equals(entry.getMet
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.get(i);if(entry.getMethod().equals(entry.getMetho
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.get(i);if(entry.getMethod().equals(entry.getMeth
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed&&in>=null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.close()==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||in.length()>0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed||in.length()==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||in.length()!=0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(isEnabled(Feature.QUOTE_FIELD_NAMES)||!closed||in.isEnabled()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(isEnabled(Feature.QUOTE_FIELD_NAMES)||in.isEnabled()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(this.closed||in.isEnabled()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.close()||in.isEnabled()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(this.closed||isEnabled(Feature.AUTO_CLOSE_TOP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(open||isEnabled(Feature.AUTO_CLOSE_TOP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||isEnabled(Feature.AUTO_CLOSE_TOP)||hasUTF8Flag){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||isEnabled(Feature.AUTO_CLOSE_TOP)||hasDataDescriptor){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null&&in.length<0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||isEnabled(Feature.AUTO_CLOSE_TOP)||isEnabled(Feature.FLUSH_EXP_32)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||isEnabled(Feature.AUTO_CLOSE_TOP)||isEnabled(Feature.DEFAULT_CLOSED_ENTRY)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||isEnabled(Feature.QUOTE_CLOSE_TOP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null&&Inflater.isEnabled(this)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null){in.close();}else{try{inf.close();}catch(IOExceptionioe){}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null){in.close();}else{try{in.close();}catch(IOExceptionioe){}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null){in.close();}else{System.err.println("UnicodeExtraFieldsclosed");}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null){in.close();}else{System.err.println("UnicodeExtraFieldsclosed.");}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getOutputFile().openStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||in==null||in.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in<null||isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in<null||isEnabled(Feature.AUTO_CLOSE_TOP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in<null||isEnabled(Feature.AUTO_CLOSE_TARGET)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in<null||in.isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in<null||isEnabled(Feature.AUTO_CLOSE_CLOSED)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521InputStreaminf=getInputStream(outputStream);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521InputStreaminf=getInputStream(encoding);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521InputStreaminf=readInputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(entry!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)enf.clone();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in>=null||in.length<0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(entry!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)inf.get(i);if(entry.getMethod().equals(entry.
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(shutdown||in.isEnabled()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null||in.length()<0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed||inf.length!=0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(current!=null){for(inti=0;i<inf.length;++i){ZipArchiveEntryentry=(ZipArchiveEntry)current.clone();current.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(entry!=null){for(inti=0;i<entry.length;++i){ZipArchiveEntryentry=(ZipArchiveEntry)entry.clone();current.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed=true||in.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(entry!=null){for(inti=0;i<inf.length;++i){ZipArchiveEntryentry=(ZipArchiveEntry)enf.clone();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(this.closed||in.length()==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||in.length()<=0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||in.length()>=0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(entry!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)entry.clone();current.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(entryEncoding!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)entry.clone();current.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(current!=null){for(inti=0;i<inf.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)current.clone();current.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed||!this.closed){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed||!in.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||isEnabled(Feature.AUTO_CLOSE_CLOSED)||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(shutdown||isEnabled(Feature.AUTO_CLOSE_CLOSED)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||isEnabled(Feature.AUTO_CLOSE_CLOSED)||isEnabled(Feature.FLUSH_EXP_32)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(shutdown||in.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed=true||in.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||in==null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||in<null){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null){try{in.close();}catch(IOExceptionioe){}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null){try{inf.close();}catch(IOExceptionioe){}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null&&inf==null){in.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null&&in.closed){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getInputStream(outputStream);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in==null||in.length>0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=this.entryEncoding.openInputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getEntryInputStream().close();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getEntryInputStream(in);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getFileInputStream();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521InputStreamin=getInputStream(outputStream);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inf!=null){inf.close();}else{buffer.close();}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inf!=null){inf.close();}else{thrownewIllegalStateException("");}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inf!=null){inf.close();}else{return;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inf!=null){inf.close();}else{System.err.println("Failedtocloseentry.");}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(inf!=null){inf.close();}else{break;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(shutdown||isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||isEnabled(Feature.AUTO_CLOSE_SOURCE)||isEnabled(Feature.FLUSH_EXP_32)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed||isEnabled(Feature.AUTO_CLOSE_SOURCE)||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed!=null&&in.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null&&inf.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in!=null&&out.close()){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(closed!=null||in.length()==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getOutputStream().readLine();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521Inflaterinf=getOutputStream().close();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in>=null||in.length==0){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(!closed||in.isEnabled(SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521try{ze.close();}catch(IOExceptionioe){}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521this.entryEncoding.closeEntry();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521try{ze.close();}catch(IOExceptionioe){thrownewIllegalStateException("");}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521try{ze.close();}catch(IOExceptionioe){System.err.println("UnicodeExtraFieldsclosed:"+ioe);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521try{ze.close();}catch(IOExceptionioe){thrownewIOException("");}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java521if(in.isOpen()||in.isVertical()){
