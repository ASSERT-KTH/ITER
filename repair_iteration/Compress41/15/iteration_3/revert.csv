projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_DWORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_DWORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_DWORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WS));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_DWORD_BUF,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_DWORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_DWORD_BUF,WORD),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_DWORD_BUF,DEFAULT_SIZE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_DWORD_BUF,DEFAULT_SIG));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(WORD,TWO_DWORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(WORD_BUF,TWO_DWORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_DWORD_BUF,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_DWORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_DWORD_BUF,WORD),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_DWORD_BUF,TWO_WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_DWORD_BUF,WORD)+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipEightByteInteger.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){pushback(TWO_DWORD_BUF,WORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,WORD),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(WORD,TWO_DWORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(WORD_BUF,TWO_DWORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(WORD,TWO_DWORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(WORD_BUF,TWO_DWORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,WORD),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WS));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,TWO_WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_DWORD_BUF,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_DWORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_DWORD_BUF,WS));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_DWORD_BUF,WORD),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_DWORD_BUF,LFH_LEN));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_DWORD_BUF,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_EXP_32,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_DWORD_BUF,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_EXP_32));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_EXP_32,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_DWORD_BUF,LFH));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_DWORD_BUF,LONG_SIZE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_EXP_32,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_EXP_32,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_DWORD_BUF,LFH));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_EXP_32,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_DWORD,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipEightByteInteger.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipEightByteInteger.getValue(TWO_DWORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipEightByteInteger.getValue(TWO_WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,LFH));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_EXP_32));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,TWO_WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_DWORD_BUF,TWO_WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_DWORD_BUF,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,WSORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_DWORD_BUF,DEFAULT_SIZE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,SKIP_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){pushback(TWO_DWORD_BUF,WORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){pushback(TWO_DWORD_BUF,DWORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){pushback(TWO_DWORD_BUF,DWORD,DWORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_DWORD_BUF,DEFAULT_NAME));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(WORD,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_DWORD,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_DWORD_BUF,WORD)+1,potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_DWORD_BUF,WORD)+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_DWORD_BUF,LFH_BUF),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_EXP_32,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_EXP_32,WORD),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_EXP_32,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_EXP_32,LFH_LEN));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_EXP_32,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_EXP_32,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(WORD,TWO_EXP_32));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_EXP_16,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_EXP_2,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753reader.setFileName(ZipLong.getValue(TWO_DWORD_BUF,DEFAULT_NAME));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_DWORD_BUF,DEFAULT_NAME),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_DWORD_BUF,WORD_BUF),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_WORD_BUF,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_DWORD,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(WORD,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_DWORD,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(WORD,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(WORD,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,TWO_WORD_BUF));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_DWORD_BUF,WORD)+1,potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_DWORD_BUF,LFH_BUF),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(WORD,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,0));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,0));}else{pushback(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(TWO_DWORD_BUF,DWORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.CFH_SIG,DWORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.DEFAULT_WORD_BUF,DWORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.WORD_BUF,DWORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.DWORD_BUF,DWORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753reader.setSize(ZipLong.getValue(TWO_WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_DWORD_BUF,WORD)+2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_DWORD_BUF,WORD)+10);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_DWORD_BUF,WORD)+4);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_DWORD_BUF,WORD)+3);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF)+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(WORD,TWO_DWORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(WORD,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD_BUF),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(WORD,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_DEPRECATED,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753reader.setValue(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_EXP_32,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(WORD,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_WORD,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,WORD)+1,potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,SHORT_BUF),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,LFH_BUF),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipEightByteInteger.getValue(TWO_DWORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipEightByteInteger.getValue(TWO_DWORD_BUF,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753reader.setCompressedSize(ZipEightByteInteger.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipEightByteInteger.getValue(TWO_DWORD_BUF,WORD),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_EXP_32,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_EXP_32,WORD),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_EXP_32,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_EXP_32,WORD)+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_EXP_32,DEFAULT_SIZE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(WORD,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753reader.setFileName(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(TWO_DWORD_BUF,WORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753hopback(TWO_DWORD_BUF,WORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753rmândpushback(TWO_DWORD_BUF,WORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753peechback(TWO_DWORD_BUF,WORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipEightByteInteger.getValue(TWO_DWORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipEightByteInteger.getValue(TWO_DWORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipEightByteInteger.getValue(TWO_DWORD_BUF,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipEightByteInteger.getValue(TWO_DWORD_BUF,WS));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipEightByteInteger.getValue(TWO_DWORD_BUF,WORD),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipEightByteInteger.getValue(TWO_DWORD_BUF,NUMBER));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,SKIP_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,SHORT_BUF),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,WORD)+1,potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,LFH_BUF),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_DWORD,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753entry.setTime(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753reader.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753next.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_DWORD_BUF,SKIP_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(WORD,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753reader.setPreferredSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753next.entry.setPreferredSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753reader.setFileName(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_DWORD_BUF,SKIP_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_WORD,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(WORD,TWO_WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_DWORD_BUF,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_DWORD_BUF,WORD),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_DWORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_DWORD_BUF,WORD)+1,potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_DWORD_BUF,WORD)-1,potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD_BUF),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_EXP_32,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_DUP,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753reader.setValue(ZipLong.getValue(TWO_DWORD_BUF,DEFAULT_SIZE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(WORD,DEFAULT_SIZE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_BUF)){current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));}else{pushback(TWO
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,DWORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,DWORD));}else{pushback(TWO_
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.getValue(TWO_DWORD_BUF,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.getValue(TWO_DWORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.getValue(TWO_DWORD_BUF,WS));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.getValue(TWO_DWORD_BUF,CFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.getValue(TWO_DWORD_BUF,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_WORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_WORD_BUF,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_WORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_WORD_BUF,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_WORD_BUF,WORD),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_WORD_BUF,WORD)+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753reader.setValue(ZipLong.getValue(TWO_DWORD_BUF,DEFAULT_SIG));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(WORD,DEFAULT_SIG));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753reader.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(WORD,TWO_DWORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_DWORD,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(WORD,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(TWO_DWORD_BUF,DWORD,LFH_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753hopback(TWO_DWORD_BUF,DWORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(TWO_DWORD_BUF,DWORD,WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753rmândpushback(TWO_DWORD_BUF,DWORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_EXP_32,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(WORD,TWO_EXP_32));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_EXP_2,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_EXP_2));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_EXP_64,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_WORD,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(WORD,TWO_WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_DWORD,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_DWORD,WORD),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_DWORD,LFH_LEN));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_WORD,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_DWORD,DEFAULT_SIG));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,SHORT_BUF));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_BUF)){current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,SHORT_BUF));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,SHORT_BUF));}else{pushback(TWO
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,SHORT_BUF));}else{pushback(
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,SKIP_BUF));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,WORD));}else{pushback(TWO_
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_BUF)){current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_BUF)){current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,LFH_BUF));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_BUF)){current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,WORD));}else{thrownewIllegalArgumentException("");}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipEightByteInteger.getValue(TWO_DWORD_BUF,SHORT_BUF));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipEightByteInteger.getValue(TWO_DWORD_BUF,SHORT_BUF));}else{pushback(
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipEightByteInteger.getValue(TWO_DWORD_BUF,SHORT_BUF));}else{
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_BORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_EXP_32,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_EXP_32,WORD),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_EXP_32,LFH_LEN));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_EXP_32,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_EXP_32,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_EXP_32,WORD)+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_WORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_WORD_BUF,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_WORD_BUF,WORD),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_WORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753reader.setFileName(ZipLong.getValue(TWO_WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_WORD_BUF,DEFAULT_NAME));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_EXP_32,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_EXP_32,WORD),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_EXP_32,LFH_LEN));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_EXP_32,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_EXP_32,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_EXP_32,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,LFH));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,LFH_BUF));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,LFH));}else{pushback(TWO_
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_DWORD_BUF,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_DWORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_DWORD_BUF,WORD),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_DWORD_BUF,DEFAULT_SIZE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_DWORD_BUF,WORD)+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_DWORD,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(WORD,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SKIP_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(WORD,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD)+1,potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,LFH_BUF),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753reader.setPosition(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753next.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_LEN)){pushback(TWO_DWORD_BUF,WORD);}else{current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.LFH_LEN)){pushback(TWO_DWORD_BUF,WORD);}else{current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){pushback(TWO_DWORD_BUF,WORD);}else{current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(WORD,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_BUF)){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_BUF)){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,LFH_BUF));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_BUF)){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}else{pushback(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_WORD,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(WORD,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_BUF)){current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,LFH_BUF));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_BUF)){current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_BUF)){current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,LFH_BUF));}else{pushback(
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(WORD,LFH));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_BORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(WORD,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_LEN)){pushback(TWO_DWORD_BUF,WORD);}else{current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.LFH_LEN)){pushback(TWO_DWORD_BUF,WORD);}else{current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(WORD,TWO_WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,LONG_SIZE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_DWORD_BUF,LONG_SIG));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_PADDING,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_PAD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_WORD,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,0));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,0));}else{pushback(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,0));}else{pushback(TWO_
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_DWORD_BUF,SKIP_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,0));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,0));}else{pushback(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,0));}else{pushback(TWO_DWORD_BUF,
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_DWORD_BUF,SKIP_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(WORD,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_BUF)){current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,LFH_BUF));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_BUF)){current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_BUF)){current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,LFH_BUF));}else{pushback(
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_BUF)){current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,LFH_BUF));}else{pushback(TWO_
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.CFH_SIG,WORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.WORD,WORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.WORD_BUF,WORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.DWORD_BUF,WORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,WORD_BUF),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_DWORD_BUF,SKIP_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,DWORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,DWORD));}else{pushback(TWO_
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipEightByteInteger.getValue(TWO_WORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipEightByteInteger.getValue(TWO_WORD_BUF,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipEightByteInteger.getValue(TWO_WORD_BUF,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipEightByteInteger.getValue(TWO_WORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipEightByteInteger.getValue(TWO_WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753reader.setCompressedSize(ZipEightByteInteger.getValue(TWO_WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_DWORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_DWORD_BUF,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_DWORD_BUF,WORD)+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_DWORD_BUF,WORD),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_DWORD_BUF,DEFAULT_SIZE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(WORD,DEFAULT_SIZE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_WORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_WORD_BUF,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_WORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_WORD_BUF,WORD)+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_WORD_BUF,WORD),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_WORD_BUF,DEFAULT_SIZE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_EXP_32,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_EXP_32,WORD),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_EXP_32,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_EXP_2,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_EXP_32,WORD)+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(WORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_EXP_32,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(WORD_BUF,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_WORD,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_WORD_BUF,WORD)+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_DWORD_BUF,WORD)+1000);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_DWORD,WORD)+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_EXP_32,TWO_EXP_32));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_EXP_32,LONG_SIG));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_EXP_32,LONG_SIZE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_EXP_32,LONG_SIG));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_EXP_32,TWO_EXP_32));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_EXP_32,LONG_SIZE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_EXP_32,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(WORD_BUF,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipEightByteInteger.getValue(TWO_WORD_BUF,SKIP_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipEightByteInteger.getValue(TWO_WORD_BUF,WSORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_DWORD_BUF,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_EXP_32,SKIP_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_WORD_BUF,SKIP_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.DEFAULT_TWO_BUF,WORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.getValue(TWO_DWORD_BUF,DWORD,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.valueOf(WORD),WORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_DWORD,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_EXP_32,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_EXP_16,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_DWORD_BUF,LFH_BUF),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipEightByteInteger.getValue(TWO_DWORD_BUF,SKIP_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipEightByteInteger.getValue(TWO_DWORD_BUF,LFH));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipEightByteInteger.getValue(TWO_DWORD_BUF,DEFAULT_SCRIPT));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_EXP_32,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_HEIGHT_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,DEFAULT_NAME));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_POS_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_HOME_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_WORD_BUF,WS));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_EXP_32,WS));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_EXP_2));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_EXP_32,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_EXP_32,DEFAULT_SIG));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(WORD,LFH_LEN));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(WORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_WORD_BUF,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(WORD,TWO_WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.getValue(TWO_EXP_32,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.getValue(TWO_SHORT_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.getValue(TWO_WORD_BUF,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.getValue(TWO_WORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,SKIP_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(WORD,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_EXP_32,LONG_SIG));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_EXP_32,DEFAULT_SIZE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_EXP_32,NUMBER_SIZE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_EXP_32,TWO_EXP_32));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_EXP_32,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_EXP_32,LONG_SIZE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(WORD,LFH));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(WORD,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_WORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(WORD,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(WORD_BUF,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_EXP_32,WSORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_WORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_WORD_BUF,SKIP_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_WORD_BUF,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_EXP_32,WS));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,WS));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_EXP_32,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(WORD_BUF,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_WORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_WORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_DWORD_BUF,LONG_SIG));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_DWORD_BUF,LONG_SIZE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(WORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(WORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,DEFAULT_SIZE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(WORD,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD),DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.valueOf(WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753peechback(TWO_DWORD_BUF,DWORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.valueOf(WORD),DWORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.valueOf(SWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_DWORD,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_DWORD,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_DWORD,LFH_SIG));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipEightByteInteger.getValue(TWO_WORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipEightByteInteger.getValue(TWO_DWORD_BUF,LFH));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipEightByteInteger.getValue(TWO_DWORD_BUF,DEFAULT_SPACE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(current.entry!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(current.entry!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));}else{current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(current.entry!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(current.entry!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));}else{current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));}else{current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_PADDING));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_EXP_32,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(WORD_BUF,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(WORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_WORD_BUF,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(WORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(current.entry!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(current.entry!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(current.entry!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_DWORD_BUF,NAME));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(WORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_EXP_32,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(WORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_DWORD_BUF,WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_DWORD_BUF,SKIP_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_EXP_32,WS));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,WS));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_EXP_32,LONG_SIZE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_EXP_32,TWO_EXP_32));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_WORD_BUF,SKIP_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_WORD_BUF,LONG_SIZE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.DEFAULT_TWO_BUF,DWORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_EXP_32));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_SIZE,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,DEFAULT_SCRIPT));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(WORD,LFH));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,SKIP_BUF),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(WORD,LFH_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_EXP_32),WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,SKIP_BUF),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(WORD,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,WORD));}else{current.entry.set
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pull(TWO_DWORD_BUF,DWORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(TWO_DWORD_BUF,DWORD,DEFAULT_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pomback(TWO_DWORD_BUF,DWORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_DWORD_BUF,LONG));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_BUF)){current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,WORD));}else{current.entry.setSize(ZipLong
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_DWORD_BUF,DEFAULT_SIG));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipEightByteInteger.getValue(TWO_DWORD_BUF,NUMBER));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipEightByteInteger.getValue(TWO_DWORD_BUF,WS));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.getValue(TWO_DWORD_BUF,DWORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(WORD,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setPadding(ZipLong.getValue(WORD,TWO_DWORD_BUF));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setPadding(ZipLong.getValue(WORD,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(WORD,WS));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));}else{current.entry.set
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));}else{
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(WORD,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_DWORD_BUF,TWO_WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(current.entry!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));}else{current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){pushback(TWO_DWORD_BUF,DWORD,WORD);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(current.entry!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));}else{current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(current.entry!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));}else{current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(TWO_EXP_32,DEFAULT_SPACE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_DWORD,DEFAULT_NAME));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_EXP_32),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_EXP_32));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(TWO_EXP_32,LONG));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,SHORT_BUF));}else{current.entry.set
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,SHORT_BUF));}else{
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pull(TWO_DWORD_BUF,WORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pomback(TWO_DWORD_BUF,WORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(TWO_DWORD_BUF,WORD,DEFAULT_SIG);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_DWORD_BUF,SKIP_BUF),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipEightByteInteger.getValue(TWO_DWORD_BUF,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipEightByteInteger.getValue(TWO_DWORD_BUF,DS));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_BUF)){current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}else{current.entry.set
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(WORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(current.entry==null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));}else{current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){pushback(TWO_DWORD_BUF,DWORD,WORD);}else{current.entry.setCompressedSize(ZipLong.getValue(TWO
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_DWORD_BUF,WORD)+16);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setCompressedSize(ZipLong.getValue(TWO_EXP_32,DEFAULT_SCRIPT));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.getValue(TWO_DWORD_BUF,DEFAULT_SIG));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}else{current.entry.set
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}else{pushback(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_BUF)){current.entry.setCompressedSize(ZipLong.getValue(TWO_WORD_BUF,WORD));}else{current.entry.set
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setTime(ZipLong.getValue(TWO_EXP_32,BYTE_SIG));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPreferredSize(ZipLong.getValue(WORD,WS));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_DWORD_BUF,DEFAULT_SPACE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_DWORD_BUF,PADDING));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPadding(ZipLong.getValue(TWO_DWORD_BUF,WS));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_DWORD_BUF,LONG));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753pushback(ZipLong.LFH_SIG,WORD,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setPosition(ZipLong.getValue(TWO_WORD_BUF,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setFileName(ZipLong.getValue(TWO_WORD_BUF,DEFAULT_SIG));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setFileName(ZipLong.getValue(WORD,TWO_DWORD_BUF));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753if(potentialSig.equals(ZipLong.CFH_SIG)){current.entry.setFileName(ZipLong.getValue(WORD,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setSize(ZipLong.getValue(WORD,WS));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_EXP_32,LONG));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java753current.entry.setValue(ZipLong.getValue(TWO_EXP_32,NUMBER));
