projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=3*WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=3;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=2*WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=4*WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=3*SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=2;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10*WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF*3;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=2*size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=2*SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=2*cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=2*WORD_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=2*WORD_SIZE;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=NUMBER_SIZE;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SHORT_BUFSKIP_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=TWO_DWORD_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SKIP_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10*SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10*cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10*size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10*WORD_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10*WORD_SIZE;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF*SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=3*size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=3*SHORT_BUFSKIP_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=3*cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF-1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF,size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_SIZE;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=CRC32.getValue(LFH_BUF,size);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=CRC32.getValue(SHORT_BUF,size);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;cSize=newZipLong(LFH_BUF,off);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285cSize=newZipLong(LFH_BUF,off);off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;size=newZipLong(LFH_BUF,off);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;cSize=newZipLong(LFH_BUF,off);off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=4;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=4*SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=4*size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD*4;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=4*cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF*4;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF/3;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF*2;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF*cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF*1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=LAST_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=NUMBER_LENGTH;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10L*WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SHORT_BUF*3;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=cSize*3;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF*6;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285cSize=newZipLong(LFH_BUF,off);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(FH_BUF,off));off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SHORT_BUF+cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF*10;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=11*WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285if(current.entry!=null){current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;size=newZipLong(LFH_BUF,off);off+=WORD;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285if(current.entry!=null){current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285cSize=ZipLong.getValue(LFH_BUF,off);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=NUMBER;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF/SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=1*SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SHORT_BUFSKIP_BUF,size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SHORT_BUFSKIP_BUF,size);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=3*SHORT_BUFSKIP_BUF,size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF*SHORT_BUFSKIP_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=3*SHORT_BUFSKIP_BUF,size);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=3*SKIP_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=2*SHORT_BUFSKIP_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(FH_BUF,off));off+=WORD;size=newZipLong(LFH_BUF,off);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(CFH_BUF,off));off+=WORD;size=newZipLong(LFH_BUF,off);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(CCH_BUF,off));off+=WORD;size=newZipLong(LFH_BUF,off);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(LFH_BUF,off+1));off+=WORD;size=newZipLong(LFH_BUF,off);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(WORD_BUF,off));off+=WORD;size=newZipLong(LFH_BUF,off);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=2*SHORT_BUF,size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SHORT_BUF-1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=cSize-1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF-2;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF/1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF-3;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(CCH_BUF,off));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(LFH_BUF,off+1));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(CFH_BUF,off));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(cSize,off));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(FH_BUF,off));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(RECORD_BUF,off));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF/2;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF*2-1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF*2cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF*2SKIP_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD*cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=4*cSize,size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285cSize=ZipLong.getValue(LFH_BUF,off+WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285cSize=ZipLong.getValue(LFH_BUF,off+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285cSize=ZipLong.getValue(FH_BUF,off+WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285cSize=ZipLong.getValue(LFH_BUF,off+WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285cSize=ZipLong.getValue(LFH_BUF,off)+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=2*cSize,size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=2*cSize.length;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(LFH_BUF,off),cSize);off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(LFH_BUF,off+1));off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285CurrentEntry<K,V>current=currentEntry.getValue(LFH_BUF,off);off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10L*size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10L*cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10L*WORD_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10L*SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10L*WORD_SIZE;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285if(!current.hasDataDescriptor){current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;cSize=newZipLong(LFH_BUF,off);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(LFH_BUF,off+1));off+=WORD;cSize=newZipLong(LFH_BUF,off);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(FH_BUF,off));off+=WORD;cSize=newZipLong(LFH_BUF,off);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(LFH_BUF,off),size);off+=WORD;cSize=newZipLong(LFH_BUF,off);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=SHORT_BUF;cSize=newZipLong(LFH_BUF,off);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SHORT_BUF*WORD_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF*SKIP_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF*SHORT_BUF,size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF/4;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=2*WORD_BUF,size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=cSize+SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF+cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SHORT_BUF+cSize+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SHORT_BUF+cSize.length;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SHORT_BUF+cSize.subtract(current.entry.getValue());
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SHORT_BUF+cSize+WORD_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD.length;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(WORD_BUF,off));off+=SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(SHORT_BUF,off));off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(CCH_BUF,off));off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(CFH_BUF,off));off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=11;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=11*size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=11*SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=11*cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=12*WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF*11;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=CRC32.getValue(current.entry,cSize);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=CRC32.getValue(SHORT_BUF,cSize);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_LENGTH;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=NUMBER_LENGTH+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=NUMBER_LENGTH+cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10*current.entry.getValue();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10*size-1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10*size,cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10*current.entry.getSize();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=2*WORD_SIZE+cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF/10;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=CRC32.getValue(LFH_BUF,cSize);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=CRC32.getValue(TWO_DWORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF,cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF,size=newZipLong(LFH_BUF,off);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF,size-1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SHORT_BUF,size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF,size+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF,size=newZipLong(LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF,cacheSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10*WORD_BUF,size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SHORT_BUF/3;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SHORT_BUF*2;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SHORT_BUF*4;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SHORT_BUF*SKIP_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD/4;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD*2;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10*WORD_SIZE+cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(FH_BUF,off+1));off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(FH_BUF,off),cSize);off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(FH_BUF,off));off+=SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(FH_BUF,off+2));off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(FH_BUF,off));off+=cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285entry.setCrc(ZipLong.getValue(FH_BUF,off));off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=CRC32.getValue(cSize,size);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=CRC32.getValue(LFH_BUF,size-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SHORT_BUF.getValue(LFH_BUF,size);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=CRC32.getValue(FH_BUF,cSize);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=cSize.getValue(LFH_BUF,size);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=NUMBER+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=NUMBER+cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=cSize*2;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=cSize*4;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=cSize*WORD_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=cSize*1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=cSize*WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=cSize*5;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285cSize=newZipLong(LFH_BUF,off+WORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285cSize=newZipLong(LFH_BUF,off+1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285cSize=newZipLong(LFH_BUF,off+2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285cSize=newZipLong(LFH_BUF,off+3);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285cSize=newZipLong(LFH_BUF,off+4);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=CRC32.getValue(SCRIPT_BUF,size);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SHORT_BUF.getValue(cSize,size);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=CRC32.getValue(CHIP_BUF,size);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=CRC32.getValue(current.entry,size);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=CRC32.getValue(STANDARD_BUF,size);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=CRC32.getValue(cSize);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10*SHORT_BUFSKIP_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF*size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD*size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=4*size,cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=NUMBER_SIZE+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=NUMBER_SIZE-1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=NUMBER_SIZE+cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=2*size,cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF/cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF*cSize,size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF*cSize.length;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285cSize=newZipLong(LFH_BUF,off+1);off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285cSize=newZipLong(LFH_BUF,off);off+=SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285cSize=newZipLong(LFH_BUF,off+2);off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285cSize=newZipLong(LFH_BUF,off+1,size);off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285cSize=newZipLong(LFH_BUF,off+WORD);off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;size=newZipLong(LFH_BUF,off);off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285if(cSize!=null){if(current.entry!=null){current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285if(cSize==null){if(current.entry!=null){current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285if(current.hasDataDescriptor){if(current.entry!=null){current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_SIZE-1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_SIZE+size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_SIZE+cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SHORT_BUF/WORD_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=cSize/SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF/SHORT_BUF,size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF/SHORT_BUF.length;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF/SHORT_BUF,size);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SHORT_BUF*1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD.length();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=3*cSize,size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=1*cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285if(!current.hasDataDescriptor){current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;cSize=newZipLong(LFH_BUF,off);off+=WORD;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=SHORT_BUF;cSize=newZipLong(LFH_BUF,off);off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(FH_BUF,off));off+=WORD;cSize=newZipLong(LFH_BUF,off);off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(LFH_BUF,off+1));off+=WORD;cSize=newZipLong(LFH_BUF,off);off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setSize(ZipLong.getValue(LFH_BUF,off));off+=WORD;cSize=newZipLong(LFH_BUF,off);off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF/6;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF*5;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10*cSize.length;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10*cSize,size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10*cSize.longValue();
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=4*SHORT_BUFSKIP_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(WORD_BUF,off));off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(0,off));off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(4,off));off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=1L*SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=1*SHORT_BUFSKIP_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=1/SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=LAST_BUF-1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(SHORT_BUF,off));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(SCRIPT_BUF,off));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(0,off));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=cSize+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=cSize+2;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=cSize*size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285cSize=ZipLong.getValue(FH_BUF,off+WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10/WORD_SIZE;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=2*SKIP_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=CRC32.getValue(LFH_BUF,off);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=TWO_EXP_32;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=2/WORD_SIZE;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=3*WORD_SIZE;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10*SKIP_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SHORT_BUF+TWO_DWORD_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(SHORT_BUF,off));off+=WORD;size=newZipLong(LFH_BUF,off);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=SHORT_BUF;size=newZipLong(LFH_BUF,off);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setSize(ZipLong.getValue(LFH_BUF,off));off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10*cSize+File.separator;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10*cSize+File.separatorChar;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10*cSize+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SHORT_BUF*10;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF*8;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SKIP_BUF/SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=size/SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(SHORT_BUF,off));off+=SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(SCRIPT_BUF,off));off+=SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(CHIP_BUF,off));off+=SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(0,off));off+=WORD_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=NON_SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=2*size-1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10*sigSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=2*cSize+File.separator;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=2*cSize+File.separatorChar;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=8*WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=CRC32.getValue(SHORT_BUF,size-1);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=4*size-1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=BYTE_LEN*size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285if(current.entry!=null){current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;cSize=newZipLong(LFH_BUF,off);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setSize(ZipLong.getValue(LFH_BUF,off));off+=WORD;cSize=newZipLong(LFH_BUF,off);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD_BUF;cSize=newZipLong(LFH_BUF,off);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(CHIP_BUF,off));off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=cSize*SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SKIP_BUF*SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285cSize=newZipLong(LFH_BUF,off);off+=WORD_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285if(current.entry!=null){cSize=newZipLong(LFH_BUF,off);off+=WORD;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285if(current.entry!=null){cSize=newZipLong(LFH_BUF,off);off+=WORD;}else{size=newZipLong(LFH_BUF,off);off+=WORD;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285if(current.entry!=null){cSize=newZipLong(LFH_BUF,off);off+=WORD;}else{current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=cSize/3;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=3*sigSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285if(current.hasDataDescriptor){current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;cSize=newZipLong(LFH_BUF,off);off+=WORD;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285if(current.entry!=null){current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;cSize=newZipLong(LFH_BUF,off);off+=WORD;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285CurrentEntry<K,V>current=currentEntry.getCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(LFH_BUF,off),size+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(cSize,off));off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(SCRIPT_BUF,off));off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SHORT_BUF*cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285cSize=newZipLong(LFH_BUF,off+WORD_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SKIP_BUF,size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=cSize,size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=TWO_DWORD_BUF,size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285if(current.hasDataDescriptor){if(current.entry!=null){current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;size=newZipLong(LFH_BUF,off);off+=WORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285if(current.hasDataDescriptor){if(current.entry!=null){current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;size=newZipLong(LFH_BUF,off);off+=WORD;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=TWO_DWORD_BUF-1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SKIP_BUF-1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=NUMBER_BUF-1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=1*SKIP_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=1*size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10*SHORT_BUF+cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=TWO_DWORD_BUF*3;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SKIP_BUF*3;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=cSize*3L;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=cSize*8;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=cSize*6;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SHORT_BUF*6;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF*6+cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=4*cSize+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD.length*size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF*4-1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285if(current.hasDataDescriptor){current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;size=newZipLong(LFH_BUF,off);off+=WORD;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285if(cSize==null){if(current.entry!=null){current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;size=newZipLong(LFH_BUF,off);off+=WORD;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285if(current.entry==null){current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;size=newZipLong(LFH_BUF,off);off+=WORD;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;size=newZipLong(LFH_BUF,off);off+=WORD;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10*cSize+ZipLong.getValue(LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=10*cSize+ZipLong.getValue(LFH_BUF,size);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=cSize*10;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF.length*4;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285if(cSize==null){current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;cSize=newZipLong(LFH_BUF,off);off+=WORD;}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=3*WORD_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(cSize,off));off+=SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285current.entry.setCrc(ZipLong.getValue(RECORD_BUF,off));off+=SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF.length*SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=1,size=newZipLong(LFH_BUF,off);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=11*WORD_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF-SHORT_BUF;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285owner.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285if(cSize==null){current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;cSize=newZipLong(LFH_BUF,off);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=2*cSize+ZipLong.getValue(LFH_BUF,size);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=2*cSize+ZipLong.getValue(LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=1*WORD_SIZE;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_SIZE*size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=3*cSize+ZipLong.getValue(LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=3*cSize+ZipLong.getValue(LFH_BUF,size);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=NUMBER_LENGTH-1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=cSize+ZipLong.getValue(LFH_BUF,size);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=cSize*ZipLong.getValue(LFH_BUF,size);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=cSize*ZipLong.getValue(LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=cSize+ZipLong.getValue(LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=ZipLong.getValue(SHORT_BUF,size);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=CRC32.getValue(SC_SIZE,size);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=CRC32.getValue(sHORT_BUF,size);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF.length/3;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SHORT_BUF-3;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=NUMBER-1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=ZipLong.getValue(LFH_BUF,size);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285cSize=ZipLong.getValue(LFH_BUF,off+2);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285cSize=ZipLong.getValue(LFH_BUF,off+1,size);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=11*WORD_SIZE;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=8*WORD_SIZE;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=2*size+ZipLong.getValue(LFH_BUF,off);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=2*size+ZipLong.getValue(LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=2*size+ZipLong.getValue(LFH_BUF,cSize);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF*cSize+1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=size*cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=4*cSize+ZipLong.getValue(LFH_BUF,size);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=4*cSize+ZipLong.getValue(LFH_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285cSize=newZipLong(LFH_BUF,off+SHORT_BUF);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285cSize=newZipLong(LFH_BUF,off+1,size);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF,extraData;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF,extraData.length;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=size-1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=WORD_BUF*6-1;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=SHORT_BUF+cSize+size;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285off+=TWO_DWORD_BUF+cSize;
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285if(!current.hasDataDescriptor){current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;size=newZipLong(LFH_BUF,off);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285if(cSize==null){current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;size=newZipLong(LFH_BUF,off);}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java285if(cSize==null){current.entry.setCrc(ZipLong.getValue(LFH_BUF,off));off+=WORD;size=newZipLong(LFH_BUF,off);}else{
