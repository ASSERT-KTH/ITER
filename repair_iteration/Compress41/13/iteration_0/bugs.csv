bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
25	[BUG] [BUGGY] if (potentialSig.equals(ZipLong.CFH_SIG) || potentialSig.equals(ZipLong.LFH_SIG)) { [FE] AssertionError [CONTEXT]        readFully(TWO_DWORD_BUF); final ZipLong potentialSig = new ZipLong(TWO_DWORD_BUF, DWORD); [BUGGY] if (potentialSig.equals(ZipLong.CFH_SIG) || potentialSig.equals(ZipLong.LFH_SIG)) { [BUGGY] pushback(TWO_DWORD_BUF, DWORD, DWORD); current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF)); current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF, WORD)); } else { current.entry.setCompressedSize(ZipEightByteInteger.getLongValue(TWO_DWORD_BUF)); current.entry.setSize(ZipEightByteInteger.getLongValue(TWO_DWORD_BUF, DWORD)); } } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] readDataDescriptor [RETURN_TYPE] void  [VARIABLES] ZipEncoding entryEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN count diff entriesRead extraLen fileNameLen i l length off offset read toRead versionMadeBy x long TWO_EXP_32 bytesRead bytesReadFromStream csize inB max n pos rem remaining size skipped time value byte[] CFH DD LFH LFH_BUF SHORT_BUF SKIP_BUF TWO_DWORD_BUF WORD_BUF b buffer expected extraData fileName lfh missedLfhBytes signature CurrentEntry current ZipLong potentialSig val boolean allowStoredEntriesWithDataDescriptor closed firstEntry hasDataDescriptor hasUTF8Flag hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry ze Inflater inf  	projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.5	751	751	2	replace	
