projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.CFH_SIG)||str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null||potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(propertySig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.CFH_SIG)&&str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.LFH_SIG)||str.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.FLOAT_SIG)||str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.FOR)||str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null||potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(propertySig==null||potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(spotentialSig==null||potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.CFH_SIG)||possibleSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||possibleSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null||potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pojo!=null||potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.CFH_SIG)||possibleSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.LFH_SIG)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pojo.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(propertySig.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(propertySig.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.LFH_SIG)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pojo.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(p.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(propertySig.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(propertySig.equals(ZipLong.LFH_SIG)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.LFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.CFH_BUF)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.FLOAT)||str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.LEN)||str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_EXP_32,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek!=null||potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek==null||potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.LFH_SIG)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.CFH)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.FOR)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.DEFAULT_SIG)||potentialSig.equals(ZipLong.DEFAULT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));potentialSig.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751potentialSig.append(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(p.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null&&potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.CFH)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.CFH_SIG)||key.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.startsWith(ZipLong.CFH_SIG)||str.startsWith(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.CFH)&&str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null&&potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(paddingSig==null||potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WS));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setValue(ZipLong.getValue(TWO_DWORD_BUF,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.FLOAT)&&str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.SHORT_BUF)||str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.DEFAULT)||str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.FLOAT)||str.equals(ZipLong.SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.FLOAT)||str.equals(ZipLong.LEN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.CFH_SIG)||str.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.FLOAT_SIG)&&str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.FOR)&&str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.LFH_SIG)||str.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.FLOAT_SIG)||str.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.FLOAT_SIG)||str.equals(ZipLong.LEN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.FLOAT_SIG)||str.equals(ZipLong.NUMBER_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.LFH_SIG)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.LFH_SIG)&&str.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.FLOAT_SIG)||str.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.LP)||str.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.FOR)||str.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.LEN)||str.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BU
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BU
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BU
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.length()==0){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));potentialSig.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));possibleSig.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));potentialSig.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}else{
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));potSig.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751readFully(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));}else{potentialSig.setSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));}else{potentialSig.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.CFH_SIG)&&possibleSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.CFH_SIG)&&current.entry.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(Pojo.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pojo.equals(ZipLong.FLOAT_SIG)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pojo.equals(ZipLong.CFH_SIG)&&possibleSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek!=null&&potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek==null||potentialSig.equals(ZipLong.CFH_SIG)||possibleSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751pushback(ZipLong.getValue(TWO_DWORD_BUF,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751pushback(Pipeline.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751pushback(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751pushback(PositiveSig.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751pushback(Position.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751pushback(ZipLong.getValue(TWO_DWORD_BUF,WS));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.LFH_SIG)||potentialSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.FLOAT_SIG)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.LEN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,potentialSig));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WS));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751nextEntry.setValue(ZipLong.getValue(TWO_DWORD_BUF,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.CFH)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.CFH)&&possibleSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.CFH)&&potentialSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.CFH)&&str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.FLOAT)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.CFH)&&potentialSig.equals(ZipLong.LEN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751nextEntry.setSize(ZipLong.getValue(TWO_WORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){nextEntry.setSize(ZipLong.getValue(TWO_WORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751next.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751nextEntry.setSize(ZipLong.getValue(TWO_WORD_BUF,DWORD));current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek.equals(ZipLong.FLOAT_SIG)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.LEN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.LPH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setValue(ZipLong.getValue(TWO_WORD_BUF,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,TWO_WORD_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,WORD),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.FOR)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.BIG)||str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.FOR)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(propertySig.equals(ZipLong.FLOAT)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pojo.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(propertySig.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(propertySig.equals(ZipLong.DEFAULT)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pojo.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(propertySig.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(propertySig.equals(ZipLong.FLOAT_SIG)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.DEFAULT)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.LEN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.DEFAULT_SIG)||potentialSig.equals(ZipLong.DEFAULT_WORD)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.DEFAULT_SIG)&&potentialSig.equals(ZipLong.DEFAULT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.DEFAULT_SIG)||potentialSig.equals(ZipLong.DEFAULT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.DEFAULT_SIG)||potentialSig.equals(ZipLong.DEFAULT_NAME)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.DEFAULT_SIG)||potentialSig.equals(ZipLong.DEFAULT_SUB)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.DEFAULT_SIG)||potentialSig.equals(ZipLong.DEFAULT_SIG,WORD)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.startsWith(ZipLong.CFH_SIG)||potentialSig.startsWith(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.startsWith(ZipLong.CFH_SIG)&&potentialSig.startsWith(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.startsWith(ZipLong.CFH_SIG)&&str.startsWith(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.startsWith(ZipLong.FLOAT_SIG)||str.startsWith(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.startsWith(ZipLong.LFH_SIG)||str.startsWith(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.startsWith(ZipLong.CFH_SIG)||str.endsWith(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD)
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}else{
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null||potentialSig.equals(ZipLong.CFH_BUF)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(propertySig==null||potentialSig.equals(ZipLong.CFH_BUF)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null||potentialSig.equals(ZipLong.CFH_BUF)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(spotentialSig==null||potentialSig.equals(ZipLong.CFH_BUF)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.CFH_BUF)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.CFH_BUF)||possibleSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,DWORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(p.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751next.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751finalZipLongcurrent=newZipLong(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751reader.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751newZipLong(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751finalZipLongcurrent=newZipLong(TWO_DWORD_BUF,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751finalZipLongcurrent.entry=newZipLong(TWO_DWORD_BUF,DWORD);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.CFH)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.CFH)&&possibleSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.CFH)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig.equals(ZipLong.CFH)&&pos.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(p.equals(ZipLong.CFH)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.CFH)&&potentialSig.equals(ZipLong.LEN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null||potentialSig.equals(ZipLong.LFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.LPH_SIG)||potentialSig.equals(ZipLong.LPH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(propertySig==null||potentialSig.equals(ZipLong.LFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.LFH_SIG)||possibleSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.LEN)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null||potentialSig.equals(ZipLong.CFH_SIG)||possibleSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null||potentialSig.equals(ZipLong.CFH_SIG)||current.entry.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null||potentialSig.equals(ZipLong.CFH_SIG)||path.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null||possibleSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD)
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_DWORD,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){if(possibleSig!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValu
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){if(possibleSig!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){if(possibleSig!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getVal
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek==null||potentialSig.equals(ZipLong.CFH_BUF)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek==null||potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategySig==null||potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pojo==null||potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(propertySig!=null||potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setValue(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SKIP_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BU
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751next.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BU
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.FLOAT)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.DEFAULT)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.BLOCK)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.LEN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null&&potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null&&possibleSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_DWORD,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){if(possibleSig!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){if(possibleSig!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValu
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DW
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig.equals(ZipLong.CFH_SIG)&&pos.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.CFH_SIG)&&possibleSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.CFH_SIG)&&str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.CFH_SIG)&&possibleSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.CFH)||str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.CFH)&&possibleSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.CFH_SIG)&&peek.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek.equals(ZipLong.CFH_SIG)&&possibleSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig.equals(ZipLong.CFH_SIG)&&peek.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.LP)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.LFH_SIG)&&potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.DEFAULT_SIG)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null||possibleSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.LEN)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.LEN)&&str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.LEN)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.KEY)||str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null||potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.FOR)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig.equals(ZipLong.FOR)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.FOR)||potentialSig.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.FOR)||potentialSig.equals(ZipLong.LEN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.FOR)||potentialSig.equals(ZipLong.SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.FOR)||potentialSig.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null||potentialSig.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.CFH_SIG)&&current.entry.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.CFH_SIG)&&possibleSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null||potentialSig.equals(ZipLong.CFH_SIG)&&possibleSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null&&potentialSig.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null||potentialSig.equals(ZipLong.CFH_SIG)&&current.entry.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.CFH_SIG)&&propertySig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig.equals(ZipLong.CFH_SIG)&&propertySig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG,SHORT_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null||potentialSig.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.FLOAT_BUF)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(propertySig==null||potentialSig.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(spotentialSig==null||potentialSig.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.LPH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pojo!=null&&potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pojo.equals(ZipLong.LFH_SIG)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig.equals(ZipLong.LFH_SIG)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(propertySig.equals(ZipLong.LFH_SIG)&&potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(propertySig.equals(ZipLong.LFH_BUF)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null||options.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null||possibleSig.equals(ZipLong.CFH_SIG)||current.entry.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pojo.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.LFH_SIG)&&potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(p.equals(ZipLong.LFH_SIG)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.FOR)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BU
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BU
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BU
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(key.equals(ZipLong.CFH_SIG)||key.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.CFH_SIG)&&key.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(value.equals(ZipLong.CFH_SIG)||key.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(key.equals(ZipLong.CFH_SIG)||str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(p.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(p.equals(ZipLong.CFH_SIG)||possibleSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.FLOAT)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.MAX_VALUE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.LEN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.DEFAULT)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(spotentialSig!=null||potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(spotentialSig==null||potentialSig.equals(ZipLong.CFH_SIG)||possibleSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(spotentialSig==null||possibleSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.CFH_SIG)&&p.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(p.equals(ZipLong.CFH_SIG)&&possibleSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(p.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(p.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.LFH_SIG||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.CFH_SIG)&&possibleSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.FLOAT_SIG)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}else{
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.length()<2){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}else{
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.LFH_SIG)&&potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.LFH_BUF)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.LFH_SIG)||possibleSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,DWORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(paddingSig!=null||potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(poddingSig==null||potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(paddingSig==null||potentialSig.equals(ZipLong.CFH_SIG)||possibleSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.CFH_BUF)||potentialSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.CFH_SIG)||possibleSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.CFH_SIG)||possibleSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.CFH_BUF)||potentialSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pojo==null||potentialSig.equals(ZipLong.CFH_SIG)||possibleSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_EXP_32,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_EXP_32,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_EXP_32,WORD),potentialSig);
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_EXP_32,WS));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setValue(ZipLong.getValue(TWO_EXP_32,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_EXP_32,DEFAULT_QUOTE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.DEFAULT)||potentialSig.equals(ZipLong.DEFAULT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.DEFAULT_SIG)||potentialSig.equals(ZipLong.DEFAULT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.DEFAULT_SIG)||potentialSig.equals(ZipLong.DEFAULT_BYTE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null&&potentialSig.equals(ZipLong.LFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null&&potentialSig.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null&&potentialSig.equals(ZipLong.LFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(posSibling!=null&&potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||possibleSig.equals(ZipLong.CFH_SIG)||LFH_BUF.equals(possibleSig)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(posSibling==null||potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null||potentialSig.equals(ZipLong.CFH_SIG)||LFH_BUF.equals(possibleSig)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){potentialSig.append(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){potentialSig.append(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry==null){potentialSig.append(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){potentialSig.append(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD)
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry==null){potentialSig.append(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){potentialSig.append(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(p.equals(ZipLong.FLOAT)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(p.equals(ZipLong.LFH_SIG)&&potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(p.equals(ZipLong.FOR)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos==-1){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BU
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.BLOCK)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.startsWith(ZipLong.FLOAT)||str.startsWith(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.startsWith(ZipLong.DEFAULT)||str.startsWith(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.startsWith(ZipLong.LP)||str.startsWith(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.FLOAT)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.LFH_SIG)&&potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig.equals(ZipLong.CFH_SIG)&&str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.LFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_HEIGHT_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,WSORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pojo==null||potentialSig.equals(ZipLong.LFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pojo==null||potentialSig.equals(ZipLong.CFH_BUF)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null||potentialSig.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null||potentialSig.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek!=null||potentialSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry==null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos<0){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));potentialSig.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pojo!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));potentialSig.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pojo==null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));potentialSig.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751potentialSig.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));potentialSig.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD)
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos<0){if(pos!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValu
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pots!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DW
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.FOR)||potentialSig.equals(ZipLong.DEFAULT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.FOR)||potentialSig.equals(ZipLong.LEFT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.DEFAULT)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.LEN)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.LFH_BUF)||potentialSig.equals(ZipLong.CFH_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){nextEntry.setSize(ZipLong.getValue(TWO_WORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){nextEntry.setSize(ZipLong.getValue(TWO_WORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){nextEntry.setSize(ZipLong.getValue(TWO_WORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){nextEntry.setSize(ZipLong.getValue(TWO_WORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){nextEntry.setSize(ZipLong.getValue(TWO_WORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.CFH)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751nextEntry.setSize(ZipLong.getValue(TWO_EXP_32,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751nextEntry.setSize(ZipLong.getValue(TWO_WORD_BUF,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751nextEntry.setValue(ZipLong.getValue(TWO_DWORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(p.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(p.equals(ZipLong.FOR)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.CFH)&&potentialSig.equals(ZipLong.LFH_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pojo.equals(ZipLong.CFH)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.LFH_BUF)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null||potentialSig.equals(ZipLong.CFH_BUF)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.DEFAULT_SIG)||potentialSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(posSibling==null||potentialSig.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null||potentialSig.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.FLOAT_SIG)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.DEFAULT_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BU
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos==-1){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BU
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.DEFAULT)||str.equals(ZipLong.LEN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.NUMBER)||str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.FLOAT)||str.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.DEFAULT)||str.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.LFH_BUF)||str.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null||potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.CFH)&&potentialSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751pushback(ZipLong.getValue(TWO_SHORT_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751pushback(ZipLong.getValue(TWO_EXP_32,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751pushback(Pipeline.getValue(TWO_DWORD_BUF,potentialSig));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751pushback(ZipLong.getValue(TWO_SHORT_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751pushback(ZipLong.getValue(TWO_DWORD_BUF,potentialSig));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751pushback(ZipLong.getValue(TWO_DWORD_BUF,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(propertySig.equals(ZipLong.LFH_BUF)||potentialSig.equals(ZipLong.CFH_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.DEFAULT)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.LFH_BUF)||potentialSig.equals(ZipLong.CFH_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.LEN)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry==null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek!=null||potentialSig.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek==null||potentialSig.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.LP)||potentialSig.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.DEFAULT_SPACE)||potentialSig.equals(ZipLong.DEFAULT_SPACE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.DEFAULT)||potentialSig.equals(ZipLong.DEFAULT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null||!possibleSig.equals(ZipLong.CFH_SIG)||!possibleSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(propertySig.equals(ZipLong.FLOAT_BUF)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BU
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry==null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BU
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek==null||potentialSig.equals(ZipLong.LFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek==null||potentialSig.equals(ZipLong.LP)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek==null||potentialSig.equals(ZipLong.DEFAULT_PREFIX)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek==null||potentialSig.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.DEFAULT)&&str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.CFH)&&potentialS.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(paddingSig==null||potentialSig.equals(ZipLong.LFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(paddingSig==null||potentialSig.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(paddingSig==null||potentialSig.equals(ZipLong.CFH_BUF)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.LFH_SIG)||key.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.FOR)||key.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.FLOAT_BUF)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.CFH)&&potentialSig.equals(ZipLong.LFH_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.SHORT)||str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.FOR)||str.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.BLOCK)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.LEFT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek==null||potentialSig.equals(ZipLong.CFH_SIG)&&peek.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.FLOAT_BUF)||str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.DEFAULT_SIG)||str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.BLOCK)||str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.FLOAT)||str.equals(ZipLong.LEFT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.CFH)&&potentialSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pojo.equals(ZipLong.FLOAT)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.CFH_SIG)&&pojo.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pojo.equals(ZipLong.LFH_SIG)&&potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pots!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DW
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null){current.entry.setSize(ZipLong.getValue(TWO_DWORD,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.CFH)&&potentialSig.equals(ZipLong.LFH)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,potentialSig));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pojo==null||potentialSig.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(propertySig==null||potentialSig.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.CFH_SIG)&&LFH.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(spotentialSig==null||potentialSig.equals(ZipLong.LFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(posSEquals==null||potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD)
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.LFH_BUF)||potentialSig.equals(ZipLong.CFH_BUF)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null||potentialSig.equals(ZipLong.LFH_SIG)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.DEFAULT)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_EXP_32,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_EXP_32,potentialSig));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setValue(ZipLong.getValue(TWO_EXP_32,DWORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setValue(ZipLong.getValue(TWO_EXP_32,0));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.LFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.FOR)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.FOR||str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.startsWith(ZipLong.FOR)||str.startsWith(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(paddingSig!=null&&potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null&&potentialSig.equals(ZipLong.LFH_SIG)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.endsWith(ZipLong.CFH_SIG)||str.startsWith(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(patternSig==null||potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos<SHORT_BUF){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry==null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD);current.entry.setSize(ZipLong.getValue(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT));current.entry.setSize(ZipLong.getValue(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.LFH_SIG)||potentialSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null||optionSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null&&possibleSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig==null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos<=0){if(pos!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,DEFAULT));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.CFH)&&potentialSig.startsWith(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.LEN)||key.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.LEN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(p.equals(ZipLong.CFH_SIG)||p.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.CFH_SIG)||current.entry.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}else{current.entry.setSize(ZipLong.getValue(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry==null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}else{potentialSig.append(ZipLong.getValue(TWO_DWORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.DEFAULT_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.DEFAULT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.LEFT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.DEFAULT_SPACE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(value.equals(ZipLong.CFH_SIG)||value.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(chunk.equals(ZipLong.CFH_SIG)||key.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(propertySig.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.LEN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(propertySig.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.DEFAULT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(propertySig.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.Number)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.CFH_SIG)&&key.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.DEFAULT_SIG)||potentialSig.equals(ZipLong.DEFAULT_NUMBER)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.DEFAULT_SIG)||potentialSig.equals(ZipLong.DEFAULT_BOOLEAN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.LP)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek.equals(ZipLong.FLOAT_SIG)||potentialSig.equals(ZipLong.DEFAULT_SPACE)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_EXP_32,DEFAULT_SPACE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry==null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.DEFAULT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD)
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peer!=null&&potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null||potentialSig.equals(ZipLong.LFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.NUMBER)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.DEFAULT_SPACE)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.FOR)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.LEN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pos<SHORT_BUF){pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751try{pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751try{pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT_BUF));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(push.equals(ZipLong.FOR)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.equals(ZipLong.DEFAULT_SIG)||str.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751nextEntry.setValue(ZipLong.getValue(TWO_DWORD_BUF,potentialSig));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751nextEntry.setSize(ZipLong.getValue(TWO_WORD_BUF,potentialSig));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,PotentialSig.NONE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,DEFAULT_SPACE));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry==null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,SHORT
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,S
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry==null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,S
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.LEFT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.DEFAULT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(spotentialSig!=null&&potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek.equals(ZipLong.CFH_SIG)&&key.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.LEN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751pushback(ZipLong.getValue(TWO_DWORD_BUF,DEFAULT));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek.equals(ZipLong.CFH)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pojo.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.LEN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pojo.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry==null){nextEntry.setSize(ZipLong.getValue(TWO_WORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,W
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(current.entry==null){nextEntry.setSize(ZipLong.getValue(TWO_WORD_BUF,WORD));current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null){nextEntry.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));current.entry.setCompressedSize(ZipLong.getValue(TWO_DWORD_BUF,WORD
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751current.entry.setSize(ZipLong.getValue(TWO_WORD_BUF,potentialSig));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751try{pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));potentialSig.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751try{pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));potentialSig.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751try{pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));potentialSig.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}catch(IOExceptionioe){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751try{pushback(ZipLong.getValue(TWO_DWORD_BUF,WORD));potentialSig.setSize(ZipLong.getValue(TWO_DWORD_BUF,WORD));}catch(Exceptione){}
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(p.equals(ZipLong.CFH_SIG)&&key.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(p.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.LEN)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek==null||potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.FUNCTION_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.LEFT)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(possibleSig.equals(ZipLong.FLOAT)||potentialSig.equals(ZipLong.DEFAULT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(strategy.equals(ZipLong.FOR)||potentialSig.equals(ZipLong.CFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(str.startsWith(ZipLong.CFH_SIG)&&str.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(pojo==null||potentialSig.equals(ZipLong.CFH_SIG)||potentialSig.equals(ZipLong.FLOAT_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig!=null&&potentialSig.equals(ZipLong.CFH_SIG)&&potentialSig.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(potentialSig==null||potentialSig.equals(ZipLong.CFH_SIG)&&encoding.equals(ZipLong.LFH_SIG)){
projects/Compress41/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java751if(peek!=null||potentialSig.equals(ZipLong.CFH_BUF)||potentialSig.equals(ZipLong.LFH_SIG)){
