bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Iterator  iter  =  this.stopAtNonOption.iterator();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Iterator  iter  =  this.stopAtNonOption.iterator();  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Iterator  iter  =  this.stopAtNonOption.iterator();	  Iterator    iter    =    currentOption.iterator();    	non-compiled	[CE]  	9	None	replace
2	[BUG]  [BUGGY]  Iterator  iter  =  this.currentOption.iterator();  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Iterator  iter  =  this.currentOption.iterator();  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Iterator  iter  =  this.currentOption.iterator();	  Iterator    iter    =    currentOption.iterator();    	non-compiled	[CE]  	9	None	replace
3	[BUG]  [BUGGY]  tokens.add(iter.next()  *  1,  iter.next());  [CE]  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  tokens.add(iter.next()  *  1,  iter.next());  [BUGGY]      }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	tokens.add(iter.next()  *  1,  iter.next());	  tokens.add(iter.next()    -    1,    iter.next());    	non-compiled	[CE]  	21	None	replace
4	[BUG]  [BUGGY]  Iterator  <  Option>  options  =  iter.iterator();  [CE]  [FE]            AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Option>  options  =  iter.iterator();  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Iterator  <  Option>  options  =  iter.iterator();	  Iterator    <    Option>    options    =    currentOption.iterator();    	non-compiled	[CE]  	2	None	replace
5	[BUG]  [BUGGY]  Iterator  <  Option>  options  =  iter.items();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Option>  options  =  iter.items();  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Iterator  <  Option>  options  =  iter.items();	  Iterator    <    Option>    options    =    currentOption.iterator();    	non-compiled	[CE]  	2	None	replace
6	[BUG]  [BUGGY]  tokens.add(iter.next(),  iter.getValue(),  stopAtNonOption);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  tokens.add(iter.next(),  iter.getValue(),  stopAtNonOption);  [BUGGY]      }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	tokens.add(iter.next(),  iter.getValue(),  stopAtNonOption);	  tokens.add(iter.next(),    iter.getValue());    	non-compiled	[CE]  	13	None	replace
7	[BUG]  [BUGGY]  tokens.add(iter.next(),  iter.getKey());  [CE]  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  tokens.add(iter.next(),  iter.getKey());  [BUGGY]      }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	tokens.add(iter.next(),  iter.getKey());	  tokens.add(iter.next(),    iter.getValue());    	non-compiled	[CE]  	13	None	replace
8	[BUG]  [BUGGY]  tokens.add(iter.next(),  iter.getValue()  +  1);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  tokens.add(iter.next(),  iter.getValue()  +  1);  [BUGGY]      }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	tokens.add(iter.next(),  iter.getValue()  +  1);	  tokens.add(iter.next(),    iter.getValue());    	non-compiled	[CE]  	13	None	replace
9	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  iter.iterator();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Option>  iter  =  iter.iterator();  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Iterator  <  Option>  iter  =  iter.iterator();	  Iterator    <    Option>    iter    =    currentOption.iterator();    	non-compiled	[CE]  	6	None	replace
10	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  this.currentOption.iterator();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Option>  iter  =  this.currentOption.iterator();  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Iterator  <  Option>  iter  =  this.currentOption.iterator();	  Iterator    <    Option>    iter    =    currentOption.iterator();    	non-compiled	[CE]  	6	None	replace
11	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  this.currentOptions.iterator();  [CE]  [FE]            AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Option>  iter  =  this.currentOptions.iterator();  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Iterator  <  Option>  iter  =  this.currentOptions.iterator();	  Iterator    <    Option>    iter    =    currentOptions.iterator();    	non-compiled	[CE]  	5	None	replace
12	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  choices.iterator();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Option>  iter  =  choices.iterator();  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Iterator  <  Option>  iter  =  choices.iterator();	  Iterator    <    Option>    iter    =    currentOptions.iterator();    	non-compiled	[CE]  	5	None	replace
13	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  currentOption.next();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Option>  iter  =  currentOption.next();  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Iterator  <  Option>  iter  =  currentOption.next();	  Iterator    <    Option>    options    =    currentOption.next();    	non-compiled	[CE]  	3	None	replace
14	[BUG]  [BUGGY]  Option  <  Option>  options  =  iter.next();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Option  <  Option>  options  =  iter.next();  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Option  <  Option>  options  =  iter.next();	  Iterator    <    Option>    options    =    currentOption.next();    	non-compiled	[CE]  	3	None	replace
15	[BUG]  [BUGGY]  Iterator  iter  =(this.options!=  null)?  this.options.iterator()  :  null;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Iterator  iter  =(this.options!=  null)?  this.options.iterator()  :  null;  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Iterator  iter  =(this.options!=  null)?  this.options.iterator()  :  null;	  Iterator    iter    =    this.options.iterator();    	non-compiled	[CE]  	10	None	replace
16	[BUG]  [BUGGY]  tokens.add(iter.next(),  iter.clone());  [CE]  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  tokens.add(iter.next(),  iter.clone());  [BUGGY]      }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	tokens.add(iter.next(),  iter.clone());	  tokens.add(iter.next(),    iter.remove());    	non-compiled	[CE]  	22	None	replace
17	[BUG]  [BUGGY]  Iterator  iter  =  this.currentOptions.iterator();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Iterator  iter  =  this.currentOptions.iterator();  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Iterator  iter  =  this.currentOptions.iterator();	  Iterator    iter    =    currentOptions.iterator();    	non-compiled	[CE]  	8	None	replace
18	[BUG]  [BUGGY]  Iterator  iter  =  tokens.iterator();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Iterator  iter  =  tokens.iterator();  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Iterator  iter  =  tokens.iterator();	  Iterator    iter    =    currentOptions.iterator();    	non-compiled	[CE]  	8	None	replace
19	[BUG]  [BUGGY]  tokens.add(iter.next()  +  1,  iter.getValue());  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  tokens.add(iter.next()  +  1,  iter.getValue());  [BUGGY]      }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	tokens.add(iter.next()  +  1,  iter.getValue());	  tokens.add(iter.next()    +    1,    iter.next());    	non-compiled	[CE]  	15	None	replace
20	[BUG]  [BUGGY]  tokens.add(currentOption.next(),  iter.next());  [CE]  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  tokens.add(currentOption.next(),  iter.next());  [BUGGY]      }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	tokens.add(currentOption.next(),  iter.next());	  tokens.add(currentOption.next(),    stopAtNonOption);    	non-compiled	[CE]  	18	None	replace
21	[BUG]  [BUGGY]  tokens.add(currentOption.getValue(),  stopAtNonOption);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  tokens.add(currentOption.getValue(),  stopAtNonOption);  [BUGGY]      }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	tokens.add(currentOption.getValue(),  stopAtNonOption);	  tokens.add(currentOption.next(),    stopAtNonOption);    	non-compiled	[CE]  	18	None	replace
22	[BUG]  [BUGGY]  tokens.add(currentOption.getKey(),  stopAtNonOption);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  tokens.add(currentOption.getKey(),  stopAtNonOption);  [BUGGY]      }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	tokens.add(currentOption.getKey(),  stopAtNonOption);	  tokens.add(currentOption.next(),    stopAtNonOption);    	non-compiled	[CE]  	18	None	replace
23	[BUG]  [BUGGY]  Iterator  <  Option>  options  =  iter.getOptions();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Option>  options  =  iter.getOptions();  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Iterator  <  Option>  options  =  iter.getOptions();	  Iterator    <    Option>    options    =    currentOption.getOptions();    	non-compiled	[CE]  	4	None	replace
24	[BUG]  [BUGGY]  Iterator  <  Option>  options  =  currentOption.getOwnerOptions();  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Option>  options  =  currentOption.getOwnerOptions();  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Iterator  <  Option>  options  =  currentOption.getOwnerOptions();	  Iterator    <    Option>    options    =    currentOption.getOptions();    	non-compiled	[CE]  	4	None	replace
25	[BUG]  [BUGGY]  tokens.add(iter.getValue(),  iter.next());  [CE]  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  tokens.add(iter.getValue(),  iter.next());  [BUGGY]      }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	tokens.add(iter.getValue(),  iter.next());	  tokens.add(iter.getValue());    	non-compiled	[CE]  	19	None	replace
26	[BUG]  [BUGGY]  tokens.add(iter.getKey());  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  tokens.add(iter.getKey());  [BUGGY]      }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	tokens.add(iter.getKey());	  tokens.add(iter.getValue());    	non-compiled	[CE]  	19	None	replace
27	[BUG]  [BUGGY]  tokens.add(iter.getValue()  +  1);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  tokens.add(iter.getValue()  +  1);  [BUGGY]      }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	tokens.add(iter.getValue()  +  1);	  tokens.add(iter.getValue());    	non-compiled	[CE]  	19	None	replace
28	[BUG]  [BUGGY]  tokens.add(iter.next()  +  1,  currentOption);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  tokens.add(iter.next()  +  1,  currentOption);  [BUGGY]      }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	tokens.add(iter.next()  +  1,  currentOption);	  tokens.add(iter.next()    +    1,    stopAtNonOption);    	non-compiled	[CE]  	17	None	replace
29	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =(this.options!=  null)?  this.options.iterator()  :  null;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Option>  iter  =(this.options!=  null)?  this.options.iterator()  :  null;  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Iterator  <  Option>  iter  =(this.options!=  null)?  this.options.iterator()  :  null;	  Iterator    <    Option>    iter    =    this.options.iterator();    	non-compiled	[CE]  	7	None	replace
30	[BUG]  [BUGGY]  gobble(iter.next(),  iter.next());  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  gobble(iter.next(),  iter.next());  [BUGGY]      }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	gobble(iter.next(),  iter.next());	  gobble(iter.next());    	non-compiled	[CE]  	20	None	replace
31	[BUG]  [BUGGY]  gobble(iter.next(),  iter.getValue());  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  gobble(iter.next(),  iter.getValue());  [BUGGY]      }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	gobble(iter.next(),  iter.getValue());	  gobble(iter.next());    	non-compiled	[CE]  	20	None	replace
32	[BUG]  [BUGGY]  gobble(iter.next(),  tokens);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  gobble(iter.next(),  tokens);  [BUGGY]      }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	gobble(iter.next(),  tokens);	  gobble(iter.next());    	non-compiled	[CE]  	20	None	replace
33	[BUG]  [BUGGY]  tokens.add(iter.getNext(),  iter.next());  [CE]  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  tokens.add(iter.getNext(),  iter.next());  [BUGGY]      }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	tokens.add(iter.getNext(),  iter.next());	  tokens.add(iter.getNext());    	non-compiled	[CE]  	12	None	replace
34	[BUG]  [BUGGY]  tokens.add(iter.getKey()  -  1);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  tokens.add(iter.getKey()  -  1);  [BUGGY]      }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	tokens.add(iter.getKey()  -  1);	  tokens.add(iter.getValue()    -    1);    	non-compiled	[CE]  	1	None	replace
35	[BUG]  [BUGGY]  tokens.add(iter.next(),  this.stopAtNonOption);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  tokens.add(iter.next(),  this.stopAtNonOption);  [BUGGY]      }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	tokens.add(iter.next(),  this.stopAtNonOption);	  tokens.add(iter.next(),    currentOption);    	non-compiled	[CE]  	16	None	replace
36	[BUG]  [BUGGY]  tokens.add(iter.next(),  StopAtNonOption);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  tokens.add(iter.next(),  StopAtNonOption);  [BUGGY]      }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	tokens.add(iter.next(),  StopAtNonOption);	  tokens.add(iter.next(),    currentOption);    	non-compiled	[CE]  	16	None	replace
37	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  this.stopAtNonOption.iterator();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Option>  iter  =  this.stopAtNonOption.iterator();  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Iterator  <  Option>  iter  =  this.stopAtNonOption.iterator();	  Iterator    <    Option>    iter    =    currentOption.iterator();    	non-compiled	[CE]  	6	None	replace
38	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  currentOption.getOptions().iterator();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Option>  iter  =  currentOption.getOptions().iterator();  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Iterator  <  Option>  iter  =  currentOption.getOptions().iterator();	  Iterator    <    Option>    iter    =    currentOption.iterator();    	non-compiled	[CE]  	6	None	replace
39	[BUG]  [BUGGY]  Iterator  <  Option>  options  =  this.options.iterator();  [CE]  [FE]            AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Option>  options  =  this.options.iterator();  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Iterator  <  Option>  options  =  this.options.iterator();	  Iterator    <    Option>    options    =    currentOption.iterator();    	non-compiled	[CE]  	2	None	replace
40	[BUG]  [BUGGY]  tokens.add(iter.next(),  null);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  tokens.add(iter.next(),  null);  [BUGGY]      }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	tokens.add(iter.next(),  null);	  tokens.add(iter.next(),    currentOption);    	non-compiled	[CE]  	16	None	replace
41	[BUG]  [BUGGY]  tokens.add(iter.getNext()  -  1);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  tokens.add(iter.getNext()  -  1);  [BUGGY]      }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	tokens.add(iter.getNext()  -  1);	  tokens.add(iter.getNext());    	non-compiled	[CE]  	12	None	replace
42	[BUG]  [BUGGY]  Ilerator  iter  =  options.iterator();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Ilerator  iter  =  options.iterator();  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Ilerator  iter  =  options.iterator();	  Iterator    iter    =    currentOptions.iterator();    	non-compiled	[CE]  	8	None	replace
43	[BUG]  [BUGGY]  tokens.add(iter.next()  +  1,  stopAtNonOption,  options);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  tokens.add(iter.next()  +  1,  stopAtNonOption,  options);  [BUGGY]      }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	tokens.add(iter.next()  +  1,  stopAtNonOption,  options);	  tokens.add(iter.next()    +    1,    stopAtNonOption);    	non-compiled	[CE]  	17	None	replace
44	[BUG]  [BUGGY]  gobble(iter.next(),  iter.cloneTree());  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  gobble(iter.next(),  iter.cloneTree());  [BUGGY]      }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	gobble(iter.next(),  iter.cloneTree());	  gobble(iter.next());    	non-compiled	[CE]  	20	None	replace
45	[BUG]  [BUGGY]  Ilerator  <  Option>  iter  =  options.iterator();  [CE]  [FE]            AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Ilerator  <  Option>  iter  =  options.iterator();  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Ilerator  <  Option>  iter  =  options.iterator();	  Iterator    <    Option>    iter    =    currentOptions.iterator();    	non-compiled	[CE]  	5	None	replace
46	[BUG]  [BUGGY]  Iterator  <  Option>  options  =  currentOption.getOptions(iter.next());  [CE]  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Option>  options  =  currentOption.getOptions(iter.next());  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Iterator  <  Option>  options  =  currentOption.getOptions(iter.next());	  Iterator    <    Option>    options    =    currentOption.getOptions();    	non-compiled	[CE]  	4	None	replace
47	[BUG]  [BUGGY]  Iterator  <  Option>  options  =  currentOption.cloneOptions();  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Option>  options  =  currentOption.cloneOptions();  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Iterator  <  Option>  options  =  currentOption.cloneOptions();	  Iterator    <    Option>    options    =    currentOption.getOptions();    	non-compiled	[CE]  	4	None	replace
48	[BUG]  [BUGGY]  Ilerator  <  Option>  options  =  iter.next();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Ilerator  <  Option>  options  =  iter.next();  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Ilerator  <  Option>  options  =  iter.next();	  Iterator    <    Option>    options    =    currentOption.next();    	non-compiled	[CE]  	3	None	replace
49	[BUG]  [BUGGY]  tokens.add(currentOption.next(),  iter);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  tokens.add(currentOption.next(),  iter);  [BUGGY]      }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	tokens.add(currentOption.next(),  iter);	  tokens.add(currentOption.next(),    stopAtNonOption);    	non-compiled	[CE]  	18	None	replace
50	[BUG]  [BUGGY]  Iterator  iter  =  this.currentOption.options.iterator();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Iterator  iter  =  this.currentOption.options.iterator();  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Iterator  iter  =  this.currentOption.options.iterator();	  Iterator    iter    =    currentOption.options.iterator();    	non-compiled	[CE]  	23	None	replace
51	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  this.currentOption.options.iterator();  [CE]  [FE]            AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Option>  iter  =  this.currentOption.options.iterator();  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Iterator  <  Option>  iter  =  this.currentOption.options.iterator();	  Iterator    <    Option>    iter    =    currentOption.options.iterator();    	non-compiled	[CE]  	24	None	replace
52	[BUG]  [BUGGY]  Iterator  <  Option>  options  =  iter.next().getOptions();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Option>  options  =  iter.next().getOptions();  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Iterator  <  Option>  options  =  iter.next().getOptions();	  Iterator    <    Option>    options    =    currentOption.getOptions();    	non-compiled	[CE]  	4	None	replace
53	[BUG]  [BUGGY]  Iterator  <  Option>  options  =  currentOption.getIterables();  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Option>  options  =  currentOption.getIterables();  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Iterator  <  Option>  options  =  currentOption.getIterables();	  Iterator    <    Option>    options    =    currentOption.getOptions();    	non-compiled	[CE]  	4	None	replace
54	[BUG]  [BUGGY]  tokens.add(currentOption.getKey(),  iter.next());  [CE]  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  tokens.add(currentOption.getKey(),  iter.next());  [BUGGY]      }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	tokens.add(currentOption.getKey(),  iter.next());	  tokens.add(currentOption.next(),    stopAtNonOption);    	non-compiled	[CE]  	18	None	replace
55	[BUG]  [BUGGY]  Iterator  iter  =(this.options!=  null?  this.options.iterator()  :  null);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {  while  (iter.hasNext())  {      [BUGGY]  Iterator  iter  =(this.options!=  null?  this.options.iterator()  :  null);  [BUGGY]      tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.5	172	172	1	replace	Iterator  iter  =(this.options!=  null?  this.options.iterator()  :  null);	  Iterator    iter    =    this.options.iterator();    	non-compiled	[CE]  	10	None	replace
