bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  tokens.add(token);  [CE]  [FE]    AssertionFailedError  [CONTEXT]  {  if  (options.hasOption(token))  {  currentOption  =  options.getOption(token);  tokens.add(token);  }  else  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]  tokens.add(token);  [BUGGY]    [CLASS]  PosixParser  [METHOD]  processOptionToken  [RETURN_TYPE]  void  String  token  boolean  stopAtNonOption  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  token  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.35355339059327373	242	242	1	replace	tokens.add(token);	}  	non-compiled	[CE]  	13	None	replace
2	[BUG]  [BUGGY]  if(stopAtNonOption)  {  tokens.add(token);  }  [CE]  [FE]      AssertionFailedError  [CONTEXT]  {  if  (options.hasOption(token))  {  currentOption  =  options.getOption(token);  tokens.add(token);  }  else  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]  if(stopAtNonOption)  {  tokens.add(token);  }  [BUGGY]    [CLASS]  PosixParser  [METHOD]  processOptionToken  [RETURN_TYPE]  void  String  token  boolean  stopAtNonOption  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  token  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.35355339059327373	242	242	1	replace	if(stopAtNonOption)  {  tokens.add(token);  }	}  	non-compiled	[CE]  	13	None	replace
3	[BUG]  [BUGGY]  if(stopAtNonOption)  {  tokens.add(token);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]        AssertionFailedError  [CONTEXT]  {  if  (options.hasOption(token))  {  currentOption  =  options.getOption(token);  tokens.add(token);  }  else  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]  if(stopAtNonOption)  {  tokens.add(token);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    [CLASS]  PosixParser  [METHOD]  processOptionToken  [RETURN_TYPE]  void  String  token  boolean  stopAtNonOption  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  token  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.35355339059327373	242	242	1	replace	if(stopAtNonOption)  {  tokens.add(token);  }  else  {  throw  new  IllegalArgumentException( " ");  }	}  	non-compiled	[CE]  	13	None	replace
4	[BUG]  [BUGGY]  if(stopAtNonOption)  {  tokens.add(token);  }  else  {  tokens.add(token);  }  [CE]  [FE]          AssertionFailedError  [CONTEXT]  {  if  (options.hasOption(token))  {  currentOption  =  options.getOption(token);  tokens.add(token);  }  else  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]  if(stopAtNonOption)  {  tokens.add(token);  }  else  {  tokens.add(token);  }  [BUGGY]    [CLASS]  PosixParser  [METHOD]  processOptionToken  [RETURN_TYPE]  void  String  token  boolean  stopAtNonOption  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  token  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.35355339059327373	242	242	1	replace	if(stopAtNonOption)  {  tokens.add(token);  }  else  {  tokens.add(token);  }	}  	non-compiled	[CE]  	13	None	replace
5	[BUG]  [BUGGY]    [CE]  [FE]            AssertionFailedError  [CONTEXT]  {  if  (options.hasOption(token))  {  currentOption  =  options.getOption(token);  tokens.add(token);  }  else  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]    [BUGGY]    [CLASS]  PosixParser  [METHOD]  processOptionToken  [RETURN_TYPE]  void  String  token  boolean  stopAtNonOption  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  token  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.35355339059327373	242	242	1	replace	  	}  	non-compiled	[CE]  	13	None	replace
6	[BUG]  [BUGGY]    if(stopAtNonOption)  {  tokens.add(token);  }  else  {  stopAtNonOption  =  true;  }  [CE]  [FE]    AssertionFailedError  [CONTEXT]  {  if  (options.hasOption(token))  {  currentOption  =  options.getOption(token);  tokens.add(token);  }  else  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]    if(stopAtNonOption)  {  tokens.add(token);  }  else  {  stopAtNonOption  =  true;  }  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  processOptionToken  [RETURN_TYPE]  void  String  token  boolean  stopAtNonOption  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  token  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.35355339059327373	242	242	1	replace	    if(stopAtNonOption)  {  tokens.add(token);  }  else  {  stopAtNonOption  =  true;  }		non-compiled	[CE]  	14	None	add
7	[BUG]  [BUGGY]  if(stopAtNonOption)  {  currentOption  =  options.getOption(token);  tokens.add(token);  }  [CE]  [FE]    AssertionFailedError  [CONTEXT]  {  if  (options.hasOption(token))  {  currentOption  =  options.getOption(token);  tokens.add(token);  }  else  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]  if(stopAtNonOption)  {  currentOption  =  options.getOption(token);  tokens.add(token);  }  [BUGGY]    [CLASS]  PosixParser  [METHOD]  processOptionToken  [RETURN_TYPE]  void  String  token  boolean  stopAtNonOption  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  token  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.35355339059327373	242	242	1	replace	if(stopAtNonOption)  {  currentOption  =  options.getOption(token);  tokens.add(token);  }	}  	non-compiled	[CE]  	13	None	replace
8	[BUG]  [BUGGY]    tokens.add(token);  eatTheRest  =  stopAtNonOption;  [CE]  [FE]    AssertionFailedError  [CONTEXT]  {  if  (options.hasOption(token))  {  currentOption  =  options.getOption(token);  tokens.add(token);  }  else  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]    tokens.add(token);  eatTheRest  =  stopAtNonOption;  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  processOptionToken  [RETURN_TYPE]  void  String  token  boolean  stopAtNonOption  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  token  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.35355339059327373	242	242	1	replace	    tokens.add(token);  eatTheRest  =  stopAtNonOption;		non-compiled	[CE]  	14	None	add
9	[BUG]  [BUGGY]    if(stopAtNonOption)  {  tokens.add(token);  continue;  }  [CE]  [FE]      AssertionFailedError  [CONTEXT]  {  if  (options.hasOption(token))  {  currentOption  =  options.getOption(token);  tokens.add(token);  }  else  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]    if(stopAtNonOption)  {  tokens.add(token);  continue;  }  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  processOptionToken  [RETURN_TYPE]  void  String  token  boolean  stopAtNonOption  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  token  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.35355339059327373	242	242	1	replace	    if(stopAtNonOption)  {  tokens.add(token);  continue;  }		non-compiled	[CE]  	14	None	add
10	[BUG]  [BUGGY]    tokens.add(token);  currentOption  =  options.getOption(token);  [CE]  [FE]    AssertionFailedError  [CONTEXT]  {  if  (options.hasOption(token))  {  currentOption  =  options.getOption(token);  tokens.add(token);  }  else  if  (stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]    tokens.add(token);  currentOption  =  options.getOption(token);  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  processOptionToken  [RETURN_TYPE]  void  String  token  boolean  stopAtNonOption  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  token  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.35355339059327373	242	242	1	replace	    tokens.add(token);  currentOption  =  options.getOption(token);		non-compiled	[CE]  	14	None	add
