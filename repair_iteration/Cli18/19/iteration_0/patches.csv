bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(stopAtNonOption)  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();    [BUGGY]  if(stopAtNonOption)  {  [BUGGY]  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  {  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	112	113	1	replace	if(stopAtNonOption)  {	if  (token.startsWith( "-- "))  {  	non-compiled	[CE]  <identifier>  expected	38	None	replace
2	[BUG]  [BUGGY]  if(stopAtNonOption  ||  token.startsWith( "-- "))  {  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();    [BUGGY]  if(stopAtNonOption  ||  token.startsWith( "-- "))  {  [BUGGY]  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  {  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	112	113	1	replace	if(stopAtNonOption  ||  token.startsWith( "-- "))  {	if  (token.startsWith( "-- "))  {  	non-compiled	[CE]  <identifier>  expected	38	None	replace
3	[BUG]  [BUGGY]  if(token.startsWith( "-- ")||  token.startsWith( "-- "))  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();    [BUGGY]  if(token.startsWith( "-- ")||  token.startsWith( "-- "))  {  [BUGGY]  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  {  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	112	113	1	replace	if(token.startsWith( "-- ")||  token.startsWith( "-- "))  {	if  (token.startsWith( "-- "))  {  	non-compiled	[CE]  <identifier>  expected	38	None	replace
4	[BUG]  [BUGGY]  if(token.startsWith( "- ")||  token.startsWith( "-- "))  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();    [BUGGY]  if(token.startsWith( "- ")||  token.startsWith( "-- "))  {  [BUGGY]  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  {  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	112	113	1	replace	if(token.startsWith( "- ")||  token.startsWith( "-- "))  {	if  (token.startsWith( "-- "))  {  	non-compiled	[CE]  <identifier>  expected	38	None	replace
5	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();    [BUGGY]    [BUGGY]  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  {  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	112	113	1	replace	  	if  (token.startsWith( "-- "))  {  	non-compiled	[CE]  <identifier>  expected	38	None	replace
6	[BUG]  [BUGGY]    tokens.add(token);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();    [BUGGY]    tokens.add(token);  [BUGGY]  if  (token.startsWith( "-- "))    {  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  {  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	112	113	1	replace	    tokens.add(token);		non-compiled	[CE]  <identifier>  expected	39	None	add
7	[BUG]  [BUGGY]    tokens  =(String[])iter.next();  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();    [BUGGY]    tokens  =(String[])iter.next();  [BUGGY]  if  (token.startsWith( "-- "))    {  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  {  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	112	113	1	replace	    tokens  =(String[])iter.next();		non-compiled	[CE]  <identifier>  expected	39	None	add
8	[BUG]  [BUGGY]    token  =(String)iter.next();  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();    [BUGGY]    token  =(String)iter.next();  [BUGGY]  if  (token.startsWith( "-- "))    {  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  {  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	112	113	1	replace	    token  =(String)iter.next();		non-compiled	[CE]  <identifier>  expected	39	None	add
9	[BUG]  [BUGGY]    Iterator  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();    [BUGGY]    Iterator  iter  =  arguments.iterator();  [BUGGY]  if  (token.startsWith( "-- "))    {  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  {  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	112	113	1	replace	    Iterator  iter  =  arguments.iterator();		non-compiled	[CE]  <identifier>  expected	39	None	add
10	[BUG]  [BUGGY]    tokens.add( "-- ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();    [BUGGY]    tokens.add( "-- ");  [BUGGY]  if  (token.startsWith( "-- "))    {  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  {  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	112	113	1	replace	    tokens.add( "-- ");		non-compiled	[CE]  <identifier>  expected	39	None	add
11	[BUG]  [BUGGY]  if(token.startsWith( "-- ")||  token.startsWith( "--))  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();    [BUGGY]  if(token.startsWith( "-- ")||  token.startsWith( "--))  {  [BUGGY]  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  {  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	112	113	1	replace	if(token.startsWith( "-- ")||  token.startsWith( "--))  {	if  (token.startsWith( "-- "))  {  	non-compiled	[CE]  <identifier>  expected	38	None	replace
12	[BUG]  [BUGGY]    Iterator  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();    [BUGGY]    Iterator  iter  =  options.iterator();  [BUGGY]  if  (token.startsWith( "-- "))    {  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  {  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	112	113	1	replace	    Iterator  iter  =  options.iterator();		non-compiled	[CE]  <identifier>  expected	39	None	add
13	[BUG]  [BUGGY]    Iterator  iter  =  tokens.iterator();  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();    [BUGGY]    Iterator  iter  =  tokens.iterator();  [BUGGY]  if  (token.startsWith( "-- "))    {  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  {  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	112	113	1	replace	    Iterator  iter  =  tokens.iterator();		non-compiled	[CE]  <identifier>  expected	39	None	add
14	[BUG]  [BUGGY]    Iterator  <  String>  tokens  =  iter.next();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();    [BUGGY]    Iterator  <  String>  tokens  =  iter.next();  [BUGGY]  if  (token.startsWith( "-- "))    {  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  {  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	112	113	1	replace	    Iterator  <  String>  tokens  =  iter.next();		non-compiled	[CE]  <identifier>  expected	39	None	add
15	[BUG]  [BUGGY]    Iterator  <  String>  tokens  =(Iterator  <  String>)iter.next();  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();    [BUGGY]    Iterator  <  String>  tokens  =(Iterator  <  String>)iter.next();  [BUGGY]  if  (token.startsWith( "-- "))    {  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  {  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	112	113	1	replace	    Iterator  <  String>  tokens  =(Iterator  <  String>)iter.next();		non-compiled	[CE]  <identifier>  expected	39	None	add
16	[BUG]  [BUGGY]  if(token.startsWith( "- "))  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();    [BUGGY]  if(token.startsWith( "- "))  {  [BUGGY]  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  {  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	112	113	1	replace	if(token.startsWith( "- "))  {	if  (token.startsWith( "-- "))  {  	non-compiled	[CE]  <identifier>  expected	38	None	replace
