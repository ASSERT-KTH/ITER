bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  currentOptions.iterator();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  <  Option>  iter  =  currentOptions.iterator();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  iter  =  currentOptions.iterator();	      Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
2	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  currentOption.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  <  Option>  iter  =  currentOption.iterator();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  iter  =  currentOption.iterator();	      Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
3	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  <  Option>  iter  =  this.options.iterator();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  iter  =  this.options.iterator();	      Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
4	[BUG]  [BUGGY]  Iterator  iter  =  currentOptions.iterator();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  iter  =  currentOptions.iterator();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =  currentOptions.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
5	[BUG]  [BUGGY]  Iterator  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  iter  =  this.options.iterator();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =  this.options.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
6	[BUG]  [BUGGY]  Iterator  iter  =  currentOption.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  iter  =  currentOption.iterator();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =  currentOption.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
7	[BUG]  [BUGGY]  if(stopAtNonOption  &&  stopAtNonOption)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  if(stopAtNonOption  &&  stopAtNonOption)  {  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(stopAtNonOption  &&  stopAtNonOption)  {	  if(stopAtNonOption    ||    stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
8	[BUG]  [BUGGY]  if(stopAtNonOption  ||  currentOption)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  if(stopAtNonOption  ||  currentOption)  {  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(stopAtNonOption  ||  currentOption)  {	  if(stopAtNonOption    ||    stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
9	[BUG]  [BUGGY]  if(eatTheRest  ||  stopAtNonOption)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  if(eatTheRest  ||  stopAtNonOption)  {  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(eatTheRest  ||  stopAtNonOption)  {	  if(stopAtNonOption    ||    stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
10	[BUG]  [BUGGY]  if(stopAtNonOption  ||  currentOption.isEmpty())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  if(stopAtNonOption  ||  currentOption.isEmpty())  {  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(stopAtNonOption  ||  currentOption.isEmpty())  {	  if(stopAtNonOption    ||    stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
11	[BUG]  [BUGGY]  if(!eatTheRest)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  if(!eatTheRest)  {  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(!eatTheRest)  {	  if(stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
12	[BUG]  [BUGGY]  if(stopAtNonOption  &&  iter.hasNext())  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  if(stopAtNonOption  &&  iter.hasNext())  {  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(stopAtNonOption  &&  iter.hasNext())  {	  if(stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
13	[BUG]  [BUGGY]  if(!stopTheRest)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  if(!stopTheRest)  {  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(!stopTheRest)  {	  if(!stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
14	[BUG]  [BUGGY]  if(!stopAtNonOption  &&  iter.hasNext())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  if(!stopAtNonOption  &&  iter.hasNext())  {  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(!stopAtNonOption  &&  iter.hasNext())  {	  if(!stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
15	[BUG]  [BUGGY]  if(stopAtNonOption  ||  currentOption!=  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  if(stopAtNonOption  ||  currentOption!=  null)  {  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(stopAtNonOption  ||  currentOption!=  null)  {	  if(!stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
16	[BUG]  [BUGGY]  Iterator  <  Object>  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  <  Object>  iter  =  options.iterator();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Object>  iter  =  options.iterator();	      iter.remove();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
17	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  currentOption.iterator();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  <  Option>  tokens  =  currentOption.iterator();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  currentOption.iterator();	      Iterator    <    Option>    tokens    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
18	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  currentOptions.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  <  Option>  tokens  =  currentOptions.iterator();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  currentOptions.iterator();	      Iterator    <    Option>    tokens    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
19	[BUG]  [BUGGY]  Iterator  iter  =  currentOptions.iterator();  tokens.add(iter.next());  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  iter  =  currentOptions.iterator();  tokens.add(iter.next());  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =  currentOptions.iterator();  tokens.add(iter.next());	      Iterator    iter    =    options.iterator();    tokens.add(iter.next());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
20	[BUG]  [BUGGY]  tokens.add(iter.next());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  tokens.add(iter.next());  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	tokens.add(iter.next());	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
21	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  iter.getOptions();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  <  Option>  tokens  =  iter.getOptions();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  iter.getOptions();	      Iterator    <    Option>    tokens    =    currentOption.getOptions();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
22	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  currentOption.getOwnerOptions();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  <  Option>  tokens  =  currentOption.getOwnerOptions();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  currentOption.getOwnerOptions();	      Iterator    <    Option>    tokens    =    currentOption.getOptions();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
23	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  iter.next();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  <  Option>  tokens  =  iter.next();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  iter.next();	      Iterator    <    Option>    tokens    =    currentOption.getOptions();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
24	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  currentOption.getOwnOptions();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  <  Option>  tokens  =  currentOption.getOwnOptions();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  currentOption.getOwnOptions();	      Iterator    <    Option>    tokens    =    currentOption.getOptions();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
25	[BUG]  [BUGGY]  Iterator  iter  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  iter  =  options.keySet().iterator();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =  options.keySet().iterator();	      Iterator    iter    =    options.entrySet().iterator();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
26	[BUG]  [BUGGY]  Iterator  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  iter  =  options.values().iterator();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =  options.values().iterator();	      Iterator    iter    =    options.entrySet().iterator();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
27	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  <  Option>  iter  =  options.keySet().iterator();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  iter  =  options.keySet().iterator();	      Iterator    <    Option>    iter    =    options.entrySet().iterator();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
28	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  <  Option>  iter  =  options.values().iterator();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  iter  =  options.values().iterator();	      Iterator    <    Option>    iter    =    options.entrySet().iterator();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
29	[BUG]  [BUGGY]  Iterator  iter  =  this.currentOption.getOptions().iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  iter  =  this.currentOption.getOptions().iterator();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =  this.currentOption.getOptions().iterator();	      Iterator    iter    =    currentOption.getOptions().iterator();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
30	[BUG]  [BUGGY]  Iterator  iter  =  currentOption.getIterables().iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  iter  =  currentOption.getIterables().iterator();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =  currentOption.getIterables().iterator();	      Iterator    iter    =    currentOption.getOptions().iterator();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
31	[BUG]  [BUGGY]  if(stopAtNonOption  &&  eatTheRest)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  if(stopAtNonOption  &&  eatTheRest)  {  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(stopAtNonOption  &&  eatTheRest)  {	  if(stopAtNonOption    ||    eatTheRest)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
32	[BUG]  [BUGGY]  if(stopAtNonOption  ||  iter.hasNext())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  if(stopAtNonOption  ||  iter.hasNext())  {  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(stopAtNonOption  ||  iter.hasNext())  {	  if(stopAtNonOption    ||    eatTheRest)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
33	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  options.getOptions();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  <  Option>  tokens  =  options.getOptions();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  options.getOptions();	      Iterator    <    Option>    tokens    =    currentOption.getOptions();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
34	[BUG]  [BUGGY]  if(!eatTheRest  &&  stopAtNonOption)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  if(!eatTheRest  &&  stopAtNonOption)  {  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(!eatTheRest  &&  stopAtNonOption)  {	  if(stopAtNonOption    ||    stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
35	[BUG]  [BUGGY]  if(!stopAtNonOption  &&  currentOption!=  null)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  if(!stopAtNonOption  &&  currentOption!=  null)  {  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(!stopAtNonOption  &&  currentOption!=  null)  {	  if(!stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
36	[BUG]  [BUGGY]  if(stopAtNonOption  &&  currentOption!=  null)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  if(stopAtNonOption  &&  currentOption!=  null)  {  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(stopAtNonOption  &&  currentOption!=  null)  {	  if(!stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
37	[BUG]  [BUGGY]  Iterator  iter  =  currentOption.options.iterator();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  iter  =  currentOption.options.iterator();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =  currentOption.options.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
38	[BUG]  [BUGGY]  tokens.add(iter.getValue());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  tokens.add(iter.getValue());  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	tokens.add(iter.getValue());	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
39	[BUG]  [BUGGY]  iter.next();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  iter.next();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	iter.next();	      iter.remove();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
40	[BUG]  [BUGGY]  iter.clear();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  iter.clear();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	iter.clear();	      iter.remove();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
41	[BUG]  [BUGGY]  Iterator  iter  =  options.getOptions().iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  iter  =  options.getOptions().iterator();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =  options.getOptions().iterator();	      Iterator    iter    =    currentOption.getOptions().iterator();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
42	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  iter.options.iterator();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  <  Option>  tokens  =  iter.options.iterator();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  iter.options.iterator();	      Iterator    <    Option>    tokens    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
43	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  <  Option>  tokens  =  options.keySet().iterator();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  options.keySet().iterator();	      Iterator    <    Option>    tokens    =    iter.iterator();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
44	[BUG]  [BUGGY]  if(stopAtNonOption  ||  currentOption  ==  null)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  if(stopAtNonOption  ||  currentOption  ==  null)  {  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(stopAtNonOption  ||  currentOption  ==  null)  {	  if(!stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
45	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  options.iterator();  tokens.add(iter.next());  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  <  Option>  iter  =  options.iterator();  tokens.add(iter.next());  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  iter  =  options.iterator();  tokens.add(iter.next());	      Iterator    iter    =    options.iterator();    tokens.add(iter.next());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
46	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  currentOption.getOptions();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  <  Option>  iter  =  currentOption.getOptions();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  iter  =  currentOption.getOptions();	      Iterator    <    Option>    tokens    =    currentOption.getOptions();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
47	[BUG]  [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption  ||  currentOption!=  null)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption  ||  currentOption!=  null)  {  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(stopAtNonOption  ||  stopAtNonOption  ||  currentOption!=  null)  {	  if(stopAtNonOption    ||    stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
48	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  iter.options();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  <  Option>  tokens  =  iter.options();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  iter.options();	      Iterator    <    Option>    tokens    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
49	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =(options  ==  null)?  options.iterator()  :  null;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  <  Option>  tokens  =(options  ==  null)?  options.iterator()  :  null;  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =(options  ==  null)?  options.iterator()  :  null;	      Iterator    <    Option>    tokens    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
