bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(eatTheRest  &&  stopAtNonOption)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(eatTheRest  &&  stopAtNonOption)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(eatTheRest  &&  stopAtNonOption)  {	  if(stopAtNonOption    &&    stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
2	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  iter.getOwnOptions();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  tokens  =  iter.getOwnOptions();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  iter.getOwnOptions();	  Iterator    <    Option>    tokens    =    currentOption.getOwnOptions();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
3	[BUG]  [BUGGY]  if(!stopAtNonOption  &&  iter!=  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(!stopAtNonOption  &&  iter!=  null)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(!stopAtNonOption  &&  iter!=  null)  {	  if(!stopAtNonOption    &&    currentOption!=    null)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
4	[BUG]  [BUGGY]  if(!stopAtNonOption  &&  currentOption!=  null  &&  iter.hasNext())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(!stopAtNonOption  &&  currentOption!=  null  &&  iter.hasNext())  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(!stopAtNonOption  &&  currentOption!=  null  &&  iter.hasNext())  {	  if(!stopAtNonOption    &&    currentOption!=    null)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
5	[BUG]  [BUGGY]  if(stopAtNonOption  &&  iter.next())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(stopAtNonOption  &&  iter.next())  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(stopAtNonOption  &&  iter.next())  {	  if(stopAtNonOption    &&    eatTheRest)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
6	[BUG]  [BUGGY]  Iterator  iter  =(this.options!=  null)?  this.options.iterator()  :  null;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  iter  =(this.options!=  null)?  this.options.iterator()  :  null;  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =(this.options!=  null)?  this.options.iterator()  :  null;	  Iterator    iter    =    this.options.iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
7	[BUG]  [BUGGY]  if(stopAtNonOption  ||!stopTheRest)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(stopAtNonOption  ||!stopTheRest)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(stopAtNonOption  ||!stopTheRest)  {	  if(!stopTheRest)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
8	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  currentOptions.iterator();  tokens.add(iter.next());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  iter  =  currentOptions.iterator();  tokens.add(iter.next());  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  iter  =  currentOptions.iterator();  tokens.add(iter.next());	  Iterator    <    Option>    iter    =    options.iterator();    tokens.add(iter.next());    	non-compiled	[CE]  <identifier>  expected	45	None	replace
9	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  currentOption.iterator();  tokens.add(iter.next());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  iter  =  currentOption.iterator();  tokens.add(iter.next());  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  iter  =  currentOption.iterator();  tokens.add(iter.next());	  Iterator    <    Option>    iter    =    options.iterator();    tokens.add(iter.next());    	non-compiled	[CE]  <identifier>  expected	45	None	replace
10	[BUG]  [BUGGY]  if(currentOption  ||  stopAtNonOption)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(currentOption  ||  stopAtNonOption)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(currentOption  ||  stopAtNonOption)  {	  if(eatTheRest    ||    stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
11	[BUG]  [BUGGY]  if(!stopAtNonOption  ||  eatTheRest)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(!stopAtNonOption  ||  eatTheRest)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(!stopAtNonOption  ||  eatTheRest)  {	  if(eatTheRest    ||    stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
12	[BUG]  [BUGGY]  if(stopAtNonOption  ||  iter!=  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(stopAtNonOption  ||  iter!=  null)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(stopAtNonOption  ||  iter!=  null)  {	  if(stopAtNonOption    ||    currentOption!=    null)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
13	[BUG]  [BUGGY]  if(stopAtNonOption  ||  iter  ==  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(stopAtNonOption  ||  iter  ==  null)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(stopAtNonOption  ||  iter  ==  null)  {	  if(stopAtNonOption    ||    currentOption!=    null)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
14	[BUG]  [BUGGY]  if(stopAtNonOption  &&  currentOption.isEmpty())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(stopAtNonOption  &&  currentOption.isEmpty())  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(stopAtNonOption  &&  currentOption.isEmpty())  {	  if(stopAtNonOption    ||    currentOption.isEmpty())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
15	[BUG]  [BUGGY]  if(!stopAtNonOption  &&  currentOption.isEmpty())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(!stopAtNonOption  &&  currentOption.isEmpty())  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(!stopAtNonOption  &&  currentOption.isEmpty())  {	  if(stopAtNonOption    ||    currentOption.isEmpty())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
16	[BUG]  [BUGGY]  if(stopAtNonOption  ||  iter.isEmpty())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(stopAtNonOption  ||  iter.isEmpty())  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(stopAtNonOption  ||  iter.isEmpty())  {	  if(stopAtNonOption    ||    currentOption.isEmpty())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
17	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =(this.options!=  null)?  this.options.iterator()  :  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  iter  =(this.options!=  null)?  this.options.iterator()  :  null;  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  iter  =(this.options!=  null)?  this.options.iterator()  :  null;	  Iterator    <    Option>    iter    =    this.options.iterator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
18	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  this.stopAtNonOption.iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  iter  =  this.stopAtNonOption.iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  iter  =  this.stopAtNonOption.iterator();	  Iterator    <    Option>    iter    =    currentOption.iterator();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
19	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  this.currentOption.iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  iter  =  this.currentOption.iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  iter  =  this.currentOption.iterator();	  Iterator    <    Option>    iter    =    currentOption.iterator();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
20	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  iter.getOwnerOptions();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  tokens  =  iter.getOwnerOptions();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  iter.getOwnerOptions();	  Iterator    <    Option>    tokens    =    currentOption.getOwnerOptions();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
21	[BUG]  [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption  ||  currentOption  ==  null)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption  ||  currentOption  ==  null)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(stopAtNonOption  ||  stopAtNonOption  ||  currentOption  ==  null)  {	  if(stopAtNonOption    ||    stopAtNonOption    ||    currentOption!=    null)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
22	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  options.keySet();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  tokens  =  options.keySet();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  options.keySet();	  Iterator    <    Option>    tokens    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
23	[BUG]  [BUGGY]  if(stopAtNonOption  &&  currentOption)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(stopAtNonOption  &&  currentOption)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(stopAtNonOption  &&  currentOption)  {	  if(stopAtNonOption    ||    currentOption)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
24	[BUG]  [BUGGY]  if(eatTheRest  ||  currentOption)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(eatTheRest  ||  currentOption)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(eatTheRest  ||  currentOption)  {	  if(stopAtNonOption    ||    currentOption)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
25	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  iter.keySet().iterator();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  tokens  =  iter.keySet().iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  iter.keySet().iterator();	  Iterator    <    Option>    tokens    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
26	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  currentOption.keySet().iterator();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  tokens  =  currentOption.keySet().iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  currentOption.keySet().iterator();	  Iterator    <    Option>    tokens    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
27	[BUG]  [BUGGY]  if(stopAtNonOption  &&  currentOption  ==  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(stopAtNonOption  &&  currentOption  ==  null)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(stopAtNonOption  &&  currentOption  ==  null)  {	  if(stopAtNonOption    ||    currentOption    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
28	[BUG]  [BUGGY]  if(!eatTheRest  &&  stopAtNonOption  &&  iter.hasNext())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(!eatTheRest  &&  stopAtNonOption  &&  iter.hasNext())  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(!eatTheRest  &&  stopAtNonOption  &&  iter.hasNext())  {	  if(stopAtNonOption    &&    iter.hasNext())    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
29	[BUG]  [BUGGY]  if(eatTheRest  &&  iter.hasNext())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(eatTheRest  &&  iter.hasNext())  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(eatTheRest  &&  iter.hasNext())  {	  if(stopAtNonOption    &&    iter.hasNext())    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
30	[BUG]  [BUGGY]  tokens.add(iter.getKey());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  tokens.add(iter.getKey());  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	tokens.add(iter.getKey());	  tokens.add(iter.getValue());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
31	[BUG]  [BUGGY]  tokens.add(iter.getValue()  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  tokens.add(iter.getValue()  +  1);  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	tokens.add(iter.getValue()  +  1);	  tokens.add(iter.getValue());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
32	[BUG]  [BUGGY]  Iterator  iter  =  tokens.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  iter  =  tokens.iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =  tokens.iterator();	  Iterator    iter    =    currentOption.options.iterator();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
33	[BUG]  [BUGGY]  if(stopAtNonOption  &&!eatTheRest)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(stopAtNonOption  &&!eatTheRest)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(stopAtNonOption  &&!eatTheRest)  {	  if(!eatTheRest    &&    stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
34	[BUG]  [BUGGY]  if(!stopAtNonOption  &&  eatTheRest)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(!stopAtNonOption  &&  eatTheRest)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(!stopAtNonOption  &&  eatTheRest)  {	  if(!eatTheRest    &&    stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
35	[BUG]  [BUGGY]  if(!stopAtNonOption  &&!eatTheRest)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(!stopAtNonOption  &&!eatTheRest)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(!stopAtNonOption  &&!eatTheRest)  {	  if(!eatTheRest    &&    stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
36	[BUG]  [BUGGY]  if(!stopAtNonOption  &&  stopTheRest)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(!stopAtNonOption  &&  stopTheRest)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(!stopAtNonOption  &&  stopTheRest)  {	  if(!eatTheRest    &&    stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
37	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  currentOption.next();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  tokens  =  currentOption.next();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  currentOption.next();	  Iterator    <    Option>    tokens    =    iter.next();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
38	[BUG]  [BUGGY]  Iterator  iter  =  this.currentOption.getIterables().iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  iter  =  this.currentOption.getIterables().iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =  this.currentOption.getIterables().iterator();	  Iterator    iter    =    currentOption.getIterables().iterator();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
39	[BUG]  [BUGGY]  Iterator  iter  =  iter.getIterables().iterator();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  iter  =  iter.getIterables().iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =  iter.getIterables().iterator();	  Iterator    iter    =    currentOption.getIterables().iterator();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
40	[BUG]  [BUGGY]  Ilerator  <  Option>  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Ilerator  <  Option>  iter  =  options.iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Ilerator  <  Option>  iter  =  options.iterator();	  Iterator    <    Option>    iter    =    currentOptions.iterator();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
41	[BUG]  [BUGGY]  List  <  Option>  iter  =  currentOptions.iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  List  <  Option>  iter  =  currentOptions.iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	List  <  Option>  iter  =  currentOptions.iterator();	  Iterator    <    Option>    iter    =    currentOptions.iterator();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
42	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  choices.iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  iter  =  choices.iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  iter  =  choices.iterator();	  Iterator    <    Option>    iter    =    currentOptions.iterator();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
43	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  iter.getOptions();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  iter  =  iter.getOptions();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  iter  =  iter.getOptions();	  Iterator    <    Option>    iter    =    currentOption.getOptions();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
44	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  options.getOptions();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  iter  =  options.getOptions();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  iter  =  options.getOptions();	  Iterator    <    Option>    iter    =    currentOption.getOptions();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
45	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  currentOption.getIterables();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  iter  =  currentOption.getIterables();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  iter  =  currentOption.getIterables();	  Iterator    <    Option>    iter    =    currentOption.getOptions();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
46	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  currentOption.options();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  tokens  =  currentOption.options();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  currentOption.options();	  Iterator    <    Option>    tokens    =    iter.options();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
47	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =(options  ==  null)?  options.iterator()  :  iter;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  tokens  =(options  ==  null)?  options.iterator()  :  iter;  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =(options  ==  null)?  options.iterator()  :  iter;	  Iterator    <    Option>    tokens    =(options    ==    null)?    options.iterator()    :    null;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
48	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =(iter  ==  null)?  options.iterator()  :  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  tokens  =(iter  ==  null)?  options.iterator()  :  null;  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =(iter  ==  null)?  options.iterator()  :  null;	  Iterator    <    Option>    tokens    =(options    ==    null)?    options.iterator()    :    null;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
49	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =(options  ==  null)?  iter.iterator()  :  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  tokens  =(options  ==  null)?  iter.iterator()  :  null;  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =(options  ==  null)?  iter.iterator()  :  null;	  Iterator    <    Option>    tokens    =(options    ==    null)?    options.iterator()    :    null;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
50	[BUG]  [BUGGY]  if(eatTheRest  ||  iter.hasNext())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(eatTheRest  ||  iter.hasNext())  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(eatTheRest  ||  iter.hasNext())  {	  if(stopAtNonOption    ||    iter.hasNext())    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
51	[BUG]  [BUGGY]  Iterator  iter  =(this.currentOption!=  null)?  this.currentOption.getOptions().iterator()  :  iter;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  iter  =(this.currentOption!=  null)?  this.currentOption.getOptions().iterator()  :  iter;  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =(this.currentOption!=  null)?  this.currentOption.getOptions().iterator()  :  iter;	  Iterator    iter    =    this.currentOption.getOptions().iterator();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
52	[BUG]  [BUGGY]  if(stopAtNonOption  &&  iter!=  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(stopAtNonOption  &&  iter!=  null)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(stopAtNonOption  &&  iter!=  null)  {	  if(stopAtNonOption    &&    currentOption!=    null)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
53	[BUG]  [BUGGY]  Iterator  iter  =  options.getIterables().iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  iter  =  options.getIterables().iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =  options.getIterables().iterator();	  Iterator    iter    =    options.getOptions().iterator();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
54	[BUG]  [BUGGY]  Iterator  iter  =  options.getIterableOptions().iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  iter  =  options.getIterableOptions().iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =  options.getIterableOptions().iterator();	  Iterator    iter    =    options.getOptions().iterator();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
55	[BUG]  [BUGGY]  if(stopAtNonOption  ||!eatTheRest)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(stopAtNonOption  ||!eatTheRest)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(stopAtNonOption  ||!eatTheRest)  {	  if(!eatTheRest)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
56	[BUG]  [BUGGY]  Iterator  iter  =  this.currentOption.iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  iter  =  this.currentOption.iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =  this.currentOption.iterator();	  Iterator    iter    =    currentOption.iterator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
57	[BUG]  [BUGGY]  Iterator  iter  =  this.currentOptions.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  iter  =  this.currentOptions.iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =  this.currentOptions.iterator();	  Iterator    iter    =    currentOptions.iterator();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
58	[BUG]  [BUGGY]  if(!eatTheRest  &&  iter.hasNext())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(!eatTheRest  &&  iter.hasNext())  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(!eatTheRest  &&  iter.hasNext())  {	  if(!stopAtNonOption    &&    iter.hasNext())    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
59	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  currentOption.options.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  tokens  =  currentOption.options.iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  currentOption.options.iterator();	  Iterator    <    Option>    tokens    =    iter.options.iterator();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
60	[BUG]  [BUGGY]  Iterator  <  Object>  iter  =  currentOptions.iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Object>  iter  =  currentOptions.iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Object>  iter  =  currentOptions.iterator();	  Iterator    <    Object>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
61	[BUG]  [BUGGY]  Iterator  <  Object>  iter  =  currentOption.iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Object>  iter  =  currentOption.iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Object>  iter  =  currentOption.iterator();	  Iterator    <    Object>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
62	[BUG]  [BUGGY]  Iterator  <  Object>  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Object>  iter  =  this.options.iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Object>  iter  =  this.options.iterator();	  Iterator    <    Object>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
63	[BUG]  [BUGGY]  tokens.add(iter.next()  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  tokens.add(iter.next()  +  1);  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	tokens.add(iter.next()  +  1);	  tokens.add(iter.next());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
64	[BUG]  [BUGGY]  tokens.add(iter.next(),  iter.clone());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  tokens.add(iter.next(),  iter.clone());  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	tokens.add(iter.next(),  iter.clone());	  tokens.add(iter.next());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
65	[BUG]  [BUGGY]  if(!eatTheRest  &&  currentOption)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(!eatTheRest  &&  currentOption)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(!eatTheRest  &&  currentOption)  {	  if(!eatTheRest    &&    stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
66	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  options.get(currentOption);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  tokens  =  options.get(currentOption);  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  options.get(currentOption);	  Iterator    <    Option>    tokens    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
67	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  options.getOptions(iter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  tokens  =  options.getOptions(iter);  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  options.getOptions(iter);	  Iterator    <    Option>    tokens    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
68	[BUG]  [BUGGY]  Iterator  iter  =  currentOption.values().iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  iter  =  currentOption.values().iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =  currentOption.values().iterator();	  Iterator    iter    =    options.values().iterator();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
69	[BUG]  [BUGGY]  Ilerator  <  Option>  iter  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Ilerator  <  Option>  iter  =  options.keySet().iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Ilerator  <  Option>  iter  =  options.keySet().iterator();	  Iterator    <    Option>    iter    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
70	[BUG]  [BUGGY]  Ilerator  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Ilerator  iter  =  options.iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Ilerator  iter  =  options.iterator();	  Iterator    iter    =    currentOptions.iterator();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
71	[BUG]  [BUGGY]  if(!stopAtNonOption  &&  iter  ==  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(!stopAtNonOption  &&  iter  ==  null)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(!stopAtNonOption  &&  iter  ==  null)  {	  if(!stopAtNonOption    &&    currentOption!=    null)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
72	[BUG]  [BUGGY]  Iterator  iter  =  options.getOptionIterator().iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  iter  =  options.getOptionIterator().iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =  options.getOptionIterator().iterator();	  Iterator    iter    =    options.getOptions().iterator();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
73	[BUG]  [BUGGY]  if(eatTheRest  ||  currentOption.isEmpty())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(eatTheRest  ||  currentOption.isEmpty())  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(eatTheRest  ||  currentOption.isEmpty())  {	  if(stopAtNonOption    ||    currentOption.isEmpty())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
74	[BUG]  [BUGGY]  if(!eatTheRest  &&  stopAtNonOption  &&  currentOption.isEmpty())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(!eatTheRest  &&  stopAtNonOption  &&  currentOption.isEmpty())  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(!eatTheRest  &&  stopAtNonOption  &&  currentOption.isEmpty())  {	  if(stopAtNonOption    ||    currentOption.isEmpty())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
75	[BUG]  [BUGGY]  tokens.add(iter.getIterator());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  tokens.add(iter.getIterator());  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	tokens.add(iter.getIterator());	  tokens.add(iter.getValue());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
76	[BUG]  [BUGGY]  Iterator  iter  =  options.getIterator().iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  iter  =  options.getIterator().iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =  options.getIterator().iterator();	  Iterator    iter    =    currentOption.getIterables().iterator();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
77	[BUG]  [BUGGY]  if(stopAtNonOption  ||  currentOption  ==  eatTheRest)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(stopAtNonOption  ||  currentOption  ==  eatTheRest)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(stopAtNonOption  ||  currentOption  ==  eatTheRest)  {	  if(stopAtNonOption    &&    eatTheRest)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
78	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  tokens  =  options.values().iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  options.values().iterator();	  Iterator    <    Option>    tokens    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
79	[BUG]  [BUGGY]  if(stopAtNonOption  ||  eattheRest)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(stopAtNonOption  ||  eattheRest)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(stopAtNonOption  ||  eattheRest)  {	  if(eatTheRest    ||    stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
80	[BUG]  [BUGGY]  Iterator  iter  =  this.stopAtNonOption.iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  iter  =  this.stopAtNonOption.iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =  this.stopAtNonOption.iterator();	  Iterator    iter    =    currentOption.iterator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
81	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  currentOption.getIterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  iter  =  currentOption.getIterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  iter  =  currentOption.getIterator();	  Iterator    <    Option>    iter    =    currentOption.getOptions();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
82	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =(options  ==  null)?  options.keySet()  :  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  tokens  =(options  ==  null)?  options.keySet()  :  null;  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =(options  ==  null)?  options.keySet()  :  null;	  Iterator    <    Option>    tokens    =(options    ==    null)?    options.iterator()    :    null;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
83	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =(options  ==  null)?  options.iterator()  :  option;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  tokens  =(options  ==  null)?  options.iterator()  :  option;  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =(options  ==  null)?  options.iterator()  :  option;	  Iterator    <    Option>    tokens    =(options    ==    null)?    options.iterator()    :    null;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
84	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  options.getOwnOptions();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  tokens  =  options.getOwnOptions();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  options.getOwnOptions();	  Iterator    <    Option>    tokens    =    currentOption.getOwnOptions();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
85	[BUG]  [BUGGY]  Iterator  <  Object>  iter  =  currentOption.options.iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Object>  iter  =  currentOption.options.iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Object>  iter  =  currentOption.options.iterator();	  Iterator    <    Object>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
86	[BUG]  [BUGGY]  if(eatTheRest  &&  currentOption!=  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(eatTheRest  &&  currentOption!=  null)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(eatTheRest  &&  currentOption!=  null)  {	  if(stopAtNonOption    &&    currentOption!=    null)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
87	[BUG]  [BUGGY]  if(stopAtNonOption  &&  iter  ==  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(stopAtNonOption  &&  iter  ==  null)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(stopAtNonOption  &&  iter  ==  null)  {	  if(stopAtNonOption    &&    currentOption!=    null)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
88	[BUG]  [BUGGY]  tokens.add(iter.next()  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  tokens.add(iter.next()  -  1);  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	tokens.add(iter.next()  -  1);	  tokens.add(iter.next());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
89	[BUG]  [BUGGY]  if(eatTheRest  ||  currentOption!=  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(eatTheRest  ||  currentOption!=  null)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(eatTheRest  ||  currentOption!=  null)  {	  if(stopAtNonOption    ||    currentOption!=    null)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
90	[BUG]  [BUGGY]  if(eatTheRest  ||  currentOption  ==  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(eatTheRest  ||  currentOption  ==  null)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(eatTheRest  ||  currentOption  ==  null)  {	  if(stopAtNonOption    ||    currentOption    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
91	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  options.getOwnerOptions();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  tokens  =  options.getOwnerOptions();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  options.getOwnerOptions();	  Iterator    <    Option>    tokens    =    currentOption.getOwnerOptions();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
92	[BUG]  [BUGGY]  Iterator  iter  =  currentOption.keySet().iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  iter  =  currentOption.keySet().iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =  currentOption.keySet().iterator();	  Iterator    iter    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
93	[BUG]  [BUGGY]  if(!eatTheRest  ||  stopAtNonOption)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(!eatTheRest  ||  stopAtNonOption)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(!eatTheRest  ||  stopAtNonOption)  {	  if(!eatTheRest    &&    stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
94	[BUG]  [BUGGY]  if(!eatTheRest  &&  currentOption!=  stopAtNonOption)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(!eatTheRest  &&  currentOption!=  stopAtNonOption)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(!eatTheRest  &&  currentOption!=  stopAtNonOption)  {	  if(!eatTheRest    &&    stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
95	[BUG]  [BUGGY]  Iterator  <  Object>  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Object>  iter  =  options.values().iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Object>  iter  =  options.values().iterator();	  Iterator    <    Object>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
96	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  iter.cloneOptions();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  tokens  =  iter.cloneOptions();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  iter.cloneOptions();	  Iterator    <    Option>    tokens    =    iter.getOptions();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
97	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  iter.getOtherOptions();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  tokens  =  iter.getOtherOptions();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  iter.getOtherOptions();	  Iterator    <    Option>    tokens    =    iter.getOptions();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
98	[BUG]  [BUGGY]  tokens.add(iter.getImmediateParentPointer());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  tokens.add(iter.getImmediateParentPointer());  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	tokens.add(iter.getImmediateParentPointer());	  tokens.add(iter.getValue());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
99	[BUG]  [BUGGY]  tokens.add(iter.getImmediateParentNode());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  tokens.add(iter.getImmediateParentNode());  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	tokens.add(iter.getImmediateParentNode());	  tokens.add(iter.getValue());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
100	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  tokens  =  this.options.iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  this.options.iterator();	  Iterator    <    Option>    tokens    =    iter.options.iterator();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
101	[BUG]  [BUGGY]  Option  <  Option>  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Option  <  Option>  iter  =  options.iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Option  <  Option>  iter  =  options.iterator();	  Iterator    <    Option>    iter    =    currentOptions.iterator();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
102	[BUG]  [BUGGY]  Iterator  iter  =(this.options!=  null)?  this.options.iterator()  :  iter;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  iter  =(this.options!=  null)?  this.options.iterator()  :  iter;  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =(this.options!=  null)?  this.options.iterator()  :  iter;	  Iterator    iter    =    this.options.iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
103	[BUG]  [BUGGY]  Iterator  iter  =(this.options!=  null?  this.options.iterator()  :  iter);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  iter  =(this.options!=  null?  this.options.iterator()  :  iter);  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =(this.options!=  null?  this.options.iterator()  :  iter);	  Iterator    iter    =    this.options.iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
104	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  options.entrySet().iterator();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  tokens  =  options.entrySet().iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  options.entrySet().iterator();	  Iterator    <    Option>    tokens    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
105	[BUG]  [BUGGY]  if(stopAtNonOption  &&  currentOption!=  null  &&  iter.hasNext())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(stopAtNonOption  &&  currentOption!=  null  &&  iter.hasNext())  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	if(stopAtNonOption  &&  currentOption!=  null  &&  iter.hasNext())  {	  if(stopAtNonOption    &&    currentOption!=    null)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
106	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  currentOption.getOwnOptions();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  iter  =  currentOption.getOwnOptions();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  iter  =  currentOption.getOwnOptions();	  Iterator    <    Option>    tokens    =    currentOption.getOwnOptions();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
107	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =(options  ==  null)?  options.iterator()  :  this;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  tokens  =(options  ==  null)?  options.iterator()  :  this;  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =(options  ==  null)?  options.iterator()  :  this;	  Iterator    <    Option>    tokens    =(options    ==    null)?    options.iterator()    :    null;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
108	[BUG]  [BUGGY]  tokens.add(iter.next().cloneTree());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  tokens.add(iter.next().cloneTree());  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	tokens.add(iter.next().cloneTree());	  tokens.add(iter.next());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
109	[BUG]  [BUGGY]  Iterator  iter  =  options.getOwnerOptions().iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  iter  =  options.getOwnerOptions().iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =  options.getOwnerOptions().iterator();	  Iterator    iter    =    options.getOptions().iterator();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
110	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  currentOption.options.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  iter  =  currentOption.options.iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  iter  =  currentOption.options.iterator();	  Iterator    iter    =    currentOption.options.iterator();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
111	[BUG]  [BUGGY]  Iterator  iter  =  this.currentOption.options.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  iter  =  this.currentOption.options.iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  iter  =  this.currentOption.options.iterator();	  Iterator    iter    =    currentOption.options.iterator();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
112	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  currentOption.getOwnerOptions();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  iter  =  currentOption.getOwnerOptions();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  iter  =  currentOption.getOwnerOptions();	  Iterator    <    Option>    tokens    =    currentOption.getOwnerOptions();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
113	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =(this.options!=  null)?  this.options.iterator()  :  iter;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  iter  =(this.options!=  null)?  this.options.iterator()  :  iter;  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  iter  =(this.options!=  null)?  this.options.iterator()  :  iter;	  Iterator    <    Option>    iter    =    this.options.iterator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
114	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =(this.options  ==  null)?  this.options.iterator()  :  iter;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  iter  =(this.options  ==  null)?  this.options.iterator()  :  iter;  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  iter  =(this.options  ==  null)?  this.options.iterator()  :  iter;	  Iterator    <    Option>    iter    =    this.options.iterator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
115	[BUG]  [BUGGY]  Iterator  <  Option>  tokens  =  options.get(iter);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  tokens  =  options.get(iter);  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  	projects/Cli18/src/java/org/apache/commons/cli/PosixParser.java	0.2672612419124244	168	169	1	replace	Iterator  <  Option>  tokens  =  options.get(iter);	  Iterator    <    Option>    tokens    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
