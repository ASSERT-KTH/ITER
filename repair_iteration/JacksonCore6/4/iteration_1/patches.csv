bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  new  JsonPointer(input,  input.substring(0,  end));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(input,  input.substring(0,  end));  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(input,  input.substring(0,  end));	  return    new    JsonPointer(input,    input.substring(0,    i));    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
2	[BUG]  [BUGGY]  return  new  JsonPointer(input,  _asString.substring(0,  i));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(input,  _asString.substring(0,  i));  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(input,  _asString.substring(0,  i));	  return    new    JsonPointer(input,    input.substring(0,    i));    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
3	[BUG]  [BUGGY]  return  new  JsonPointer(input,  str.substring(0,  i));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(input,  str.substring(0,  i));  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(input,  str.substring(0,  i));	  return    new    JsonPointer(input,    input.substring(0,    i));    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
4	[BUG]  [BUGGY]  return  new  JsonPointer(input,  input.substring(0,  i  +  1));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(input,  input.substring(0,  i  +  1));  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(input,  input.substring(0,  i  +  1));	  return    new    JsonPointer(input,    input.substring(0,    i));    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
5	[BUG]  [BUGGY]  return  new  JsonPointer(c,  input,  EMPTY);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(c,  input,  EMPTY);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(c,  input,  EMPTY);	  return    new    JsonPointer(input,    c,    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
6	[BUG]  [BUGGY]  return  new  JsonPointer(input,  EMPTY,  c);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(input,  EMPTY,  c);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(input,  EMPTY,  c);	  return    new    JsonPointer(input,    c,    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
7	[BUG]  [BUGGY]  return  new  JsonPointer(_asString,  input,  EMPTY);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(_asString,  input,  EMPTY);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(_asString,  input,  EMPTY);	  return    new    JsonPointer(input,    c,    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
8	[BUG]  [BUGGY]  return  new  JsonPointer(input,  c,  EMPTY,  _nextSegment);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(input,  c,  EMPTY,  _nextSegment);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(input,  c,  EMPTY,  _nextSegment);	  return    new    JsonPointer(input,    c,    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
9	[BUG]  [BUGGY]  return  new  JsonPointer(input,  i.substring(0,  i),  EMPTY);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(input,  i.substring(0,  i),  EMPTY);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(input,  i.substring(0,  i),  EMPTY);	  return    new    JsonPointer(input,    i.substring(1),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
10	[BUG]  [BUGGY]  return  new  JsonPointer(i,  input.substring(1),  EMPTY);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(i,  input.substring(1),  EMPTY);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(i,  input.substring(1),  EMPTY);	  return    new    JsonPointer(input,    i.substring(1),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
11	[BUG]  [BUGGY]  return  new  JsonPointer(input,  EMPTY.substring(1),  i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(input,  EMPTY.substring(1),  i);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(input,  EMPTY.substring(1),  i);	  return    new    JsonPointer(input,    i.substring(1),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
12	[BUG]  [BUGGY]  return  new  JsonPointer(input,  i.substring(0,  i));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(input,  i.substring(0,  i));  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(input,  i.substring(0,  i));	  return    new    JsonPointer(input,    i.substring(1),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  return  new  JsonPointer(input,  EMPTY,  len);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(input,  EMPTY,  len);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(input,  EMPTY,  len);	  return    new    JsonPointer(input,    i,    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
14	[BUG]  [BUGGY]  return  new  JsonPointer(_asString,  String.valueOf(i),  input,  EMPTY);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(_asString,  String.valueOf(i),  input,  EMPTY);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(_asString,  String.valueOf(i),  input,  EMPTY);	  return    new    JsonPointer(input,    String.valueOf(i),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
15	[BUG]  [BUGGY]  return  new  JsonPointer(input,  String.valueOf(i),  _asString);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(input,  String.valueOf(i),  _asString);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(input,  String.valueOf(i),  _asString);	  return    new    JsonPointer(input,    String.valueOf(i),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  return  new  JsonPointer(_asString,  String.valueOf(i),  EMPTY);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(_asString,  String.valueOf(i),  EMPTY);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(_asString,  String.valueOf(i),  EMPTY);	  return    new    JsonPointer(input,    String.valueOf(i),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  return  new  JsonPointer(input,  String.valueOf(i),  _nextSegment);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(input,  String.valueOf(i),  _nextSegment);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(input,  String.valueOf(i),  _nextSegment);	  return    new    JsonPointer(input,    String.valueOf(i),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
18	[BUG]  [BUGGY]  if(c  ==  '')  {  char  c  =  input.charAt(i);  if(c  ==  ''  ||  c  ==  '')  {  return  _parseQuotedTail(input,  i);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  if(c  ==  '')  {  char  c  =  input.charAt(i);  if(c  ==  ''  ||  c  ==  '')  {  return  _parseQuotedTail(input,  i);  }  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	if(c  ==  '')  {  char  c  =  input.charAt(i);  if(c  ==  ''  ||  c  ==  '')  {  return  _parseQuotedTail(input,  i);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
19	[BUG]  [BUGGY]  if(c  ==  ''  ||  c  ==  '')  {  if(_matchingPropertyName.length()  ==  end)  {  return  _parseQuotedTail(input,  i);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  if(c  ==  ''  ||  c  ==  '')  {  if(_matchingPropertyName.length()  ==  end)  {  return  _parseQuotedTail(input,  i);  }  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	if(c  ==  ''  ||  c  ==  '')  {  if(_matchingPropertyName.length()  ==  end)  {  return  _parseQuotedTail(input,  i);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
20	[BUG]  [BUGGY]  if(c  ==  ''  ||  c  ==  '')  {  if(_matchingPropertyName.equals(input.substring(i)))  {  return  input;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  if(c  ==  ''  ||  c  ==  '')  {  if(_matchingPropertyName.equals(input.substring(i)))  {  return  input;  }  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	if(c  ==  ''  ||  c  ==  '')  {  if(_matchingPropertyName.equals(input.substring(i)))  {  return  input;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
21	[BUG]  [BUGGY]  if(c  ==  '')  {  char  c  =  input.charAt(i);  if(c  ==  ''  ||  c  ==  '')  {  return  _parseString(input,  i);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  if(c  ==  '')  {  char  c  =  input.charAt(i);  if(c  ==  ''  ||  c  ==  '')  {  return  _parseString(input,  i);  }  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	if(c  ==  '')  {  char  c  =  input.charAt(i);  if(c  ==  ''  ||  c  ==  '')  {  return  _parseString(input,  i);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
22	[BUG]  [BUGGY]  return  new  JsonPointer(_asString,  input.substring(i),  EMPTY);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(_asString,  input.substring(i),  EMPTY);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(_asString,  input.substring(i),  EMPTY);	  return    new    JsonPointer(input,    _asString.substring(i),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
23	[BUG]  [BUGGY]  return  new  JsonPointer(_asString.substring(i,  input.length()),  EMPTY);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(_asString.substring(i,  input.length()),  EMPTY);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(_asString.substring(i,  input.length()),  EMPTY);	  return    new    JsonPointer(input,    _asString.substring(i),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
24	[BUG]  [BUGGY]  return  new  JsonPointer(_asString,  input.substring(i));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(_asString,  input.substring(i));  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(_asString,  input.substring(i));	  return    new    JsonPointer(input,    _asString.substring(i),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
25	[BUG]  [BUGGY]  return  new  JsonPointer(_asString.substring(i),  input,  EMPTY);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(_asString.substring(i),  input,  EMPTY);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(_asString.substring(i),  input,  EMPTY);	  return    new    JsonPointer(input,    _asString.substring(i),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
26	[BUG]  [BUGGY]  return  new  JsonPointer(_asString,  input.substring(1),  EMPTY);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(_asString,  input.substring(1),  EMPTY);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(_asString,  input.substring(1),  EMPTY);	  return    new    JsonPointer(input,    _asString.substring(1),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
27	[BUG]  [BUGGY]  return  new  JsonPointer(_asString,  input.substring(1),  i);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(_asString,  input.substring(1),  i);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(_asString,  input.substring(1),  i);	  return    new    JsonPointer(input,    _asString.substring(1),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
28	[BUG]  [BUGGY]  return  new  JsonPointer(_asString.substring(i,  input.length(),  EMPTY);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(_asString.substring(i,  input.length(),  EMPTY);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(_asString.substring(i,  input.length(),  EMPTY);	  return    new    JsonPointer(input,    _asString.substring(1),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
29	[BUG]  [BUGGY]  return  new  JsonPointer(input,  _asString.substring(0,  i),  EMPTY);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(input,  _asString.substring(0,  i),  EMPTY);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(input,  _asString.substring(0,  i),  EMPTY);	  return    new    JsonPointer(input,    input.substring(0,    i),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
30	[BUG]  [BUGGY]  return  new  JsonPointer(input,  EMPTY.substring(0,  i),  input);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(input,  EMPTY.substring(0,  i),  input);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(input,  EMPTY.substring(0,  i),  input);	  return    new    JsonPointer(input,    input.substring(0,    i),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
31	[BUG]  [BUGGY]  return  new  JsonPointer(input,  input.substring(0,  end),  EMPTY);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(input,  input.substring(0,  end),  EMPTY);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(input,  input.substring(0,  end),  EMPTY);	  return    new    JsonPointer(input,    input.substring(0,    i),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
32	[BUG]  [BUGGY]  return  new  JsonPointer(_asString,  input.substring(i),  _nextSegment);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(_asString,  input.substring(i),  _nextSegment);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(_asString,  input.substring(i),  _nextSegment);	  return    new    JsonPointer(input,    _asString.substring(i),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
33	[BUG]  [BUGGY]  return  new  JsonPointer(_asString,  input.substring(i),  _valueType);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(_asString,  input.substring(i),  _valueType);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(_asString,  input.substring(i),  _valueType);	  return    new    JsonPointer(input,    _asString.substring(i),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
34	[BUG]  [BUGGY]  return  new  JsonPointer(_asString,  input,  c,  EMPTY);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(_asString,  input,  c,  EMPTY);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(_asString,  input,  c,  EMPTY);	  return    new    JsonPointer(input,    c,    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
35	[BUG]  [BUGGY]  return  new  JsonPointer(input,  i,  _nextSegment);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(input,  i,  _nextSegment);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(input,  i,  _nextSegment);	  return    new    JsonPointer(input,    i,    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
36	[BUG]  [BUGGY]  return  new  JsonPointer(input,  i,  _asString);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(input,  i,  _asString);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(input,  i,  _asString);	  return    new    JsonPointer(input,    i,    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
37	[BUG]  [BUGGY]  return  new  JsonPointer(input,  String.valueOf(i));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(input,  String.valueOf(i));  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(input,  String.valueOf(i));	  return    new    JsonPointer(input,    String.valueOf(i),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
38	[BUG]  [BUGGY]  return  new  JsonPointer(_asString,  input.substring(0,  i));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(_asString,  input.substring(0,  i));  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(_asString,  input.substring(0,  i));	  return    new    JsonPointer(input,    input.substring(0,    i));    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
39	[BUG]  [BUGGY]  _matchingPropertyName  =  input.substring(i  +  1,  input.length());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  _matchingPropertyName  =  input.substring(i  +  1,  input.length());  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	_matchingPropertyName  =  input.substring(i  +  1,  input.length());	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
40	[BUG]  [BUGGY]  if(c  ==  ''  ||  c  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  if(c  ==  ''  ||  c  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	if(c  ==  ''  ||  c  ==  '')  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
41	[BUG]  [BUGGY]  if(c  ==  ''  ||  c  ==  '')  {  return  input;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  if(c  ==  ''  ||  c  ==  '')  {  return  input;  }  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	if(c  ==  ''  ||  c  ==  '')  {  return  input;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
42	[BUG]  [BUGGY]  if(c  ==  ''  ||  c  ==  '')  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  if(c  ==  ''  ||  c  ==  '')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	if(c  ==  ''  ||  c  ==  '')  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
43	[BUG]  [BUGGY]  return  new  JsonPointer(input,  input.substring(0,  i)+  1,  EMPTY);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(input,  input.substring(0,  i)+  1,  EMPTY);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(input,  input.substring(0,  i)+  1,  EMPTY);	  return    new    JsonPointer(input,    input.substring(0,    i),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
44	[BUG]  [BUGGY]  return  new  JsonPointer(input,  input.substring(0,  i  +  1),  EMPTY);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(input,  input.substring(0,  i  +  1),  EMPTY);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(input,  input.substring(0,  i  +  1),  EMPTY);	  return    new    JsonPointer(input,    input.substring(0,    i),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
45	[BUG]  [BUGGY]  return  new  JsonPointer(_asString,  input.substring(0,  i),  EMPTY);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(_asString,  input.substring(0,  i),  EMPTY);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(_asString,  input.substring(0,  i),  EMPTY);	  return    new    JsonPointer(input,    input.substring(0,    i),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
46	[BUG]  [BUGGY]  return  new  JsonPointer(input,  c,  _asString);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(input,  c,  _asString);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(input,  c,  _asString);	  return    new    JsonPointer(input,    c,    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
47	[BUG]  [BUGGY]  return  new  JsonPointer(input,  _asString,  c,  EMPTY);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(input,  _asString,  c,  EMPTY);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(input,  _asString,  c,  EMPTY);	  return    new    JsonPointer(input,    c,    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
48	[BUG]  [BUGGY]  return  new  JsonPointer(_asString,  input.substring(i  +  1),  EMPTY);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(_asString,  input.substring(i  +  1),  EMPTY);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(_asString,  input.substring(i  +  1),  EMPTY);	  return    new    JsonPointer(input,    _asString.substring(i),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
49	[BUG]  [BUGGY]  return  new  JsonPointer(c,  _asString.substring(i),  EMPTY);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(c,  _asString.substring(i),  EMPTY);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(c,  _asString.substring(i),  EMPTY);	  return    new    JsonPointer(input,    _asString.substring(i),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
50	[BUG]  [BUGGY]  return  new  JsonPointer(input.substring(0,  i),  EMPTY);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(input.substring(0,  i),  EMPTY);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(input.substring(0,  i),  EMPTY);	  return    new    JsonPointer(input,    i.substring(1),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
51	[BUG]  [BUGGY]  return  new  JsonPointer(input.substring(i),  i,  EMPTY);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(input.substring(i),  i,  EMPTY);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(input.substring(i),  i,  EMPTY);	  return    new    JsonPointer(input,    i,    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
52	[BUG]  [BUGGY]  return  new  JsonPointer(input,  i,  c);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(input,  i,  c);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(input,  i,  c);	  return    new    JsonPointer(input,    i,    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
53	[BUG]  [BUGGY]  _asString  =  input.substring(i  +  1,  input.length());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  _asString  =  input.substring(i  +  1,  input.length());  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	_asString  =  input.substring(i  +  1,  input.length());	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
54	[BUG]  [BUGGY]  if(c  ==  ''  ||  c  ==  '')  {  return  input.substring(1);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  if(c  ==  ''  ||  c  ==  '')  {  return  input.substring(1);  }  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	if(c  ==  ''  ||  c  ==  '')  {  return  input.substring(1);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
55	[BUG]  [BUGGY]  if(c  ==  ''  ||  c  ==  '')  {  return  input.substring(0,  i);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  if(c  ==  ''  ||  c  ==  '')  {  return  input.substring(0,  i);  }  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	if(c  ==  ''  ||  c  ==  '')  {  return  input.substring(0,  i);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
56	[BUG]  [BUGGY]  if(c  ==  ''  ||  c  ==  '')return  null;  if(i  <  end)  {  return  input.substring(1);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  if(c  ==  ''  ||  c  ==  '')return  null;  if(i  <  end)  {  return  input.substring(1);  }  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	if(c  ==  ''  ||  c  ==  '')return  null;  if(i  <  end)  {  return  input.substring(1);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
57	[BUG]  [BUGGY]  return  new  JsonPointer(c,  String.valueOf(i),  EMPTY);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }      [BUGGY]  return  new  JsonPointer(c,  String.valueOf(i),  EMPTY);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	return  new  JsonPointer(c,  String.valueOf(i),  EMPTY);	  return    new    JsonPointer(input,    String.valueOf(i),    EMPTY);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
