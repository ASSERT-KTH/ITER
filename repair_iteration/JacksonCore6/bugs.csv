bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return NumberInput.parseInt(str); [FE] AssertionFailedError [CONTEXT] if (c > '9' || c < '0') { return -1; } } if (len == 10) { long l = NumberInput.parseLong(str); if (l > Integer.MAX_VALUE) { return -1; } } [BUGGY] return NumberInput.parseInt(str); [BUGGY] } [CLASS] JsonPointer [METHOD] _parseIndex [RETURN_TYPE] int  String str [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex i index len long l  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.7071067811865475	205	205	1	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (c > '9' || c < '0') { return -1; } } if (len == 10) { long l = NumberInput.parseLong(str); if (l > Integer.MAX_VALUE) { return -1; } } [BUGGY] [BUGGY] return NumberInput.parseInt(str); } [CLASS] JsonPointer [METHOD] _parseIndex [RETURN_TYPE] int  String str [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex i index len long l  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.7071067811865475	205	205	1	add	
3	[BUG] [BUGGY] if (len == 10) { [FE] AssertionFailedError [CONTEXT] if (len == 0 || len > 10) { return -1; }  for (int i = 0; i < len; ++i) { char c = str.charAt(i); if (c > '9' || c < '0') { return -1; } } [BUGGY] if (len == 10) { [BUGGY] long l = NumberInput.parseLong(str); if (l > Integer.MAX_VALUE) { return -1; } } return NumberInput.parseInt(str); } [CLASS] JsonPointer [METHOD] _parseIndex [RETURN_TYPE] int  String str [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex i index len long l  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5773502691896258	199	199	1	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (len == 0 || len > 10) { return -1; }  for (int i = 0; i < len; ++i) { char c = str.charAt(i); if (c > '9' || c < '0') { return -1; } } [BUGGY] [BUGGY] if (len == 10) { long l = NumberInput.parseLong(str); if (l > Integer.MAX_VALUE) { return -1; } } return NumberInput.parseInt(str); } [CLASS] JsonPointer [METHOD] _parseIndex [RETURN_TYPE] int  String str [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex i index len long l  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5773502691896258	199	199	1	add	
5	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public boolean matches() { return _nextSegment == null; } [CLASS] JsonPointer [METHOD] matches [RETURN_TYPE] boolean  [VARIABLES] JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input segment boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	137	137	1	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public boolean matches() { return _nextSegment == null; } [CLASS] JsonPointer [METHOD] matches [RETURN_TYPE] boolean  [VARIABLES] JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input segment boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	137	137	1	add	
7	[BUG] [BUGGY] return new JsonPointer(input, input.substring(1), EMPTY); [FE] AssertionFailedError [CONTEXT] _parseTail(input.substring(i))); } ++i;  if (c == '~' && i < end) { // possibly, quote return _parseQuotedTail(input, i); }  }  [BUGGY] return new JsonPointer(input, input.substring(1), EMPTY); [BUGGY] } [CLASS] JsonPointer [METHOD] _parseTail [RETURN_TYPE] JsonPointer  String input [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex end i index len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] _parseTail(input.substring(i))); } ++i;  if (c == '~' && i < end) { // possibly, quote return _parseQuotedTail(input, i); }  }  [BUGGY] [BUGGY] return new JsonPointer(input, input.substring(1), EMPTY); } [CLASS] JsonPointer [METHOD] _parseTail [RETURN_TYPE] JsonPointer  String input [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex end i index len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	226	226	1	add	
9	[BUG] [BUGGY] protected JsonPointer() { [FE] AssertionFailedError [CONTEXT] [BUGGY] protected JsonPointer() { [BUGGY] _nextSegment = null; _matchingPropertyName = ""; _matchingElementIndex = -1; _asString = ""; } [CLASS] JsonPointer [METHOD] <init> [RETURN_TYPE] JsonPointer()  [VARIABLES] JsonPointer EMPTY _nextSegment String _asString _matchingPropertyName boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	55	55	1	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] [BUGGY] [BUGGY] protected JsonPointer() { _nextSegment = null; _matchingPropertyName = ""; _matchingElementIndex = -1; _asString = ""; } [CLASS] JsonPointer [METHOD] <init> [RETURN_TYPE] JsonPointer()  [VARIABLES] JsonPointer EMPTY _nextSegment String _asString _matchingPropertyName boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	55	55	1	add	
11	[BUG] [BUGGY] _nextSegment = null; [FE] AssertionFailedError [CONTEXT] protected JsonPointer() { [BUGGY] _nextSegment = null; [BUGGY] _matchingPropertyName = ""; _matchingElementIndex = -1; _asString = ""; } [CLASS] JsonPointer [METHOD] <init> [RETURN_TYPE] JsonPointer()  [VARIABLES] JsonPointer EMPTY _nextSegment String _asString _matchingPropertyName boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	56	56	1	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected JsonPointer() { [BUGGY] [BUGGY] _nextSegment = null; _matchingPropertyName = ""; _matchingElementIndex = -1; _asString = ""; } [CLASS] JsonPointer [METHOD] <init> [RETURN_TYPE] JsonPointer()  [VARIABLES] JsonPointer EMPTY _nextSegment String _asString _matchingPropertyName boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	56	56	1	add	
13	[BUG] [BUGGY] _matchingPropertyName = ""; [FE] AssertionFailedError [CONTEXT] protected JsonPointer() { _nextSegment = null; [BUGGY] _matchingPropertyName = ""; [BUGGY] _matchingElementIndex = -1; _asString = ""; } [CLASS] JsonPointer [METHOD] <init> [RETURN_TYPE] JsonPointer()  [VARIABLES] JsonPointer EMPTY _nextSegment String _asString _matchingPropertyName boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	57	57	1	replace	
14	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected JsonPointer() { _nextSegment = null; [BUGGY] [BUGGY] _matchingPropertyName = ""; _matchingElementIndex = -1; _asString = ""; } [CLASS] JsonPointer [METHOD] <init> [RETURN_TYPE] JsonPointer()  [VARIABLES] JsonPointer EMPTY _nextSegment String _asString _matchingPropertyName boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	57	57	1	add	
15	[BUG] [BUGGY] _matchingElementIndex = -1; [FE] AssertionFailedError [CONTEXT] protected JsonPointer() { _nextSegment = null; _matchingPropertyName = ""; [BUGGY] _matchingElementIndex = -1; [BUGGY] _asString = ""; } [CLASS] JsonPointer [METHOD] <init> [RETURN_TYPE] JsonPointer()  [VARIABLES] JsonPointer EMPTY _nextSegment String _asString _matchingPropertyName boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	58	58	1	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected JsonPointer() { _nextSegment = null; _matchingPropertyName = ""; [BUGGY] [BUGGY] _matchingElementIndex = -1; _asString = ""; } [CLASS] JsonPointer [METHOD] <init> [RETURN_TYPE] JsonPointer()  [VARIABLES] JsonPointer EMPTY _nextSegment String _asString _matchingPropertyName boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	58	58	1	add	
17	[BUG] [BUGGY] _asString = ""; [FE] AssertionFailedError [CONTEXT] protected JsonPointer() { _nextSegment = null; _matchingPropertyName = ""; _matchingElementIndex = -1; [BUGGY] _asString = ""; [BUGGY] } [CLASS] JsonPointer [METHOD] <init> [RETURN_TYPE] JsonPointer()  [VARIABLES] JsonPointer EMPTY _nextSegment String _asString _matchingPropertyName boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	59	59	1	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected JsonPointer() { _nextSegment = null; _matchingPropertyName = ""; _matchingElementIndex = -1; [BUGGY] [BUGGY] _asString = ""; } [CLASS] JsonPointer [METHOD] <init> [RETURN_TYPE] JsonPointer()  [VARIABLES] JsonPointer EMPTY _nextSegment String _asString _matchingPropertyName boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	59	59	1	add	
19	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] protected JsonPointer() { _nextSegment = null; _matchingPropertyName = ""; _matchingElementIndex = -1; _asString = ""; [BUGGY] } [BUGGY]  [CLASS] JsonPointer [METHOD] <init> [RETURN_TYPE] JsonPointer()  [VARIABLES] JsonPointer EMPTY _nextSegment String _asString _matchingPropertyName boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	60	60	1	replace	
20	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected JsonPointer() { _nextSegment = null; _matchingPropertyName = ""; _matchingElementIndex = -1; _asString = ""; [BUGGY] [BUGGY] } [CLASS] JsonPointer [METHOD] <init> [RETURN_TYPE] JsonPointer()  [VARIABLES] JsonPointer EMPTY _nextSegment String _asString _matchingPropertyName boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	60	60	1	add	
21	[BUG] [BUGGY] protected JsonPointer(String fullString, String segment, JsonPointer next) { [FE] AssertionFailedError [CONTEXT] [BUGGY] protected JsonPointer(String fullString, String segment, JsonPointer next) { [BUGGY] _asString = fullString; _nextSegment = next;  _matchingPropertyName = segment; _matchingElementIndex = _parseIndex(segment); } [CLASS] JsonPointer [METHOD] <init> [RETURN_TYPE] JsonPointer)  String fullString String segment JsonPointer next [VARIABLES] JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString segment boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	65	65	1	replace	
22	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] [BUGGY] [BUGGY] protected JsonPointer(String fullString, String segment, JsonPointer next) { _asString = fullString; _nextSegment = next;  _matchingPropertyName = segment; _matchingElementIndex = _parseIndex(segment); } [CLASS] JsonPointer [METHOD] <init> [RETURN_TYPE] JsonPointer)  String fullString String segment JsonPointer next [VARIABLES] JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString segment boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	65	65	1	add	
23	[BUG] [BUGGY] _asString = fullString; [FE] AssertionFailedError [CONTEXT] protected JsonPointer(String fullString, String segment, JsonPointer next) { [BUGGY] _asString = fullString; [BUGGY] _nextSegment = next;  _matchingPropertyName = segment; _matchingElementIndex = _parseIndex(segment); } [CLASS] JsonPointer [METHOD] <init> [RETURN_TYPE] JsonPointer)  String fullString String segment JsonPointer next [VARIABLES] JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString segment boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	66	66	1	replace	
24	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected JsonPointer(String fullString, String segment, JsonPointer next) { [BUGGY] [BUGGY] _asString = fullString; _nextSegment = next;  _matchingPropertyName = segment; _matchingElementIndex = _parseIndex(segment); } [CLASS] JsonPointer [METHOD] <init> [RETURN_TYPE] JsonPointer)  String fullString String segment JsonPointer next [VARIABLES] JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString segment boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	66	66	1	add	
25	[BUG] [BUGGY] _nextSegment = next; [FE] AssertionFailedError [CONTEXT] protected JsonPointer(String fullString, String segment, JsonPointer next) { _asString = fullString; [BUGGY] _nextSegment = next; [BUGGY]  _matchingPropertyName = segment; _matchingElementIndex = _parseIndex(segment); } [CLASS] JsonPointer [METHOD] <init> [RETURN_TYPE] JsonPointer)  String fullString String segment JsonPointer next [VARIABLES] JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString segment boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	67	67	1	replace	
26	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected JsonPointer(String fullString, String segment, JsonPointer next) { _asString = fullString; [BUGGY] [BUGGY] _nextSegment = next;  _matchingPropertyName = segment; _matchingElementIndex = _parseIndex(segment); } [CLASS] JsonPointer [METHOD] <init> [RETURN_TYPE] JsonPointer)  String fullString String segment JsonPointer next [VARIABLES] JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString segment boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	67	67	1	add	
27	[BUG] [BUGGY] _matchingPropertyName = segment; [FE] AssertionFailedError [CONTEXT] protected JsonPointer(String fullString, String segment, JsonPointer next) { _asString = fullString; _nextSegment = next;  [BUGGY] _matchingPropertyName = segment; [BUGGY] _matchingElementIndex = _parseIndex(segment); } [CLASS] JsonPointer [METHOD] <init> [RETURN_TYPE] JsonPointer)  String fullString String segment JsonPointer next [VARIABLES] JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString segment boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	69	69	1	replace	
28	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected JsonPointer(String fullString, String segment, JsonPointer next) { _asString = fullString; _nextSegment = next;  [BUGGY] [BUGGY] _matchingPropertyName = segment; _matchingElementIndex = _parseIndex(segment); } [CLASS] JsonPointer [METHOD] <init> [RETURN_TYPE] JsonPointer)  String fullString String segment JsonPointer next [VARIABLES] JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString segment boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	69	69	1	add	
29	[BUG] [BUGGY] _matchingElementIndex = _parseIndex(segment); [FE] AssertionFailedError [CONTEXT] protected JsonPointer(String fullString, String segment, JsonPointer next) { _asString = fullString; _nextSegment = next;  _matchingPropertyName = segment; [BUGGY] _matchingElementIndex = _parseIndex(segment); [BUGGY] } [CLASS] JsonPointer [METHOD] <init> [RETURN_TYPE] JsonPointer)  String fullString String segment JsonPointer next [VARIABLES] JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString segment boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	70	70	1	replace	
30	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected JsonPointer(String fullString, String segment, JsonPointer next) { _asString = fullString; _nextSegment = next;  _matchingPropertyName = segment; [BUGGY] [BUGGY] _matchingElementIndex = _parseIndex(segment); } [CLASS] JsonPointer [METHOD] <init> [RETURN_TYPE] JsonPointer)  String fullString String segment JsonPointer next [VARIABLES] JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString segment boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	70	70	1	add	
31	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] protected JsonPointer(String fullString, String segment, JsonPointer next) { _asString = fullString; _nextSegment = next;  _matchingPropertyName = segment; _matchingElementIndex = _parseIndex(segment); [BUGGY] } [BUGGY]  [CLASS] JsonPointer [METHOD] <init> [RETURN_TYPE] JsonPointer)  String fullString String segment JsonPointer next [VARIABLES] JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString segment boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	71	71	1	replace	
32	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected JsonPointer(String fullString, String segment, JsonPointer next) { _asString = fullString; _nextSegment = next;  _matchingPropertyName = segment; _matchingElementIndex = _parseIndex(segment); [BUGGY] [BUGGY] } [CLASS] JsonPointer [METHOD] <init> [RETURN_TYPE] JsonPointer)  String fullString String segment JsonPointer next [VARIABLES] JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString segment boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	71	71	1	add	
33	[BUG] [BUGGY] protected final static JsonPointer EMPTY = new JsonPointer(); [FE] AssertionFailedError [CONTEXT] [BUGGY] protected final static JsonPointer EMPTY = new JsonPointer(); [BUGGY]  [CLASS] JsonPointer  [VARIABLES] 	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	26	26	1	replace	
34	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] [BUGGY] [BUGGY] protected final static JsonPointer EMPTY = new JsonPointer(); [CLASS] JsonPointer  [VARIABLES] 	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	26	26	1	add	
35	[BUG] [BUGGY] if ((input == null) || input.length() == 0) { [FE] AssertionFailedError [CONTEXT] public static JsonPointer compile(String input) throws IllegalArgumentException {  [BUGGY] if ((input == null) || input.length() == 0) { [BUGGY] return EMPTY; }  if (input.charAt(0) != '/') { throw new IllegalArgumentException("Invalid input: JSON Pointer expression must start with '/': "+"\""+input+"\""); } return _parseTail(input); } [CLASS] JsonPointer [METHOD] compile [RETURN_TYPE] JsonPointer  String input [VARIABLES] JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input segment boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	91	91	1	replace	
36	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static JsonPointer compile(String input) throws IllegalArgumentException {  [BUGGY] [BUGGY] if ((input == null) || input.length() == 0) { return EMPTY; }  if (input.charAt(0) != '/') { throw new IllegalArgumentException("Invalid input: JSON Pointer expression must start with '/': "+"\""+input+"\""); } return _parseTail(input); } [CLASS] JsonPointer [METHOD] compile [RETURN_TYPE] JsonPointer  String input [VARIABLES] JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input segment boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	91	91	1	add	
37	[BUG] [BUGGY] if (input.charAt(0) != '/') { [FE] AssertionFailedError [CONTEXT] public static JsonPointer compile(String input) throws IllegalArgumentException {  if ((input == null) || input.length() == 0) { return EMPTY; }  [BUGGY] if (input.charAt(0) != '/') { [BUGGY] throw new IllegalArgumentException("Invalid input: JSON Pointer expression must start with '/': "+"\""+input+"\""); } return _parseTail(input); } [CLASS] JsonPointer [METHOD] compile [RETURN_TYPE] JsonPointer  String input [VARIABLES] JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input segment boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	95	95	1	replace	
38	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static JsonPointer compile(String input) throws IllegalArgumentException {  if ((input == null) || input.length() == 0) { return EMPTY; }  [BUGGY] [BUGGY] if (input.charAt(0) != '/') { throw new IllegalArgumentException("Invalid input: JSON Pointer expression must start with '/': "+"\""+input+"\""); } return _parseTail(input); } [CLASS] JsonPointer [METHOD] compile [RETURN_TYPE] JsonPointer  String input [VARIABLES] JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input segment boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	95	95	1	add	
39	[BUG] [BUGGY] return _parseTail(input); [FE] AssertionFailedError [CONTEXT] public static JsonPointer compile(String input) throws IllegalArgumentException {  if ((input == null) || input.length() == 0) { return EMPTY; }  if (input.charAt(0) != '/') { throw new IllegalArgumentException("Invalid input: JSON Pointer expression must start with '/': "+"\""+input+"\""); } [BUGGY] return _parseTail(input); [BUGGY] } [CLASS] JsonPointer [METHOD] compile [RETURN_TYPE] JsonPointer  String input [VARIABLES] JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input segment boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	
40	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static JsonPointer compile(String input) throws IllegalArgumentException {  if ((input == null) || input.length() == 0) { return EMPTY; }  if (input.charAt(0) != '/') { throw new IllegalArgumentException("Invalid input: JSON Pointer expression must start with '/': "+"\""+input+"\""); } [BUGGY] [BUGGY] return _parseTail(input); } [CLASS] JsonPointer [METHOD] compile [RETURN_TYPE] JsonPointer  String input [VARIABLES] JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input segment boolean int _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	add	
41	[BUG] [BUGGY] final int len = str.length(); [FE] AssertionFailedError [CONTEXT] private final static int _parseIndex(String str) { [BUGGY] final int len = str.length(); [BUGGY]   if (len == 0 || len > 10) { return -1; }  for (int i = 0; i < len; ++i) { char c = str.charAt(i); if (c > '9' || c < '0') { return -1; [CLASS] JsonPointer [METHOD] _parseIndex [RETURN_TYPE] int  String str [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex i index len long l  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	186	186	1	replace	
42	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private final static int _parseIndex(String str) { [BUGGY] [BUGGY] final int len = str.length();   if (len == 0 || len > 10) { return -1; }  for (int i = 0; i < len; ++i) { char c = str.charAt(i); if (c > '9' || c < '0') { return -1; [CLASS] JsonPointer [METHOD] _parseIndex [RETURN_TYPE] int  String str [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex i index len long l  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	186	186	1	add	
43	[BUG] [BUGGY] if (len == 0 || len > 10) { [FE] AssertionFailedError [CONTEXT] private final static int _parseIndex(String str) { final int len = str.length();   [BUGGY] if (len == 0 || len > 10) { [BUGGY] return -1; }  for (int i = 0; i < len; ++i) { char c = str.charAt(i); if (c > '9' || c < '0') { return -1; } } if (len == 10) { [CLASS] JsonPointer [METHOD] _parseIndex [RETURN_TYPE] int  String str [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex i index len long l  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	189	189	1	replace	
44	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private final static int _parseIndex(String str) { final int len = str.length();   [BUGGY] [BUGGY] if (len == 0 || len > 10) { return -1; }  for (int i = 0; i < len; ++i) { char c = str.charAt(i); if (c > '9' || c < '0') { return -1; } } if (len == 10) { [CLASS] JsonPointer [METHOD] _parseIndex [RETURN_TYPE] int  String str [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex i index len long l  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	189	189	1	add	
45	[BUG] [BUGGY] for (int i = 0; i < len; ++i) { [FE] AssertionFailedError [CONTEXT] private final static int _parseIndex(String str) { final int len = str.length();   if (len == 0 || len > 10) { return -1; }  [BUGGY] for (int i = 0; i < len; ++i) { [BUGGY] char c = str.charAt(i); if (c > '9' || c < '0') { return -1; } } if (len == 10) { long l = NumberInput.parseLong(str); if (l > Integer.MAX_VALUE) { return -1; } [CLASS] JsonPointer [METHOD] _parseIndex [RETURN_TYPE] int  String str [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex i index len long l  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	193	193	1	replace	
46	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private final static int _parseIndex(String str) { final int len = str.length();   if (len == 0 || len > 10) { return -1; }  [BUGGY] [BUGGY] for (int i = 0; i < len; ++i) { char c = str.charAt(i); if (c > '9' || c < '0') { return -1; } } if (len == 10) { long l = NumberInput.parseLong(str); if (l > Integer.MAX_VALUE) { return -1; } [CLASS] JsonPointer [METHOD] _parseIndex [RETURN_TYPE] int  String str [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex i index len long l  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	193	193	1	add	
47	[BUG] [BUGGY] char c = str.charAt(i); [FE] AssertionFailedError [CONTEXT] private final static int _parseIndex(String str) { final int len = str.length();   if (len == 0 || len > 10) { return -1; }  for (int i = 0; i < len; ++i) { [BUGGY] char c = str.charAt(i); [BUGGY] if (c > '9' || c < '0') { return -1; } } if (len == 10) { long l = NumberInput.parseLong(str); if (l > Integer.MAX_VALUE) { return -1; } } [CLASS] JsonPointer [METHOD] _parseIndex [RETURN_TYPE] int  String str [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex i index len long l  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	194	194	1	replace	
48	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private final static int _parseIndex(String str) { final int len = str.length();   if (len == 0 || len > 10) { return -1; }  for (int i = 0; i < len; ++i) { [BUGGY] [BUGGY] char c = str.charAt(i); if (c > '9' || c < '0') { return -1; } } if (len == 10) { long l = NumberInput.parseLong(str); if (l > Integer.MAX_VALUE) { return -1; } } [CLASS] JsonPointer [METHOD] _parseIndex [RETURN_TYPE] int  String str [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex i index len long l  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	194	194	1	add	
49	[BUG] [BUGGY] if (c > '9' || c < '0') { [FE] AssertionFailedError [CONTEXT] private final static int _parseIndex(String str) { final int len = str.length();   if (len == 0 || len > 10) { return -1; }  for (int i = 0; i < len; ++i) { char c = str.charAt(i); [BUGGY] if (c > '9' || c < '0') { [BUGGY] return -1; } } if (len == 10) { long l = NumberInput.parseLong(str); if (l > Integer.MAX_VALUE) { return -1; } } return NumberInput.parseInt(str); [CLASS] JsonPointer [METHOD] _parseIndex [RETURN_TYPE] int  String str [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex i index len long l  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	195	195	1	replace	
50	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private final static int _parseIndex(String str) { final int len = str.length();   if (len == 0 || len > 10) { return -1; }  for (int i = 0; i < len; ++i) { char c = str.charAt(i); [BUGGY] [BUGGY] if (c > '9' || c < '0') { return -1; } } if (len == 10) { long l = NumberInput.parseLong(str); if (l > Integer.MAX_VALUE) { return -1; } } return NumberInput.parseInt(str); [CLASS] JsonPointer [METHOD] _parseIndex [RETURN_TYPE] int  String str [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex i index len long l  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	195	195	1	add	
51	[BUG] [BUGGY] final int end = input.length(); [FE] AssertionFailedError [CONTEXT] protected static JsonPointer _parseTail(String input) { [BUGGY] final int end = input.length(); [BUGGY]   for (int i = 1; i < end; ) { char c = input.charAt(i); if (c == '/') { // common case, got a segment return new JsonPointer(input, input.substring(1, i), _parseTail(input.substring(i))); } ++i;  [CLASS] JsonPointer [METHOD] _parseTail [RETURN_TYPE] JsonPointer  String input [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex end i index len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	
52	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected static JsonPointer _parseTail(String input) { [BUGGY] [BUGGY] final int end = input.length();  for (int i = 1; i < end; ) { char c = input.charAt(i); if (c == '/') { // common case, got a segment return new JsonPointer(input, input.substring(1, i), _parseTail(input.substring(i))); } ++i;  [CLASS] JsonPointer [METHOD] _parseTail [RETURN_TYPE] JsonPointer  String input [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex end i index len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	add	
53	[BUG] [BUGGY] for (int i = 1; i < end; ) { [FE] AssertionFailedError [CONTEXT] protected static JsonPointer _parseTail(String input) { final int end = input.length();  [BUGGY] for (int i = 1; i < end; ) { [BUGGY] char c = input.charAt(i); if (c == '/') { // common case, got a segment return new JsonPointer(input, input.substring(1, i), _parseTail(input.substring(i))); } ++i;  if (c == '~' && i < end) { // possibly, quote return _parseQuotedTail(input, i); } [CLASS] JsonPointer [METHOD] _parseTail [RETURN_TYPE] JsonPointer  String input [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex end i index len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	212	212	1	replace	
54	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected static JsonPointer _parseTail(String input) { final int end = input.length();  [BUGGY] [BUGGY] for (int i = 1; i < end; ) { char c = input.charAt(i); if (c == '/') { // common case, got a segment return new JsonPointer(input, input.substring(1, i), _parseTail(input.substring(i))); } ++i;  if (c == '~' && i < end) { // possibly, quote return _parseQuotedTail(input, i); } [CLASS] JsonPointer [METHOD] _parseTail [RETURN_TYPE] JsonPointer  String input [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex end i index len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	212	212	1	add	
55	[BUG] [BUGGY] char c = input.charAt(i); [FE] AssertionFailedError [CONTEXT] protected static JsonPointer _parseTail(String input) { final int end = input.length();  for (int i = 1; i < end; ) { [BUGGY] char c = input.charAt(i); [BUGGY] if (c == '/') { // common case, got a segment return new JsonPointer(input, input.substring(1, i), _parseTail(input.substring(i))); } ++i;  if (c == '~' && i < end) { // possibly, quote return _parseQuotedTail(input, i); }  [CLASS] JsonPointer [METHOD] _parseTail [RETURN_TYPE] JsonPointer  String input [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex end i index len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	213	213	1	replace	
56	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected static JsonPointer _parseTail(String input) { final int end = input.length();  for (int i = 1; i < end; ) { [BUGGY] [BUGGY] char c = input.charAt(i); if (c == '/') { // common case, got a segment return new JsonPointer(input, input.substring(1, i), _parseTail(input.substring(i))); } ++i;  if (c == '~' && i < end) { // possibly, quote return _parseQuotedTail(input, i); }  [CLASS] JsonPointer [METHOD] _parseTail [RETURN_TYPE] JsonPointer  String input [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex end i index len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	213	213	1	add	
57	[BUG] [BUGGY] if (c == '/') { // common case, got a segment return new JsonPointer(input, input.substring(1, i),   _parseTail(input.substring(i))); [FE] AssertionFailedError [CONTEXT] protected static JsonPointer _parseTail(String input) { final int end = input.length();  for (int i = 1; i < end; ) { char c = input.charAt(i); [BUGGY] if (c == '/') { // common case, got a segment    return new JsonPointer(input, input.substring(1, i),            _parseTail(input.substring(i))); [BUGGY] return new JsonPointer(input, input.substring(1, i), _parseTail(input.substring(i))); } ++i;  if (c == '~' && i < end) { // possibly, quote return _parseQuotedTail(input, i); }  } [CLASS] JsonPointer [METHOD] _parseTail [RETURN_TYPE] JsonPointer  String input [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex end i index len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	214	216	1	replace	
58	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected static JsonPointer _parseTail(String input) { final int end = input.length();  for (int i = 1; i < end; ) { char c = input.charAt(i); [BUGGY] [BUGGY] if (c == '/') { // common case, got a segment    return new JsonPointer(input, input.substring(1, i),            _parseTail(input.substring(i))); return new JsonPointer(input, input.substring(1, i), _parseTail(input.substring(i))); } ++i;  if (c == '~' && i < end) { // possibly, quote return _parseQuotedTail(input, i); }  } [CLASS] JsonPointer [METHOD] _parseTail [RETURN_TYPE] JsonPointer  String input [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex end i index len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	214	216	1	add	
59	[BUG] [BUGGY] ++i; [FE] AssertionFailedError [CONTEXT] protected static JsonPointer _parseTail(String input) { final int end = input.length();  for (int i = 1; i < end; ) { char c = input.charAt(i); if (c == '/') { // common case, got a segment return new JsonPointer(input, input.substring(1, i), _parseTail(input.substring(i))); } [BUGGY] ++i; [BUGGY]  if (c == '~' && i < end) { // possibly, quote return _parseQuotedTail(input, i); }  }  return new JsonPointer(input, input.substring(1), EMPTY); } [CLASS] JsonPointer [METHOD] _parseTail [RETURN_TYPE] JsonPointer  String input [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex end i index len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	218	218	1	replace	
60	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected static JsonPointer _parseTail(String input) { final int end = input.length();  for (int i = 1; i < end; ) { char c = input.charAt(i); if (c == '/') { // common case, got a segment return new JsonPointer(input, input.substring(1, i), _parseTail(input.substring(i))); } [BUGGY] [BUGGY] ++i;  if (c == '~' && i < end) { // possibly, quote return _parseQuotedTail(input, i); }  }  return new JsonPointer(input, input.substring(1), EMPTY); } [CLASS] JsonPointer [METHOD] _parseTail [RETURN_TYPE] JsonPointer  String input [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex end i index len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	218	218	1	add	
61	[BUG] [BUGGY] if (c == '~' && i < end) { // possibly, quote return _parseQuotedTail(input, i); [FE] AssertionFailedError [CONTEXT]  for (int i = 1; i < end; ) { char c = input.charAt(i); if (c == '/') { // common case, got a segment return new JsonPointer(input, input.substring(1, i), _parseTail(input.substring(i))); } ++i;  [BUGGY] if (c == '~' && i < end) { // possibly, quote    return _parseQuotedTail(input, i); [BUGGY] return _parseQuotedTail(input, i); }  }  return new JsonPointer(input, input.substring(1), EMPTY); } [CLASS] JsonPointer [METHOD] _parseTail [RETURN_TYPE] JsonPointer  String input [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex end i index len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	220	221	1	replace	
62	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  for (int i = 1; i < end; ) { char c = input.charAt(i); if (c == '/') { // common case, got a segment return new JsonPointer(input, input.substring(1, i), _parseTail(input.substring(i))); } ++i;  [BUGGY] [BUGGY] if (c == '~' && i < end) { // possibly, quote    return _parseQuotedTail(input, i); return _parseQuotedTail(input, i); }  }  return new JsonPointer(input, input.substring(1), EMPTY); } [CLASS] JsonPointer [METHOD] _parseTail [RETURN_TYPE] JsonPointer  String input [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex end i index len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	220	221	1	add	
63	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] if (c == '/') { // common case, got a segment return new JsonPointer(input, input.substring(1, i), _parseTail(input.substring(i))); } ++i;  if (c == '~' && i < end) { // possibly, quote return _parseQuotedTail(input, i); }  [BUGGY] } [BUGGY]  return new JsonPointer(input, input.substring(1), EMPTY); } [CLASS] JsonPointer [METHOD] _parseTail [RETURN_TYPE] JsonPointer  String input [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex end i index len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	224	224	1	replace	
64	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (c == '/') { // common case, got a segment return new JsonPointer(input, input.substring(1, i), _parseTail(input.substring(i))); } ++i;  if (c == '~' && i < end) { // possibly, quote return _parseQuotedTail(input, i); }  [BUGGY] [BUGGY] }  return new JsonPointer(input, input.substring(1), EMPTY); } [CLASS] JsonPointer [METHOD] _parseTail [RETURN_TYPE] JsonPointer  String input [VARIABLES] char c JsonPointer EMPTY _nextSegment next String _asString _matchingPropertyName fullString input name segment str boolean int _matchingElementIndex end i index len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	224	224	1	add	
