bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  _parse(input,  EMPTY);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  _parse(input,  EMPTY);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  _parse(input,  EMPTY);	  return    _parse(input,    expression);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
2	[BUG]  [BUGGY]  return  _parse(input,  _nextSegment);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  _parse(input,  _nextSegment);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  _parse(input,  _nextSegment);	  return    _parse(input,    expression);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
3	[BUG]  [BUGGY]  return  _parse(input,  _asString);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  _parse(input,  _asString);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  _parse(input,  _asString);	  return    _parse(input,    expression);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
4	[BUG]  [BUGGY]  return  _parse(input,  fullString);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  _parse(input,  fullString);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  _parse(input,  fullString);	  return    _parse(input,    expression);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
5	[BUG]  [BUGGY]  return  EMPTY.compile(input,  expression);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  EMPTY.compile(input,  expression);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  EMPTY.compile(input,  expression);	  return    EMPTY.compile(input);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
6	[BUG]  [BUGGY]  return  _asString.compile(input);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  _asString.compile(input);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  _asString.compile(input);	  return    EMPTY.compile(input);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
7	[BUG]  [BUGGY]  return  _compileSegment(input);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  _compileSegment(input);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  _compileSegment(input);	  return    EMPTY.compile(input);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
8	[BUG]  [BUGGY]  ||  input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  ||  input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	||  input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(input    ==    null    ||    input.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
9	[BUG]  [BUGGY]  while(input!=  null  &&  input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  while(input!=  null  &&  input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	while(input!=  null  &&  input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(input    ==    null    ||    input.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
10	[BUG]  [BUGGY]  while(input!=  null  &&  input.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  while(input!=  null  &&  input.length()  ==  0)  {  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	while(input!=  null  &&  input.length()  ==  0)  {	  if(input    ==    null    ||    input.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
11	[BUG]  [BUGGY]  return  _parse(input,  segment,  _matchingPropertyName);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  _parse(input,  segment,  _matchingPropertyName);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  _parse(input,  segment,  _matchingPropertyName);	  return    _parse(input,    segment);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
12	[BUG]  [BUGGY]  return  _parse(input,  segment,  _asString);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  _parse(input,  segment,  _asString);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  _parse(input,  segment,  _asString);	  return    _parse(input,    segment);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
13	[BUG]  [BUGGY]  return  _parse(input,  segment,  _nextSegment);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  _parse(input,  segment,  _nextSegment);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  _parse(input,  segment,  _nextSegment);	  return    _parse(input,    segment);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
14	[BUG]  [BUGGY]  return  input.parse(input);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input.parse(input);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input.parse(input);	  return    EMPTY.parse(input);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
15	[BUG]  [BUGGY]  return  EMPTY.parse(input,  expression);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  EMPTY.parse(input,  expression);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  EMPTY.parse(input,  expression);	  return    EMPTY.parse(input);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
16	[BUG]  [BUGGY]  return  _parse(input,  input.length());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  _parse(input,  input.length());  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  _parse(input,  input.length());	  return    _parse(input,    input);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
17	[BUG]  [BUGGY]  _asString  =  input.substring(0,  input.length());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  _asString  =  input.substring(0,  input.length());  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	_asString  =  input.substring(0,  input.length());	  _asString    =    input.substring(0,    input.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
18	[BUG]  [BUGGY]  _asString  =  input.substring(0,  input.length()));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  _asString  =  input.substring(0,  input.length()));  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	_asString  =  input.substring(0,  input.length()));	  _asString    =    input.substring(0,    input.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
19	[BUG]  [BUGGY]  _asString  =  input.substring(0,  input.length()  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  _asString  =  input.substring(0,  input.length()  +  1);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	_asString  =  input.substring(0,  input.length()  +  1);	  _asString    =    input.substring(0,    input.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
20	[BUG]  [BUGGY]  return  input  ==  null?  JsonPointer.NULL  :  _matchingPropertyName(input);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input  ==  null?  JsonPointer.NULL  :  _matchingPropertyName(input);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input  ==  null?  JsonPointer.NULL  :  _matchingPropertyName(input);	  return    input!=    null?    JsonPointer.NULL    :    _matchingPropertyName(input);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
21	[BUG]  [BUGGY]  return  _matchingPropertyName!=  null?  JsonPointer.NULL  :  input;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  _matchingPropertyName!=  null?  JsonPointer.NULL  :  input;  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  _matchingPropertyName!=  null?  JsonPointer.NULL  :  input;	  return    input!=    null?    JsonPointer.NULL    :    _matchingPropertyName(input);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
22	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSegmentException( " ");  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  aughtExceptionHandler.throwAsSegmentException( " ");  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	aughtExceptionHandler.throwAsSegmentException( " ");	  if(input    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
23	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(JsonPointer.class.getClassLoader());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  Thread.currentThread().setContextClassLoader(JsonPointer.class.getClassLoader());  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	Thread.currentThread().setContextClassLoader(JsonPointer.class.getClassLoader());	  if(input    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
24	[BUG]  [BUGGY]  Thread.currentThread().setContext(new  JsonPointerContext());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  Thread.currentThread().setContext(new  JsonPointerContext());  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	Thread.currentThread().setContext(new  JsonPointerContext());	  if(input    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
25	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	Thread.currentThread().setContextClassLoader(this);	  if(input    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
26	[BUG]  [BUGGY]  _asString  =  input.substring(0,  input.length());  return  EMPTY;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  _asString  =  input.substring(0,  input.length());  return  EMPTY;  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	_asString  =  input.substring(0,  input.length());  return  EMPTY;	  _asString    =    input.substring(0,    input.length()    -    1);    return    EMPTY;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
27	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  _asString  =  input.substring(0,  input.length()  -  1);  return  EMPTY;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  if(input.length()  ==  0)  {  _asString  =  input.substring(0,  input.length()  -  1);  return  EMPTY;  }  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	if(input.length()  ==  0)  {  _asString  =  input.substring(0,  input.length()  -  1);  return  EMPTY;  }	  _asString    =    input.substring(0,    input.length()    -    1);    return    EMPTY;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
28	[BUG]  [BUGGY]  _asString  =  input.substring(0,  input.length());  return  JsonPointer.EMPTY;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  _asString  =  input.substring(0,  input.length());  return  JsonPointer.EMPTY;  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	_asString  =  input.substring(0,  input.length());  return  JsonPointer.EMPTY;	  _asString    =    input.substring(0,    input.length()    -    1);    return    EMPTY;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
29	[BUG]  [BUGGY]  if(_nextSegment!=  null)  {  _nextSegment.setString(input);  return  EMPTY;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  if(_nextSegment!=  null)  {  _nextSegment.setString(input);  return  EMPTY;  }  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	if(_nextSegment!=  null)  {  _nextSegment.setString(input);  return  EMPTY;  }	  _nextSegment.setString(input);    return    EMPTY;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
30	[BUG]  [BUGGY]  _nextSegment.setInput(input);  return  EMPTY;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  _nextSegment.setInput(input);  return  EMPTY;  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	_nextSegment.setInput(input);  return  EMPTY;	  _nextSegment.setString(input);    return    EMPTY;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
31	[BUG]  [BUGGY]  _nextSegment.setString(input);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  _nextSegment.setString(input);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	_nextSegment.setString(input);	  _nextSegment.setString(input);    return    EMPTY;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
32	[BUG]  [BUGGY]  return  input  ==  null?  JsonNull.createJsonPointer(input):  EMPTY;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input  ==  null?  JsonNull.createJsonPointer(input):  EMPTY;  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input  ==  null?  JsonNull.createJsonPointer(input):  EMPTY;	  return    input!=    null?    JsonNull.createJsonPointer(input):    EMPTY;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
33	[BUG]  [BUGGY]  return  new  JsonPointer(input,  _asString);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  new  JsonPointer(input,  _asString);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  new  JsonPointer(input,  _asString);	  return    new    JsonPointer(_asString,    input);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
34	[BUG]  [BUGGY]  return  new  JsonPointer(_asString,  _matchingPropertyName,  input);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  new  JsonPointer(_asString,  _matchingPropertyName,  input);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  new  JsonPointer(_asString,  _matchingPropertyName,  input);	  return    new    JsonPointer(_asString,    input);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
35	[BUG]  [BUGGY]  return  new  JsonPointer(_asString,  input,  _matchingPropertyName);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  new  JsonPointer(_asString,  input,  _matchingPropertyName);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  new  JsonPointer(_asString,  input,  _matchingPropertyName);	  return    new    JsonPointer(_asString,    input);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
36	[BUG]  [BUGGY]  return  new  JsonPointer(_asString,  _matchingPropertyName);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  new  JsonPointer(_asString,  _matchingPropertyName);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  new  JsonPointer(_asString,  _matchingPropertyName);	  return    new    JsonPointer(_asString,    input);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
37	[BUG]  [BUGGY]  return  input  ==  null?  JsonNull.createJsonPointer(input):  input.toString();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input  ==  null?  JsonNull.createJsonPointer(input):  input.toString();  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input  ==  null?  JsonNull.createJsonPointer(input):  input.toString();	  return    input    ==    null?    JsonNull.createJsonPointer(input):    input;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
38	[BUG]  [BUGGY]  return  input  ==  null?  JsonPointer.NULL  :  _parseString(input);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input  ==  null?  JsonPointer.NULL  :  _parseString(input);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input  ==  null?  JsonPointer.NULL  :  _parseString(input);	  return    input!=    null?    JsonPointer.NULL    :    _parseString(input);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
39	[BUG]  [BUGGY]  return  _parseString(input)!=  null?  JsonPointer.NULL  :  input;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  _parseString(input)!=  null?  JsonPointer.NULL  :  input;  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  _parseString(input)!=  null?  JsonPointer.NULL  :  input;	  return    input!=    null?    JsonPointer.NULL    :    _parseString(input);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
40	[BUG]  [BUGGY]  return  _parseString(input);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  _parseString(input);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  _parseString(input);	  return    input!=    null?    JsonPointer.NULL    :    _parseString(input);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
41	[BUG]  [BUGGY]  return  input  ==  null?  JsonPointer.NULL  :  _parseTail(input,  expression);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input  ==  null?  JsonPointer.NULL  :  _parseTail(input,  expression);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input  ==  null?  JsonPointer.NULL  :  _parseTail(input,  expression);	  return    input!=    null?    JsonPointer.NULL    :    _parseTail(input,    expression);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
42	[BUG]  [BUGGY]  return  expression!=  null?  JsonPointer.NULL  :  _parseTail(input,  input);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  expression!=  null?  JsonPointer.NULL  :  _parseTail(input,  input);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  expression!=  null?  JsonPointer.NULL  :  _parseTail(input,  input);	  return    input!=    null?    JsonPointer.NULL    :    _parseTail(input,    expression);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
43	[BUG]  [BUGGY]  return  _parseTail(input,  JsonPointer.NULL);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  _parseTail(input,  JsonPointer.NULL);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  _parseTail(input,  JsonPointer.NULL);	  return    input!=    null?    JsonPointer.NULL    :    _parseTail(input,    expression);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
44	[BUG]  [BUGGY]  return  _compile(input,  expression);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  _compile(input,  expression);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  _compile(input,  expression);	  return    _compile(input);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
45	[BUG]  [BUGGY]  return  _compile(input,  input);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  _compile(input,  input);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  _compile(input,  input);	  return    _compile(input);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
46	[BUG]  [BUGGY]  return  _compile(input,  input.length());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  _compile(input,  input.length());  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  _compile(input,  input.length());	  return    _compile(input);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
47	[BUG]  [BUGGY]  if(input!=  null  ||  input.length()  ==  0)  {  return  EMPTY;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  if(input!=  null  ||  input.length()  ==  0)  {  return  EMPTY;  }  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	if(input!=  null  ||  input.length()  ==  0)  {  return  EMPTY;  }	  if(input    ==    null    ||    input.length()    ==    0)    {    return    EMPTY;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
48	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()!=  0)  {  return  EMPTY;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  if(input  ==  null  ||  input.length()!=  0)  {  return  EMPTY;  }  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	if(input  ==  null  ||  input.length()!=  0)  {  return  EMPTY;  }	  if(input    ==    null    ||    input.length()    ==    0)    {    return    EMPTY;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
49	[BUG]  [BUGGY]  _nextSegment.setIndex(input.length());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  _nextSegment.setIndex(input.length());  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	_nextSegment.setIndex(input.length());	  _nextSegment.setIndex(input.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
50	[BUG]  [BUGGY]  _nextSegment.setIndex(Integer.toString(input.length()));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  _nextSegment.setIndex(Integer.toString(input.length()));  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	_nextSegment.setIndex(Integer.toString(input.length()));	  _nextSegment.setIndex(input.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
51	[BUG]  [BUGGY]  _nextSegment.setIndex(Integer.toHexString(input.length()));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  _nextSegment.setIndex(Integer.toHexString(input.length()));  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	_nextSegment.setIndex(Integer.toHexString(input.length()));	  _nextSegment.setIndex(input.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
52	[BUG]  [BUGGY]  _asString  =  input.substring(1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  _asString  =  input.substring(1);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	_asString  =  input.substring(1);	  _asString    =    input.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
53	[BUG]  [BUGGY]  _asString  =  input.charAt(1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  _asString  =  input.charAt(1);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	_asString  =  input.charAt(1);	  _asString    =    input.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
54	[BUG]  [BUGGY]  return  input  ==  null?  EMPTY  :  _parseTail(input,  expression);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input  ==  null?  EMPTY  :  _parseTail(input,  expression);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input  ==  null?  EMPTY  :  _parseTail(input,  expression);	  return    input    ==    null?    EMPTY    :    _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
55	[BUG]  [BUGGY]  return  input  ==  null?  EMPTY  :  _parseString(input);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input  ==  null?  EMPTY  :  _parseString(input);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input  ==  null?  EMPTY  :  _parseString(input);	  return    input!=    null?    EMPTY    :    _parseString(input);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
56	[BUG]  [BUGGY]  return  _parseString(input)!=  null?  EMPTY  :  input;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  _parseString(input)!=  null?  EMPTY  :  input;  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  _parseString(input)!=  null?  EMPTY  :  input;	  return    input!=    null?    EMPTY    :    _parseString(input);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
57	[BUG]  [BUGGY]  return  expression!=  null?  EMPTY  :  _parseTail(input,  input);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  expression!=  null?  EMPTY  :  _parseTail(input,  input);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  expression!=  null?  EMPTY  :  _parseTail(input,  input);	  return    input!=    null?    EMPTY    :    _parseTail(input,    expression);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
58	[BUG]  [BUGGY]  return  input!=  null?  EMPTY  :  _parseTail(input,  segment);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input!=  null?  EMPTY  :  _parseTail(input,  segment);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input!=  null?  EMPTY  :  _parseTail(input,  segment);	  return    input!=    null?    EMPTY    :    _parseTail(input,    expression);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
59	[BUG]  [BUGGY]  return  input  ==  null?  JsonNull.createJsonPointer(input):  input.toLowerCase();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input  ==  null?  JsonNull.createJsonPointer(input):  input.toLowerCase();  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input  ==  null?  JsonNull.createJsonPointer(input):  input.toLowerCase();	  return    input!=    null?    JsonNull.createJsonPointer(input):    input.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
60	[BUG]  [BUGGY]  if(input.length()  ==  1)  {  _asString  =  input.substring(0,  input.length()  -  1);  return  EMPTY;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  if(input.length()  ==  1)  {  _asString  =  input.substring(0,  input.length()  -  1);  return  EMPTY;  }  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	if(input.length()  ==  1)  {  _asString  =  input.substring(0,  input.length()  -  1);  return  EMPTY;  }	  _asString    =    input.substring(0,    input.length()    -    1);    return    EMPTY;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
61	[BUG]  [BUGGY]  safeMultiply(input)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  safeMultiply(input)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	safeMultiply(input)  {  throw  new  IllegalArgumentException( " ");  }	  if(input    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
62	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	Thread.currentThread().interrupt();	  if(input    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
63	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(JsonPointer.class);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  Thread.currentThread().setContextClassLoader(JsonPointer.class);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	Thread.currentThread().setContextClassLoader(JsonPointer.class);	  if(input    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
64	[BUG]  [BUGGY]  return  new  JsonPointer(_asString,  input,  _nextSegment);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  new  JsonPointer(_asString,  input,  _nextSegment);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  new  JsonPointer(_asString,  input,  _nextSegment);	  return    new    JsonPointer(_asString,    input);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
65	[BUG]  [BUGGY]  _asString  =  input.charAt(input.length()  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  _asString  =  input.charAt(input.length()  -  1);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	_asString  =  input.charAt(input.length()  -  1);	  _asString    =    input.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
66	[BUG]  [BUGGY]  _asString  =  input.charAt(0,  input.length()  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  _asString  =  input.charAt(0,  input.length()  -  1);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	_asString  =  input.charAt(0,  input.length()  -  1);	  _asString    =    input.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
67	[BUG]  [BUGGY]  ((  input  ==  null)||  input.length()  ==  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  ((  input  ==  null)||  input.length()  ==  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	((  input  ==  null)||  input.length()  ==  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(input    ==    null    ||    input.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
68	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  if(input  ==  null  ||  input.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	if(input  ==  null  ||  input.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(input    ==    null    ||    input.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
69	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  1)  {  return  EMPTY;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  if(input  ==  null  ||  input.length()  ==  1)  {  return  EMPTY;  }  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	if(input  ==  null  ||  input.length()  ==  1)  {  return  EMPTY;  }	  if(input    ==    null    ||    input.length()    ==    0)    {    return    EMPTY;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
70	[BUG]  [BUGGY]  return  EMPTY.compile(input,  _asString);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  EMPTY.compile(input,  _asString);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  EMPTY.compile(input,  _asString);	  return    EMPTY.compile(input);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
71	[BUG]  [BUGGY]  _nextSegment.setIndex(input);  return  EMPTY;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  _nextSegment.setIndex(input);  return  EMPTY;  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	_nextSegment.setIndex(input);  return  EMPTY;	  _nextSegment.setString(input);    return    EMPTY;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
72	[BUG]  [BUGGY]  return  EMPTY.parse(input,  _asString);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  EMPTY.parse(input,  _asString);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  EMPTY.parse(input,  _asString);	  return    EMPTY.parse(input);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
73	[BUG]  [BUGGY]  _nextSegment.setIndex(Input.valueOf(input.length()));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  _nextSegment.setIndex(Input.valueOf(input.length()));  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	_nextSegment.setIndex(Input.valueOf(input.length()));	  _nextSegment.setIndex(input.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
74	[BUG]  [BUGGY]  return  _parse(input,  next);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  _parse(input,  next);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  _parse(input,  next);	  return    _parse(input,    segment);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
75	[BUG]  [BUGGY]  return  input  ==  null?  JsonNull.createJsonNull(input):  input.toString();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input  ==  null?  JsonNull.createJsonNull(input):  input.toString();  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input  ==  null?  JsonNull.createJsonNull(input):  input.toString();	  return    input    ==    null?    JsonNull.createJsonNull()    :    input.toString();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
76	[BUG]  [BUGGY]  return  input!=  null?  JsonPointer.NULL  :  _parseString(input,  expression);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input!=  null?  JsonPointer.NULL  :  _parseString(input,  expression);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input!=  null?  JsonPointer.NULL  :  _parseString(input,  expression);	  return    input!=    null?    JsonPointer.NULL    :    _parseString(input);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
77	[BUG]  [BUGGY]  return  input  ==  null?  EMPTY  :  _parseInput(input);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input  ==  null?  EMPTY  :  _parseInput(input);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input  ==  null?  EMPTY  :  _parseInput(input);	  return    input    ==    null?    EMPTY    :    _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
78	[BUG]  [BUGGY]  return  input!=  null?  JsonNull.createJsonPointer(input):  DEFAULT;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input!=  null?  JsonNull.createJsonPointer(input):  DEFAULT;  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input!=  null?  JsonNull.createJsonPointer(input):  DEFAULT;	  return    input!=    null?    JsonNull.createJsonPointer(input):    EMPTY;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
79	[BUG]  [BUGGY]  return  input!=  null?  JsonPointer.NULL  :  _matchingPropertyName(input,  expression);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input!=  null?  JsonPointer.NULL  :  _matchingPropertyName(input,  expression);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input!=  null?  JsonPointer.NULL  :  _matchingPropertyName(input,  expression);	  return    input!=    null?    JsonPointer.NULL    :    _matchingPropertyName(input);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
80	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  [Delete]  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	[Delete]	  if(input    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
81	[BUG]  [BUGGY]  aughtInvalidArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  aughtInvalidArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	aughtInvalidArgumentException( " ");  }	  if(input    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
82	[BUG]  [BUGGY]  aughtInvalidArgumentException( " ");  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  aughtInvalidArgumentException( " ");  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	aughtInvalidArgumentException( " ");	  if(input    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
83	[BUG]  [BUGGY]  aughtException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  aughtException( " ");  }  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	aughtException( " ");  }	  if(input    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
84	[BUG]  [BUGGY]  while(input  ==  null  ||  input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  while(input  ==  null  ||  input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	while(input  ==  null  ||  input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(input    ==    null    ||    input.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
85	[BUG]  [BUGGY]  while(input!=  null  &&  input.length()  >  0)  {  input  =  input.substring(1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  while(input!=  null  &&  input.length()  >  0)  {  input  =  input.substring(1);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	while(input!=  null  &&  input.length()  >  0)  {  input  =  input.substring(1);	  if(input    ==    null    ||    input.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
86	[BUG]  [BUGGY]  return  input  ==  null?  JsonNull.createJsonNull()  :  input.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input  ==  null?  JsonNull.createJsonNull()  :  input.toLowerCase(Locale.ENGLISH);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input  ==  null?  JsonNull.createJsonNull()  :  input.toLowerCase(Locale.ENGLISH);	  return    input    ==    null?    JsonNull.createJsonNull()    :    input.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
87	[BUG]  [BUGGY]  return  input  ==  null?  JsonNull.createJsonNull()  :  input.toUpperCase();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input  ==  null?  JsonNull.createJsonNull()  :  input.toUpperCase();  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input  ==  null?  JsonNull.createJsonNull()  :  input.toUpperCase();	  return    input    ==    null?    JsonNull.createJsonNull()    :    input.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
88	[BUG]  [BUGGY]  return  _compilePointer(input);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  _compilePointer(input);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  _compilePointer(input);	  return    _compile(input);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
89	[BUG]  [BUGGY]  return  input!=  null?  JsonPointer.NULL  :  _parseTail(input,  fullString);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input!=  null?  JsonPointer.NULL  :  _parseTail(input,  fullString);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input!=  null?  JsonPointer.NULL  :  _parseTail(input,  fullString);	  return    input!=    null?    JsonPointer.NULL    :    _parseTail(input,    expression);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
90	[BUG]  [BUGGY]  return  input!=  null?  JsonPointer.NULL  :  _parseTail(input,  segment);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input!=  null?  JsonPointer.NULL  :  _parseTail(input,  segment);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input!=  null?  JsonPointer.NULL  :  _parseTail(input,  segment);	  return    input!=    null?    JsonPointer.NULL    :    _parseTail(input,    expression);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
91	[BUG]  [BUGGY]  return  input!=  null?  EMPTY  :  _parseString(input,  expression);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input!=  null?  EMPTY  :  _parseString(input,  expression);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input!=  null?  EMPTY  :  _parseString(input,  expression);	  return    input!=    null?    EMPTY    :    _parseString(input);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
92	[BUG]  [BUGGY]  return  _asString!=  null?  EMPTY  :  _parseString(input);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  _asString!=  null?  EMPTY  :  _parseString(input);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  _asString!=  null?  EMPTY  :  _parseString(input);	  return    input!=    null?    EMPTY    :    _parseString(input);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
93	[BUG]  [BUGGY]  if(_nextSegment  ==  null)  {  _nextSegment.setString(input);  return  EMPTY;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  if(_nextSegment  ==  null)  {  _nextSegment.setString(input);  return  EMPTY;  }  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	if(_nextSegment  ==  null)  {  _nextSegment.setString(input);  return  EMPTY;  }	  _nextSegment.setString(input);    return    EMPTY;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
94	[BUG]  [BUGGY]  return  _parse(input,  nextSegment);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  _parse(input,  nextSegment);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  _parse(input,  nextSegment);	  return    _parse(input,    segment);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
95	[BUG]  [BUGGY]  return  input!=  null?  EMPTY  :  input.parse(input);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input!=  null?  EMPTY  :  input.parse(input);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input!=  null?  EMPTY  :  input.parse(input);	  return    EMPTY.parse(input);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
96	[BUG]  [BUGGY]  return  input  ==  null?  EMPTY  :  input.parse(input);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input  ==  null?  EMPTY  :  input.parse(input);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input  ==  null?  EMPTY  :  input.parse(input);	  return    EMPTY.parse(input);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
97	[BUG]  [BUGGY]  return  _asString.parse(input);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  _asString.parse(input);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  _asString.parse(input);	  return    EMPTY.parse(input);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
98	[BUG]  [BUGGY]  return  input!=  null?  EMPTY  :  _parseTail(input,  nextSegment);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input!=  null?  EMPTY  :  _parseTail(input,  nextSegment);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input!=  null?  EMPTY  :  _parseTail(input,  nextSegment);	  return    input!=    null?    EMPTY    :    _parseTail(input,    expression);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
99	[BUG]  [BUGGY]  return  input!=  null?  EMPTY  :  _parseTail(input,  fullString);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input!=  null?  EMPTY  :  _parseTail(input,  fullString);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input!=  null?  EMPTY  :  _parseTail(input,  fullString);	  return    input!=    null?    EMPTY    :    _parseTail(input,    expression);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
100	[BUG]  [BUGGY]  return  input!=  null?  EMPTY  :  _parseTail(input,  _nextSegment);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input!=  null?  EMPTY  :  _parseTail(input,  _nextSegment);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input!=  null?  EMPTY  :  _parseTail(input,  _nextSegment);	  return    input!=    null?    EMPTY    :    _parseTail(input,    expression);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
101	[BUG]  [BUGGY]  return  input!=  null?  EMPTY  :  input.compile(input);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input!=  null?  EMPTY  :  input.compile(input);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input!=  null?  EMPTY  :  input.compile(input);	  return    EMPTY.compile(input);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
102	[BUG]  [BUGGY]  return  input  ==  null?  EMPTY  :  input.compile(input);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input  ==  null?  EMPTY  :  input.compile(input);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input  ==  null?  EMPTY  :  input.compile(input);	  return    EMPTY.compile(input);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
103	[BUG]  [BUGGY]  return  input!=  null?  JsonNull.createJsonPointer(input).toString()  :  input.toString();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input!=  null?  JsonNull.createJsonPointer(input).toString()  :  input.toString();  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input!=  null?  JsonNull.createJsonPointer(input).toString()  :  input.toString();	  return    input!=    null?    JsonNull.createJsonPointer(input):    input.toString();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
104	[BUG]  [BUGGY]  return  input!=  null?  JsonNull.createJsonPointer(input):  input.toString()  + "n ";  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input!=  null?  JsonNull.createJsonPointer(input):  input.toString()  + "n ";  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input!=  null?  JsonNull.createJsonPointer(input):  input.toString()  + "n ";	  return    input!=    null?    JsonNull.createJsonPointer(input):    input.toString();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
105	[BUG]  [BUGGY]  return  input!=  null?  JsonNull.createJsonPointer(input):  input.toUpperCase();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input!=  null?  JsonNull.createJsonPointer(input):  input.toUpperCase();  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input!=  null?  JsonNull.createJsonPointer(input):  input.toUpperCase();	  return    input!=    null?    JsonNull.createJsonPointer(input):    input.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
106	[BUG]  [BUGGY]  return  input!=  null?  JsonNull.createJsonPointer(input).toLowerCase()  :  input.toLowerCase();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input!=  null?  JsonNull.createJsonPointer(input).toLowerCase()  :  input.toLowerCase();  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input!=  null?  JsonNull.createJsonPointer(input).toLowerCase()  :  input.toLowerCase();	  return    input!=    null?    JsonNull.createJsonPointer(input):    input.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
107	[BUG]  [BUGGY]  _asString  =  input.substring(0,  input.length())+  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  _asString  =  input.substring(0,  input.length())+  1;  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	_asString  =  input.substring(0,  input.length())+  1;	  _asString    =    input.substring(0,    input.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
108	[BUG]  [BUGGY]  _nextSegment.setIndex(Input.parseInt(input.length()));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  _nextSegment.setIndex(Input.parseInt(input.length()));  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	_nextSegment.setIndex(Input.parseInt(input.length()));	  _nextSegment.setIndex(input.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
109	[BUG]  [BUGGY]  _nextSegment.setIndex(Input.DEFAULT_INDEX,  input.length());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  _nextSegment.setIndex(Input.DEFAULT_INDEX,  input.length());  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	_nextSegment.setIndex(Input.DEFAULT_INDEX,  input.length());	  _nextSegment.setIndex(input.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
110	[BUG]  [BUGGY]  _nextSegment.setIndex(input.length()  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  _nextSegment.setIndex(input.length()  +  1);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	_nextSegment.setIndex(input.length()  +  1);	  _nextSegment.setIndex(input.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
111	[BUG]  [BUGGY]  return  new  JsonPointer(_asString,  _propertyName,  input);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  new  JsonPointer(_asString,  _propertyName,  input);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  new  JsonPointer(_asString,  _propertyName,  input);	  return    new    JsonPointer(_asString,    input);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
112	[BUG]  [BUGGY]  return  input!=  null?  JsonNull.createJsonNull()  :  input.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input!=  null?  JsonNull.createJsonNull()  :  input.toLowerCase(Locale.ENGLISH);  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input!=  null?  JsonNull.createJsonNull()  :  input.toLowerCase(Locale.ENGLISH);	  return    input!=    null?    JsonNull.createJsonNull()    :    input.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
113	[BUG]  [BUGGY]  return  input!=  null?  JsonNull.createJsonNull()  :  input.toUpperCase();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  return  input!=  null?  JsonNull.createJsonNull()  :  input.toUpperCase();  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input!=  null?  JsonNull.createJsonNull()  :  input.toUpperCase();	  return    input!=    null?    JsonNull.createJsonNull()    :    input.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
114	[BUG]  [BUGGY]  if(input.charAt(0)  ==  '/')  {  _asString  =  input.substring(0,  input.length()  -  1);  return  EMPTY;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  if(input.charAt(0)  ==  '/')  {  _asString  =  input.substring(0,  input.length()  -  1);  return  EMPTY;  }  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	if(input.charAt(0)  ==  '/')  {  _asString  =  input.substring(0,  input.length()  -  1);  return  EMPTY;  }	  _asString    =    input.substring(0,    input.length()    -    1);    return    EMPTY;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
115	[BUG]  [BUGGY]  if(input.charAt(0)!=  '/')  {  _asString  =  input.substring(0,  input.length()  -  1);  return  EMPTY;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }      [BUGGY]  if(input.charAt(0)!=  '/')  {  _asString  =  input.substring(0,  input.length()  -  1);  return  EMPTY;  }  [BUGGY]      }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	if(input.charAt(0)!=  '/')  {  _asString  =  input.substring(0,  input.length()  -  1);  return  EMPTY;  }	  _asString    =    input.substring(0,    input.length()    -    1);    return    EMPTY;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
