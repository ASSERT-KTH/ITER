bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  input!=  null?  JsonNull.createJsonNull()  :  input;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException( "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':   "+ "\ " "+input+ "\ " ");  }  [BUGGY]  return  input!=  null?  JsonNull.createJsonNull()  :  input;  [BUGGY]  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input!=  null?  JsonNull.createJsonNull()  :  input;	return  _parseTail(input);  	non-compiled	[CE]  illegal  start  of  type	39	None	replace
2	[BUG]  [BUGGY]  return  input  ==  null?  JsonNull.createJsonNull()  :  input;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException( "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':   "+ "\ " "+input+ "\ " ");  }  [BUGGY]  return  input  ==  null?  JsonNull.createJsonNull()  :  input;  [BUGGY]  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input  ==  null?  JsonNull.createJsonNull()  :  input;	return  _parseTail(input);  	non-compiled	[CE]  illegal  start  of  type	39	None	replace
3	[BUG]  [BUGGY]  return  input!=  null?  EMPTY  :  _parseTail(input);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException( "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':   "+ "\ " "+input+ "\ " ");  }  [BUGGY]  return  input!=  null?  EMPTY  :  _parseTail(input);  [BUGGY]  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input!=  null?  EMPTY  :  _parseTail(input);	return  _parseTail(input);  	non-compiled	[CE]  illegal  start  of  type	39	None	replace
4	[BUG]  [BUGGY]  return  _parse(input);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException( "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':   "+ "\ " "+input+ "\ " ");  }  [BUGGY]  return  _parse(input);  [BUGGY]  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  _parse(input);	return  _parseTail(input);  	non-compiled	[CE]  illegal  start  of  type	39	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException( "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':   "+ "\ " "+input+ "\ " ");  }  [BUGGY]    [BUGGY]  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	  	return  _parseTail(input);  	non-compiled	[CE]  illegal  start  of  type	39	None	replace
6	[BUG]  [BUGGY]  return  input!=  null?  JsonPointer.NULL  :  _parseTail(input);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException( "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':   "+ "\ " "+input+ "\ " ");  }  [BUGGY]  return  input!=  null?  JsonPointer.NULL  :  _parseTail(input);  [BUGGY]  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input!=  null?  JsonPointer.NULL  :  _parseTail(input);	return  _parseTail(input);  	non-compiled	[CE]  illegal  start  of  type	39	None	replace
7	[BUG]  [BUGGY]  return  input!=  null?  JsonNull.createJsonPointer(input):  input;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException( "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':   "+ "\ " "+input+ "\ " ");  }  [BUGGY]  return  input!=  null?  JsonNull.createJsonPointer(input):  input;  [BUGGY]  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	98	98	1	replace	return  input!=  null?  JsonNull.createJsonPointer(input):  input;	return  _parseTail(input);  	non-compiled	[CE]  illegal  start  of  type	39	None	replace
