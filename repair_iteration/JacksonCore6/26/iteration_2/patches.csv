bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  char  end  =  _matchingPropertyName.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  final  char  end  =  _matchingPropertyName.length();  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	final  char  end  =  _matchingPropertyName.length();	  final    int    end    =    _matchingPropertyName.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  final  char  end  =  output.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  final  char  end  =  output.length();  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	final  char  end  =  output.length();	  final    int    end    =    output.length();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
3	[BUG]  [BUGGY]  String  end  =  input.charAt(0);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  String  end  =  input.charAt(0);  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	String  end  =  input.charAt(0);	  char    end    =    input.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
4	[BUG]  [BUGGY]  char  end  =  input.charAt(1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  char  end  =  input.charAt(1);  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	char  end  =  input.charAt(1);	  char    end    =    input.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
5	[BUG]  [BUGGY]  char  end  =  input.charAt(0,  len);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  char  end  =  input.charAt(0,  len);  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	char  end  =  input.charAt(0,  len);	  char    end    =    input.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
6	[BUG]  [BUGGY]  JsonPointer  end  =  _parseJsonPointer(input,  true);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  JsonPointer  end  =  _parseJsonPointer(input,  true);  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	JsonPointer  end  =  _parseJsonPointer(input,  true);	  JsonPointer    end    =    _parseJsonPointer(input);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
7	[BUG]  [BUGGY]  JsonPointer  end  =  _parseJsonPointer(input,  _nextSegment);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  JsonPointer  end  =  _parseJsonPointer(input,  _nextSegment);  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	JsonPointer  end  =  _parseJsonPointer(input,  _nextSegment);	  JsonPointer    end    =    _parseJsonPointer(input);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
8	[BUG]  [BUGGY]  JsonPointer  end  =  _parseJsonPointer(input,  _asString);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  JsonPointer  end  =  _parseJsonPointer(input,  _asString);  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	JsonPointer  end  =  _parseJsonPointer(input,  _asString);	  JsonPointer    end    =    _parseJsonPointer(input);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
9	[BUG]  [BUGGY]  final  String  end  =  _matchingPropertyName.length();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  final  String  end  =  _matchingPropertyName.length();  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	final  String  end  =  _matchingPropertyName.length();	  final    int    end    =    _matchingPropertyName.length();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
10	[BUG]  [BUGGY]  final  int  end  =  _matchingElementIndex.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  final  int  end  =  _matchingElementIndex.length();  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	final  int  end  =  _matchingElementIndex.length();	  final    int    end    =    _matchingPropertyName.length();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
11	[BUG]  [BUGGY]  char  end  =  input.charAt(input.length());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  char  end  =  input.charAt(input.length());  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	char  end  =  input.charAt(input.length());	  char    end    =    input.charAt(input.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
12	[BUG]  [BUGGY]  String  end  =  input.charAt(input.length()  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  String  end  =  input.charAt(input.length()  -  1);  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	String  end  =  input.charAt(input.length()  -  1);	  char    end    =    input.charAt(input.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
13	[BUG]  [BUGGY]  char  end  =  input.charAt(input.length())+  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  char  end  =  input.charAt(input.length())+  1;  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	char  end  =  input.charAt(input.length())+  1;	  char    end    =    input.charAt(input.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
14	[BUG]  [BUGGY]  char  c  =  input.charAt(i  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  char  c  =  input.charAt(i  +  1);  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	char  c  =  input.charAt(i  +  1);	  char    c    =    input.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
15	[BUG]  [BUGGY]  String  c  =  input.charAt(i);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  String  c  =  input.charAt(i);  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	String  c  =  input.charAt(i);	  char    c    =    input.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  final  String  end  =  input.length();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  final  String  end  =  input.length();  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	final  String  end  =  input.length();	  final    char    end    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
17	[BUG]  [BUGGY]  JsonPointer  end  =  _parseTail(input,  true);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  JsonPointer  end  =  _parseTail(input,  true);  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	JsonPointer  end  =  _parseTail(input,  true);	  JsonPointer    end    =    _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
18	[BUG]  [BUGGY]  JsonPointer  end  =  _parseTail(input,  false);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  JsonPointer  end  =  _parseTail(input,  false);  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	JsonPointer  end  =  _parseTail(input,  false);	  JsonPointer    end    =    _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
19	[BUG]  [BUGGY]  int  end  =  _matchingElementIndex(input,  len);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  int  end  =  _matchingElementIndex(input,  len);  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	int  end  =  _matchingElementIndex(input,  len);	  int    end    =    _matchingElementIndex(input);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
20	[BUG]  [BUGGY]  int  end  =  _matchingPropertyIndex(input);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  int  end  =  _matchingPropertyIndex(input);  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	int  end  =  _matchingPropertyIndex(input);	  int    end    =    _matchingElementIndex(input);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
21	[BUG]  [BUGGY]  int  end  =  _matchingPropertyName(input);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  int  end  =  _matchingPropertyName(input);  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	int  end  =  _matchingPropertyName(input);	  int    end    =    _matchingElementIndex(input);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
22	[BUG]  [BUGGY]  int  end  =  input.length()  +  _matchingElementIndex;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  int  end  =  input.length()  +  _matchingElementIndex;  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	int  end  =  input.length()  +  _matchingElementIndex;	  int    end    =    _matchingElementIndex    +    input.length();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
23	[BUG]  [BUGGY]  int  end  =  input  +  _matchingElementIndex.length();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  int  end  =  input  +  _matchingElementIndex.length();  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	int  end  =  input  +  _matchingElementIndex.length();	  int    end    =    _matchingElementIndex    +    input.length();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
24	[BUG]  [BUGGY]  String  c  =  input.charAt(0);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  String  c  =  input.charAt(0);  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	String  c  =  input.charAt(0);	  char    c    =    input.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
25	[BUG]  [BUGGY]  char  c  =  input.charAt(1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  char  c  =  input.charAt(1);  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	char  c  =  input.charAt(1);	  char    c    =    input.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
26	[BUG]  [BUGGY]  int  end  =  input.length()  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  int  end  =  input.length()  -  1;  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	int  end  =  input.length()  -  1;	  int    end    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
27	[BUG]  [BUGGY]  int  end  =  input.length()  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  int  end  =  input.length()  +  1;  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	int  end  =  input.length()  +  1;	  int    end    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
28	[BUG]  [BUGGY]  int  end  =  input.length()  -  2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  int  end  =  input.length()  -  2;  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	int  end  =  input.length()  -  2;	  int    end    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
29	[BUG]  [BUGGY]  final  int  end  =  _matchingElement.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  final  int  end  =  _matchingElement.length();  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	final  int  end  =  _matchingElement.length();	  final    int    end    =    output.length();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
30	[BUG]  [BUGGY]  char  end  =  input.charAt(0,  input.length());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  char  end  =  input.charAt(0,  input.length());  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	char  end  =  input.charAt(0,  input.length());	  char    end    =    input.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
31	[BUG]  [BUGGY]  JsonPointer  end  =  _parse(input);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  JsonPointer  end  =  _parse(input);  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	JsonPointer  end  =  _parse(input);	  JsonPointer    end    =    _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
32	[BUG]  [BUGGY]  String  end  =  input.charAt(1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  String  end  =  input.charAt(1);  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	String  end  =  input.charAt(1);	  char    end    =    input.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
33	[BUG]  [BUGGY]  JsonPointer  end  =  _parseJsonPointer(input,  this);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  JsonPointer  end  =  _parseJsonPointer(input,  this);  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	JsonPointer  end  =  _parseJsonPointer(input,  this);	  JsonPointer    end    =    _parseJsonPointer(input);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
34	[BUG]  [BUGGY]  String  c  =  input.charAt(1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  String  c  =  input.charAt(1);  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	String  c  =  input.charAt(1);	  char    c    =    input.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
35	[BUG]  [BUGGY]  JsonPointer  end  =  _parseSegment(input);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {      [BUGGY]  JsonPointer  end  =  _parseSegment(input);  [BUGGY]        for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	JsonPointer  end  =  _parseSegment(input);	  JsonPointer    end    =    _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
