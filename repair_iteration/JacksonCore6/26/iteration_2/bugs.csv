bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  char  end  =  input.length();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {    [BUGGY]  final  char  end  =  input.length();  [BUGGY]      for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	final  char  end  =  input.length();	  final    int    end    =    input.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
2	[BUG]  [BUGGY]  final  int  end  =  _matchingPropertyName.length();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {    [BUGGY]  final  int  end  =  _matchingPropertyName.length();  [BUGGY]      for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	final  int  end  =  _matchingPropertyName.length();	  final    int    end    =    input.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
3	[BUG]  [BUGGY]  final  int  end  =  _matchingPropertyName.length()  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {    [BUGGY]  final  int  end  =  _matchingPropertyName.length()  -  1;  [BUGGY]      for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	final  int  end  =  _matchingPropertyName.length()  -  1;	  final    int    end    =    input.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
4	[BUG]  [BUGGY]  char  c  =  input.charAt(i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {    [BUGGY]  char  c  =  input.charAt(i);  [BUGGY]      for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	char  c  =  input.charAt(i);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
5	[BUG]  [BUGGY]  char  c  =  input.charAt(0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {    [BUGGY]  char  c  =  input.charAt(0);  [BUGGY]      for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	char  c  =  input.charAt(0);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
6	[BUG]  [BUGGY]  JsonPointer  end  =  _parseJsonPointer(input);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {    [BUGGY]  JsonPointer  end  =  _parseJsonPointer(input);  [BUGGY]      for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	JsonPointer  end  =  _parseJsonPointer(input);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
7	[BUG]  [BUGGY]  JsonPointer  end  =  _parseTail(input);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {    [BUGGY]  JsonPointer  end  =  _parseTail(input);  [BUGGY]      for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	JsonPointer  end  =  _parseTail(input);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
8	[BUG]  [BUGGY]  final  int  end  =  output.length();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {    [BUGGY]  final  int  end  =  output.length();  [BUGGY]      for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	final  int  end  =  output.length();	  final    int    end    =    input.length()    -    2;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
9	[BUG]  [BUGGY]  int  end  =  input.length();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {    [BUGGY]  int  end  =  input.length();  [BUGGY]      for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	int  end  =  input.length();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
10	[BUG]  [BUGGY]  char  end  =  input.charAt(0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {    [BUGGY]  char  end  =  input.charAt(0);  [BUGGY]      for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	char  end  =  input.charAt(0);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
11	[BUG]  [BUGGY]  char  end  =  input.charAt(input.length()  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {    [BUGGY]  char  end  =  input.charAt(input.length()  -  1);  [BUGGY]      for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	char  end  =  input.charAt(input.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
12	[BUG]  [BUGGY]  int  end  =  _matchingElementIndex  +  input.length();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {    [BUGGY]  int  end  =  _matchingElementIndex  +  input.length();  [BUGGY]      for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	int  end  =  _matchingElementIndex  +  input.length();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
13	[BUG]  [BUGGY]  int  end  =  _matchingElementIndex(input);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {    [BUGGY]  int  end  =  _matchingElementIndex(input);  [BUGGY]      for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore6/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.4472135954999579	209	209	1	replace	int  end  =  _matchingElementIndex(input);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
