bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  super.applyPattern(pattern,  toPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  [BUGGY]  super.applyPattern(pattern,  toPattern);  [BUGGY]  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  toPattern);	super.applyPattern(pattern);  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
2	[BUG]  [BUGGY]  super.applyPattern(pattern,  pos);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  [BUGGY]  super.applyPattern(pattern,  pos);  [BUGGY]  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  pos);	super.applyPattern(pattern);  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
3	[BUG]  [BUGGY]    [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  [BUGGY]    [BUGGY]  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	  	super.applyPattern(pattern);  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
4	[BUG]  [BUGGY]    Pattern  toPattern  =  registry.getFormat( "toPattern ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  [BUGGY]    Pattern  toPattern  =  registry.getFormat( "toPattern ");  [BUGGY]  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	    Pattern  toPattern  =  registry.getFormat( "toPattern ");		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	add
5	[BUG]  [BUGGY]    Iterator  <  String>  it  =  this.registry.getIterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  [BUGGY]    Iterator  <  String>  it  =  this.registry.getIterator();  [BUGGY]  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	    Iterator  <  String>  it  =  this.registry.getIterator();		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	add
6	[BUG]  [BUGGY]    Iterator  <  String>  it  =  this.registry.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  [BUGGY]    Iterator  <  String>  it  =  this.registry.iterator();  [BUGGY]  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	    Iterator  <  String>  it  =  this.registry.iterator();		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	add
7	[BUG]  [BUGGY]    int  fmtCount  =  pattern.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  [BUGGY]    int  fmtCount  =  pattern.length();  [BUGGY]  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	    int  fmtCount  =  pattern.length();		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	add
8	[BUG]  [BUGGY]    Iterator  <  String>  it  =  registry.getIterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  [BUGGY]    Iterator  <  String>  it  =  registry.getIterator();  [BUGGY]  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	    Iterator  <  String>  it  =  registry.getIterator();		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	add
9	[BUG]  [BUGGY]    Iterator  <  String>  it  =  registry.getFormats().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  [BUGGY]    Iterator  <  String>  it  =  registry.getFormats().iterator();  [BUGGY]  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	    Iterator  <  String>  it  =  registry.getFormats().iterator();		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	add
10	[BUG]  [BUGGY]    Pattern  toPattern  =(Pattern)registry.getFormat( "toPattern ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  [BUGGY]    Pattern  toPattern  =(Pattern)registry.getFormat( "toPattern ");  [BUGGY]  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	    Pattern  toPattern  =(Pattern)registry.getFormat( "toPattern ");		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	add
11	[BUG]  [BUGGY]    Pattern  toPattern  =(Pattern)registry.getFormat( "ToPattern ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  [BUGGY]    Pattern  toPattern  =(Pattern)registry.getFormat( "ToPattern ");  [BUGGY]  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	    Pattern  toPattern  =(Pattern)registry.getFormat( "ToPattern ");		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	add
12	[BUG]  [BUGGY]  super.applyPattern(pattern,  null);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  [BUGGY]  super.applyPattern(pattern,  null);  [BUGGY]  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  null);	super.applyPattern(pattern);  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
13	[BUG]  [BUGGY]  super.applyPattern(pattern,  false);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  [BUGGY]  super.applyPattern(pattern,  false);  [BUGGY]  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	super.applyPattern(pattern,  false);	super.applyPattern(pattern);  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
14	[BUG]  [BUGGY]    Iterator  <  String>  it  =  registry.getFormat().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  [BUGGY]    Iterator  <  String>  it  =  registry.getFormat().iterator();  [BUGGY]  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	    Iterator  <  String>  it  =  registry.getFormat().iterator();		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	add
15	[BUG]  [BUGGY]    Iterator  <  Object>  it  =  registry.getIterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  [BUGGY]    Iterator  <  Object>  it  =  registry.getIterator();  [BUGGY]  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	    Iterator  <  Object>  it  =  registry.getIterator();		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	add
16	[BUG]  [BUGGY]    Iterator  <  String>  it  =  registry.getFormat().entities().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  [BUGGY]    Iterator  <  String>  it  =  registry.getFormat().entities().iterator();  [BUGGY]  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	    Iterator  <  String>  it  =  registry.getFormat().entities().iterator();		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	add
17	[BUG]  [BUGGY]    Iterator  <  Object>  it  =  this.registry.getIterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  [BUGGY]    Iterator  <  Object>  it  =  this.registry.getIterator();  [BUGGY]  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	144	144	1	replace	    Iterator  <  Object>  it  =  this.registry.getIterator();		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	add
