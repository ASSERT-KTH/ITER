bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  pos.getLastChild();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  pos.getLastChild();  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  pos.getLastChild();	  return    pos.getParent();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
2	[BUG]  [BUGGY]  return  new  ParsePosition(pos.intValue(),  pos.intValue()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.intValue(),  pos.intValue()  +  1);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.intValue(),  pos.intValue()  +  1);	  return    pos.intValue()    +    3;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
3	[BUG]  [BUGGY]  ParsePosition  args  =  new  ParsePosition(pos.getValue());  pos.setIndex(args.getIndex()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  args  =  new  ParsePosition(pos.getValue());  pos.setIndex(args.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  args  =  new  ParsePosition(pos.getValue());  pos.setIndex(args.getIndex()  +  1);	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getValue());    pos.setIndex(args.getIndex()    +    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
4	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getValue());  pos.setIndex  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getValue());  pos.setIndex  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getValue());  pos.setIndex	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getValue());    pos.setIndex(args.getIndex()    +    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
5	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getValue());  pos.set  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getValue());  pos.set  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getValue());  pos.set	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getValue());    pos.setIndex(args.getIndex()    +    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
6	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getValue());  pos.setIndex(args.get  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getValue());  pos.setIndex(args.get  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getValue());  pos.setIndex(args.get	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getValue());    pos.setIndex(args.getIndex()    +    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
7	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getValue()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getValue()  +  1);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getValue()  +  1);	  return    new    ParsePosition(pos.getValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
8	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getIndex());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getIndex());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getIndex());	  return    new    ParsePosition(pos.getValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
9	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getLineno());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getLineno());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getLineno());	  return    new    ParsePosition(pos.getValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
10	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getKey());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getKey());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getKey());	  return    new    ParsePosition(pos.getValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
11	[BUG]  [BUGGY]  return  pos.clonePosition()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  pos.clonePosition()  +  1;  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  pos.clonePosition()  +  1;	  return    pos.clonePosition();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
12	[BUG]  [BUGGY]  return  new  ParsePosition(pos.intValue()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.intValue()  +  1);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.intValue()  +  1);	  return    new    ParsePosition(pos.intValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
13	[BUG]  [BUGGY]  return  new  ParsePosition(pos.intValue(),  pos.getIndex());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.intValue(),  pos.getIndex());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.intValue(),  pos.getIndex());	  return    new    ParsePosition(pos.intValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
14	[BUG]  [BUGGY]  return  new  ParsePosition(pos.intValue(),  pos.length());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.intValue(),  pos.length());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.intValue(),  pos.length());	  return    new    ParsePosition(pos.intValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
15	[BUG]  [BUGGY]  return  new  ParsePosition(pos.intValue()  +  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.intValue()  +  2);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.intValue()  +  2);	  return    new    ParsePosition(pos.intValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
16	[BUG]  [BUGGY]  return  next(pos.getValue()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  next(pos.getValue()  +  1);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  next(pos.getValue()  +  1);	  return    pos.getValue()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
17	[BUG]  [BUGGY]  return  pos.getIndex()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  pos.getIndex()  +  1;  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  pos.getIndex()  +  1;	  return    pos.getIndex();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
18	[BUG]  [BUGGY]  return  pos.getIndex()  +  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  pos.getIndex()  +  2;  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  pos.getIndex()  +  2;	  return    pos.getIndex();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
19	[BUG]  [BUGGY]  return  pos.getStartIndex();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  pos.getStartIndex();  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  pos.getStartIndex();	  return    pos.getIndex();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
20	[BUG]  [BUGGY]  ParsePosition  pos  =  next(pos.getKey(),  pos.getIndex());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  next(pos.getKey(),  pos.getIndex());  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  next(pos.getKey(),  pos.getIndex());	  ParsePosition    pos    =    next(pos.getKey());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
21	[BUG]  [BUGGY]  ParsePosition  pos  =  next(pos.getKey()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  next(pos.getKey()  +  1);  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  next(pos.getKey()  +  1);	  ParsePosition    pos    =    next(pos.getKey());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
22	[BUG]  [BUGGY]  ParsePosition  pos  =  next(pos.getKey(),  pos.getEndIndex());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  next(pos.getKey(),  pos.getEndIndex());  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  next(pos.getKey(),  pos.getEndIndex());	  ParsePosition    pos    =    next(pos.getKey());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
23	[BUG]  [BUGGY]  ParsePosition  pos  =  next(pos.getName()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  next(pos.getName()  +  1);  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  next(pos.getName()  +  1);	  ParsePosition    pos    =    next(pos.getName());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
24	[BUG]  [BUGGY]  ParsePosition  pos  =  next(pos.getName(),  pos.getIndex());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  next(pos.getName(),  pos.getIndex());  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  next(pos.getName(),  pos.getIndex());	  ParsePosition    pos    =    next(pos.getName());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
25	[BUG]  [BUGGY]  return  new  ParsePosition(registry.cloneTree(),  pos);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(registry.cloneTree(),  pos);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(registry.cloneTree(),  pos);	  return    new    ParsePosition(pos.cloneTree(),    pos);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
26	[BUG]  [BUGGY]  return  new  ParsePosition(pos.cloneTree(),  START_FMT);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.cloneTree(),  START_FMT);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.cloneTree(),  START_FMT);	  return    new    ParsePosition(pos.cloneTree(),    pos);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
27	[BUG]  [BUGGY]  return  new  ParsePosition(pos.cloneTree(),  pos.getIndex());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.cloneTree(),  pos.getIndex());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.cloneTree(),  pos.getIndex());	  return    new    ParsePosition(pos.cloneTree(),    pos);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
28	[BUG]  [BUGGY]  return  new  ParsePosition(pos.cloneTree(),  DEFAULT_QUOTE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.cloneTree(),  DEFAULT_QUOTE);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.cloneTree(),  DEFAULT_QUOTE);	  return    new    ParsePosition(pos.cloneTree(),    pos);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
29	[BUG]  [BUGGY]  return(pos.intValue()  <  2)?  pos.intValue()  :  pos.intValue();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return(pos.intValue()  <  2)?  pos.intValue()  :  pos.intValue();  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return(pos.intValue()  <  2)?  pos.intValue()  :  pos.intValue();	  return    pos.intValue()    +    2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
30	[BUG]  [BUGGY]  return(pos.getValue()  <  2)?  pos.getValue()  :  pos.getValue();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return(pos.getValue()  <  2)?  pos.getValue()  :  pos.getValue();  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return(pos.getValue()  <  2)?  pos.getValue()  :  pos.getValue();	  return    pos.getValue()    +    2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
31	[BUG]  [BUGGY]  return(pos.getValue()  <  2)?  null  :  pos.getValue();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return(pos.getValue()  <  2)?  null  :  pos.getValue();  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return(pos.getValue()  <  2)?  null  :  pos.getValue();	  return    pos.getValue()    +    2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
32	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getValue(),  pos.getIndex());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getValue(),  pos.getIndex());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getValue(),  pos.getIndex());	  return    pos.getValue()    +    2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
33	[BUG]  [BUGGY]  ParsePosition  pos  =  new  ParsePosition(pos.clone(),  pos.clone());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  new  ParsePosition(pos.clone(),  pos.clone());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  new  ParsePosition(pos.clone(),  pos.clone());	  return    new    ParsePosition(pos.clone(),    pos.clone());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
34	[BUG]  [BUGGY]  return  new  ParsePosition(pos.clone(),  pos.clone()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.clone(),  pos.clone()  +  1);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.clone(),  pos.clone()  +  1);	  return    new    ParsePosition(pos.clone(),    pos.clone());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
35	[BUG]  [BUGGY]  return  new  ParsePosition(registry.clone(),  pos.clone());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(registry.clone(),  pos.clone());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(registry.clone(),  pos.clone());	  return    new    ParsePosition(pos.clone(),    pos.clone());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
36	[BUG]  [BUGGY]  ParsePosition  pos  =  next(p.getIndex());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  next(p.getIndex());  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  next(p.getIndex());	  ParsePosition    pos    =    next(pos.getIndex()    +    2);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
37	[BUG]  [BUGGY]  ParsePosition  pos  =  next(position.getIndex());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  next(position.getIndex());  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  next(position.getIndex());	  ParsePosition    pos    =    next(pos.getIndex()    +    2);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
38	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getStart(),  pos.getEnd()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getStart(),  pos.getEnd()  +  1);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getStart(),  pos.getEnd()  +  1);	  return    new    ParsePosition(pos.getStart(),    pos.getEnd());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
39	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getEnd(),  pos.getStart());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getEnd(),  pos.getStart());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getEnd(),  pos.getStart());	  return    new    ParsePosition(pos.getStart(),    pos.getEnd());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
40	[BUG]  [BUGGY]  ParsePosition  pos  =  new  ParsePosition(pos.getStart(),  pos.getEnd());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  new  ParsePosition(pos.getStart(),  pos.getEnd());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  new  ParsePosition(pos.getStart(),  pos.getEnd());	  return    new    ParsePosition(pos.getStart(),    pos.getEnd());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
41	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getStart(),  pos.getEnd()  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getStart(),  pos.getEnd()  -  1);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getStart(),  pos.getEnd()  -  1);	  return    new    ParsePosition(pos.getStart(),    pos.getEnd());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
42	[BUG]  [BUGGY]  ParsePosition  pos  =  next(pos.getStartIndex()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  next(pos.getStartIndex()  +  1);  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  next(pos.getStartIndex()  +  1);	  ParsePosition    pos    =    next(pos.getStartIndex());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
43	[BUG]  [BUGGY]  ParsePosition  pos  =  next(pos.getEndIndex());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  next(pos.getEndIndex());  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  next(pos.getEndIndex());	  ParsePosition    pos    =    next(pos.getStartIndex());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
44	[BUG]  [BUGGY]  ParsePosition  pos  =  next(pos.getStartIndex()  +  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                            OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  next(pos.getStartIndex()  +  2);  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  next(pos.getStartIndex()  +  2);	  ParsePosition    pos    =    next(pos.getStartIndex());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
45	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getPosition(),  pos.getIndex());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getPosition(),  pos.getIndex());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getPosition(),  pos.getIndex());	  return    pos.getPosition()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
46	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getPosition()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getPosition()  +  1);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getPosition()  +  1);	  return    pos.getPosition()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
47	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getKey(),  pos.getValue()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getKey(),  pos.getValue()  +  1);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getKey(),  pos.getValue()  +  1);	  return    new    ParsePosition(pos.getKey(),    pos.getValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
48	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getValue(),  pos.getKey());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getValue(),  pos.getKey());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getValue(),  pos.getKey());	  return    new    ParsePosition(pos.getKey(),    pos.getValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
49	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getKey(),  pos.getIndex());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getKey(),  pos.getIndex());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getKey(),  pos.getIndex());	  return    new    ParsePosition(pos.getKey(),    pos.getValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
50	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getPosition());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getPosition());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getPosition());	  return    pos.getPosition()    +    3;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
51	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getPosition()  +  3);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getPosition()  +  3);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getPosition()  +  3);	  return    pos.getPosition()    +    3;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
52	[BUG]  [BUGGY]  pos.setIndex(this,  pos.getIndex()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  pos.setIndex(this,  pos.getIndex()  +  1);  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	pos.setIndex(this,  pos.getIndex()  +  1);	  pos.setIndex(this.getIndex()    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
53	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getPosition()  +  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getPosition()  +  2);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getPosition()  +  2);	  return    pos.getPosition()    +    2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
54	[BUG]  [BUGGY]  ParsePosition  pos  =  next(pos.getValue()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  next(pos.getValue()  +  1);  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  next(pos.getValue()  +  1);	  ParsePosition    pos    =    next(pos.getValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
55	[BUG]  [BUGGY]  ParsePosition  pos  =  next(pos.getLineno());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  next(pos.getLineno());  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  next(pos.getLineno());	  ParsePosition    pos    =    next(pos.getValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
56	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  pos.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  args  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  pos.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  args  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  pos.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  args	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getIndex());    args.add    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
57	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  pos.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  args.  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  pos.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  args.  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  pos.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  args.	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getIndex());    args.add    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
58	[BUG]  [BUGGY]  if(pos.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  args  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                            OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(pos.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  args  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(pos.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  args	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getIndex());    args.add    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
59	[BUG]  [BUGGY]  if(pos.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  args.  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                              OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(pos.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  args.  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(pos.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  args.	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getIndex());    args.add    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
60	[BUG]  [BUGGY]  return  pos.get()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  pos.get()  +  1;  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  pos.get()  +  1;	  return    pos.next()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
61	[BUG]  [BUGGY]  return  next(pos.next(),  pos.getIndex());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  next(pos.next(),  pos.getIndex());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  next(pos.next(),  pos.getIndex());	  return    next(pos.next());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
62	[BUG]  [BUGGY]  return  next(pos.getValue());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  next(pos.getValue());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  next(pos.getValue());	  return    next(pos.next());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
63	[BUG]  [BUGGY]  return  next(pos.next(),  pos.getLength());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  next(pos.next(),  pos.getLength());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  next(pos.next(),  pos.getLength());	  return    next(pos.next());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
64	[BUG]  [BUGGY]  return  new  ParsePosition(pos.clone()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.clone()  +  1);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.clone()  +  1);	  return    pos.clone()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
65	[BUG]  [BUGGY]  ParsePosition  args  =  new  ParsePosition(pos.getIndex());  pos.setIndex(args.getIndex()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  args  =  new  ParsePosition(pos.getIndex());  pos.setIndex(args.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  args  =  new  ParsePosition(pos.getIndex());  pos.setIndex(args.getIndex()  +  1);	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getIndex());    pos.setIndex(args.getIndex()    +    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
66	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex());  pos.set  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex());  pos.set  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex());  pos.set	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getIndex());    pos.setIndex(args.getIndex()    +    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
67	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex());  pos.setIndex  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                            OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex());  pos.setIndex  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex());  pos.setIndex	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getIndex());    pos.setIndex(args.getIndex()    +    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
68	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex());  pos.setIndex(args.get  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                              OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex());  pos.setIndex(args.get  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex());  pos.setIndex(args.get	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getIndex());    pos.setIndex(args.getIndex()    +    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
69	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  pos.size();  ++i)  {  ParsePosition  args  =  (ParsePosition)pos.getValue();  args  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  pos.size();  ++i)  {  ParsePosition  args  =  (ParsePosition)pos.getValue();  args  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  pos.size();  ++i)  {  ParsePosition  args  =  (ParsePosition)pos.getValue();  args	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    (ParsePosition)pos.getValue();    args    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
70	[BUG]  [BUGGY]  ParsePosition  args  =(ParsePosition)pos.getValue();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  args  =(ParsePosition)pos.getValue();  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  args  =(ParsePosition)pos.getValue();	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    (ParsePosition)pos.getValue();    args    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
71	[BUG]  [BUGGY]  if(pos.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  (ParsePosition)pos.getValue();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(pos.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  (ParsePosition)pos.getValue();  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(pos.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  (ParsePosition)pos.getValue();	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    (ParsePosition)pos.getValue();    args    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
72	[BUG]  [BUGGY]  pos.setIndex(position.getIndex()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  pos.setIndex(position.getIndex()  +  1);  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	pos.setIndex(position.getIndex()  +  1);	  pos.setIndex(position.getIndex());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
73	[BUG]  [BUGGY]  return  pos.nextToken()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  pos.nextToken()  +  1;  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  pos.nextToken()  +  1;	  return    pos.nextToken();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
74	[BUG]  [BUGGY]  return  pos.nextToken()  +  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  pos.nextToken()  +  2;  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  pos.nextToken()  +  2;	  return    pos.nextToken();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
75	[BUG]  [BUGGY]  ParsePosition  pos  =  next(pos,  pos.getIndex()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  next(pos,  pos.getIndex()  +  1);  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  next(pos,  pos.getIndex()  +  1);	  ParsePosition    pos    =    next(pos.getIndex()    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
76	[BUG]  [BUGGY]  ParsePosition  pos  =  new  ParsePosition(pos.intValue(),  pos.intValue());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  new  ParsePosition(pos.intValue(),  pos.intValue());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  new  ParsePosition(pos.intValue(),  pos.intValue());	  return    new    ParsePosition(pos.intValue(),    pos.intValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
77	[BUG]  [BUGGY]  return  new  ParsePosition(pos.intValue()  +  1,  pos.intValue());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.intValue()  +  1,  pos.intValue());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.intValue()  +  1,  pos.intValue());	  return    new    ParsePosition(pos.intValue(),    pos.intValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
78	[BUG]  [BUGGY]  return  new  ParsePosition(pos.clone(),  pos.getIndex());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.clone(),  pos.getIndex());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.clone(),  pos.getIndex());	  return    new    ParsePosition(pos.clone());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
79	[BUG]  [BUGGY]  return  new  ParsePosition(pos.clone(),  pos.getLength());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.clone(),  pos.getLength());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.clone(),  pos.getLength());	  return    new    ParsePosition(pos.clone());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
80	[BUG]  [BUGGY]  return  new  ParsePosition(pos.clone(),  pos.getStartIndex());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.clone(),  pos.getStartIndex());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.clone(),  pos.getStartIndex());	  return    new    ParsePosition(pos.clone());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
81	[BUG]  [BUGGY]  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  pos.setIndex(args.getIndex()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  pos.setIndex(args.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  pos.setIndex(args.getIndex()  +  1);	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getIndex()    +    1);    pos.setIndex(args.getIndex()    +    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
82	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  pos.set  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  pos.set  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  pos.set	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getIndex()    +    1);    pos.setIndex(args.getIndex()    +    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
83	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  pos.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  pos.set  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  pos.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  pos.set  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  pos.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  pos.set	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getIndex()    +    1);    pos.setIndex(args.getIndex()    +    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
84	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  pos.setIndex  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                            OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  pos.setIndex  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  pos.setIndex	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getIndex()    +    1);    pos.setIndex(args.getIndex()    +    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
85	[BUG]  [BUGGY]  ParsePosition  pos  =  new  ParsePosition(pos.getIndex(),  pos.clone());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  new  ParsePosition(pos.getIndex(),  pos.clone());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  new  ParsePosition(pos.getIndex(),  pos.clone());	  return    new    ParsePosition(pos.getIndex(),    pos.clone());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
86	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getIndex(),  pos.clone()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getIndex(),  pos.clone()  +  1);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getIndex(),  pos.clone()  +  1);	  return    new    ParsePosition(pos.getIndex(),    pos.clone());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
87	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getIndex()  +  1,  pos.clone());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getIndex()  +  1,  pos.clone());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getIndex()  +  1,  pos.clone());	  return    new    ParsePosition(pos.getIndex(),    pos.clone());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
88	[BUG]  [BUGGY]  return  pos.clonePattern(this);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  pos.clonePattern(this);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  pos.clonePattern(this);	  return    pos.clonePattern();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
89	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getIndex()    +    1);    pos.setIndex(args.get    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
90	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getIndex()    +    1);    pos.setIndex(args.get    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
91	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  pos.setIndex(args  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  pos.setIndex(args  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  pos.setIndex(args	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getIndex()    +    1);    pos.setIndex(args.get    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
92	[BUG]  [BUGGY]  return  pos.getPrevious()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  pos.getPrevious()  +  1;  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  pos.getPrevious()  +  1;	  return    pos.getNext()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
93	[BUG]  [BUGGY]  return  next(pos.getNext()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  next(pos.getNext()  +  1);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  next(pos.getNext()  +  1);	  return    pos.getNext()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
94	[BUG]  [BUGGY]  pos.setIndex(getIndex()  +  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  pos.setIndex(getIndex()  +  2);  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	pos.setIndex(getIndex()  +  2);	  pos.setIndex(getIndex());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
95	[BUG]  [BUGGY]  pos.setIndex(getIndex()  +  3);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  pos.setIndex(getIndex()  +  3);  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	pos.setIndex(getIndex()  +  3);	  pos.setIndex(getIndex());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
96	[BUG]  [BUGGY]  ParsePosition  pos  =  next(pos,  pos.getIndex()  +  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  next(pos,  pos.getIndex()  +  2);  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  next(pos,  pos.getIndex()  +  2);	  ParsePosition    pos    =    next(pos,    pos.getIndex());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
97	[BUG]  [BUGGY]  ParsePosition  pos  =  next(pos,  args.getIndex());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                            OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  next(pos,  args.getIndex());  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  next(pos,  args.getIndex());	  ParsePosition    pos    =    next(pos,    pos.getIndex());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
98	[BUG]  [BUGGY]  ParsePosition  pos  =  next(pos,  getIndex());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                              OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  next(pos,  getIndex());  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  next(pos,  getIndex());	  ParsePosition    pos    =    next(pos,    pos.getIndex());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
99	[BUG]  [BUGGY]  return  pos.doubleValue()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  pos.doubleValue()  +  1;  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  pos.doubleValue()  +  1;	  return    pos.doubleValue();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
100	[BUG]  [BUGGY]  return  pos.doubleValue()  +  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  pos.doubleValue()  +  2;  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  pos.doubleValue()  +  2;	  return    pos.doubleValue();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
101	[BUG]  [BUGGY]  return  pos.doubleValue()  *  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  pos.doubleValue()  *  2;  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  pos.doubleValue()  *  2;	  return    pos.doubleValue();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
102	[BUG]  [BUGGY]  pos.setIndex(this.getIndex()  +  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  pos.setIndex(this.getIndex()  +  2);  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	pos.setIndex(this.getIndex()  +  2);	  pos.setIndex(this.getIndex());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
103	[BUG]  [BUGGY]  return  new  ParsePosition(pos.clone(),  pos);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.clone(),  pos);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.clone(),  pos);	  return    new    ParsePosition(pos.clone());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
104	[BUG]  [BUGGY]  return  new  ParsePosition(pos.clone(),  pos.clone(),  this);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.clone(),  pos.clone(),  this);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.clone(),  pos.clone(),  this);	  return    new    ParsePosition(pos.clone(),    pos.clone());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
105	[BUG]  [BUGGY]  return  new  ParsePosition(pos.intValue(),  pos.intValue()  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.intValue(),  pos.intValue()  -  1);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.intValue(),  pos.intValue()  -  1);	  return    new    ParsePosition(pos.intValue(),    pos.intValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
106	[BUG]  [BUGGY]  ParsePosition  pos  =  next(pos.getKey(),  pos);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  next(pos.getKey(),  pos);  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  next(pos.getKey(),  pos);	  ParsePosition    pos    =    next(pos.getKey());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
107	[BUG]  [BUGGY]  ParsePosition  pos  =  next(pos.getParent());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  next(pos.getParent());  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  next(pos.getParent());	  ParsePosition    pos    =    next(pos.getName());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
108	[BUG]  [BUGGY]  ParsePosition  pos  =  next(pos.getLine());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  next(pos.getLine());  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  next(pos.getLine());	  ParsePosition    pos    =    next(pos.getName());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
109	[BUG]  [BUGGY]  return  next(pos.getNext());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  next(pos.getNext());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  next(pos.getNext());	  return    next(pos.next());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
110	[BUG]  [BUGGY]  pos.setIndex(this.getIndex()  +  3);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  pos.setIndex(this.getIndex()  +  3);  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	pos.setIndex(this.getIndex()  +  3);	  pos.setIndex(this.getIndex());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
111	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getKey(),  pos.getValue()  +  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getKey(),  pos.getValue()  +  2);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getKey(),  pos.getValue()  +  2);	  return    new    ParsePosition(pos.getKey(),    pos.getValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
112	[BUG]  [BUGGY]  return  new  ParsePosition(pos.cloneTree(),  this);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.cloneTree(),  this);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.cloneTree(),  this);	  return    new    ParsePosition(pos.cloneTree(),    pos);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
113	[BUG]  [BUGGY]  ParsePosition  pos  =  next(pos,  pos.getStartIndex());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  next(pos,  pos.getStartIndex());  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  next(pos,  pos.getStartIndex());	  ParsePosition    pos    =    next(pos,    pos.getIndex());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
114	[BUG]  [BUGGY]  return(pos.getValue()  ==  null)?  null  :  pos.getValue();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return(pos.getValue()  ==  null)?  null  :  pos.getValue();  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return(pos.getValue()  ==  null)?  null  :  pos.getValue();	  return    pos.getValue()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
115	[BUG]  [BUGGY]  return(pos.getValue()  ==  null)?  null  :  pos.getValue()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return(pos.getValue()  ==  null)?  null  :  pos.getValue()  +  1;  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return(pos.getValue()  ==  null)?  null  :  pos.getValue()  +  1;	  return    pos.getValue()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
116	[BUG]  [BUGGY]  return  new  ParsePosition(pos.intValue()  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.intValue()  -  1);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.intValue()  -  1);	  return    new    ParsePosition(pos.intValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
117	[BUG]  [BUGGY]  return  pos.getToken();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  pos.getToken();  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  pos.getToken();	  return    pos.nextToken();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
118	[BUG]  [BUGGY]  pos.setIndex(this,  pos.getIndex());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  pos.setIndex(this,  pos.getIndex());  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	pos.setIndex(this,  pos.getIndex());	  pos.setIndex(this.getIndex()    +    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
119	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  args  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  args  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  args	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getIndex());    args.add    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
120	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  args.add  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  args.add  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  args.add	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getIndex());    args.add    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
121	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  args.  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                            OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  args.  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  args.	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getIndex());    args.add    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
122	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  arg  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                              OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  arg  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  arg	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getIndex());    args.add    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
123	[BUG]  [BUGGY]  return  new  ParsePosition(pos.doubleValue());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.doubleValue());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.doubleValue());	  return    pos.doubleValue();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
124	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getIndex(),  pos.getParent());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getIndex(),  pos.getParent());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getIndex(),  pos.getParent());	  return    new    ParsePosition(pos.getIndex(),    pos.clone());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
125	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  pos.  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  pos.  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  pos.	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getIndex()    +    1);    pos.setIndex(args.get    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
126	[BUG]  [BUGGY]  ParsePosition  pos  =  next(pos.getStart()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  next(pos.getStart()  +  1);  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  next(pos.getStart()  +  1);	  ParsePosition    pos    =    next(pos.getStartIndex());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
127	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getValue(),  pos);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getValue(),  pos);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getValue(),  pos);	  return    pos.getValue()    +    2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
128	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getStart()  +  1,  pos.getEnd());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getStart()  +  1,  pos.getEnd());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getStart()  +  1,  pos.getEnd());	  return    new    ParsePosition(pos.getStart(),    pos.getEnd());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
129	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  pos.setInde  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  pos.setInde  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  pos.setInde	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getIndex()    +    1);    pos.setIndex(args.getIndex()    +    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
130	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getValue());  pos.setIndex(args.getIndex()  +  1);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getValue());  pos.setIndex(args.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getValue());  pos.setIndex(args.getIndex()  +  1);  }	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getValue());    pos.setIndex(args.getIndex()    +    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
131	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getValue());  pos.setInde  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getValue());  pos.setInde  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getValue());  pos.setInde	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getValue());    pos.setIndex(args.getIndex()    +    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
132	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  (ParsePosition)pos.getValue();  args  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  (ParsePosition)pos.getValue();  args  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  (ParsePosition)pos.getValue();  args	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    (ParsePosition)pos.getValue();    args    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
133	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  (ParsePosition)pos.getValue();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  (ParsePosition)pos.getValue();  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  (ParsePosition)pos.getValue();	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    (ParsePosition)pos.getValue();    args    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
134	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  (ParsePosition)pos.getValue();  arg  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  (ParsePosition)pos.getValue();  arg  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  (ParsePosition)pos.getValue();  arg	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    (ParsePosition)pos.getValue();    args    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
135	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  (ParsePosition)pos.getValu  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  (ParsePosition)pos.getValu  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  (ParsePosition)pos.getValu	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    (ParsePosition)pos.getValue();    args    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
136	[BUG]  [BUGGY]  return  pos.getNumber()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  pos.getNumber()  +  1;  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  pos.getNumber()  +  1;	  return    pos.getNext()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
137	[BUG]  [BUGGY]  return  pos.getParent()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  pos.getParent()  +  1;  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  pos.getParent()  +  1;	  return    pos.getNext()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
138	[BUG]  [BUGGY]  pos.setIndex(getIndex()  +  4);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  pos.setIndex(getIndex()  +  4);  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	pos.setIndex(getIndex()  +  4);	  pos.setIndex(getIndex());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
139	[BUG]  [BUGGY]  pos.setIndex(position.getIndex()  +  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  pos.setIndex(position.getIndex()  +  2);  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	pos.setIndex(position.getIndex()  +  2);	  pos.setIndex(position.getIndex());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
140	[BUG]  [BUGGY]  ParsePosition  pos  =  next(next(pos.getIndex()));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  next(next(pos.getIndex()));  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  next(next(pos.getIndex()));	  ParsePosition    pos    =    next(pos.getIndex()    +    2);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
141	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex());  pos.setIndex(args.getIndex()  +  1);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex());  pos.setIndex(args.getIndex()  +  1);  }  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex());  pos.setIndex(args.getIndex()  +  1);  }	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getIndex());    pos.setIndex(args.getIndex()    +    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
142	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex());  pos.setInde  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex());  pos.setInde  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex());  pos.setInde	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getIndex());    pos.setIndex(args.getIndex()    +    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
143	[BUG]  [BUGGY]  return  new  ParsePosition(pos.intValue(),  pos.intValue();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.intValue(),  pos.intValue();  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.intValue(),  pos.intValue();	  return    pos.intValue()    +    3;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
144	[BUG]  [BUGGY]  ParsePosition  pos  =  next(pos.getQualifiedName());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  next(pos.getQualifiedName());  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  next(pos.getQualifiedName());	  ParsePosition    pos    =    next(pos.getName());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
145	[BUG]  [BUGGY]  return  new  ParsePosition(registry.getKey(),  pos.getValue());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(registry.getKey(),  pos.getValue());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(registry.getKey(),  pos.getValue());	  return    new    ParsePosition(pos.getKey(),    pos.getValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
146	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getIndex(),  pos.getValue());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getIndex(),  pos.getValue());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getIndex(),  pos.getValue());	  return    new    ParsePosition(pos.getIndex(),    pos.clone());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
147	[BUG]  [BUGGY]  return  pos.getGrandparent();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  pos.getGrandparent();  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  pos.getGrandparent();	  return    pos.getParent();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
148	[BUG]  [BUGGY]  return  pos.getNext()  +  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  pos.getNext()  +  2;  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  pos.getNext()  +  2;	  return    pos.next    +    2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
149	[BUG]  [BUGGY]  return(pos.clone()  <  =  0)?  null  :  pos.clone();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return(pos.clone()  <  =  0)?  null  :  pos.clone();  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return(pos.clone()  <  =  0)?  null  :  pos.clone();	  return    pos.clone()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
150	[BUG]  [BUGGY]  return(pos.intValue()  <  1)?  pos.intValue()  :  pos.intValue();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return(pos.intValue()  <  1)?  pos.intValue()  :  pos.intValue();  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return(pos.intValue()  <  1)?  pos.intValue()  :  pos.intValue();	  return    pos.intValue()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
151	[BUG]  [BUGGY]  ParsePosition  pos  =  next(pos,  pos.getLength());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  next(pos,  pos.getLength());  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  next(pos,  pos.getLength());	  ParsePosition    pos    =    next(pos,    pos.getIndex());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
152	[BUG]  [BUGGY]  return  next(pos.next(),  pos.getValue());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  next(pos.next(),  pos.getValue());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  next(pos.next(),  pos.getValue());	  return    next(pos.next());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
153	[BUG]  [BUGGY]  return  new  ParsePosition(pos.doubleValue(),  pos.getIndex());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.doubleValue(),  pos.getIndex());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.doubleValue(),  pos.getIndex());	  return    pos.doubleValue();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
154	[BUG]  [BUGGY]  return  new  ParsePosition(pos.clone(),  pos.clone(),  pos.getIndex());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.clone(),  pos.clone(),  pos.getIndex());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.clone(),  pos.clone(),  pos.getIndex());	  return    new    ParsePosition(pos.clone(),    pos.clone());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
155	[BUG]  [BUGGY]  return  new  ParsePosition(pos.clone(),  pos.clone(),  pos.getLength());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.clone(),  pos.clone(),  pos.getLength());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.clone(),  pos.clone(),  pos.getLength());	  return    new    ParsePosition(pos.clone(),    pos.clone());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
156	[BUG]  [BUGGY]  return  new  ParsePosition(pos.cloneTree());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.cloneTree());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.cloneTree());	  return    new    ParsePosition(pos.clone());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
157	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  pos.setIndex(arg  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  pos.setIndex(arg  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex()  +  1);  pos.setIndex(arg	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getIndex()    +    1);    pos.setIndex(args.get    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
158	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getLineNumber());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getLineNumber());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getLineNumber());	  return    new    ParsePosition(pos.getValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
159	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex());  pos.  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex());  pos.  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getIndex());  pos.	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getIndex());    pos.setIndex(args.getIndex()    +    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
160	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getValue(),  pos.getValue());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getValue(),  pos.getValue());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getValue(),  pos.getValue());	  return    pos.getValue()    +    2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
161	[BUG]  [BUGGY]  return  new  ParsePosition(this.registry.cloneTree(),  pos);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(this.registry.cloneTree(),  pos);  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(this.registry.cloneTree(),  pos);	  return    new    ParsePosition(pos.cloneTree(),    pos);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
162	[BUG]  [BUGGY]  return  new  ParsePosition(pos.intValue(),  pos.getEndValue());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.intValue(),  pos.getEndValue());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.intValue(),  pos.getEndValue());	  return    new    ParsePosition(pos.intValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
163	[BUG]  [BUGGY]  return  new  ParsePosition(pos.next(),  pos.getIndex());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.next(),  pos.getIndex());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.next(),  pos.getIndex());	  return    pos.next()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
164	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getIndex(),  pos.next());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getIndex(),  pos.next());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getIndex(),  pos.next());	  return    pos.next()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
165	[BUG]  [BUGGY]  return  new  ParsePosition(pos.next());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.next());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.next());	  return    pos.next()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
166	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getNext(),  pos.getIndex());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getNext(),  pos.getIndex());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getNext(),  pos.getIndex());	  return    pos.getNext()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
167	[BUG]  [BUGGY]  return  new  ParsePosition(pos.getNext(),  pos.getValue());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  return  new  ParsePosition(pos.getNext(),  pos.getValue());  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	return  new  ParsePosition(pos.getNext(),  pos.getValue());	  return    pos.getNext()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
168	[BUG]  [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getValue());  pos.  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getValue());  pos.  [BUGGY]      }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	if(args.getType()  ==  Token.NAME)  {  for(int  i  =  0;  i  <  args.size();  ++i)  {  ParsePosition  args  =  new  ParsePosition(pos.getValue());  pos.	  if(pos.getType()    ==    Token.NAME)    {    for(int    i    =    0;    i    <    args.size();    ++i)    {    ParsePosition    args    =    new    ParsePosition(pos.getValue());    pos.setIndex(args.getIndex()    +    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
169	[BUG]  [BUGGY]  ParsePosition  pos  =  next(pos,  pos.getValue());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      private  ParsePosition  next(ParsePosition  pos)  {  pos.setIndex(pos.getIndex()  +  1);      [BUGGY]  ParsePosition  pos  =  next(pos,  pos.getValue());  [BUGGY]      return  pos;  }  [CLASS]  ExtendedMessageFormat  [METHOD]  next  [RETURN_TYPE]  ParsePosition  ParsePosition  pos  [VARIABLES]  char  END_FE  QUOTE  START_FE  START_FMT  c  String  DUMMY_PATTERN  ESCAPED_QUOTE  args  customPattern  desc  formatDescription  name  pattern  toPattern  boolean  Map  registry  long  serialVersionUID  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	404	404	1	replace	ParsePosition  pos  =  next(pos,  pos.getValue());	  ParsePosition    pos    =    next(pos.getValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
