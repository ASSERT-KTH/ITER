bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  registry.keySet().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  registry.keySet().iterator();	  Iterator    <    String>    it    =    this.registry.keySet().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
2	[BUG]  [BUGGY]  FormatRegistry  registry  =  getRegistry(fmtCount  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getRegistry(fmtCount  -  1);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getRegistry(fmtCount  -  1);	  FormatRegistry    registry    =    getRegistry(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
3	[BUG]  [BUGGY]  FormatRegistry  registry  =  getRegistry(fmtCount  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getRegistry(fmtCount  +  1);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getRegistry(fmtCount  +  1);	  FormatRegistry    registry    =    getRegistry(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
4	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  0,  fmtCount  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  0,  fmtCount  +  1);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(pattern,  0,  fmtCount  +  1);	  Pattern    toPattern    =    Pattern.compile(pattern,    0,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
5	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  0,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  0,  c);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(pattern,  0,  c);	  Pattern    toPattern    =    Pattern.compile(pattern,    0,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
6	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  0,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  0,  0);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(pattern,  0,  0);	  Pattern    toPattern    =    Pattern.compile(pattern,    0,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
7	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  0,  fmtCount,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  0,  fmtCount,  1);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(pattern,  0,  fmtCount,  1);	  Pattern    toPattern    =    Pattern.compile(pattern,    0,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
8	[BUG]  [BUGGY]  List  <  Map.Entry  <  String,  Object>  it  =  registry.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  List  <  Map.Entry  <  String,  Object>  it  =  registry.entrySet().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	List  <  Map.Entry  <  String,  Object>  it  =  registry.entrySet().iterator();	  List    <    Map.Entry    <    String,    Object>    it    =    this.registry.entrySet().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
9	[BUG]  [BUGGY]  Set  <  Map.Entry  <  String,  Object>  it  =  this.registry.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Set  <  Map.Entry  <  String,  Object>  it  =  this.registry.entrySet().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Set  <  Map.Entry  <  String,  Object>  it  =  this.registry.entrySet().iterator();	  List    <    Map.Entry    <    String,    Object>    it    =    this.registry.entrySet().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
10	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  stripCustom);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  stripCustom);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  stripCustom);	  Pattern    toPattern    =    Pattern.compile(this,    charBuffer);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
11	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  charBuffer,  stripCustom);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  charBuffer,  stripCustom);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  charBuffer,  stripCustom);	  Pattern    toPattern    =    Pattern.compile(this,    charBuffer);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
12	[BUG]  [BUGGY]  if(toPattern!=  null  ||  pattern.length()  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(toPattern!=  null  ||  pattern.length()  >  0)  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(toPattern!=  null  ||  pattern.length()  >  0)  {	  if(toPattern!=    null    &&    pattern.length()    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	73	None	replace
13	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.ordinals.values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  this.ordinals.values().iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.ordinals.values().iterator();	  Iterator    <    String>    it    =    this.ordinals.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
14	[BUG]  [BUGGY]  Iterator  <  String>  it  =  new  ArrayList  <  String>(this.ordinals.iterator());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  new  ArrayList  <  String>(this.ordinals.iterator());  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  new  ArrayList  <  String>(this.ordinals.iterator());	  Iterator    <    String>    it    =    this.ordinals.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
15	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.ordinals.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  this.ordinals.entrySet().iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.ordinals.entrySet().iterator();	  Iterator    <    String>    it    =    this.ordinals.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
16	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  pattern,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  pattern,  1);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  pattern,  1);	  Pattern    toPattern    =    Pattern.compile(this,    pattern,    0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
17	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  pattern,  0,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  pattern,  0,  fmtCount);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  pattern,  0,  fmtCount);	  Pattern    toPattern    =    Pattern.compile(this,    pattern,    0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
18	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  pattern,  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  pattern,  2);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  pattern,  2);	  Pattern    toPattern    =    Pattern.compile(this,    pattern,    0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
19	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  1);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this.formatDescription,  1);	  Pattern    toPattern    =    Pattern.compile(this.formatDescription,    0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
20	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  0,  pattern.length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  0,  pattern.length);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this.formatDescription,  0,  pattern.length);	  Pattern    toPattern    =    Pattern.compile(this.formatDescription,    0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
21	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  0,  this.fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  0,  this.fmtCount);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this.formatDescription,  0,  this.fmtCount);	  Pattern    toPattern    =    Pattern.compile(this.formatDescription,    0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
22	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.pattern.values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  this.pattern.values().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.pattern.values().iterator();	  Iterator    <    String>    it    =    this.pattern.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
23	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.pattern.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  this.pattern.entrySet().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.pattern.entrySet().iterator();	  Iterator    <    String>    it    =    this.pattern.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
24	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.entries.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.entries.iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  this.entries.iterator();	  Iterator    <    Map.Entry    <    String,    Object>    it    =    entries.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
25	[BUG]  [BUGGY]  if(pattern!=  null  ||  toPattern!=  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(pattern!=  null  ||  toPattern!=  null)  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(pattern!=  null  ||  toPattern!=  null)  {	  if(toPattern!=    null    ||    pattern!=    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
26	[BUG]  [BUGGY]  if(pattern  ==  null  ||  toPattern!=  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(pattern  ==  null  ||  toPattern!=  null)  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(pattern  ==  null  ||  toPattern!=  null)  {	  if(toPattern!=    null    ||    pattern!=    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
27	[BUG]  [BUGGY]  if(toPattern  ==  null  ||  toPattern!=  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(toPattern  ==  null  ||  toPattern!=  null)  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(toPattern  ==  null  ||  toPattern!=  null)  {	  if(toPattern!=    null    ||    pattern!=    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
28	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.toPattern.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  this.toPattern.iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.toPattern.iterator();	  Iterator    <    String>    it    =    toPattern.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
29	[BUG]  [BUGGY]  if(toPattern  ==  null  ||  toPattern  ==  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(toPattern  ==  null  ||  toPattern  ==  null)  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(toPattern  ==  null  ||  toPattern  ==  null)  {	  if(pattern    ==    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
30	[BUG]  [BUGGY]  if(toPattern  ==  null  ||  pattern  ==  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(toPattern  ==  null  ||  pattern  ==  null)  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(toPattern  ==  null  ||  pattern  ==  null)  {	  if(pattern    ==    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
31	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.foundDescriptions.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  this.foundDescriptions.iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.foundDescriptions.iterator();	  Iterator    <    String>    it    =    foundDescriptions.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
32	[BUG]  [BUGGY]  Iterator  <  String>  it  =  foundDescriptions.values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  foundDescriptions.values().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  foundDescriptions.values().iterator();	  Iterator    <    String>    it    =    foundDescriptions.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
33	[BUG]  [BUGGY]  List  <  String>  it  =  foundDescriptions.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  List  <  String>  it  =  foundDescriptions.iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	List  <  String>  it  =  foundDescriptions.iterator();	  Iterator    <    String>    it    =    foundDescriptions.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
34	[BUG]  [BUGGY]  FormatRegistry  registry  =  getFormat().getRegistry();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getFormat().getRegistry();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getFormat().getRegistry();	  FormatRegistry    registry    =    getFormat();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
35	[BUG]  [BUGGY]  FormatRegistry  registry  =  getFormat(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getFormat(fmtCount);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getFormat(fmtCount);	  FormatRegistry    registry    =    getFormat();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
36	[BUG]  [BUGGY]  FormatRegistry  registry  =  getFormat().registry;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getFormat().registry;  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getFormat().registry;	  FormatRegistry    registry    =    getFormat();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
37	[BUG]  [BUGGY]  if(toPattern  ==  null  ||  toPattern.equals( "- "))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(toPattern  ==  null  ||  toPattern.equals( "- "))  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(toPattern  ==  null  ||  toPattern.equals( "- "))  {	  if(toPattern    ==    null    ||    toPattern.equals(   "   "))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
38	[BUG]  [BUGGY]  if(toPattern  ==  null  ||  toPattern.equals( "/ "))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(toPattern  ==  null  ||  toPattern.equals( "/ "))  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(toPattern  ==  null  ||  toPattern.equals( "/ "))  {	  if(toPattern    ==    null    ||    toPattern.equals(   "   "))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
39	[BUG]  [BUGGY]  if(toPattern!=  null  &&  pattern!=  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(toPattern!=  null  &&  pattern!=  null)  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(toPattern!=  null  &&  pattern!=  null)  {	  if(pattern!=    null    &&    toPattern    ==    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	76	None	replace
40	[BUG]  [BUGGY]  if(toPattern  ==  null  &&  pattern!=  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(toPattern  ==  null  &&  pattern!=  null)  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(toPattern  ==  null  &&  pattern!=  null)  {	  if(pattern!=    null    &&    toPattern    ==    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	76	None	replace
41	[BUG]  [BUGGY]  Iterator  <  String>  it  =  new  ArrayList  <  String>(this.formats.values());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  new  ArrayList  <  String>(this.formats.values());  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  new  ArrayList  <  String>(this.formats.values());	  Iterator    <    String>    it    =    new    ArrayList    <    String>(this.formats.iterator());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
42	[BUG]  [BUGGY]  Iterator  <  String>  it  =  new  ArrayList  <  String>(this.formats.iterator(),  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  new  ArrayList  <  String>(this.formats.iterator(),  pattern);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  new  ArrayList  <  String>(this.formats.iterator(),  pattern);	  Iterator    <    String>    it    =    new    ArrayList    <    String>(this.formats.iterator());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
43	[BUG]  [BUGGY]  Iterator  <  String>  it  =  new  ArrayList  <  String>(this.formats.keySet());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  new  ArrayList  <  String>(this.formats.keySet());  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  new  ArrayList  <  String>(this.formats.keySet());	  Iterator    <    String>    it    =    new    ArrayList    <    String>(this.formats.iterator());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
44	[BUG]  [BUGGY]  FormatRegistry  registry  =(FormatRegistry)iter.next();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =(FormatRegistry)iter.next();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =(FormatRegistry)iter.next();	  FormatRegistry    registry    =(FormatRegistry)it.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	66	None	replace
45	[BUG]  [BUGGY]  FormatRegistry  register  =(FormatRegistry)it.next();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  register  =(FormatRegistry)it.next();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  register  =(FormatRegistry)it.next();	  FormatRegistry    registry    =(FormatRegistry)it.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	66	None	replace
46	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  registry.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  registry.iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  registry.iterator();	  Iterator    <    Map.Entry    <    String,    Object>    entry    =    iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	67	None	replace
47	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.registry.entrySet.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.registry.entrySet.iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  this.registry.entrySet.iterator();	  Iterator    <    Map.Entry    <    String,    Object>    it    =    this.entrySet.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
48	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  fmtCount,  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  fmtCount,  pattern);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  fmtCount,  pattern);	  Pattern    toPattern    =    Pattern.compile(this,    pattern,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
49	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  index,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  index,  fmtCount);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  index,  fmtCount);	  Pattern    toPattern    =    Pattern.compile(this,    pattern,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
50	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  index,  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  index,  pattern);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  index,  pattern);	  Pattern    toPattern    =    Pattern.compile(this,    pattern,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
51	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  c,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  c,  fmtCount);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  c,  fmtCount);	  Pattern    toPattern    =    Pattern.compile(this,    pattern,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
52	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.formatDescription.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  this.formatDescription.entrySet().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.formatDescription.entrySet().iterator();	  Iterator    <    String>    it    =    this.formatDescription.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
53	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.formatDescription.values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  this.formatDescription.values().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.formatDescription.values().iterator();	  Iterator    <    String>    it    =    this.formatDescription.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
54	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.formatDescription.keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  this.formatDescription.keySet().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.formatDescription.keySet().iterator();	  Iterator    <    String>    it    =    this.formatDescription.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
55	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  pattern.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  pattern.iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  pattern.iterator();	  Iterator    <    Map.Entry    <    String,    Object>    it    =    pattern.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
56	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  toPattern.next();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  toPattern.next();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  toPattern.next();	  Iterator    <    Map.Entry    <    String,    Object>    it    =    pattern.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
57	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.registry.next();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.registry.next();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  this.registry.next();	  Iterator    <    Map.Entry    <    String,    Object>    it    =    pattern.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
58	[BUG]  [BUGGY]  if(toPattern!=  null  ||  toPattern.length()  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(toPattern!=  null  ||  toPattern.length()  >  0)  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(toPattern!=  null  ||  toPattern.length()  >  0)  {	  if(toPattern!=    null    &&    toPattern.length()    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	72	None	replace
59	[BUG]  [BUGGY]  if(toPattern  ==  null  &&  toPattern.length()  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(toPattern  ==  null  &&  toPattern.length()  >  0)  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(toPattern  ==  null  &&  toPattern.length()  >  0)  {	  if(toPattern!=    null    &&    toPattern.length()    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	72	None	replace
60	[BUG]  [BUGGY]  if(toPattern  ==  null  ||  toPattern.length()  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(toPattern  ==  null  ||  toPattern.length()  >  0)  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(toPattern  ==  null  ||  toPattern.length()  >  0)  {	  if(toPattern!=    null    &&    toPattern.length()    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	72	None	replace
61	[BUG]  [BUGGY]  int  fmtCount  =  pattern.lastIndexOf('n');  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  int  fmtCount  =  pattern.lastIndexOf('n');  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	int  fmtCount  =  pattern.lastIndexOf('n');	  int    fmtCount    =    pattern.indexOf('n');    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	77	None	replace
62	[BUG]  [BUGGY]  int  fmtCount  =  pattern.indexOf('n',  start);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  int  fmtCount  =  pattern.indexOf('n',  start);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	int  fmtCount  =  pattern.indexOf('n',  start);	  int    fmtCount    =    pattern.indexOf('n');    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	77	None	replace
63	[BUG]  [BUGGY]  int  fmtCount  =  pattern.indexOf('n',  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  int  fmtCount  =  pattern.indexOf('n',  0);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	int  fmtCount  =  pattern.indexOf('n',  0);	  int    fmtCount    =    pattern.indexOf('n');    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	77	None	replace
64	[BUG]  [BUGGY]  int  fmtCount  =  pattern.indexOf('n',  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  int  fmtCount  =  pattern.indexOf('n',  1);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	int  fmtCount  =  pattern.indexOf('n',  1);	  int    fmtCount    =    pattern.indexOf('n');    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	77	None	replace
65	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.registry.getValue();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.registry.getValue();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  this.registry.getValue();	  Iterator    <    Map.Entry    <    String,    Object>    entry    =    it.getValue();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	58	None	replace
66	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  it.getKey();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  it.getKey();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  entry  =  it.getKey();	  Iterator    <    Map.Entry    <    String,    Object>    entry    =    it.getValue();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	58	None	replace
67	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  DEFAULT_PATTERN);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  DEFAULT_PATTERN);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(pattern,  DEFAULT_PATTERN);	  Pattern    toPattern    =    Pattern.compile(DEFAULT_PATTERN,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
68	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(DEFAULT_PATTERN,  ESCAPED_QUOTE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(DEFAULT_PATTERN,  ESCAPED_QUOTE);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(DEFAULT_PATTERN,  ESCAPED_QUOTE);	  Pattern    toPattern    =    Pattern.compile(DEFAULT_PATTERN,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
69	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  registry.entrySet().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  registry.entrySet().iterator();	  Iterator    <    String>    it    =    this.registry.entrySet().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
70	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  0,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  0,  1);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(pattern,  0,  1);	  Pattern    toPattern    =    Pattern.compile(pattern,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
71	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(c,  start,  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(c,  start,  pattern);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(c,  start,  pattern);	  Pattern    toPattern    =    Pattern.compile(c,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
72	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  c);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(pattern,  c);	  Pattern    toPattern    =    Pattern.compile(c,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
73	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(c,  pos);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(c,  pos);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(c,  pos);	  Pattern    toPattern    =    Pattern.compile(c,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
74	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(c,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(c,  0);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(c,  0);	  Pattern    toPattern    =    Pattern.compile(c,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
75	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.registry.values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.registry.values().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  this.registry.values().iterator();	  Iterator    <    Map.Entry    <    String,    Object>    it    =    this.registry.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
76	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  registry.values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  registry.values().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  registry.values().iterator();	  Iterator    <    Map.Entry    <    String,    Object>    it    =    registry.keySet().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
77	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.plots.values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  this.plots.values().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.plots.values().iterator();	  Iterator    <    String>    it    =    this.plots.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
78	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.plots.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  this.plots.entrySet().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.plots.entrySet().iterator();	  Iterator    <    String>    it    =    this.plots.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
79	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.plots.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  registry.plots.iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  registry.plots.iterator();	  Iterator    <    String>    it    =    this.plots.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
80	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(c,  this);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(c,  this);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(c,  this);	  Pattern    toPattern    =    Pattern.compile(this,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
81	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  start,  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  start,  c);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  start,  c);	  Pattern    toPattern    =    Pattern.compile(this,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
82	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  c,  pos);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  c,  pos);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  c,  pos);	  Pattern    toPattern    =    Pattern.compile(this,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
83	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  c,  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  c,  pattern);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  c,  pattern);	  Pattern    toPattern    =    Pattern.compile(this,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
84	[BUG]  [BUGGY]  int  fmtCount  =  pattern.length()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  int  fmtCount  =  pattern.length()  +  1;  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	int  fmtCount  =  pattern.length()  +  1;	  int    fmtCount    =    pattern.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
85	[BUG]  [BUGGY]  int  fmtCount  =  pattern.length()  -  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  int  fmtCount  =  pattern.length()  -  1;  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	int  fmtCount  =  pattern.length()  -  1;	  int    fmtCount    =    pattern.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
86	[BUG]  [BUGGY]  int  fmtCount  =  pattern.length()  *  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  int  fmtCount  =  pattern.length()  *  2;  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	int  fmtCount  =  pattern.length()  *  2;	  int    fmtCount    =    pattern.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
87	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.descriptions.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.descriptions.iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  this.descriptions.iterator();	  Iterator    <    Map.Entry    <    String,    Object>    it    =    this.entrySet().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
88	[BUG]  [BUGGY]  FormatRegistry  registry  =  getRegistry(DEFAULT_PATTERN);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getRegistry(DEFAULT_PATTERN);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getRegistry(DEFAULT_PATTERN);	  FormatRegistry    registry    =    getRegistry(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
89	[BUG]  [BUGGY]  FormatRegistry  registry  =  getRegistry(DEFAULT_PREFIX,  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getRegistry(DEFAULT_PREFIX,  pattern);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getRegistry(DEFAULT_PREFIX,  pattern);	  FormatRegistry    registry    =    getRegistry(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
90	[BUG]  [BUGGY]  FormatRegistry  registry  =  getRegistry(DEFAULT_PREFIX);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getRegistry(DEFAULT_PREFIX);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getRegistry(DEFAULT_PREFIX);	  FormatRegistry    registry    =    getRegistry(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
91	[BUG]  [BUGGY]  FormatRegistry  registry  =  getOwnFormat(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getOwnFormat(fmtCount);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getOwnFormat(fmtCount);	  FormatRegistry    registry    =    getOwnFormat();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
92	[BUG]  [BUGGY]  FormatRegistry  registry  =  getOwnFormat(true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getOwnFormat(true);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getOwnFormat(true);	  FormatRegistry    registry    =    getOwnFormat();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
93	[BUG]  [BUGGY]  FormatRegistry  registry  =  getOwnFormat().getRegistry();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getOwnFormat().getRegistry();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getOwnFormat().getRegistry();	  FormatRegistry    registry    =    getOwnFormat();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
94	[BUG]  [BUGGY]  Iterator  <  String>  it  =  foundDescriptions.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  foundDescriptions.entrySet().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  foundDescriptions.entrySet().iterator();	  Iterator    <    String>    it    =    this.origFormats.entrySet().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	79	None	replace
95	[BUG]  [BUGGY]  Iterator  <  String>  it  =  origFormats.values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  origFormats.values().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  origFormats.values().iterator();	  Iterator    <    String>    it    =    this.origFormats.values().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
96	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.getIterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.getIterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.registry.getIterator();	  Iterator    <    String>    it    =    registry.getIterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
97	[BUG]  [BUGGY]  Iterator  <  String>  it  =  fmtCount.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  fmtCount.iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  fmtCount.iterator();	  Iterator    <    String>    it    =    registry.getIterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
98	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(c,  start);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(c,  start);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(c,  start);	  Pattern    toPattern    =    Pattern.compile(c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
99	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(c  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(c  +  1);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(c  +  1);	  Pattern    toPattern    =    Pattern.compile(c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
100	[BUG]  [BUGGY]  FormatRegistry  registry  =(FormatRegistry)this.registry;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =(FormatRegistry)this.registry;  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =(FormatRegistry)this.registry;	  FormatRegistry    registry    =(FormatRegistry)getRegistry();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
101	[BUG]  [BUGGY]  FormatRegistry  registry  =(FormatRegistry)getRegistry().clone();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =(FormatRegistry)getRegistry().clone();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =(FormatRegistry)getRegistry().clone();	  FormatRegistry    registry    =(FormatRegistry)getRegistry();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
102	[BUG]  [BUGGY]  FormatRegistry  registry  =(FormatRegistry)this.getRegistry();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =(FormatRegistry)this.getRegistry();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =(FormatRegistry)this.getRegistry();	  FormatRegistry    registry    =(FormatRegistry)getRegistry();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
103	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.getValues().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.getValues().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.registry.getValues().iterator();	  Iterator    <    String>    it    =    this.registry.values().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
104	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.iterator.next();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.iterator.next();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  this.iterator.next();	  Iterator    <    Map.Entry    <    String,    Object>    entry    =    iterator.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	68	None	replace
105	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  iterator  =  this.entrySet.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  iterator  =  this.entrySet.iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  iterator  =  this.entrySet.iterator();	  Iterator    <    Map.Entry    <    String,    Object>    entry    =    iterator.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	68	None	replace
106	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  DUMMY_PATTERN);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  DUMMY_PATTERN);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(pattern,  DUMMY_PATTERN);	  Pattern    toPattern    =    Pattern.compile(DUMMY_PATTERN,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	54	None	replace
107	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(DUMMY_PATTERN,  ESCAPED_QUOTE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(DUMMY_PATTERN,  ESCAPED_QUOTE);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(DUMMY_PATTERN,  ESCAPED_QUOTE);	  Pattern    toPattern    =    Pattern.compile(DUMMY_PATTERN,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	54	None	replace
108	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(DUMMY_PATTERN,  pattern,  ESCAPED_QUOTE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(DUMMY_PATTERN,  pattern,  ESCAPED_QUOTE);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(DUMMY_PATTERN,  pattern,  ESCAPED_QUOTE);	  Pattern    toPattern    =    Pattern.compile(DUMMY_PATTERN,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	54	None	replace
109	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  index);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  index);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  index);	  Pattern    toPattern    =    Pattern.compile(this,    char);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	78	None	replace
110	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.format,  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.format,  pattern);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this.format,  pattern);	  Pattern    toPattern    =    Pattern.compile(this.format);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
111	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.format,  this.start);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.format,  this.start);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this.format,  this.start);	  Pattern    toPattern    =    Pattern.compile(this.format);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
112	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.format,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.format,  fmtCount);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this.format,  fmtCount);	  Pattern    toPattern    =    Pattern.compile(this.format);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
113	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.format,  this.end);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.format,  this.end);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this.format,  this.end);	  Pattern    toPattern    =    Pattern.compile(this.format);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
114	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  pattern,  charBuffer);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  pattern,  charBuffer);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  pattern,  charBuffer);	  Pattern    toPattern    =    Pattern.compile(this,    charBuffer,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
115	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  charBuffer,  pattern,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  charBuffer,  pattern,  fmtCount);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  charBuffer,  pattern,  fmtCount);	  Pattern    toPattern    =    Pattern.compile(this,    charBuffer,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
116	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  pos);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  pos);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  pos);	  Pattern    toPattern    =    Pattern.compile(this,    ptr);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
117	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  start,  ptr);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  start,  ptr);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  start,  ptr);	  Pattern    toPattern    =    Pattern.compile(this,    ptr);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
118	[BUG]  [BUGGY]  FormatRegistry  registry  =  getRegistry(false);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getRegistry(false);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getRegistry(false);	  FormatRegistry    registry    =    getRegistry(true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
119	[BUG]  [BUGGY]  FormatRegistry  registry  =  getRegistry(false,  false);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getRegistry(false,  false);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getRegistry(false,  false);	  FormatRegistry    registry    =    getRegistry(true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
120	[BUG]  [BUGGY]  FormatRegistry  registry  =  getRegistry(true,  false);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getRegistry(true,  false);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getRegistry(true,  false);	  FormatRegistry    registry    =    getRegistry(true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
121	[BUG]  [BUGGY]  FormatRegistry  registry  =  getRegistry(false,  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getRegistry(false,  pattern);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getRegistry(false,  pattern);	  FormatRegistry    registry    =    getRegistry(true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
122	[BUG]  [BUGGY]  FormatRegistry  register  =(FormatRegistry)iterator.next();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  register  =(FormatRegistry)iterator.next();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  register  =(FormatRegistry)iterator.next();	  FormatRegistry    registry    =(FormatRegistry)iterator.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	65	None	replace
123	[BUG]  [BUGGY]  FormatRegistry  registry  =(FormatRegistry)this.registry.next();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =(FormatRegistry)this.registry.next();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =(FormatRegistry)this.registry.next();	  FormatRegistry    registry    =(FormatRegistry)iterator.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	65	None	replace
124	[BUG]  [BUGGY]  if(pattern!=  null  ||  toPattern.length()  ==  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(pattern!=  null  ||  toPattern.length()  ==  0)  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(pattern!=  null  ||  toPattern.length()  ==  0)  {	  if(toPattern!=    null    ||    toPattern.length()    ==    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
125	[BUG]  [BUGGY]  if(toPattern  ==  null  ||  toPattern.length()!=  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(toPattern  ==  null  ||  toPattern.length()!=  0)  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(toPattern  ==  null  ||  toPattern.length()!=  0)  {	  if(toPattern!=    null    ||    toPattern.length()    ==    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
126	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.patterns.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.patterns.iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.registry.patterns.iterator();	  Iterator    <    String>    it    =    this.patterns.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	61	None	replace
127	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.patterns.values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  this.patterns.values().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.patterns.values().iterator();	  Iterator    <    String>    it    =    this.patterns.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	61	None	replace
128	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  this.end);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  this.end);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this.formatDescription,  this.end);	  Pattern    toPattern    =    Pattern.compile(this.formatDescription);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
129	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  this.start);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  this.start);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this.formatDescription,  this.start);	  Pattern    toPattern    =    Pattern.compile(this.formatDescription);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
130	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  DUMMY_PATTERN);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  DUMMY_PATTERN);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this.formatDescription,  DUMMY_PATTERN);	  Pattern    toPattern    =    Pattern.compile(this.formatDescription);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
131	[BUG]  [BUGGY]  if(pattern  ==  null  ||  toPattern.length()  ==  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(pattern  ==  null  ||  toPattern.length()  ==  0)  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(pattern  ==  null  ||  toPattern.length()  ==  0)  {	  if(toPattern    ==    null    ||    toPattern.length()    ==    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
132	[BUG]  [BUGGY]  Iterator  <  String>  it  =  foundFormats.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  foundFormats.iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  foundFormats.iterator();	  Iterator    <    String>    it    =    origFormats.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
133	[BUG]  [BUGGY]  Iterator  <  String>  it  =  new  ArrayList  <  String>(origFormats.iterator());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  new  ArrayList  <  String>(origFormats.iterator());  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  new  ArrayList  <  String>(origFormats.iterator());	  Iterator    <    String>    it    =    origFormats.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
134	[BUG]  [BUGGY]  if(toPattern  ==  null  &&  pattern.length()  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(toPattern  ==  null  &&  pattern.length()  >  0)  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(toPattern  ==  null  &&  pattern.length()  >  0)  {	  if(pattern!=    null    &&    pattern.length()    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	74	None	replace
135	[BUG]  [BUGGY]  if(pattern!=  null  ||  pattern.length()  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(pattern!=  null  ||  pattern.length()  >  0)  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(pattern!=  null  ||  pattern.length()  >  0)  {	  if(pattern!=    null    &&    pattern.length()    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	74	None	replace
136	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  ESCAPED_QUOTE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  ESCAPED_QUOTE);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  ESCAPED_QUOTE);	  Pattern    toPattern    =    Pattern.compile(this,    DUMMY_PATTERN);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
137	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  eCAPED_QUOTE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  eCAPED_QUOTE);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  eCAPED_QUOTE);	  Pattern    toPattern    =    Pattern.compile(this,    DUMMY_PATTERN);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
138	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  fmtCount);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  fmtCount);	  Pattern    toPattern    =    Pattern.compile(this,    DUMMY_PATTERN);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
139	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  this.formatDescription);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  this.formatDescription);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(pattern,  this.formatDescription);	  Pattern    toPattern    =    Pattern.compile(this.formatDescription,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
140	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  ESCAPED_QUOTE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  ESCAPED_QUOTE);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this.formatDescription,  ESCAPED_QUOTE);	  Pattern    toPattern    =    Pattern.compile(this.formatDescription,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
141	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  pattern,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  pattern,  fmtCount);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this.formatDescription,  pattern,  fmtCount);	  Pattern    toPattern    =    Pattern.compile(this.formatDescription,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
142	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(ptr,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(ptr,  1);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(ptr,  1);	  Pattern    toPattern    =    Pattern.compile(pattern,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
143	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  2);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(pattern,  2);	  Pattern    toPattern    =    Pattern.compile(pattern,    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
144	[BUG]  [BUGGY]  FormatRegistry  registry  =  getRegistry(format);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getRegistry(format);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getRegistry(format);	  FormatRegistry    registry    =    getRegistry(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
145	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  DEFAULT_PATTERN);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  DEFAULT_PATTERN);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  DEFAULT_PATTERN);	  Pattern    toPattern    =    Pattern.compile(this,    DUMMY_PATTERN);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
146	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  START_FMT);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  START_FMT);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  START_FMT);	  Pattern    toPattern    =    Pattern.compile(this,    DUMMY_PATTERN);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
147	[BUG]  [BUGGY]  Iterator  <  String>  it  =  findDescriptions.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  findDescriptions.iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  findDescriptions.iterator();	  Iterator    <    String>    it    =    foundDescriptions.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
148	[BUG]  [BUGGY]  FormatRegistry  registry  =  getRegistry(true,  true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getRegistry(true,  true);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getRegistry(true,  true);	  FormatRegistry    registry    =    getRegistry(true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
149	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  0,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  0,  fmtCount);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this.formatDescription,  0,  fmtCount);	  Pattern    toPattern    =    Pattern.compile(pattern,    0,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
150	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  0,  fmtCount  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  0,  fmtCount  -  1);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(pattern,  0,  fmtCount  -  1);	  Pattern    toPattern    =    Pattern.compile(pattern,    0,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
151	[BUG]  [BUGGY]  Iterator  <  String>  it  =  pos.getIterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  pos.getIterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  pos.getIterator();	  Iterator    <    String>    it    =    registry.getIterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
152	[BUG]  [BUGGY]  if(pattern  ==  null  ||  toPattern.equals( "   "))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(pattern  ==  null  ||  toPattern.equals( "   "))  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(pattern  ==  null  ||  toPattern.equals( "   "))  {	  if(toPattern    ==    null    ||    toPattern.equals(   "   "))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
153	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.getPatterns().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.getPatterns().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.registry.getPatterns().iterator();	  Iterator    <    String>    it    =    this.patterns.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	61	None	replace
154	[BUG]  [BUGGY]  if(pattern  ==  null  &&  toPattern  ==  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(pattern  ==  null  &&  toPattern  ==  null)  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(pattern  ==  null  &&  toPattern  ==  null)  {	  if(pattern!=    null    &&    toPattern    ==    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	76	None	replace
155	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  END_FE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  END_FE);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  END_FE);	  Pattern    toPattern    =    Pattern.compile(this,    char);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	78	None	replace
156	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(DUMMY_PATTERN,  eCAPED_QUOTE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(DUMMY_PATTERN,  eCAPED_QUOTE);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(DUMMY_PATTERN,  eCAPED_QUOTE);	  Pattern    toPattern    =    Pattern.compile(DUMMY_PATTERN,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	54	None	replace
157	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  it.getAttributes();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  it.getAttributes();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  entry  =  it.getAttributes();	  Iterator    <    Map.Entry    <    String,    Object>    entry    =    it.getValue();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	58	None	replace
158	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  registry.values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Object>  it  =  registry.values().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Object>  it  =  registry.values().iterator();	  Iterator    <    Object>    it    =    this.formatDescription.values().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
159	[BUG]  [BUGGY]  int  fmtCount  =  pattern.indexOf('n',  -1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  int  fmtCount  =  pattern.indexOf('n',  -1);  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	int  fmtCount  =  pattern.indexOf('n',  -1);	  int    fmtCount    =    pattern.indexOf('n');    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	77	None	replace
160	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  registry.keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Object>  it  =  registry.keySet().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Object>  it  =  registry.keySet().iterator();	  Iterator    <    Object>    it    =    this.formatDescription.keySet().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
161	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  -1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  -1);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this.formatDescription,  -1);	  Pattern    toPattern    =    Pattern.compile(pattern,    -1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	replace
162	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.entities.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.entities.iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.registry.entities.iterator();	  Iterator    <    String>    it    =    registry.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
163	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.orangeFormats.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  this.orangeFormats.iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.orangeFormats.iterator();	  Iterator    <    String>    it    =    origFormats.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
164	[BUG]  [BUGGY]  if(toPattern  ==  null  &&  pattern!=  null  &&  pattern.length()  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(toPattern  ==  null  &&  pattern!=  null  &&  pattern.length()  >  0)  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(toPattern  ==  null  &&  pattern!=  null  &&  pattern.length()  >  0)  {	  if(pattern!=    null    &&    pattern.length()    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	74	None	replace
165	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  DUMMY_QUOTE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  DUMMY_QUOTE);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this.formatDescription,  DUMMY_QUOTE);	  Pattern    toPattern    =    Pattern.compile(this.formatDescription,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
166	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  ED_QUOTE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  ED_QUOTE);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this.formatDescription,  ED_QUOTE);	  Pattern    toPattern    =    Pattern.compile(this.formatDescription,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
167	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  charBuffer);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  charBuffer);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this.formatDescription,  charBuffer);	  Pattern    toPattern    =    Pattern.compile(this.formatDescription,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
168	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  registry.entrySet();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  registry.entrySet();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  entry  =  registry.entrySet();	  Iterator    <    Map.Entry    <    String,    Object>    entry    =    iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	67	None	replace
169	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  this.registry.entrySet();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  this.registry.entrySet();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  entry  =  this.registry.entrySet();	  Iterator    <    Map.Entry    <    String,    Object>    entry    =    iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	67	None	replace
170	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  this.entrySet();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  this.entrySet();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  entry  =  this.entrySet();	  Iterator    <    Map.Entry    <    String,    Object>    entry    =    iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	67	None	replace
171	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.plots.keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  this.plots.keySet().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.plots.keySet().iterator();	  Iterator    <    String>    it    =    this.plots.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
172	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  registry.getEntrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  registry.getEntrySet().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  registry.getEntrySet().iterator();	  Iterator    <    Map.Entry    <    String,    Object>    it    =    this.entrySet().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
173	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  charCount,  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  charCount,  pattern);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  charCount,  pattern);	  Pattern    toPattern    =    Pattern.compile(this,    pattern,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
174	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  charBuffer,  0,  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  charBuffer,  0,  pattern);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  charBuffer,  0,  pattern);	  Pattern    toPattern    =    Pattern.compile(this,    charBuffer,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
175	[BUG]  [BUGGY]  FormatRegistry  registry  =  getOwnFormat(DEFAULT_PATTERN);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getOwnFormat(DEFAULT_PATTERN);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getOwnFormat(DEFAULT_PATTERN);	  FormatRegistry    registry    =    getOwnFormat();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
176	[BUG]  [BUGGY]  FormatRegistry  registry  =  getOwnFormat(DEFAULT_PREFIX);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getOwnFormat(DEFAULT_PREFIX);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getOwnFormat(DEFAULT_PREFIX);	  FormatRegistry    registry    =    getOwnFormat();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
177	[BUG]  [BUGGY]  Iterator  <  String>  it  =  origFormats.keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  origFormats.keySet().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  origFormats.keySet().iterator();	  Iterator    <    String>    it    =    this.origFormats.keySet().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
178	[BUG]  [BUGGY]  Iterator  <  String>  it  =  foundDescriptions.keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  foundDescriptions.keySet().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  foundDescriptions.keySet().iterator();	  Iterator    <    String>    it    =    this.origFormats.keySet().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
179	[BUG]  [BUGGY]  Iterator  <  String>  it  =  new  ArrayList  <  String>(this.formats.entrySet());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  new  ArrayList  <  String>(this.formats.entrySet());  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  new  ArrayList  <  String>(this.formats.entrySet());	  Iterator    <    String>    it    =    new    ArrayList    <    String>(this.formats.iterator());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
180	[BUG]  [BUGGY]  if(pattern  ==  null  &&  toPattern!=  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(pattern  ==  null  &&  toPattern!=  null)  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(pattern  ==  null  &&  toPattern!=  null)  {	  if(pattern!=    null    &&    toPattern!=    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	75	None	replace
181	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(c,  ptr);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(c,  ptr);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(c,  ptr);	  Pattern    toPattern    =    Pattern.compile(c,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
182	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  iterator.getValue();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  iterator.getValue();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  entry  =  iterator.getValue();	  Iterator    <    Map.Entry    <    String,    Object>    entry    =    iterator.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	68	None	replace
183	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  iterator.getKey();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  iterator.getKey();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  entry  =  iterator.getKey();	  Iterator    <    Map.Entry    <    String,    Object>    entry    =    iterator.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	68	None	replace
184	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  iterator.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  iterator.iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  entry  =  iterator.iterator();	  Iterator    <    Map.Entry    <    String,    Object>    entry    =    iterator.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	68	None	replace
185	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.ordinals.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  registry.ordinals.iterator();  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  registry.ordinals.iterator();	  Iterator    <    String>    it    =    this.ordinals.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
186	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(DEFAULT_PATTERN,  DEFAULT_QUOTE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(DEFAULT_PATTERN,  DEFAULT_QUOTE);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(DEFAULT_PATTERN,  DEFAULT_QUOTE);	  Pattern    toPattern    =    Pattern.compile(DEFAULT_PATTERN,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
187	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(DEFAULT_PATTERN,  eCAPED_QUOTE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(DEFAULT_PATTERN,  eCAPED_QUOTE);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(DEFAULT_PATTERN,  eCAPED_QUOTE);	  Pattern    toPattern    =    Pattern.compile(DEFAULT_PATTERN,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
188	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  registry.entries.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  registry.entries.iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  registry.entries.iterator();	  Iterator    <    Map.Entry    <    String,    Object>    it    =    entries.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
189	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  registry.values().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  registry.values().iterator();	  Iterator    <    String>    it    =    this.registry.values().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
190	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  pattern.entrySet();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  pattern.entrySet();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  pattern.entrySet();	  Iterator    <    Map.Entry    <    String,    Object>    it    =    pattern.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
191	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  pattern.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  pattern.entrySet().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  pattern.entrySet().iterator();	  Iterator    <    Map.Entry    <    String,    Object>    it    =    pattern.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
192	[BUG]  [BUGGY]  Iterator  <  Object>  it  =  registry.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Object>  it  =  registry.entrySet().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Object>  it  =  registry.entrySet().iterator();	  Iterator    <    Object>    it    =    this.formatDescription.entrySet().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
193	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  registry.entrySet.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  registry.entrySet.iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  registry.entrySet.iterator();	  Iterator    <    Map.Entry    <    String,    Object>    it    =    this.entrySet.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
194	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  c,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  c,  0);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  c,  0);	  Pattern    toPattern    =    Pattern.compile(this,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
195	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  c,  END_FE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  c,  END_FE);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  c,  END_FE);	  Pattern    toPattern    =    Pattern.compile(this,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
196	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  index,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  index,  0);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  index,  0);	  Pattern    toPattern    =    Pattern.compile(this,    pattern,    0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
197	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  pos,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  pos,  0);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  pos,  0);	  Pattern    toPattern    =    Pattern.compile(this,    pattern,    0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
198	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  charBuffer,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  charBuffer,  0);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  charBuffer,  0);	  Pattern    toPattern    =    Pattern.compile(this,    pattern,    0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
199	[BUG]  [BUGGY]  FormatRegistry  registry  =  getFormat(DEFAULT_PATTERN);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getFormat(DEFAULT_PATTERN);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getFormat(DEFAULT_PATTERN);	  FormatRegistry    registry    =    getFormat();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
200	[BUG]  [BUGGY]  FormatRegistry  registry  =  getFormat(DEFAULT_PREFIX);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getFormat(DEFAULT_PREFIX);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getFormat(DEFAULT_PREFIX);	  FormatRegistry    registry    =    getFormat();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
201	[BUG]  [BUGGY]  FormatRegistry  registry  =  getFormat(this);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getFormat(this);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getFormat(this);	  FormatRegistry    registry    =    getFormat();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
202	[BUG]  [BUGGY]  FormatRegistry  registry  =(FormatRegistry)iterator.getValue();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =(FormatRegistry)iterator.getValue();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =(FormatRegistry)iterator.getValue();	  FormatRegistry    registry    =(FormatRegistry)iterator.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	65	None	replace
203	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  ptr,  pos);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  ptr,  pos);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  ptr,  pos);	  Pattern    toPattern    =    Pattern.compile(this,    ptr);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
204	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  ptr,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  ptr,  0);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  ptr,  0);	  Pattern    toPattern    =    Pattern.compile(this,    ptr);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
205	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  ptr  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  ptr  +  1);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  ptr  +  1);	  Pattern    toPattern    =    Pattern.compile(this,    ptr);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
206	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(DUMMY_PATTERN,  this.formatDescription);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(DUMMY_PATTERN,  this.formatDescription);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(DUMMY_PATTERN,  this.formatDescription);	  Pattern    toPattern    =    Pattern.compile(this.formatDescription);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
207	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  this.index);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  this.index);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this.formatDescription,  this.index);	  Pattern    toPattern    =    Pattern.compile(this.formatDescription);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
208	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.format,  this.index);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.format,  this.index);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this.format,  this.index);	  Pattern    toPattern    =    Pattern.compile(this.format);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
209	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.format,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.format,  0);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this.format,  0);	  Pattern    toPattern    =    Pattern.compile(this.format);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
210	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.format,  pos);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.format,  pos);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this.format,  pos);	  Pattern    toPattern    =    Pattern.compile(this.format);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
211	[BUG]  [BUGGY]  FormatRegistry  registry  =  getRegistry(true,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getRegistry(true,  fmtCount);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getRegistry(true,  fmtCount);	  FormatRegistry    registry    =    getRegistry(true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
212	[BUG]  [BUGGY]  Iterator  <  String>  it  =  new  ArrayList  <  String>(this.formats.values().iterator());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  new  ArrayList  <  String>(this.formats.values().iterator());  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  new  ArrayList  <  String>(this.formats.values().iterator());	  Iterator    <    String>    it    =    new    ArrayList    <    String>(this.formats.iterator());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
213	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(c,  this.start);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(c,  this.start);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(c,  this.start);	  Pattern    toPattern    =    Pattern.compile(c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
214	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern!=  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(pattern  ==  null  ||  pattern!=  null)  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(pattern  ==  null  ||  pattern!=  null)  {	  if(toPattern    ==    null    ||    pattern!=    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
215	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.getIteratorForPattern(pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  registry.getIteratorForPattern(pattern);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  registry.getIteratorForPattern(pattern);	  Iterator    <    String>    it    =    registry.getIterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
216	[BUG]  [BUGGY]  Iterator  <  String>  it  =  registry.getIterator(this);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  registry.getIterator(this);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  registry.getIterator(this);	  Iterator    <    String>    it    =    registry.getIterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
217	[BUG]  [BUGGY]  FormatRegistry  registry  =  getFormat(pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getFormat(pattern);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getFormat(pattern);	  FormatRegistry    registry    =    getFormat();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
218	[BUG]  [BUGGY]  FormatRegistry  it  =  getFormat();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  it  =  getFormat();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  it  =  getFormat();	  FormatRegistry    registry    =    getFormat();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
219	[BUG]  [BUGGY]  FormatRegistry  it  =  getRegistry(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  it  =  getRegistry(fmtCount);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  it  =  getRegistry(fmtCount);	  FormatRegistry    registry    =    getRegistry(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
220	[BUG]  [BUGGY]  if(pattern!=  null  &&  toPattern.length()  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(pattern!=  null  &&  toPattern.length()  >  0)  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(pattern!=  null  &&  toPattern.length()  >  0)  {	  if(toPattern!=    null    &&    toPattern.length()    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	72	None	replace
221	[BUG]  [BUGGY]  if(pattern!=  null  ||  pattern.length()  ==  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(pattern!=  null  ||  pattern.length()  ==  0)  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(pattern!=  null  ||  pattern.length()  ==  0)  {	  if(toPattern!=    null    ||    toPattern.length()    ==    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
222	[BUG]  [BUGGY]  if(toPattern!=  null  &&  toPattern.length()  ==  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(toPattern!=  null  &&  toPattern.length()  ==  0)  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(toPattern!=  null  &&  toPattern.length()  ==  0)  {	  if(toPattern!=    null    ||    toPattern.length()    ==    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
223	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  pattern);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(pattern,  pattern);	  Pattern    toPattern    =    Pattern.compile(c,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
224	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.registry.entities().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  this.registry.entities().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.registry.entities().iterator();	  Iterator    <    String>    it    =    this.registry.values().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
225	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  this.end_FE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this.formatDescription,  this.end_FE);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this.formatDescription,  this.end_FE);	  Pattern    toPattern    =    Pattern.compile(this.formatDescription,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
226	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.format.list().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  this.format.list().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.format.list().iterator();	  Iterator    <    String>    it    =    this.format.keySet().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
227	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.format.elements().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  this.format.elements().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.format.elements().iterator();	  Iterator    <    String>    it    =    this.format.values().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
228	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern.length()  ==  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(pattern  ==  null  ||  pattern.length()  ==  0)  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(pattern  ==  null  ||  pattern.length()  ==  0)  {	  if(toPattern    ==    null    ||    toPattern.length()    ==    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
229	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  this.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  this.entrySet().iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  entry  =  this.entrySet().iterator();	  Iterator    <    Map.Entry    <    String,    Object>    entry    =    iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	67	None	replace
230	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  entries();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  entries();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  entry  =  entries();	  Iterator    <    Map.Entry    <    String,    Object>    entry    =    iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	67	None	replace
231	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  iterator(0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  iterator(0);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  entry  =  iterator(0);	  Iterator    <    Map.Entry    <    String,    Object>    entry    =    iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	67	None	replace
232	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.ordinalFormats.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  this.ordinalFormats.iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.ordinalFormats.iterator();	  Iterator    <    String>    it    =    origFormats.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
233	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.toPatterns.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  String>  it  =  this.toPatterns.iterator();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  String>  it  =  this.toPatterns.iterator();	  Iterator    <    String>    it    =    toPattern.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
234	[BUG]  [BUGGY]  FormatRegistry  registry  =  getRegistry(pattern,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getRegistry(pattern,  fmtCount);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getRegistry(pattern,  fmtCount);	  FormatRegistry    registry    =    getRegistry(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
235	[BUG]  [BUGGY]  FormatRegistry  registry  =  getRegistry(pattern,  DEFAULT_PATTERN);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getRegistry(pattern,  DEFAULT_PATTERN);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getRegistry(pattern,  DEFAULT_PATTERN);	  FormatRegistry    registry    =    getRegistry(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
236	[BUG]  [BUGGY]  FormatRegistry  registry  =  getRegistry(pattern.trim());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getRegistry(pattern.trim());  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getRegistry(pattern.trim());	  FormatRegistry    registry    =    getRegistry(pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
237	[BUG]  [BUGGY]  FormatRegistry  registry  =(FormatRegistry)iterator.clone();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =(FormatRegistry)iterator.clone();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =(FormatRegistry)iterator.clone();	  FormatRegistry    registry    =(FormatRegistry)iterator.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	65	None	replace
238	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(PI  *  DUMMY_PATTERN,  pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(PI  *  DUMMY_PATTERN,  pattern);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(PI  *  DUMMY_PATTERN,  pattern);	  Pattern    toPattern    =    Pattern.compile(DUMMY_PATTERN,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	54	None	replace
239	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern.equals( "   "))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(pattern  ==  null  ||  pattern.equals( "   "))  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(pattern  ==  null  ||  pattern.equals( "   "))  {	  if(toPattern    ==    null    ||    toPattern.equals(   "   "))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
240	[BUG]  [BUGGY]  if(toPattern!=  null  ||  toPattern.equals( "   "))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(toPattern!=  null  ||  toPattern.equals( "   "))  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(toPattern!=  null  ||  toPattern.equals( "   "))  {	  if(toPattern    ==    null    ||    toPattern.equals(   "   "))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
241	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  iterator.previous();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  iterator.previous();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  entry  =  iterator.previous();	  Iterator    <    Map.Entry    <    String,    Object>    entry    =    iterator.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	68	None	replace
242	[BUG]  [BUGGY]  FormatRegistry  registry  =  getOwnFormat(pattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getOwnFormat(pattern);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getOwnFormat(pattern);	  FormatRegistry    registry    =    getOwnFormat();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
243	[BUG]  [BUGGY]  FormatRegistry  registry  =  getOwnFormat(this);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =  getOwnFormat(this);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =  getOwnFormat(this);	  FormatRegistry    registry    =    getOwnFormat();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
244	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  DEFAULT_QUOTE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(pattern,  DEFAULT_QUOTE);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(pattern,  DEFAULT_QUOTE);	  Pattern    toPattern    =    Pattern.compile(DEFAULT_PATTERN,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
245	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  QUOTE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  QUOTE);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  QUOTE);	  Pattern    toPattern    =    Pattern.compile(this,    DUMMY_PATTERN);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
246	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  charBuffer,  pattern,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  charBuffer,  pattern,  0);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  charBuffer,  pattern,  0);	  Pattern    toPattern    =    Pattern.compile(this,    charBuffer,    pattern);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
247	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.pattern.next();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.pattern.next();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  this.pattern.next();	  Iterator    <    Map.Entry    <    String,    Object>    it    =    pattern.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
248	[BUG]  [BUGGY]  if(pattern!=  null  ||  toPattern  ==  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(pattern!=  null  ||  toPattern  ==  null)  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(pattern!=  null  ||  toPattern  ==  null)  {	  if(toPattern!=    null    ||    pattern!=    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
249	[BUG]  [BUGGY]  if(pattern!=  null  &&  pattern.length()  ==  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(pattern!=  null  &&  pattern.length()  ==  0)  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(pattern!=  null  &&  pattern.length()  ==  0)  {	  if(pattern!=    null    &&    pattern.length()    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	74	None	replace
250	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern.length()  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  if(pattern  ==  null  ||  pattern.length()  >  0)  {  [BUGGY]      super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	if(pattern  ==  null  ||  pattern.length()  >  0)  {	  if(pattern!=    null    &&    pattern.length()    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	74	None	replace
251	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(c,  END_FE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(c,  END_FE);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(c,  END_FE);	  Pattern    toPattern    =    Pattern.compile(this,    c);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
252	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  ptr,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  ptr,  fmtCount);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  ptr,  fmtCount);	  Pattern    toPattern    =    Pattern.compile(this,    ptr);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
253	[BUG]  [BUGGY]  FormatRegistry  registry  =(FormatRegistry)it.getValue();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  FormatRegistry  registry  =(FormatRegistry)it.getValue();  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	FormatRegistry  registry  =(FormatRegistry)it.getValue();	  FormatRegistry    registry    =(FormatRegistry)it.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	66	None	replace
254	[BUG]  [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  charBuffer,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError      [CONTEXT]      public  final  void  applyPattern(String  pattern)  {      [BUGGY]  Pattern  toPattern  =  Pattern.compile(this,  charBuffer,  fmtCount);  [BUGGY]      if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.3779644730092272	143	143	1	replace	Pattern  toPattern  =  Pattern.compile(this,  charBuffer,  fmtCount);	  Pattern    toPattern    =    Pattern.compile(this,    pattern,    fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
