projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(registry==null){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(toPattern==null){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(toPattern!=null){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=pattern.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getRegistry();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(pattern);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,pattern);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(pattern,0);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.origFormats.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.formats.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=registry.entrySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>entry=it.next();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.registry.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=this.registry.entrySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Object>it=this.formatDescription.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.format.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(pattern!=null){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this.formatDescription);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(c);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this.formatDescription,pattern);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(c,pattern);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=this.registry.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=this.entrySet.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=this.entrySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Object>it=this.formatDescription.entrySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Object>it=this.formatDescription.values().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Object>it=this.formatDescription.keySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.format.values().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.format.entrySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.format.keySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getRegistry(fmtCount);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=(FormatRegistry)getRegistry();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getRegistry(true);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(toPattern==null||pattern!=null){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(toPattern!=null||pattern!=null){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=toPattern.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=registry.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.pattern.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.formatDescription.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.registry.values().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.registry.keySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.registry.entrySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(pattern,1);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(pattern,0,fmtCount);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this.formatDescription,0);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=this.registry.keySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143List<Map.Entry<String,Object>it=this.registry.entrySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=register.entrySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=registry.keySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(toPattern!=null||toPattern.length()==0){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(toPattern==null||toPattern.length()==0){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,c);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,pattern,fmtCount);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,pattern,0);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,charBuffer,pattern);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.formats.values().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.formats.entrySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=newArrayList<String>(this.formats.iterator());
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143intfmtCount=pattern.length();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=origFormats.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.origFormats.values().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=foundDescriptions.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getFormat();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getOwnFormat();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.formats.keySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=entries.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(pattern==null){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,DUMMY_PATTERN);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,charBuffer);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,ptr);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(DUMMY_PATTERN,pattern);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(DEFAULT_PATTERN,pattern);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.plots.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=registry.getIterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>entry=it.getValue();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.origFormats.keySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.ordinals.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.patterns.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(toPattern==null||toPattern.equals("")){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this.format);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getRegistry(pattern);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=(FormatRegistry)iterator.next();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=(FormatRegistry)it.next();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>entry=iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>entry=iterator.next();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=pattern.next();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(pattern,-1);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=this.register.entrySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(toPattern!=null&&toPattern.length()>0){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(toPattern!=null&&pattern.length()>0){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(pattern!=null&&pattern.length()>0){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(pattern!=null&&toPattern!=null){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(pattern!=null&&toPattern==null){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143intfmtCount=pattern.indexOf('n');
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,char);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.origFormats.entrySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=registry.keySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getRegistry(fmtCount-1);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getRegistry(fmtCount+1);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(pattern,0,fmtCount+1);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(pattern,0,c);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(pattern,0,0);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(pattern,0,fmtCount,1);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143List<Map.Entry<String,Object>it=registry.entrySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Set<Map.Entry<String,Object>it=this.registry.entrySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,stripCustom);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,charBuffer,stripCustom);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(toPattern!=null||pattern.length()>0){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.ordinals.values().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=newArrayList<String>(this.ordinals.iterator());
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.ordinals.entrySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,pattern,1);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,pattern,0,fmtCount);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,pattern,2);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this.formatDescription,1);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this.formatDescription,0,pattern.length);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this.formatDescription,0,this.fmtCount);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.pattern.values().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.pattern.entrySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=this.entries.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(pattern!=null||toPattern!=null){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(pattern==null||toPattern!=null){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(toPattern==null||toPattern!=null){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.toPattern.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(toPattern==null||toPattern==null){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(toPattern==null||pattern==null){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.foundDescriptions.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=foundDescriptions.values().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143List<String>it=foundDescriptions.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getFormat().getRegistry();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getFormat(fmtCount);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getFormat().registry;
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(toPattern==null||toPattern.equals("-")){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(toPattern==null||toPattern.equals("/")){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(toPattern!=null&&pattern!=null){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(toPattern==null&&pattern!=null){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=newArrayList<String>(this.formats.values());
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=newArrayList<String>(this.formats.iterator(),pattern);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=newArrayList<String>(this.formats.keySet());
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=(FormatRegistry)iter.next();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregister=(FormatRegistry)it.next();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=registry.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=this.registry.entrySet.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,fmtCount,pattern);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,index,fmtCount);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,index,pattern);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,c,fmtCount);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.formatDescription.entrySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.formatDescription.values().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.formatDescription.keySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=pattern.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=toPattern.next();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=this.registry.next();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(toPattern!=null||toPattern.length()>0){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(toPattern==null&&toPattern.length()>0){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(toPattern==null||toPattern.length()>0){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143intfmtCount=pattern.lastIndexOf('n');
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143intfmtCount=pattern.indexOf('n',start);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143intfmtCount=pattern.indexOf('n',0);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143intfmtCount=pattern.indexOf('n',1);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=this.registry.getValue();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>entry=it.getKey();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(pattern,DEFAULT_PATTERN);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(DEFAULT_PATTERN,ESCAPED_QUOTE);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=registry.entrySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(pattern,0,1);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(c,start,pattern);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(pattern,c);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(c,pos);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(c,0);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=this.registry.values().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=registry.values().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.plots.values().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.plots.entrySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=registry.plots.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(c,this);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,start,c);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,c,pos);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,c,pattern);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143intfmtCount=pattern.length()+1;
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143intfmtCount=pattern.length()-1;
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143intfmtCount=pattern.length()*2;
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=this.descriptions.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getRegistry(DEFAULT_PATTERN);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getRegistry(DEFAULT_PREFIX,pattern);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getRegistry(DEFAULT_PREFIX);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getOwnFormat(fmtCount);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getOwnFormat(true);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getOwnFormat().getRegistry();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=foundDescriptions.entrySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=origFormats.values().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.registry.getIterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=fmtCount.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(c,start);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(c+1);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=(FormatRegistry)this.registry;
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=(FormatRegistry)getRegistry().clone();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=(FormatRegistry)this.getRegistry();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.registry.getValues().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=this.iterator.next();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>iterator=this.entrySet.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(pattern,DUMMY_PATTERN);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(DUMMY_PATTERN,ESCAPED_QUOTE);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(DUMMY_PATTERN,pattern,ESCAPED_QUOTE);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,index);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this.format,pattern);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this.format,this.start);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this.format,fmtCount);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this.format,this.end);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,pattern,charBuffer);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,charBuffer,pattern,fmtCount);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,pos);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,start,ptr);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getRegistry(false);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getRegistry(false,false);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getRegistry(true,false);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getRegistry(false,pattern);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregister=(FormatRegistry)iterator.next();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=(FormatRegistry)this.registry.next();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(pattern!=null||toPattern.length()==0){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(toPattern==null||toPattern.length()!=0){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.registry.patterns.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.patterns.values().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this.formatDescription,this.end);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this.formatDescription,this.start);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this.formatDescription,DUMMY_PATTERN);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(pattern==null||toPattern.length()==0){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=foundFormats.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=newArrayList<String>(origFormats.iterator());
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(toPattern==null&&pattern.length()>0){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(pattern!=null||pattern.length()>0){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,ESCAPED_QUOTE);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,eCAPED_QUOTE);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,fmtCount);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(pattern,this.formatDescription);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this.formatDescription,ESCAPED_QUOTE);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this.formatDescription,pattern,fmtCount);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(ptr,1);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(pattern,2);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getRegistry(format);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,DEFAULT_PATTERN);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,START_FMT);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=findDescriptions.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getRegistry(true,true);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this.formatDescription,0,fmtCount);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(pattern,0,fmtCount-1);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=pos.getIterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(pattern==null||toPattern.equals("")){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.registry.getPatterns().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(pattern==null&&toPattern==null){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,END_FE);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(DUMMY_PATTERN,eCAPED_QUOTE);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>entry=it.getAttributes();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Object>it=registry.values().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143intfmtCount=pattern.indexOf('n',-1);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Object>it=registry.keySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this.formatDescription,-1);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.registry.entities.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.orangeFormats.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(toPattern==null&&pattern!=null&&pattern.length()>0){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this.formatDescription,DUMMY_QUOTE);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this.formatDescription,ED_QUOTE);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this.formatDescription,charBuffer);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>entry=registry.entrySet();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>entry=this.registry.entrySet();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>entry=this.entrySet();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.plots.keySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=registry.getEntrySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,charCount,pattern);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,charBuffer,0,pattern);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getOwnFormat(DEFAULT_PATTERN);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getOwnFormat(DEFAULT_PREFIX);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=origFormats.keySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=foundDescriptions.keySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=newArrayList<String>(this.formats.entrySet());
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(pattern==null&&toPattern!=null){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(c,ptr);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>entry=iterator.getValue();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>entry=iterator.getKey();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>entry=iterator.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=registry.ordinals.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(DEFAULT_PATTERN,DEFAULT_QUOTE);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(DEFAULT_PATTERN,eCAPED_QUOTE);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=registry.entries.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=registry.values().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=pattern.entrySet();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=pattern.entrySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Object>it=registry.entrySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=registry.entrySet.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,c,0);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,c,END_FE);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,index,0);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,pos,0);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,charBuffer,0);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getFormat(DEFAULT_PATTERN);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getFormat(DEFAULT_PREFIX);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getFormat(this);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=(FormatRegistry)iterator.getValue();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,ptr,pos);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,ptr,0);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,ptr+1);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(DUMMY_PATTERN,this.formatDescription);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this.formatDescription,this.index);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this.format,this.index);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this.format,0);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this.format,pos);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getRegistry(true,fmtCount);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=newArrayList<String>(this.formats.values().iterator());
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(c,this.start);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(pattern==null||pattern!=null){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=registry.getIteratorForPattern(pattern);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=registry.getIterator(this);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getFormat(pattern);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryit=getFormat();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryit=getRegistry(fmtCount);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(pattern!=null&&toPattern.length()>0){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(pattern!=null||pattern.length()==0){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(toPattern!=null&&toPattern.length()==0){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(pattern,pattern);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.registry.entities().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this.formatDescription,this.end_FE);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.format.list().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.format.elements().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(pattern==null||pattern.length()==0){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>entry=this.entrySet().iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>entry=entries();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>entry=iterator(0);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.ordinalFormats.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<String>it=this.toPatterns.iterator();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getRegistry(pattern,fmtCount);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getRegistry(pattern,DEFAULT_PATTERN);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getRegistry(pattern.trim());
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=(FormatRegistry)iterator.clone();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(PI*DUMMY_PATTERN,pattern);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(pattern==null||pattern.equals("")){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(toPattern!=null||toPattern.equals("")){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>entry=iterator.previous();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getOwnFormat(pattern);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=getOwnFormat(this);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(pattern,DEFAULT_QUOTE);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,QUOTE);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,charBuffer,pattern,0);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143Iterator<Map.Entry<String,Object>it=this.pattern.next();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(pattern!=null||toPattern==null){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(pattern!=null&&pattern.length()==0){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143if(pattern==null||pattern.length()>0){
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(c,END_FE);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,ptr,fmtCount);
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143FormatRegistryregistry=(FormatRegistry)it.getValue();
projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java143PatterntoPattern=Pattern.compile(this,charBuffer,fmtCount);
