bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  index);  break;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  index);  break;  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	int  fmtCount  =  readArgumentIndex(pattern,  index);  break;	      int    fmtCount    =    readArgumentIndex(pattern,    next(pos));    break;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
2	[BUG]  [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  next(pos),  c);  break;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  next(pos),  c);  break;  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	int  fmtCount  =  readArgumentIndex(pattern,  next(pos),  c);  break;	      int    fmtCount    =    readArgumentIndex(pattern,    next(pos));    break;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
3	[BUG]  [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  next(pos  +  1));  break;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  next(pos  +  1));  break;  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	int  fmtCount  =  readArgumentIndex(pattern,  next(pos  +  1));  break;	      int    fmtCount    =    readArgumentIndex(pattern,    next(pos));    break;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
4	[BUG]  [BUGGY]  appendQuotedString(pattern,  pos,  QUOTE,  false);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  appendQuotedString(pattern,  pos,  QUOTE,  false);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	appendQuotedString(pattern,  pos,  QUOTE,  false);	  appendQuotedString(pattern,    pos,    QUOTE,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
5	[BUG]  [BUGGY]  appendQuotedString(c,  pos,  QUOTE,  true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  appendQuotedString(c,  pos,  QUOTE,  true);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	appendQuotedString(c,  pos,  QUOTE,  true);	  appendQuotedString(pattern,    pos,    QUOTE,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
6	[BUG]  [BUGGY]  fmtCount  =  readArgumentIndex(c,  pos.getIndex());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  fmtCount  =  readArgumentIndex(c,  pos.getIndex());  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	fmtCount  =  readArgumentIndex(c,  pos.getIndex());	      fmtCount    =    readArgumentIndex(pattern,    pos.getIndex());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
7	[BUG]  [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  pos.getIndex()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  pos.getIndex()  +  1);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	fmtCount  =  readArgumentIndex(pattern,  pos.getIndex()  +  1);	      fmtCount    =    readArgumentIndex(pattern,    pos.getIndex());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
8	[BUG]  [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  pos.getIndex()  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  pos.getIndex()  -  1);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	fmtCount  =  readArgumentIndex(pattern,  pos.getIndex()  -  1);	      fmtCount    =    readArgumentIndex(pattern,    pos.getIndex());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
9	[BUG]  [BUGGY]  fmtCount  =  readArgumentIndex(p,  pos.getIndex());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  fmtCount  =  readArgumentIndex(p,  pos.getIndex());  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	fmtCount  =  readArgumentIndex(p,  pos.getIndex());	      fmtCount    =    readArgumentIndex(pattern,    pos.getIndex());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
10	[BUG]  [BUGGY]  AppendQuotedString(pattern,  pos,  c,  false);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  AppendQuotedString(pattern,  pos,  c,  false);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	AppendQuotedString(pattern,  pos,  c,  false);	  AppendQuotedString(pattern,    pos,    c,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
11	[BUG]  [BUGGY]  AppendQuotedString(c,  pos,  true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  AppendQuotedString(c,  pos,  true);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	AppendQuotedString(c,  pos,  true);	  AppendQuotedString(pattern,    pos,    c,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
12	[BUG]  [BUGGY]  AppendQuotedString(pattern,  pos,  fmtCount,  true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  AppendQuotedString(pattern,  pos,  fmtCount,  true);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	AppendQuotedString(pattern,  pos,  fmtCount,  true);	  AppendQuotedString(pattern,    pos,    c,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
13	[BUG]  [BUGGY]  AppendQuotedString(p,  pos,  c,  false);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  AppendQuotedString(p,  pos,  c,  false);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	AppendQuotedString(p,  pos,  c,  false);	  AppendQuotedString(pattern,    pos,    c,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
14	[BUG]  [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(QUOTE).append(c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(QUOTE).append(c);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	fmtCount  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(QUOTE).append(c);	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
15	[BUG]  [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  next(pos),  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  next(pos),  c);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	fmtCount  =  readArgumentIndex(pattern,  next(pos),  c);	      fmtCount    =    readArgumentIndex(pattern,    next(pos));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
16	[BUG]  [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  next(pos  +  1));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  next(pos  +  1));  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	fmtCount  =  readArgumentIndex(pattern,  next(pos  +  1));	      fmtCount    =    readArgumentIndex(pattern,    next(pos));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
17	[BUG]  [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  index);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  index);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	fmtCount  =  readArgumentIndex(pattern,  index);	      fmtCount    =    readArgumentIndex(pattern,    next(pos));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
18	[BUG]  [BUGGY]  appendQuotedString(c,  pos,  stripCustom,  false);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  appendQuotedString(c,  pos,  stripCustom,  false);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	appendQuotedString(c,  pos,  stripCustom,  false);	  appendQuotedString(c,    pos,    stripCustom,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
19	[BUG]  [BUGGY]  appendQuotedString(c,  start,  stripCustom,  true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  appendQuotedString(c,  start,  stripCustom,  true);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	appendQuotedString(c,  start,  stripCustom,  true);	  appendQuotedString(c,    pos,    stripCustom,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
20	[BUG]  [BUGGY]  appendQuotedString(c,  pos,  fmtCount,  true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  appendQuotedString(c,  pos,  fmtCount,  true);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	appendQuotedString(c,  pos,  fmtCount,  true);	  appendQuotedString(c,    pos,    stripCustom,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
21	[BUG]  [BUGGY]  appendQuotedString(c,  pos,  pattern,  true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  appendQuotedString(c,  pos,  pattern,  true);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	appendQuotedString(c,  pos,  pattern,  true);	  appendQuotedString(c,    pos,    stripCustom,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
22	[BUG]  [BUGGY]  fmtCount  =  readArgumentIndex(c,  pos);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  fmtCount  =  readArgumentIndex(c,  pos);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	fmtCount  =  readArgumentIndex(c,  pos);	      fmtCount    =    readArgumentIndex(pattern,    pos);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
23	[BUG]  [BUGGY]  fmtCount  =  readArgumentIndex(p,  pos);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  fmtCount  =  readArgumentIndex(p,  pos);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	fmtCount  =  readArgumentIndex(p,  pos);	      fmtCount    =    readArgumentIndex(pattern,    pos);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
24	[BUG]  [BUGGY]  char  END_FE  =  pattern.charAt(pos.getIndex());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  char  END_FE  =  pattern.charAt(pos.getIndex());  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	char  END_FE  =  pattern.charAt(pos.getIndex());	      char    END_FE    =    pattern.charAt(pos.getIndex()    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
25	[BUG]  [BUGGY]  char  END_FE  =  pattern.charAt(pos.getIndex()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  char  END_FE  =  pattern.charAt(pos.getIndex()  +  1);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	char  END_FE  =  pattern.charAt(pos.getIndex()  +  1);	      char    END_FE    =    pattern.charAt(pos.getIndex()    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
26	[BUG]  [BUGGY]  char  END_FE  =  c.charAt(pos.getIndex()  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  char  END_FE  =  c.charAt(pos.getIndex()  -  1);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	char  END_FE  =  c.charAt(pos.getIndex()  -  1);	      char    END_FE    =    pattern.charAt(pos.getIndex()    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
27	[BUG]  [BUGGY]  char  END_FE  =  pattern.charAt(pos.getIndex())+  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  char  END_FE  =  pattern.charAt(pos.getIndex())+  1;  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	char  END_FE  =  pattern.charAt(pos.getIndex())+  1;	      char    END_FE    =    pattern.charAt(pos.getIndex()    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
28	[BUG]  [BUGGY]  appendQuotedString(pattern,  pos,  c,  false);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  appendQuotedString(pattern,  pos,  c,  false);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	appendQuotedString(pattern,  pos,  c,  false);	  appendQuotedString(pattern,    pos,    c,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
29	[BUG]  [BUGGY]  appendQuotedString(c,  pos,  true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  appendQuotedString(c,  pos,  true);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	appendQuotedString(c,  pos,  true);	  appendQuotedString(pattern,    pos,    c,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
30	[BUG]  [BUGGY]  appendQuotedString(p,  pos,  c,  false);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  appendQuotedString(p,  pos,  c,  false);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	appendQuotedString(p,  pos,  c,  false);	  appendQuotedString(pattern,    pos,    c,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
31	[BUG]  [BUGGY]  appendQuotedString(pattern,  pos,  DUMMY_PATTERN,  false);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  appendQuotedString(pattern,  pos,  DUMMY_PATTERN,  false);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	appendQuotedString(pattern,  pos,  DUMMY_PATTERN,  false);	  appendQuotedString(pattern,    pos,    DUMMY_PATTERN,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
32	[BUG]  [BUGGY]  appendQuotedString(pattern,  pos,  ESCAPED_QUOTE,  true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  appendQuotedString(pattern,  pos,  ESCAPED_QUOTE,  true);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	appendQuotedString(pattern,  pos,  ESCAPED_QUOTE,  true);	  appendQuotedString(pattern,    pos,    DUMMY_PATTERN,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
33	[BUG]  [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  index);  stripCustom.append(QUOTE).append(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  index);  stripCustom.append(QUOTE).append(fmtCount);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	fmtCount  =  readArgumentIndex(pattern,  index);  stripCustom.append(QUOTE).append(fmtCount);	      fmtCount    =    readArgumentIndex(pattern,    next(pos));    stripCustom.append(QUOTE).append(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
34	[BUG]  [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(QUOTE).append(fmtCount  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(QUOTE).append(fmtCount  +  1);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	fmtCount  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(QUOTE).append(fmtCount  +  1);	      fmtCount    =    readArgumentIndex(pattern,    next(pos));    stripCustom.append(QUOTE).append(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
35	[BUG]  [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  start,  pos);  stripCustom.append(QUOTE).append(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  start,  pos);  stripCustom.append(QUOTE).append(fmtCount);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	fmtCount  =  readArgumentIndex(pattern,  start,  pos);  stripCustom.append(QUOTE).append(fmtCount);	      fmtCount    =    readArgumentIndex(pattern,    next(pos));    stripCustom.append(QUOTE).append(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
36	[BUG]  [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  start,  next(pos));  stripCustom.append(QUOTE).append(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  start,  next(pos));  stripCustom.append(QUOTE).append(fmtCount);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	fmtCount  =  readArgumentIndex(pattern,  start,  next(pos));  stripCustom.append(QUOTE).append(fmtCount);	      fmtCount    =    readArgumentIndex(pattern,    next(pos));    stripCustom.append(QUOTE).append(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
37	[BUG]  [BUGGY]  char[]  c  =  pattern.toPattern();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  char[]  c  =  pattern.toPattern();  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	char[]  c  =  pattern.toPattern();	      char[]    c    =    pattern.toCharArray();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
38	[BUG]  [BUGGY]  char[]  c  =  pattern.toCharArray()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  char[]  c  =  pattern.toCharArray()  +  1;  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	char[]  c  =  pattern.toCharArray()  +  1;	      char[]    c    =    pattern.toCharArray();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
39	[BUG]  [BUGGY]  char[]  c  =  pattern.toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  char[]  c  =  pattern.toString();  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	char[]  c  =  pattern.toString();	      char[]    c    =    pattern.toCharArray();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
40	[BUG]  [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  index);  stripCustom.append(QUOTE).append(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  index);  stripCustom.append(QUOTE).append(fmtCount);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	int  fmtCount  =  readArgumentIndex(pattern,  index);  stripCustom.append(QUOTE).append(fmtCount);	      int    fmtCount    =    readArgumentIndex(pattern,    next(pos));    stripCustom.append(QUOTE).append(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
41	[BUG]  [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(QUOTE).append(fmtCount  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(QUOTE).append(fmtCount  +  1);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	int  fmtCount  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(QUOTE).append(fmtCount  +  1);	      int    fmtCount    =    readArgumentIndex(pattern,    next(pos));    stripCustom.append(QUOTE).append(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
42	[BUG]  [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  start);  stripCustom.append(QUOTE).append(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  start);  stripCustom.append(QUOTE).append(fmtCount);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	int  fmtCount  =  readArgumentIndex(pattern,  start);  stripCustom.append(QUOTE).append(fmtCount);	      int    fmtCount    =    readArgumentIndex(pattern,    next(pos));    stripCustom.append(QUOTE).append(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
43	[BUG]  [BUGGY]  pos.getIndex()  =  readArgumentIndex(pattern,  start,  pos);  stripCustom.append(QUOTE).append(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  pos.getIndex()  =  readArgumentIndex(pattern,  start,  pos);  stripCustom.append(QUOTE).append(fmtCount);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	pos.getIndex()  =  readArgumentIndex(pattern,  start,  pos);  stripCustom.append(QUOTE).append(fmtCount);	      pos.getIndex()    =    readArgumentIndex(pattern,    next(pos));    stripCustom.append(QUOTE).append(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
44	[BUG]  [BUGGY]  pos.getIndex()  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(QUOTE).append(fmtCount  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  pos.getIndex()  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(QUOTE).append(fmtCount  +  1);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	pos.getIndex()  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(QUOTE).append(fmtCount  +  1);	      pos.getIndex()    =    readArgumentIndex(pattern,    next(pos));    stripCustom.append(QUOTE).append(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
45	[BUG]  [BUGGY]  pos.getIndex()  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(QUOTE).append(index);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  pos.getIndex()  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(QUOTE).append(index);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	pos.getIndex()  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(QUOTE).append(index);	      pos.getIndex()    =    readArgumentIndex(pattern,    next(pos));    stripCustom.append(QUOTE).append(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
46	[BUG]  [BUGGY]  pos.getIndex()  =  readArgumentIndex(pattern,  end(pos));  stripCustom.append(QUOTE).append(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  pos.getIndex()  =  readArgumentIndex(pattern,  end(pos));  stripCustom.append(QUOTE).append(fmtCount);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	pos.getIndex()  =  readArgumentIndex(pattern,  end(pos));  stripCustom.append(QUOTE).append(fmtCount);	      pos.getIndex()    =    readArgumentIndex(pattern,    next(pos));    stripCustom.append(QUOTE).append(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
47	[BUG]  [BUGGY]  appendQuotedString(pattern,  pos,  c,  fmtCount,  true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  appendQuotedString(pattern,  pos,  c,  fmtCount,  true);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	appendQuotedString(pattern,  pos,  c,  fmtCount,  true);	  appendQuotedString(pattern,    pos,    fmtCount,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
48	[BUG]  [BUGGY]  appendQuotedString(pattern,  pos,  fmtCount,  c,  true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  appendQuotedString(pattern,  pos,  fmtCount,  c,  true);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	appendQuotedString(pattern,  pos,  fmtCount,  c,  true);	  appendQuotedString(pattern,    pos,    fmtCount,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
49	[BUG]  [BUGGY]  appendQuotedString(pattern,  pos,  fmtCount,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  appendQuotedString(pattern,  pos,  fmtCount,  0);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	appendQuotedString(pattern,  pos,  fmtCount,  0);	  appendQuotedString(pattern,    pos,    fmtCount,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
50	[BUG]  [BUGGY]  pos.getIndex()  =  readArgumentIndex(pattern,  next(pos),  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  pos.getIndex()  =  readArgumentIndex(pattern,  next(pos),  fmtCount);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	pos.getIndex()  =  readArgumentIndex(pattern,  next(pos),  fmtCount);	      pos.getIndex()    =    readArgumentIndex(pattern,    next(pos));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
51	[BUG]  [BUGGY]  pos.getIndex()  =  readArgumentIndex(pattern,  next(pos),  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  pos.getIndex()  =  readArgumentIndex(pattern,  next(pos),  c);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	pos.getIndex()  =  readArgumentIndex(pattern,  next(pos),  c);	      pos.getIndex()    =    readArgumentIndex(pattern,    next(pos));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
52	[BUG]  [BUGGY]  pos.getIndex()  =  readArgumentIndex(c,  next(pos));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  pos.getIndex()  =  readArgumentIndex(c,  next(pos));  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	pos.getIndex()  =  readArgumentIndex(c,  next(pos));	      pos.getIndex()    =    readArgumentIndex(pattern,    next(pos));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
53	[BUG]  [BUGGY]  applyQuotedString(c,  pos,  true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  applyQuotedString(c,  pos,  true);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	applyQuotedString(c,  pos,  true);	  applyQuotedString(pattern,    pos,    c,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
54	[BUG]  [BUGGY]  applyQuotedString(pattern,  pos,  c,  false);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  applyQuotedString(pattern,  pos,  c,  false);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	applyQuotedString(pattern,  pos,  c,  false);	  applyQuotedString(pattern,    pos,    c,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
55	[BUG]  [BUGGY]  applyQuotedString(c,  pos,  pattern,  true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  applyQuotedString(c,  pos,  pattern,  true);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	applyQuotedString(c,  pos,  pattern,  true);	  applyQuotedString(pattern,    pos,    c,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
56	[BUG]  [BUGGY]  applyQuotedString(p,  pos,  c,  false);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  applyQuotedString(p,  pos,  c,  false);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	applyQuotedString(p,  pos,  c,  false);	  applyQuotedString(pattern,    pos,    c,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
57	[BUG]  [BUGGY]  char  fmtCount  =  readArgumentIndex(pattern,  index);  stripCustom.append(QUOTE).append(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  char  fmtCount  =  readArgumentIndex(pattern,  index);  stripCustom.append(QUOTE).append(fmtCount);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	char  fmtCount  =  readArgumentIndex(pattern,  index);  stripCustom.append(QUOTE).append(fmtCount);	      char    fmtCount    =    readArgumentIndex(pattern,    next(pos));    stripCustom.append(QUOTE).append(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
58	[BUG]  [BUGGY]  char  fmtCount  =  readArgumentIndex(pattern,  start,  pos);  stripCustom.append(QUOTE).append(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  char  fmtCount  =  readArgumentIndex(pattern,  start,  pos);  stripCustom.append(QUOTE).append(fmtCount);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	char  fmtCount  =  readArgumentIndex(pattern,  start,  pos);  stripCustom.append(QUOTE).append(fmtCount);	      char    fmtCount    =    readArgumentIndex(pattern,    next(pos));    stripCustom.append(QUOTE).append(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
59	[BUG]  [BUGGY]  char  fmtCount  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(QUOTE).append(fmtCount  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  char  fmtCount  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(QUOTE).append(fmtCount  +  1);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	char  fmtCount  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(QUOTE).append(fmtCount  +  1);	      char    fmtCount    =    readArgumentIndex(pattern,    next(pos));    stripCustom.append(QUOTE).append(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
60	[BUG]  [BUGGY]  char  fmtCount  =  readArgumentIndex(pattern,  start);  stripCustom.append(QUOTE).append(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  char  fmtCount  =  readArgumentIndex(pattern,  start);  stripCustom.append(QUOTE).append(fmtCount);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	char  fmtCount  =  readArgumentIndex(pattern,  start);  stripCustom.append(QUOTE).append(fmtCount);	      char    fmtCount    =    readArgumentIndex(pattern,    next(pos));    stripCustom.append(QUOTE).append(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
61	[BUG]  [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  next(pos),  c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  next(pos),  c);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	int  fmtCount  =  readArgumentIndex(pattern,  next(pos),  c);	      int    fmtCount    =    readArgumentIndex(pattern,    next(pos));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
62	[BUG]  [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  index);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  index);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	int  fmtCount  =  readArgumentIndex(pattern,  index);	      int    fmtCount    =    readArgumentIndex(pattern,    next(pos));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
63	[BUG]  [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  next(pos  +  1));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  next(pos  +  1));  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	int  fmtCount  =  readArgumentIndex(pattern,  next(pos  +  1));	      int    fmtCount    =    readArgumentIndex(pattern,    next(pos));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
64	[BUG]  [BUGGY]  appendQuotedString(pattern,  pos,  c,  DEFAULT_QUOTE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  appendQuotedString(pattern,  pos,  c,  DEFAULT_QUOTE);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	appendQuotedString(pattern,  pos,  c,  DEFAULT_QUOTE);	  appendQuotedString(pattern,    pos,    c,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
65	[BUG]  [BUGGY]  appendQuotedString(pattern,  pos,  c,  null);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  appendQuotedString(pattern,  pos,  c,  null);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	appendQuotedString(pattern,  pos,  c,  null);	  appendQuotedString(pattern,    pos,    c,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
66	[BUG]  [BUGGY]  char  fmtCount  =  readArgumentIndex(pattern,  end(pos));  stripCustom.append(QUOTE).append(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  char  fmtCount  =  readArgumentIndex(pattern,  end(pos));  stripCustom.append(QUOTE).append(fmtCount);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	char  fmtCount  =  readArgumentIndex(pattern,  end(pos));  stripCustom.append(QUOTE).append(fmtCount);	      char    fmtCount    =    readArgumentIndex(pattern,    next(pos));    stripCustom.append(QUOTE).append(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
67	[BUG]  [BUGGY]  char[]  c  =  toPattern.toCharArray();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  char[]  c  =  toPattern.toCharArray();  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	char[]  c  =  toPattern.toCharArray();	      char[]    c    =    pattern.toCharArray();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
68	[BUG]  [BUGGY]  appendQuotedString(stripCustom,  pos,  fmtCount,  true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  appendQuotedString(stripCustom,  pos,  fmtCount,  true);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	appendQuotedString(stripCustom,  pos,  fmtCount,  true);	  appendQuotedString(pattern,    pos,    fmtCount,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
69	[BUG]  [BUGGY]  AppendQuotedString(pattern,  pos,  c,  null);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  AppendQuotedString(pattern,  pos,  c,  null);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	AppendQuotedString(pattern,  pos,  c,  null);	  AppendQuotedString(pattern,    pos,    c,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
70	[BUG]  [BUGGY]  AppendQuotedString(pattern,  pos,  c,  DEFAULT_QUOTE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  AppendQuotedString(pattern,  pos,  c,  DEFAULT_QUOTE);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	AppendQuotedString(pattern,  pos,  c,  DEFAULT_QUOTE);	  AppendQuotedString(pattern,    pos,    c,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
71	[BUG]  [BUGGY]  applyQuotedString(c,  pos,  c,  true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  applyQuotedString(c,  pos,  c,  true);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	applyQuotedString(c,  pos,  c,  true);	  applyQuotedString(pattern,    pos,    c,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
72	[BUG]  [BUGGY]  pos.getIndex()  =  readArgumentIndex(pattern,  next(0));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  pos.getIndex()  =  readArgumentIndex(pattern,  next(0));  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	pos.getIndex()  =  readArgumentIndex(pattern,  next(0));	      pos.getIndex()    =    readArgumentIndex(pattern,    next(pos));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
73	[BUG]  [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  start);  stripCustom.append(QUOTE).append(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  start);  stripCustom.append(QUOTE).append(fmtCount);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	fmtCount  =  readArgumentIndex(pattern,  start);  stripCustom.append(QUOTE).append(fmtCount);	      fmtCount    =    readArgumentIndex(pattern,    next(pos));    stripCustom.append(QUOTE).append(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
74	[BUG]  [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  start);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  start);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	fmtCount  =  readArgumentIndex(pattern,  start);	      fmtCount    =    readArgumentIndex(pattern,    pos);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
75	[BUG]  [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  next(0));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  next(0));  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	fmtCount  =  readArgumentIndex(pattern,  next(0));	      fmtCount    =    readArgumentIndex(pattern,    pos);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
76	[BUG]  [BUGGY]  char  END_FE  =  pattern.charAt(pos.getIndex()  -  1  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  char  END_FE  =  pattern.charAt(pos.getIndex()  -  1  +  1);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	char  END_FE  =  pattern.charAt(pos.getIndex()  -  1  +  1);	      char    END_FE    =    pattern.charAt(pos.getIndex()    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
77	[BUG]  [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  next(pos)+  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  next(pos)+  1);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	fmtCount  =  readArgumentIndex(pattern,  next(pos)+  1);	      fmtCount    =    readArgumentIndex(pattern,    next(pos));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
78	[BUG]  [BUGGY]  appendQuotedString(c,  pos,  DUMMY_PATTERN,  true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  appendQuotedString(c,  pos,  DUMMY_PATTERN,  true);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	appendQuotedString(c,  pos,  DUMMY_PATTERN,  true);	  appendQuotedString(c,    pos,    stripCustom,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
79	[BUG]  [BUGGY]  appendQuotedString(c,  start,  pos,  stripCustom,  true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  appendQuotedString(c,  start,  pos,  stripCustom,  true);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	appendQuotedString(c,  start,  pos,  stripCustom,  true);	  appendQuotedString(c,    pos,    stripCustom,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
80	[BUG]  [BUGGY]  appendQuotedString(c,  pos,  DUMMY_QUOTE,  true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  appendQuotedString(c,  pos,  DUMMY_QUOTE,  true);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	appendQuotedString(c,  pos,  DUMMY_QUOTE,  true);	  appendQuotedString(c,    pos,    stripCustom,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
81	[BUG]  [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  next(pos)+  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  next(pos)+  1);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	int  fmtCount  =  readArgumentIndex(pattern,  next(pos)+  1);	      int    fmtCount    =    readArgumentIndex(pattern,    next(pos));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
82	[BUG]  [BUGGY]  float  fmtCount  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(QUOTE).append(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  float  fmtCount  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(QUOTE).append(fmtCount);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	float  fmtCount  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(QUOTE).append(fmtCount);	      int    fmtCount    =    readArgumentIndex(pattern,    next(pos));    stripCustom.append(QUOTE).append(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
83	[BUG]  [BUGGY]  char  fmtCount  =  readArgumentIndex(pattern,  next(pos));  break;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  char  fmtCount  =  readArgumentIndex(pattern,  next(pos));  break;  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	char  fmtCount  =  readArgumentIndex(pattern,  next(pos));  break;	      int    fmtCount    =    readArgumentIndex(pattern,    next(pos));    break;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
84	[BUG]  [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  next(pos.getIndex()));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  next(pos.getIndex()));  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	fmtCount  =  readArgumentIndex(pattern,  next(pos.getIndex()));	      fmtCount    =    readArgumentIndex(pattern,    pos.getIndex());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
85	[BUG]  [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  next(pos).getIndex());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  next(pos).getIndex());  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	fmtCount  =  readArgumentIndex(pattern,  next(pos).getIndex());	      fmtCount    =    readArgumentIndex(pattern,    pos.getIndex());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
86	[BUG]  [BUGGY]  pos.getIndex()  =  readArgumentIndex(pattern,  next(pos  +  1));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  pos.getIndex()  =  readArgumentIndex(pattern,  next(pos  +  1));  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	pos.getIndex()  =  readArgumentIndex(pattern,  next(pos  +  1));	      pos.getIndex()    =    readArgumentIndex(pattern,    next(pos));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
87	[BUG]  [BUGGY]  appendQuotedString(c,  0,  stripCustom,  true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  appendQuotedString(c,  0,  stripCustom,  true);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	appendQuotedString(c,  0,  stripCustom,  true);	  appendQuotedString(c,    pos,    stripCustom,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
88	[BUG]  [BUGGY]  pos.getIndex()  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(QUOTE).append(c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  pos.getIndex()  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(QUOTE).append(c);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	pos.getIndex()  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(QUOTE).append(c);	      pos.getIndex()    =    readArgumentIndex(pattern,    next(pos));    stripCustom.append(QUOTE).append(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
89	[BUG]  [BUGGY]  pos.getIndex()  =  readArgumentIndex(pattern,  start,  pos));  stripCustom.append(QUOTE).append(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  pos.getIndex()  =  readArgumentIndex(pattern,  start,  pos));  stripCustom.append(QUOTE).append(fmtCount);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	pos.getIndex()  =  readArgumentIndex(pattern,  start,  pos));  stripCustom.append(QUOTE).append(fmtCount);	      pos.getIndex()    =    readArgumentIndex(pattern,    next(pos));    stripCustom.append(QUOTE).append(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
90	[BUG]  [BUGGY]  AppendQuotedString(pattern,  pos,  c,  true,  fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  AppendQuotedString(pattern,  pos,  c,  true,  fmtCount);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	AppendQuotedString(pattern,  pos,  c,  true,  fmtCount);	  AppendQuotedString(pattern,    pos,    c,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
91	[BUG]  [BUGGY]  char  END_FE  =  pattern.charAt(pos.getIndex())-  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  char  END_FE  =  pattern.charAt(pos.getIndex())-  1;  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	char  END_FE  =  pattern.charAt(pos.getIndex())-  1;	      char    END_FE    =    pattern.charAt(pos.getIndex()    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
92	[BUG]  [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  next(pos.getIndex()));  break;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  next(pos.getIndex()));  break;  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	int  fmtCount  =  readArgumentIndex(pattern,  next(pos.getIndex()));  break;	      int    fmtCount    =    readArgumentIndex(pattern,    next(pos));    break;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
93	[BUG]  [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(QUOTE).append(c);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(QUOTE).append(c);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	int  fmtCount  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(QUOTE).append(c);	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
94	[BUG]  [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  end(pos));  stripCustom.append(QUOTE).append(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  end(pos));  stripCustom.append(QUOTE).append(fmtCount);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	int  fmtCount  =  readArgumentIndex(pattern,  end(pos));  stripCustom.append(QUOTE).append(fmtCount);	      int    fmtCount    =    readArgumentIndex(pattern,    next(pos));    stripCustom.append(QUOTE).append(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
95	[BUG]  [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  next(pos.getIndex()));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  int  fmtCount  =  readArgumentIndex(pattern,  next(pos.getIndex()));  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	int  fmtCount  =  readArgumentIndex(pattern,  next(pos.getIndex()));	      int    fmtCount    =    readArgumentIndex(pattern,    next(pos));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
96	[BUG]  [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  start,  pos));  stripCustom.append(QUOTE).append(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  start,  pos));  stripCustom.append(QUOTE).append(fmtCount);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	fmtCount  =  readArgumentIndex(pattern,  start,  pos));  stripCustom.append(QUOTE).append(fmtCount);	      fmtCount    =    readArgumentIndex(pattern,    next(pos));    stripCustom.append(QUOTE).append(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
97	[BUG]  [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  end(pos));  stripCustom.append(QUOTE).append(fmtCount);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  fmtCount  =  readArgumentIndex(pattern,  end(pos));  stripCustom.append(QUOTE).append(fmtCount);  [BUGGY]    appendQuotedString(pattern,  pos,  stripCustom,  true);  break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	fmtCount  =  readArgumentIndex(pattern,  end(pos));  stripCustom.append(QUOTE).append(fmtCount);	      fmtCount    =    readArgumentIndex(pattern,    next(pos));    stripCustom.append(QUOTE).append(fmtCount);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
98	[BUG]  [BUGGY]  AppendQuotedString(c,  pos,  QUOTE,  true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError    [CONTEXT]    ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:    [BUGGY]  AppendQuotedString(c,  pos,  QUOTE,  true);  [BUGGY]    break;  case  START_FE:  fmtCount++;  seekNonWs(pattern,  pos);  int  start  =  pos.getIndex();  int  index  =  readArgumentIndex(pattern,  next(pos));  stripCustom.append(START_FE).append(index);  seekNonWs(pattern,  pos);  Format  format  =  null;  String  formatDescription  =  null;  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	1.0	158	158	1	replace	AppendQuotedString(c,  pos,  QUOTE,  true);	  appendQuotedString(pattern,    pos,    QUOTE,    true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
