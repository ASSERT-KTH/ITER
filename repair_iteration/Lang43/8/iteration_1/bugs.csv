bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(toPattern  ==  null)  {  for(int  i  =  0;  i  <  toPattern.length();  i++)  {  appendQuotedString(pattern,  pos,  stripCustom,  true);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  [BUGGY]    if(toPattern  ==  null)  {  for(int  i  =  0;  i  <  toPattern.length();  i++)  {  appendQuotedString(pattern,  pos,  stripCustom,  true);  }  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	148	148	1	replace	    if(toPattern  ==  null)  {  for(int  i  =  0;  i  <  toPattern.length();  i++)  {  appendQuotedString(pattern,  pos,  stripCustom,  true);  }		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	add
2	[BUG]  [BUGGY]    if(toPattern  ==  null)  {  for(int  i  =  0;  i  <  toPattern.length();  i++)  {  appendQuotedString(pattern,  i,  stripCustom,  true);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  [BUGGY]    if(toPattern  ==  null)  {  for(int  i  =  0;  i  <  toPattern.length();  i++)  {  appendQuotedString(pattern,  i,  stripCustom,  true);  }  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	148	148	1	replace	    if(toPattern  ==  null)  {  for(int  i  =  0;  i  <  toPattern.length();  i++)  {  appendQuotedString(pattern,  i,  stripCustom,  true);  }		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	add
3	[BUG]  [BUGGY]    if(toPattern  ==  null)  {  for(int  i  =  0;  i  <  toPattern.length();  ++i)  {  appendQuotedString(pattern,  pos,  stripCustom,  true);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  [BUGGY]    if(toPattern  ==  null)  {  for(int  i  =  0;  i  <  toPattern.length();  ++i)  {  appendQuotedString(pattern,  pos,  stripCustom,  true);  }  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	148	148	1	replace	    if(toPattern  ==  null)  {  for(int  i  =  0;  i  <  toPattern.length();  ++i)  {  appendQuotedString(pattern,  pos,  stripCustom,  true);  }		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	add
4	[BUG]  [BUGGY]    if(toPattern  ==  null)  {  for(int  i  =  start;  i  <  fmtCount;  i++)  {  appendQuotedString(pattern,  pos,  stripCustom,  true);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  [BUGGY]    if(toPattern  ==  null)  {  for(int  i  =  start;  i  <  fmtCount;  i++)  {  appendQuotedString(pattern,  pos,  stripCustom,  true);  }  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	148	148	1	replace	    if(toPattern  ==  null)  {  for(int  i  =  start;  i  <  fmtCount;  i++)  {  appendQuotedString(pattern,  pos,  stripCustom,  true);  }		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	add
5	[BUG]  [BUGGY]    if(toPattern  ==  null)  {  for(int  i  =  0;  i  <  toPattern.length();  i++)  {  appendQuotedString(pattern,  pos,  stripCustom,  false);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  [BUGGY]    if(toPattern  ==  null)  {  for(int  i  =  0;  i  <  toPattern.length();  i++)  {  appendQuotedString(pattern,  pos,  stripCustom,  false);  }  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	148	148	1	replace	    if(toPattern  ==  null)  {  for(int  i  =  0;  i  <  toPattern.length();  i++)  {  appendQuotedString(pattern,  pos,  stripCustom,  false);  }		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	add
6	[BUG]  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(toPattern.length());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(toPattern.length());  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	148	148	1	replace	ArrayList  foundFormats  =  new  ArrayList(toPattern.length());	ArrayList  foundFormats  =  new  ArrayList();  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
7	[BUG]  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(toPattern);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(toPattern);  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	148	148	1	replace	ArrayList  foundFormats  =  new  ArrayList(toPattern);	ArrayList  foundFormats  =  new  ArrayList();  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
8	[BUG]  [BUGGY]  List  foundFormats  =  new  ArrayList();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  [BUGGY]  List  foundFormats  =  new  ArrayList();  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	148	148	1	replace	List  foundFormats  =  new  ArrayList();	ArrayList  foundFormats  =  new  ArrayList();  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
9	[BUG]  [BUGGY]    if(toPattern  ==  null)  {  for(int  i  =  0;  i  <  toPattern.length();  i++)  {  appendQuotedString(pattern,  i  +  1,  stripCustom,  true);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  [BUGGY]    if(toPattern  ==  null)  {  for(int  i  =  0;  i  <  toPattern.length();  i++)  {  appendQuotedString(pattern,  i  +  1,  stripCustom,  true);  }  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	148	148	1	replace	    if(toPattern  ==  null)  {  for(int  i  =  0;  i  <  toPattern.length();  i++)  {  appendQuotedString(pattern,  i  +  1,  stripCustom,  true);  }		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	add
10	[BUG]  [BUGGY]    if(toPattern  ==  null)  {  for(Iterator  it  =  toPattern.iterator();  it.hasNext();)  {  appendPattern(it.next());  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  [BUGGY]    if(toPattern  ==  null)  {  for(Iterator  it  =  toPattern.iterator();  it.hasNext();)  {  appendPattern(it.next());  }  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	148	148	1	replace	    if(toPattern  ==  null)  {  for(Iterator  it  =  toPattern.iterator();  it.hasNext();)  {  appendPattern(it.next());  }		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	add
11	[BUG]  [BUGGY]    if(toPattern  ==  null)  {  for(int  i  =  0;  i  <  toPattern.length();  ++i)  {  appendQuotedString(pattern,  i  +  1,  stripCustom,  true);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  [BUGGY]    if(toPattern  ==  null)  {  for(int  i  =  0;  i  <  toPattern.length();  ++i)  {  appendQuotedString(pattern,  i  +  1,  stripCustom,  true);  }  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	148	148	1	replace	    if(toPattern  ==  null)  {  for(int  i  =  0;  i  <  toPattern.length();  ++i)  {  appendQuotedString(pattern,  i  +  1,  stripCustom,  true);  }		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	add
12	[BUG]  [BUGGY]    if(toPattern  ==  null)  {  for(Iterator  it  =  toPatterns.iterator();  it.hasNext();)  {  appendPattern(it.next());  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  [BUGGY]    if(toPattern  ==  null)  {  for(Iterator  it  =  toPatterns.iterator();  it.hasNext();)  {  appendPattern(it.next());  }  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	148	148	1	replace	    if(toPattern  ==  null)  {  for(Iterator  it  =  toPatterns.iterator();  it.hasNext();)  {  appendPattern(it.next());  }		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	add
13	[BUG]  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(0);  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	148	148	1	replace	ArrayList  foundFormats  =  new  ArrayList(0);	ArrayList  foundFormats  =  new  ArrayList();  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
14	[BUG]  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(5);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(5);  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	148	148	1	replace	ArrayList  foundFormats  =  new  ArrayList(5);	ArrayList  foundFormats  =  new  ArrayList();  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
15	[BUG]  [BUGGY]    char[]  c  =  pattern.toCharArray();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  [BUGGY]    char[]  c  =  pattern.toCharArray();  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	148	148	1	replace	    char[]  c  =  pattern.toCharArray();		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	add
16	[BUG]  [BUGGY]    int  fmtCount  =  pattern.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  [BUGGY]    int  fmtCount  =  pattern.length();  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	148	148	1	replace	    int  fmtCount  =  pattern.length();		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	add
17	[BUG]  [BUGGY]    Iterator  <  String>  it  =  pattern.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  [BUGGY]    Iterator  <  String>  it  =  pattern.iterator();  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	148	148	1	replace	    Iterator  <  String>  it  =  pattern.iterator();		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	add
18	[BUG]  [BUGGY]    if(toPattern  ==  null)  {  toPattern  =  new  Format[fmtCount];  for(int  i  =  0;  i  <  fmtCount;  ++i)  {  appendQuotedString(pattern,  i,  c);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  [BUGGY]    if(toPattern  ==  null)  {  toPattern  =  new  Format[fmtCount];  for(int  i  =  0;  i  <  fmtCount;  ++i)  {  appendQuotedString(pattern,  i,  c);  }  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	148	148	1	replace	    if(toPattern  ==  null)  {  toPattern  =  new  Format[fmtCount];  for(int  i  =  0;  i  <  fmtCount;  ++i)  {  appendQuotedString(pattern,  i,  c);  }		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	add
19	[BUG]  [BUGGY]    if(toPattern  ==  null)  {  toPattern  =  new  Format[fmtCount];  for(int  i  =  0;  i  <  fmtCount;  ++i)  {  appendQuotedString(pattern,  i  +  1,  c);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  [BUGGY]    if(toPattern  ==  null)  {  toPattern  =  new  Format[fmtCount];  for(int  i  =  0;  i  <  fmtCount;  ++i)  {  appendQuotedString(pattern,  i  +  1,  c);  }  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList();  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	148	148	1	replace	    if(toPattern  ==  null)  {  toPattern  =  new  Format[fmtCount];  for(int  i  =  0;  i  <  fmtCount;  ++i)  {  appendQuotedString(pattern,  i  +  1,  c);  }		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	add
20	[BUG]  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(size());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    OutOfMemoryError  [CONTEXT]  public  final  void  applyPattern(String  pattern)  {  if  (registry  ==  null)  {  super.applyPattern(pattern);  toPattern  =  super.toPattern();  return;  }  [BUGGY]  ArrayList  foundFormats  =  new  ArrayList(size());  [BUGGY]  ArrayList  foundDescriptions  =  new  ArrayList();  StringBuffer  stripCustom  =  new  StringBuffer(pattern.length());  ParsePosition  pos  =  new  ParsePosition(0);  char[]  c  =  pattern.toCharArray();  int  fmtCount  =  0;  while  (pos.getIndex()  <  pattern.length())  {  switch  (c[pos.getIndex()])  {  case  QUOTE:  appendQuotedString(pattern,  pos,  stripCustom,  true);  [CLASS]  ExtendedMessageFormat  [METHOD]  applyPattern  [RETURN_TYPE]  void  String  pattern  [VARIABLES]  Format[]  origFormats  ArrayList  foundDescriptions  foundFormats  String  DUMMY_PATTERN  ESCAPED_QUOTE  formatDescription  pattern  toPattern  long  serialVersionUID  int  fmtCount  i  index  start  char[]  c  StringBuffer  stripCustom  Format  f  format  boolean  char  END_FE  QUOTE  START_FE  START_FMT  Iterator  it  Map  registry  ParsePosition  pos  	projects/Lang43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java	0.5	148	148	1	replace	ArrayList  foundFormats  =  new  ArrayList(size());	ArrayList  foundFormats  =  new  ArrayList();  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
