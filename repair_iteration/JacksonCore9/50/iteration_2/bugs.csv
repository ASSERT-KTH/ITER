bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(i  <  0)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i  <  0)  {  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  0)  {	  if(i    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
2	[BUG]  [BUGGY]  if(i  >=  0)  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i  >=  0)  {  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  >=  0)  {	  if(i    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
3	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i  ==  INT_QUOTE)  {  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  ==  INT_QUOTE)  {	  if(i    >    0)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
4	[BUG]  [BUGGY]  int  i  =  _inputBuffer[++_inputPtr];  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  int  i  =  _inputBuffer[++_inputPtr];  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	int  i  =  _inputBuffer[++_inputPtr];	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
5	[BUG]  [BUGGY]  if(i  <  INT_LONG)  {  if(i  >  INT_LONG)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i  <  INT_LONG)  {  if(i  >  INT_LONG)  {  return  _skipColon2(false);  }  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  INT_LONG)  {  if(i  >  INT_LONG)  {  return  _skipColon2(false);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
6	[BUG]  [BUGGY]  if(i  <  INT_LONG)  {  if(i  >  INT_LONG)  {  return  _skipColon2(true);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i  <  INT_LONG)  {  if(i  >  INT_LONG)  {  return  _skipColon2(true);  }  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  INT_LONG)  {  if(i  >  INT_LONG)  {  return  _skipColon2(true);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
7	[BUG]  [BUGGY]  char  c  =  c.charAt(i);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  char  c  =  c.charAt(i);  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	char  c  =  c.charAt(i);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
8	[BUG]  [BUGGY]  if(i  >=  INT_QUOTE)  {  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i  >=  INT_QUOTE)  {  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  >=  INT_QUOTE)  {	  if(i    ==    INT_TAB)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
9	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i  ==  INT_LCURLY)  {  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  ==  INT_LCURLY)  {	  if(i    <    =    INT_LCURLY)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
10	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY  ||  i  >  INT_LCURLY)  {  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i  <  =  INT_LCURLY  ||  i  >  INT_LCURLY)  {  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_LCURLY  ||  i  >  INT_LCURLY)  {	  if(i    <    =    INT_LCURLY)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
11	[BUG]  [BUGGY]  if(i!=  INT_LCURLY)  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i!=  INT_LCURLY)  {  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i!=  INT_LCURLY)  {	  if(i    <    =    INT_LCURLY)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
12	[BUG]  [BUGGY]  if(i  ==  INT_COLON)  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i  ==  INT_COLON)  {  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  ==  INT_COLON)  {	  if(i    <    =    INT_COLON)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
13	[BUG]  [BUGGY]  if(i  <  INT_COLON)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i  <  INT_COLON)  {  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  INT_COLON)  {	  if(i    <    =    INT_COLON)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
14	[BUG]  [BUGGY]  if(i  <  =  INT_QUOTE  ||  i  >  INT_QUOTE)  {  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i  <  =  INT_QUOTE  ||  i  >  INT_QUOTE)  {  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_QUOTE  ||  i  >  INT_QUOTE)  {	  if(i    <    =    INT_QUOTE)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
15	[BUG]  [BUGGY]  if(i!=  INT_QUOTE)  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i!=  INT_QUOTE)  {  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i!=  INT_QUOTE)  {	  if(i    <    =    INT_QUOTE)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
16	[BUG]  [BUGGY]  if(i!=  0)  {  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i!=  0)  {  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i!=  0)  {	  if(i    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
17	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  >  INT_LCURLY)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  >  INT_LCURLY)  {  return  _skipColon2(false);  }  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_LCURLY)  {  if(i  >  INT_LCURLY)  {  return  _skipColon2(false);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
18	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >  INT_LCURLY)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >  INT_LCURLY)  {  return  _skipColon2(false);  }  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  INT_LCURLY)  {  if(i  >  INT_LCURLY)  {  return  _skipColon2(false);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
19	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  >  INT_LCURLY)  {  return  _skipColon1(false);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  >  INT_LCURLY)  {  return  _skipColon1(false);  }  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_LCURLY)  {  if(i  >  INT_LCURLY)  {  return  _skipColon1(false);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
20	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY  ||  i  ==  INT_LCURLY)  {  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i  <  =  INT_LCURLY  ||  i  ==  INT_LCURLY)  {  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_LCURLY  ||  i  ==  INT_LCURLY)  {	  if(i    <    =    INT_LCURLY)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
21	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY  ||  i  >=  INT_LCURLY)  {  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i  <  =  INT_LCURLY  ||  i  >=  INT_LCURLY)  {  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_LCURLY  ||  i  >=  INT_LCURLY)  {	  if(i    <    =    INT_LCURLY)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
22	[BUG]  [BUGGY]  if(i  >  INT_LASH)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i  >  INT_LASH)  {  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  >  INT_LASH)  {	  if(i    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
23	[BUG]  [BUGGY]  if(i  >=  INT_COLON)  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i  >=  INT_COLON)  {  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  >=  INT_COLON)  {	  if(i    <    =    INT_COLON)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
24	[BUG]  [BUGGY]  if(i  >  0  ||  c  ==  ':')  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i  >  0  ||  c  ==  ':')  {  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  >  0  ||  c  ==  ':')  {	  if(i    >    0)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
25	[BUG]  [BUGGY]  if(i  >  INT_LAST)  {  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i  >  INT_LAST)  {  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  >  INT_LAST)  {	  if(i    ==    INT_TAB)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
26	[BUG]  [BUGGY]  if(i  <  =  INT_QUOTE  ||  i  >=  INT_QUOTE)  {  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i  <  =  INT_QUOTE  ||  i  >=  INT_QUOTE)  {  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_QUOTE  ||  i  >=  INT_QUOTE)  {	  if(i    <    =    INT_QUOTE)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
27	[BUG]  [BUGGY]  if(i  <  =  INT_QUOTE  ||  i  ==  INT_QUOTE)  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i  <  =  INT_QUOTE  ||  i  ==  INT_QUOTE)  {  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_QUOTE  ||  i  ==  INT_QUOTE)  {	  if(i    <    =    INT_QUOTE)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
28	[BUG]  [BUGGY]  if(i  <  =  LAST_VALID_BUCKET)  {  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i  <  =  LAST_VALID_BUCKET)  {  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  LAST_VALID_BUCKET)  {	  if(i    <    =    INT_SPACE)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
29	[BUG]  [BUGGY]  if(i  <  =  0  ||  c  ==  ':')  {  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i  <  =  0  ||  c  ==  ':')  {  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  0  ||  c  ==  ':')  {	  if(i    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
30	[BUG]  [BUGGY]  char  c  =  _inputBuffer[++_inputPtr];  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  char  c  =  _inputBuffer[++_inputPtr];  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	char  c  =  _inputBuffer[++_inputPtr];	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
31	[BUG]  [BUGGY]  if(i  >  INT_LASH)  {  if(i  <  =  INT_LASH)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i  >  INT_LASH)  {  if(i  <  =  INT_LASH)  {  return  _skipColon2(false);  }  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  >  INT_LASH)  {  if(i  <  =  INT_LASH)  {  return  _skipColon2(false);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
32	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  >  INT_SLASH  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  >  INT_SLASH  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_LCURLY)  {  if(i  >  INT_SLASH  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
33	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  >  INT_LASH  ||  i  <  =  INT_LASH)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];    [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  >  INT_LASH  ||  i  <  =  INT_LASH)  {  return  _skipColon2(false);  }  [BUGGY]    if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_LCURLY)  {  if(i  >  INT_LASH  ||  i  <  =  INT_LASH)  {  return  _skipColon2(false);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
