bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(i  <  =  INT_QUOTE)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  =  INT_QUOTE)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_QUOTE)  {  return  _skipColon2(false);  }	  if(i    >    INT_LASH)    {    if(i    <    =    INT_LASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
2	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  <  =  INT_LCURLY)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  <  =  INT_LCURLY)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_LCURLY)  {  if(i  <  =  INT_LCURLY)  {  return  _skipColon2(false);  }	  if(i    >    INT_LASH)    {    if(i    <    =    INT_LASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
3	[BUG]  [BUGGY]  if(i  ==  INT_LASH)  {  if(i  <  =  INT_QUOTE)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  ==  INT_LASH)  {  if(i  <  =  INT_QUOTE)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  ==  INT_LASH)  {  if(i  <  =  INT_QUOTE)  {  return  _skipColon2(false);  }	  if(i    >    INT_LASH)    {    if(i    <    =    INT_LASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
4	[BUG]  [BUGGY]  if(i  ==  INT_LASH)  {  if(i  <  =  INT_HASH)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  ==  INT_LASH)  {  if(i  <  =  INT_HASH)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  ==  INT_LASH)  {  if(i  <  =  INT_HASH)  {  return  _skipColon2(false);  }	  if(i    >    INT_LASH)    {    if(i    <    =    INT_LASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
5	[BUG]  [BUGGY]  if(i  <  INT_LCURLY  ||  i  >=  INT_LCURLY)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  INT_LCURLY  ||  i  >=  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  INT_LCURLY  ||  i  >=  INT_LCURLY)  {	  if(i    <    =    INT_LCURLY    ||    i    >=    INT_LCURLY)    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
6	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY  ||  i  ==  INT_LCURLY)  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  ==  INT_LCURLY  ||  i  ==  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  ==  INT_LCURLY  ||  i  ==  INT_LCURLY)  {	  if(i    <    =    INT_LCURLY    ||    i    >=    INT_LCURLY)    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
7	[BUG]  [BUGGY]  char  c  =  _inputBuffer[++_inputPtr]  +  1;  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  char  c  =  _inputBuffer[++_inputPtr]  +  1;  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	char  c  =  _inputBuffer[++_inputPtr]  +  1;	  char    c    =    _inputBuffer[++_inputPtr];    	non-compiled	[CE]  <identifier>  expected	30	None	replace
8	[BUG]  [BUGGY]  String  c  =  _inputBuffer[++_inputPtr];  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  String  c  =  _inputBuffer[++_inputPtr];  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	String  c  =  _inputBuffer[++_inputPtr];	  char    c    =    _inputBuffer[++_inputPtr];    	non-compiled	[CE]  <identifier>  expected	30	None	replace
9	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >  INT_LCURLY)  {  return  _skipColon1(false);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >  INT_LCURLY)  {  return  _skipColon1(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  INT_LCURLY)  {  if(i  >  INT_LCURLY)  {  return  _skipColon1(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_LCURLY)    {    return    _skipColon1(false);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
10	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  >  INT_LCURLY)  {  return  _skipColon1(false);  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  >  INT_LCURLY)  {  return  _skipColon1(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  ==  INT_LCURLY)  {  if(i  >  INT_LCURLY)  {  return  _skipColon1(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_LCURLY)    {    return    _skipColon1(false);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
11	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  <  INT_LCURLY)  {  return  _skipColon1(false);  }  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  <  INT_LCURLY)  {  return  _skipColon1(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  ==  INT_LCURLY)  {  if(i  <  INT_LCURLY)  {  return  _skipColon1(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_LCURLY)    {    return    _skipColon1(false);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
12	[BUG]  [BUGGY]  if(i!=  INT_LCURLY)  {  if(i  <  INT_LCURLY)  {  return  _skipColon1(false);  }  [CE]  <identifier>  expected  [FE]                              ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i!=  INT_LCURLY)  {  if(i  <  INT_LCURLY)  {  return  _skipColon1(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i!=  INT_LCURLY)  {  if(i  <  INT_LCURLY)  {  return  _skipColon1(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_LCURLY)    {    return    _skipColon1(false);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
13	[BUG]  [BUGGY]  if(i  ==  INT_LAST)  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  ==  INT_LAST)  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  ==  INT_LAST)  {	  if(i    >    INT_LAST)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
14	[BUG]  [BUGGY]  if(i  <  0  ||  c  ==  ':')  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  0  ||  c  ==  ':')  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  0  ||  c  ==  ':')  {	  if(i    <    =    0    ||    c    ==    ':')    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
15	[BUG]  [BUGGY]  if(i  ==  0  ||  c  ==  ':')  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  ==  0  ||  c  ==  ':')  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  ==  0  ||  c  ==  ':')  {	  if(i    <    =    0    ||    c    ==    ':')    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
16	[BUG]  [BUGGY]  if(i  >=  0  ||  c  ==  ':')  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  >=  0  ||  c  ==  ':')  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  >=  0  ||  c  ==  ':')  {	  if(i    <    =    0    ||    c    ==    ':')    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
17	[BUG]  [BUGGY]  if(i  <  INT_QUOTE  ||  i  >  INT_QUOTE)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  INT_QUOTE  ||  i  >  INT_QUOTE)  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  INT_QUOTE  ||  i  >  INT_QUOTE)  {	  if(i    <    =    INT_QUOTE    ||    i    >    INT_QUOTE)    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
18	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  >  INT_LASH  ||  i  <  INT_HASH)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  >  INT_LASH  ||  i  <  INT_HASH)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  ==  INT_LCURLY)  {  if(i  >  INT_LASH  ||  i  <  INT_HASH)  {  return  _skipColon2(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_LASH    ||    i    <    =    INT_LASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
19	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  >  INT_LASH  ||  i  <  =  INT_HASH)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  >  INT_LASH  ||  i  <  =  INT_HASH)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  ==  INT_LCURLY)  {  if(i  >  INT_LASH  ||  i  <  =  INT_HASH)  {  return  _skipColon2(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_LASH    ||    i    <    =    INT_LASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
20	[BUG]  [BUGGY]  if(i  >=  INT_LCURLY)  {  if(i  >  INT_LASH  ||  i  <  INT_HASH)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                              ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  >=  INT_LCURLY)  {  if(i  >  INT_LASH  ||  i  <  INT_HASH)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  >=  INT_LCURLY)  {  if(i  >  INT_LASH  ||  i  <  INT_HASH)  {  return  _skipColon2(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_LASH    ||    i    <    =    INT_LASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
21	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >  INT_LASH  ||  i  <  INT_HASH)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                                ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >  INT_LASH  ||  i  <  INT_HASH)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  INT_LCURLY)  {  if(i  >  INT_LASH  ||  i  <  INT_HASH)  {  return  _skipColon2(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_LASH    ||    i    <    =    INT_LASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
22	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >  INT_LCURLY)  {  return  _skipColon2(true);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >  INT_LCURLY)  {  return  _skipColon2(true);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  INT_LCURLY)  {  if(i  >  INT_LCURLY)  {  return  _skipColon2(true);  }	  if(i    <    INT_LONG)    {    if(i    >    INT_LONG)    {    return    _skipColon2(true);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
23	[BUG]  [BUGGY]  if(i  <  INT_QUOTE)  {  if(i  >  INT_QUOTE)  {  return  _skipColon2(true);  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  INT_QUOTE)  {  if(i  >  INT_QUOTE)  {  return  _skipColon2(true);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  INT_QUOTE)  {  if(i  >  INT_QUOTE)  {  return  _skipColon2(true);  }	  if(i    <    INT_LONG)    {    if(i    >    INT_LONG)    {    return    _skipColon2(true);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
24	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  <  INT_LONG)  {  return  _skipColon2(true);  }  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  <  INT_LONG)  {  return  _skipColon2(true);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  ==  INT_LCURLY)  {  if(i  <  INT_LONG)  {  return  _skipColon2(true);  }	  if(i    <    INT_LONG)    {    if(i    >    INT_LONG)    {    return    _skipColon2(true);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
25	[BUG]  [BUGGY]  if(i  <  INT_LCURLY  ||  i  ==  INT_LCURLY)  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  INT_LCURLY  ||  i  ==  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  INT_LCURLY  ||  i  ==  INT_LCURLY)  {	  if(i    <    =    INT_LCURLY    ||    i    ==    INT_LCURLY)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
26	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE  ||  i  ==  INT_QUOTE)  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  ==  INT_QUOTE  ||  i  ==  INT_QUOTE)  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  ==  INT_QUOTE  ||  i  ==  INT_QUOTE)  {	  if(i    ==    INT_QUOTE)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
27	[BUG]  [BUGGY]  if(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {	  if(i    <    =    INT_LCURLY    ||    i    >    INT_LCURLY)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
28	[BUG]  [BUGGY]  if(i  <  INT_QUOTE  ||  i  ==  INT_QUOTE)  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  INT_QUOTE  ||  i  ==  INT_QUOTE)  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  INT_QUOTE  ||  i  ==  INT_QUOTE)  {	  if(i    <    =    INT_QUOTE    ||    i    ==    INT_QUOTE)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
29	[BUG]  [BUGGY]  char  i  =  _inputBuffer[++_inputPtr];  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  char  i  =  _inputBuffer[++_inputPtr];  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	char  i  =  _inputBuffer[++_inputPtr];	  int    i    =    _inputBuffer[++_inputPtr];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
30	[BUG]  [BUGGY]  int  i  =  _inputBuffer[++_inputPtr]  +  1;  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  int  i  =  _inputBuffer[++_inputPtr]  +  1;  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	int  i  =  _inputBuffer[++_inputPtr]  +  1;	  int    i    =    _inputBuffer[++_inputPtr];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
31	[BUG]  [BUGGY]  int  i  =  _inputBuffer[++_inputPtr]  &  0xff;  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  int  i  =  _inputBuffer[++_inputPtr]  &  0xff;  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	int  i  =  _inputBuffer[++_inputPtr]  &  0xff;	  int    i    =    _inputBuffer[++_inputPtr];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
32	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  >  INT_LCURLY)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  >  INT_LCURLY)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  ==  INT_LCURLY)  {  if(i  >  INT_LCURLY)  {  return  _skipColon2(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_LCURLY)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
33	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  <  INT_LCURLY)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  <  INT_LCURLY)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  ==  INT_LCURLY)  {  if(i  <  INT_LCURLY)  {  return  _skipColon2(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_LCURLY)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
34	[BUG]  [BUGGY]  if(i!=  INT_LCURLY)  {  if(i  <  INT_LCURLY)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i!=  INT_LCURLY)  {  if(i  <  INT_LCURLY)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i!=  INT_LCURLY)  {  if(i  <  INT_LCURLY)  {  return  _skipColon2(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_LCURLY)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
35	[BUG]  [BUGGY]  if(i  ==  LAST_VALID_BUCKET)  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  ==  LAST_VALID_BUCKET)  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  ==  LAST_VALID_BUCKET)  {	  if(i    <    =    LAST_VALID_BUCKET)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
36	[BUG]  [BUGGY]  if(i  <  LAST_VALID_BUCKET  ||  i  >  LAST_VALID_BUCKET)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  LAST_VALID_BUCKET  ||  i  >  LAST_VALID_BUCKET)  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  LAST_VALID_BUCKET  ||  i  >  LAST_VALID_BUCKET)  {	  if(i    <    =    LAST_VALID_BUCKET)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
37	[BUG]  [BUGGY]  if(i  <  =  LAST_VALID_BUCKET  ||  i  >  LAST_VALID_BUCKET)  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  =  LAST_VALID_BUCKET  ||  i  >  LAST_VALID_BUCKET)  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  LAST_VALID_BUCKET  ||  i  >  LAST_VALID_BUCKET)  {	  if(i    <    =    LAST_VALID_BUCKET)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
38	[BUG]  [BUGGY]  if(i!=  LAST_VALID_BUCKET)  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i!=  LAST_VALID_BUCKET)  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i!=  LAST_VALID_BUCKET)  {	  if(i    <    =    LAST_VALID_BUCKET)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
39	[BUG]  [BUGGY]  if(i  <  INT_QUOTE)  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  INT_QUOTE)  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  INT_QUOTE)  {	  if(i    <    INT_COLON)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
40	[BUG]  [BUGGY]  if(i  <  INT_QUOTE)  {  if(i  >  INT_QUOTE)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  INT_QUOTE)  {  if(i  >  INT_QUOTE)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  INT_QUOTE)  {  if(i  >  INT_QUOTE)  {  return  _skipColon2(false);  }	  if(i    <    INT_LONG)    {    if(i    >    INT_LONG)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
41	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  <  INT_LONG)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  <  INT_LONG)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  ==  INT_LCURLY)  {  if(i  <  INT_LONG)  {  return  _skipColon2(false);  }	  if(i    <    INT_LONG)    {    if(i    >    INT_LONG)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
42	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  >  INT_SLASH  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  >  INT_SLASH  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  ==  INT_LCURLY)  {  if(i  >  INT_SLASH  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_SLASH    ||    i    >=    INT_HASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
43	[BUG]  [BUGGY]  if(i!=  INT_LCURLY)  {  if(i  >  INT_SLASH  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i!=  INT_LCURLY)  {  if(i  >  INT_SLASH  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i!=  INT_LCURLY)  {  if(i  >  INT_SLASH  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_SLASH    ||    i    >=    INT_HASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
44	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  >  INT_SPACE  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  >  INT_SPACE  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_LCURLY)  {  if(i  >  INT_SPACE  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_SLASH    ||    i    >=    INT_HASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
45	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  >  INT_SLASH  ||  i  >=  INT_HASH)  {  return  _skipColon2(true);  }  [CE]  <identifier>  expected  [FE]                              ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  >  INT_SLASH  ||  i  >=  INT_HASH)  {  return  _skipColon2(true);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  ==  INT_LCURLY)  {  if(i  >  INT_SLASH  ||  i  >=  INT_HASH)  {  return  _skipColon2(true);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_SLASH    ||    i    >=    INT_HASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
46	[BUG]  [BUGGY]  if(i  <  INT_QUOTE  ||  i  >=  INT_QUOTE)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  INT_QUOTE  ||  i  >=  INT_QUOTE)  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  INT_QUOTE  ||  i  >=  INT_QUOTE)  {	  if(i    <    =    INT_QUOTE    ||    i    >=    INT_QUOTE)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
47	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE  ||  i  >=  INT_QUOTE)  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  ==  INT_QUOTE  ||  i  >=  INT_QUOTE)  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  ==  INT_QUOTE  ||  i  >=  INT_QUOTE)  {	  if(i    <    =    INT_QUOTE    ||    i    >=    INT_QUOTE)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
48	[BUG]  [BUGGY]  char  c  =  _inputBuffer[i];  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  char  c  =  _inputBuffer[i];  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	char  c  =  _inputBuffer[i];	  char    c    =    c.charAt(i);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
49	[BUG]  [BUGGY]  char  c  =  _inputBuffer[i].charAt(i);  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  char  c  =  _inputBuffer[i].charAt(i);  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	char  c  =  _inputBuffer[i].charAt(i);	  char    c    =    c.charAt(i);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
50	[BUG]  [BUGGY]  char  c  =  _symbols.charAt(i);  [CE]  <identifier>  expected  [FE]                              ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  char  c  =  _symbols.charAt(i);  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	char  c  =  _symbols.charAt(i);	  char    c    =    c.charAt(i);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
51	[BUG]  [BUGGY]  char  c  =  _ioContext.charAt(i);  [CE]  <identifier>  expected  [FE]                                ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  char  c  =  _ioContext.charAt(i);  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	char  c  =  _ioContext.charAt(i);	  char    c    =    c.charAt(i);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
52	[BUG]  [BUGGY]  char  c  =  _textBuffer.charAt(i);  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  char  c  =  _textBuffer.charAt(i);  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	char  c  =  _textBuffer.charAt(i);	  char    c    =    c.charAt(i);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
53	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  <  =  INT_LCURLY)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  <  =  INT_LCURLY)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  ==  INT_LCURLY)  {  if(i  <  =  INT_LCURLY)  {  return  _skipColon2(false);  }	  if(i    >    INT_LASH)    {    if(i    <    =    INT_LASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
54	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  =  INT_LCURLY)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_LCURLY)  {  return  _skipColon2(false);  }	  if(i    >    INT_LASH)    {    if(i    <    =    INT_LASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
55	[BUG]  [BUGGY]  if(i  >=  INT_LCURLY)  {  if(i  <  =  INT_LCURLY)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  >=  INT_LCURLY)  {  if(i  <  =  INT_LCURLY)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  >=  INT_LCURLY)  {  if(i  <  =  INT_LCURLY)  {  return  _skipColon2(false);  }	  if(i    >    INT_LASH)    {    if(i    <    =    INT_LASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
56	[BUG]  [BUGGY]  if(i!=  INT_LCURLY)  {  if(i  <  =  INT_LCURLY)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i!=  INT_LCURLY)  {  if(i  <  =  INT_LCURLY)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i!=  INT_LCURLY)  {  if(i  <  =  INT_LCURLY)  {  return  _skipColon2(false);  }	  if(i    >    INT_LASH)    {    if(i    <    =    INT_LASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
57	[BUG]  [BUGGY]  if(i  <  0  ||  i  >  INT_LCURLY)  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  0  ||  i  >  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  0  ||  i  >  INT_LCURLY)  {	  if(i    <    0)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
58	[BUG]  [BUGGY]  if(i  >=  INT_LCURLY)  {  if(i  <  INT_LCURLY)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  >=  INT_LCURLY)  {  if(i  <  INT_LCURLY)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  >=  INT_LCURLY)  {  if(i  <  INT_LCURLY)  {  return  _skipColon2(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_LCURLY)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
59	[BUG]  [BUGGY]  if(i  >=  INT_LCURLY)  {  if(i  >  INT_LASH  ||  i  ==  INT_LASH)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  >=  INT_LCURLY)  {  if(i  >  INT_LASH  ||  i  ==  INT_LASH)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  >=  INT_LCURLY)  {  if(i  >  INT_LASH  ||  i  ==  INT_LASH)  {  return  _skipColon2(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_LASH    ||    i    <    =    INT_LASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
60	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >  INT_LCURLY  ||  i  ==  INT_LCURLY)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >  INT_LCURLY  ||  i  ==  INT_LCURLY)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  INT_LCURLY)  {  if(i  >  INT_LCURLY  ||  i  ==  INT_LCURLY)  {  return  _skipColon2(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_LASH    ||    i    <    =    INT_LASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
61	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >  INT_LCURLY  ||  i  >=  INT_LCURLY)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                              ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >  INT_LCURLY  ||  i  >=  INT_LCURLY)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  INT_LCURLY)  {  if(i  >  INT_LCURLY  ||  i  >=  INT_LCURLY)  {  return  _skipColon2(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_LASH    ||    i    <    =    INT_LASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
62	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  >  INT_LASH  ||  i  <  INT_LASH)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                                ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  >  INT_LASH  ||  i  <  INT_LASH)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  ==  INT_LCURLY)  {  if(i  >  INT_LASH  ||  i  <  INT_LASH)  {  return  _skipColon2(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_LASH    ||    i    <    =    INT_LASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
63	[BUG]  [BUGGY]  int  i  =  _inputBuffer[++_inputPtr  +  1];  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  int  i  =  _inputBuffer[++_inputPtr  +  1];  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	int  i  =  _inputBuffer[++_inputPtr  +  1];	  int    i    =    _inputBuffer[++_inputPtr];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
64	[BUG]  [BUGGY]  int  i  =  _inputBuffer[++_inputPtr  -  1];  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  int  i  =  _inputBuffer[++_inputPtr  -  1];  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	int  i  =  _inputBuffer[++_inputPtr  -  1];	  int    i    =    _inputBuffer[++_inputPtr];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
65	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >  INT_SPACE  ||  i  >=  INT_SPACE)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >  INT_SPACE  ||  i  >=  INT_SPACE)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  INT_LCURLY)  {  if(i  >  INT_SPACE  ||  i  >=  INT_SPACE)  {  return  _skipColon2(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_SLASH    ||    i    >=    INT_HASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
66	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >  INT_COLON  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >  INT_COLON  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  INT_LCURLY)  {  if(i  >  INT_COLON  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_SLASH    ||    i    >=    INT_HASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
67	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >  INT_SPACE  ||  i  >=  INT_SPACES)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >  INT_SPACE  ||  i  >=  INT_SPACES)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  INT_LCURLY)  {  if(i  >  INT_SPACE  ||  i  >=  INT_SPACES)  {  return  _skipColon2(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_SLASH    ||    i    >=    INT_HASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
68	[BUG]  [BUGGY]  char  c  =  _inputBuffer[++_inputPtr  +  1];  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  char  c  =  _inputBuffer[++_inputPtr  +  1];  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	char  c  =  _inputBuffer[++_inputPtr  +  1];	  char    c    =    _inputBuffer[++_inputPtr];    	non-compiled	[CE]  <identifier>  expected	30	None	replace
69	[BUG]  [BUGGY]  char  c  =  _inputBuffer[++i];  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  char  c  =  _inputBuffer[++i];  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	char  c  =  _inputBuffer[++i];	  char    c    =    _inputBuffer[++_inputPtr];    	non-compiled	[CE]  <identifier>  expected	30	None	replace
70	[BUG]  [BUGGY]  if(i  >  INT_LCURLY)  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  >  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  >  INT_LCURLY)  {	  if(i    ==    INT_LCURLY)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
71	[BUG]  [BUGGY]  if(i  >=  INT_LCURLY)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  >=  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  >=  INT_LCURLY)  {	  if(i    ==    INT_LCURLY)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
72	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >=  INT_LCURLY)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >=  INT_LCURLY)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  INT_LCURLY)  {  if(i  >=  INT_LCURLY)  {  return  _skipColon2(false);  }	  if(i    <    INT_LCURLY)    {    if(i    >    INT_LCURLY)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
73	[BUG]  [BUGGY]  if(i  <  LAST_VALID_BUCKET)  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  LAST_VALID_BUCKET)  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  LAST_VALID_BUCKET)  {	  if(i    <    =    LAST_VALID_BUCKET)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
74	[BUG]  [BUGGY]  if(i  >=  INT_LCURLY)  {  if(i  <  INT_LCURLY)  {  return  _skipColon1(false);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  >=  INT_LCURLY)  {  if(i  <  INT_LCURLY)  {  return  _skipColon1(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  >=  INT_LCURLY)  {  if(i  <  INT_LCURLY)  {  return  _skipColon1(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_LCURLY)    {    return    _skipColon1(false);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
75	[BUG]  [BUGGY]  if(i  >=  INT_LCURLY)  {  if(i  <  INT_LONG)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  >=  INT_LCURLY)  {  if(i  <  INT_LONG)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  >=  INT_LCURLY)  {  if(i  <  INT_LONG)  {  return  _skipColon2(false);  }	  if(i    <    INT_LONG)    {    if(i    >    INT_LONG)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
76	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  >  INT_LCURLY)  {  return  _skipColon2(true);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  >  INT_LCURLY)  {  return  _skipColon2(true);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_LCURLY)  {  if(i  >  INT_LCURLY)  {  return  _skipColon2(true);  }	  if(i    <    INT_LONG)    {    if(i    >    INT_LONG)    {    return    _skipColon2(true);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
77	[BUG]  [BUGGY]  if(i  >=  INT_LCURLY)  {  if(i  <  INT_LCURLY)  {  return  _skipColon2(true);  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  >=  INT_LCURLY)  {  if(i  <  INT_LCURLY)  {  return  _skipColon2(true);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  >=  INT_LCURLY)  {  if(i  <  INT_LCURLY)  {  return  _skipColon2(true);  }	  if(i    <    INT_LONG)    {    if(i    >    INT_LONG)    {    return    _skipColon2(true);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
78	[BUG]  [BUGGY]  if(i  <  =  INT_SPACE  ||  c  ==  ':')  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  =  INT_SPACE  ||  c  ==  ':')  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_SPACE  ||  c  ==  ':')  {	  if(i    <    =    0    ||    c    ==    ':')    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
79	[BUG]  [BUGGY]  if(c  <  ':'  ||  c  >  '9')  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(c  <  ':'  ||  c  >  '9')  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(c  <  ':'  ||  c  >  '9')  {	  if(i    <    =    0    ||    c    ==    ':')    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
80	[BUG]  [BUGGY]  char  c  =  _inputBuffer[i  +  1];  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  char  c  =  _inputBuffer[i  +  1];  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	char  c  =  _inputBuffer[i  +  1];	  char    c    =    c.charAt(i);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
81	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  >  INT_LONG)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  >  INT_LONG)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_LCURLY)  {  if(i  >  INT_LONG)  {  return  _skipColon2(false);  }	  if(i    <    INT_LONG)    {    if(i    >    INT_LONG)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
82	[BUG]  [BUGGY]  if(i  <  =  INT_QUOTE)  {  if(i  >  INT_QUOTE)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  =  INT_QUOTE)  {  if(i  >  INT_QUOTE)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_QUOTE)  {  if(i  >  INT_QUOTE)  {  return  _skipColon2(false);  }	  if(i    <    INT_LONG)    {    if(i    >    INT_LONG)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
83	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  >=  INT_LCURLY)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  >=  INT_LCURLY)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_LCURLY)  {  if(i  >=  INT_LCURLY)  {  return  _skipColon2(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_LCURLY)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
84	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  return  _skipColon2(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_LCURLY)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
85	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  >=  INT_LCURLY)  {  return  _skipColon1(false);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  >=  INT_LCURLY)  {  return  _skipColon1(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_LCURLY)  {  if(i  >=  INT_LCURLY)  {  return  _skipColon1(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_LCURLY)    {    return    _skipColon1(false);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
86	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  return  _skipColon1(false);  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  return  _skipColon1(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  return  _skipColon1(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_LCURLY)    {    return    _skipColon1(false);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
87	[BUG]  [BUGGY]  if(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {  return  _skipColon2(false);  }	  if(i    <    INT_LCURLY)    {    if(i    >    INT_LCURLY)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
88	[BUG]  [BUGGY]  if(i  <  =  INT_0  ||  c  ==  ':')  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  =  INT_0  ||  c  ==  ':')  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_0  ||  c  ==  ':')  {	  if(i    >    0    ||    c    ==    ':')    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
89	[BUG]  [BUGGY]  if(i  >  INT_SPACE)  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  >  INT_SPACE)  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  >  INT_SPACE)  {	  if(i    <    0)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
90	[BUG]  [BUGGY]  if(i  <  =  LAST_VALID_BUCKET  ||  i  >  INT_LAST_VALID_BUCKET)  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  =  LAST_VALID_BUCKET  ||  i  >  INT_LAST_VALID_BUCKET)  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  LAST_VALID_BUCKET  ||  i  >  INT_LAST_VALID_BUCKET)  {	  if(i    <    =    LAST_VALID_BUCKET)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
91	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  ==  INT_LCURLY  ||  i  ==  INT_LCURLY)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  ==  INT_LCURLY  ||  i  ==  INT_LCURLY)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_LCURLY)  {  if(i  ==  INT_LCURLY  ||  i  ==  INT_LCURLY)  {  return  _skipColon2(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_LASH    ||    i    <    =    INT_LASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
92	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  <  INT_LASH  ||  i  ==  INT_LASH)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  <  INT_LASH  ||  i  ==  INT_LASH)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_LCURLY)  {  if(i  <  INT_LASH  ||  i  ==  INT_LASH)  {  return  _skipColon2(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_LASH    ||    i    <    =    INT_LASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
93	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  <  INT_LASH  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                              ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  <  INT_LASH  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_LCURLY)  {  if(i  <  INT_LASH  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_LASH    ||    i    <    =    INT_LASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
94	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  <  INT_SPACE  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  <  INT_SPACE  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_LCURLY)  {  if(i  <  INT_SPACE  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_SLASH    ||    i    >=    INT_HASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
95	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  >=  INT_QUOTE  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  >=  INT_QUOTE  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_LCURLY)  {  if(i  >=  INT_QUOTE  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_SLASH    ||    i    >=    INT_HASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
96	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  <  INT_QUOTE  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  <  INT_QUOTE  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_LCURLY)  {  if(i  <  INT_QUOTE  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_SLASH    ||    i    >=    INT_HASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
97	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  >  INT_QUOTE  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                              ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  >  INT_QUOTE  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_LCURLY)  {  if(i  >  INT_QUOTE  ||  i  >=  INT_HASH)  {  return  _skipColon2(false);  }	  if(i    <    =    INT_LCURLY)    {    if(i    >    INT_SLASH    ||    i    >=    INT_HASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
98	[BUG]  [BUGGY]  if(i  <  INT_QUOTE)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  INT_QUOTE)  {  return  _skipColon2(false);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  INT_QUOTE)  {  return  _skipColon2(false);  }	  if(i    >    INT_LASH)    {    if(i    <    =    INT_LASH)    {    return    _skipColon2(false);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
99	[BUG]  [BUGGY]  if(i  >  INT_QUOTE)  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  >  INT_QUOTE)  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  >  INT_QUOTE)  {	  if(i    >=    INT_QUOTE)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
100	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY  ||  i  <  =  INT_LCURLY)  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  =  INT_LCURLY  ||  i  <  =  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_LCURLY  ||  i  <  =  INT_LCURLY)  {	  if(i    <    =    INT_LCURLY    ||    i    ==    INT_LCURLY)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
101	[BUG]  [BUGGY]  char  c  =(_int)_inputBuffer[++_inputPtr];  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  char  c  =(_int)_inputBuffer[++_inputPtr];  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	char  c  =(_int)_inputBuffer[++_inputPtr];	  char    c    =    _inputBuffer[++_inputPtr];    	non-compiled	[CE]  <identifier>  expected	30	None	replace
102	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  >  INT_LONG)  {  return  _skipColon2(true);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space  int  i  =  _inputBuffer[++_inputPtr];      [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  >  INT_LONG)  {  return  _skipColon2(true);  }  [BUGGY]      if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1703	1704	2	replace	if(i  <  =  INT_LCURLY)  {  if(i  >  INT_LONG)  {  return  _skipColon2(true);  }	  if(i    <    INT_LONG)    {    if(i    >    INT_LONG)    {    return    _skipColon2(true);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
