bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  ch  =  _parseInt(ch,  startPtr,  0);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  int  ch  =  _parseInt(ch,  startPtr,  0);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	int  ch  =  _parseInt(ch,  startPtr,  0);	  int    ch    =    _parseInt(ch,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
2	[BUG]  [BUGGY]  char  ch  =  _parseInt(ch,  startPtr);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  char  ch  =  _parseInt(ch,  startPtr);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	char  ch  =  _parseInt(ch,  startPtr);	  int    ch    =    _parseInt(ch,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
3	[BUG]  [BUGGY]  int  ch  =  _parseInt(ch,  startPtr,  inputLen);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  int  ch  =  _parseInt(ch,  startPtr,  inputLen);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	int  ch  =  _parseInt(ch,  startPtr,  inputLen);	  int    ch    =    _parseInt(ch,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
4	[BUG]  [BUGGY]  if(ch  ==  INT_0)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  ==  INT_0)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  ==  INT_0)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    intLen;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
5	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0  ||  ch  ==  INT_9)  {  break  intLen;  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0  ||  ch  ==  INT_9)  {  break  intLen;  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0  ||  ch  ==  INT_9)  {  break  intLen;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    intLen;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
6	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0  ||  ch  >=  INT_9)  {  break  intLen;  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0  ||  ch  >=  INT_9)  {  break  intLen;  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  INT_0  ||  ch  >=  INT_9)  {  break  intLen;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    intLen;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
7	[BUG]  [BUGGY]  ch  =  _inputBuffer[ptr++]  +  INT_LONG;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _inputBuffer[ptr++]  +  INT_LONG;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _inputBuffer[ptr++]  +  INT_LONG;	  ch    =    _inputBuffer[ptr++]    +    intLen;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
8	[BUG]  [BUGGY]  ch  =  _inputBuffer[ptr++]  +  startPtr;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _inputBuffer[ptr++]  +  startPtr;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _inputBuffer[ptr++]  +  startPtr;	  ch    =    _inputBuffer[ptr++]    +    intLen;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
9	[BUG]  [BUGGY]  ch  =  _inputBuffer[ptr++]  +  INT_LENGTH;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _inputBuffer[ptr++]  +  INT_LENGTH;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _inputBuffer[ptr++]  +  INT_LENGTH;	  ch    =    _inputBuffer[ptr++]    +    intLen;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
10	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  String)?(String)_inputPtr  :  _inputBuffer[ptr++];  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  String)?(String)_inputPtr  :  _inputBuffer[ptr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]  instanceof  String)?(String)_inputPtr  :  _inputBuffer[ptr++];	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputPtr    :    _inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
11	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  byte)?(byte)_inputPtr  :  _inputBuffer[ptr++];  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  byte)?(byte)_inputPtr  :  _inputBuffer[ptr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]  instanceof  byte)?(byte)_inputPtr  :  _inputBuffer[ptr++];	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputPtr    :    _inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
12	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputPtr  :  _inputBuffer[ptr++].ch;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputPtr  :  _inputBuffer[ptr++].ch;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputPtr  :  _inputBuffer[ptr++].ch;	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputPtr    :    _inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
13	[BUG]  [BUGGY]  ch  =  _inputBuffer[ptr++]  +  Integer.MAX_VALUE;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _inputBuffer[ptr++]  +  Integer.MAX_VALUE;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _inputBuffer[ptr++]  +  Integer.MAX_VALUE;	  ch    =    _inputBuffer[ptr++]    +    Integer.MIN_VALUE;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
14	[BUG]  [BUGGY]  ch  =  _inputBuffer[ptr++]  &  Integer.MIN_VALUE;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _inputBuffer[ptr++]  &  Integer.MIN_VALUE;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _inputBuffer[ptr++]  &  Integer.MIN_VALUE;	  ch    =    _inputBuffer[ptr++]    +    Integer.MIN_VALUE;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
15	[BUG]  [BUGGY]  ch  =  _inputBuffer[ptr++]  +  Integer.MIN_VALUE,  intLen;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _inputBuffer[ptr++]  +  Integer.MIN_VALUE,  intLen;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _inputBuffer[ptr++]  +  Integer.MIN_VALUE,  intLen;	  ch    =    _inputBuffer[ptr++]    +    Integer.MIN_VALUE;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
16	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  String)?(String)_inputBuffer[ptr++]  :  null;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  String)?(String)_inputBuffer[ptr++]  :  null;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]  instanceof  String)?(String)_inputBuffer[ptr++]  :  null;	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :    null;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
17	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :  JsonToken.VALUE_NULL;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :  JsonToken.VALUE_NULL;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :  JsonToken.VALUE_NULL;	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :    null;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
18	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :  JsonToken.VALUE_STRING;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :  JsonToken.VALUE_STRING;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :  JsonToken.VALUE_STRING;	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :    null;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
19	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0  ||  ch  ==  INT_E)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0  ||  ch  ==  INT_E)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0  ||  ch  ==  INT_E)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0    ||    ch    ==    INT_E)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
20	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0    ||    ch    ==    INT_E)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
21	[BUG]  [BUGGY]  if(ch  <  INT_len)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  <  INT_len)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  <  INT_len)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0    ||    ch    ==    INT_E)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
22	[BUG]  [BUGGY]  ch  =(char)_inputBuffer[endPtr++];  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(char)_inputBuffer[endPtr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(char)_inputBuffer[endPtr++];	  ch    =(char)_inputBuffer[startPtr++];    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
23	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0  ||  ch  ==  INT_E)  {  break  intLen;  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0  ||  ch  ==  INT_E)  {  break  intLen;  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0  ||  ch  ==  INT_E)  {  break  intLen;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0    ||    ch    ==    INT_E)    {    break    intLen;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
24	[BUG]  [BUGGY]  if(ch  <  INT_LONG  ||  ch  >  INT_LONG)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  break  intLen;  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  <  INT_LONG  ||  ch  >  INT_LONG)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  break  intLen;  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  <  INT_LONG  ||  ch  >  INT_LONG)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  break  intLen;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0    ||    ch    ==    INT_E)    {    break    intLen;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
25	[BUG]  [BUGGY]  if(ch  <  INT_len  ||  ch  >  INT_9)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  break  intLen;  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  <  INT_len  ||  ch  >  INT_9)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  break  intLen;  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  <  INT_len  ||  ch  >  INT_9)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  break  intLen;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0    ||    ch    ==    INT_E)    {    break    intLen;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
26	[BUG]  [BUGGY]  ch  =  _parseFloat(ch,  startPtr,  ptr,  intLen);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _parseFloat(ch,  startPtr,  ptr,  intLen);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _parseFloat(ch,  startPtr,  ptr,  intLen);	  ch    =    _parseFloat(ch,    startPtr,    ptr);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
27	[BUG]  [BUGGY]  ch  =  _parseFloat(ch,  startPtr,  ptr,  false);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _parseFloat(ch,  startPtr,  ptr,  false);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _parseFloat(ch,  startPtr,  ptr,  false);	  ch    =    _parseFloat(ch,    startPtr,    ptr);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
28	[BUG]  [BUGGY]  ch  =  _parseFloat(ch,  startPtr,  ptr  +  1);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _parseFloat(ch,  startPtr,  ptr  +  1);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _parseFloat(ch,  startPtr,  ptr  +  1);	  ch    =    _parseFloat(ch,    startPtr,    ptr);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
29	[BUG]  [BUGGY]  ch  =  _parseFloat(ch,  startPtr,  ptr,  0);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _parseFloat(ch,  startPtr,  ptr,  0);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _parseFloat(ch,  startPtr,  ptr,  0);	  ch    =    _parseFloat(ch,    startPtr,    ptr);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
30	[BUG]  [BUGGY]  ch  =(_char)_inputBuffer[0];  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_char)_inputBuffer[0];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_char)_inputBuffer[0];	  ch    =(_char)_inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
31	[BUG]  [BUGGY]  ch  =(_char)_inputBuffer[startPtr++];  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_char)_inputBuffer[startPtr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_char)_inputBuffer[startPtr++];	  ch    =(_char)_inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
32	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(ch,  startPtr,  ptr);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  Integer  ch  =  _parseInt(ch,  startPtr,  ptr);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	Integer  ch  =  _parseInt(ch,  startPtr,  ptr);	  Integer    ch    =    _parseInt(ch,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
33	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(ch,  startPtr,  0);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  Integer  ch  =  _parseInt(ch,  startPtr,  0);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	Integer  ch  =  _parseInt(ch,  startPtr,  0);	  Integer    ch    =    _parseInt(ch,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
34	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(ch,  startPtr,  inputLen);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  Integer  ch  =  _parseInt(ch,  startPtr,  inputLen);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	Integer  ch  =  _parseInt(ch,  startPtr,  inputLen);	  Integer    ch    =    _parseInt(ch,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
35	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(ch,  startPtr,  outputLen);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  Integer  ch  =  _parseInt(ch,  startPtr,  outputLen);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	Integer  ch  =  _parseInt(ch,  startPtr,  outputLen);	  Integer    ch    =    _parseInt(ch,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
36	[BUG]  [BUGGY]  ch  =  _inputBuffer[ptr++]  +  Integer.toHexString(ch,  0);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _inputBuffer[ptr++]  +  Integer.toHexString(ch,  0);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _inputBuffer[ptr++]  +  Integer.toHexString(ch,  0);	  ch    =    _inputBuffer[ptr++]    +    Integer.toHexString(ch);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
37	[BUG]  [BUGGY]  ch  =  _inputBuffer[ptr++]  +  Integer.toHexString(ch,  16);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _inputBuffer[ptr++]  +  Integer.toHexString(ch,  16);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _inputBuffer[ptr++]  +  Integer.toHexString(ch,  16);	  ch    =    _inputBuffer[ptr++]    +    Integer.toHexString(ch);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
38	[BUG]  [BUGGY]  ch  =  _inputBuffer[ptr++]  +  Integer.toHexString(ch)+  1;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _inputBuffer[ptr++]  +  Integer.toHexString(ch)+  1;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _inputBuffer[ptr++]  +  Integer.toHexString(ch)+  1;	  ch    =    _inputBuffer[ptr++]    +    Integer.toHexString(ch);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
39	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    intLen;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
40	[BUG]  [BUGGY]  if(ch  ==  INT_0)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  ==  INT_0)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  ==  INT_0)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    <    INT_0    ||    ch    >    INT_9)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
41	[BUG]  [BUGGY]  ch  =(char)_inputBuffer[1];  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(char)_inputBuffer[1];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(char)_inputBuffer[1];	  ch    =(char)_inputBuffer[0];    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
42	[BUG]  [BUGGY]  ch  =(char)_inputBuffer[0],  ptr;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(char)_inputBuffer[0],  ptr;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(char)_inputBuffer[0],  ptr;	  ch    =(char)_inputBuffer[0];    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
43	[BUG]  [BUGGY]  if(ch  ==  INT_0)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  ==  INT_0)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  ==  INT_0)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    <    INT_0    ||    ch    >    INT_9)    {    return    _parseFloat(ch,    startPtr,    ptr,    true,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
44	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    <    INT_0    ||    ch    >    INT_9)    {    return    _parseFloat(ch,    startPtr,    ptr,    true,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
45	[BUG]  [BUGGY]  ch  =  _inputBuffer[ptr++]  &  1;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _inputBuffer[ptr++]  &  1;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _inputBuffer[ptr++]  &  1;	  ch    =    _inputBuffer[ptr++]    +    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
46	[BUG]  [BUGGY]  ch  =  _inputBuffer[ptr++]  -  1;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _inputBuffer[ptr++]  -  1;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _inputBuffer[ptr++]  -  1;	  ch    =    _inputBuffer[ptr++]    +    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
47	[BUG]  [BUGGY]  ch  =  _inputBuffer[ptr++]  +  2;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _inputBuffer[ptr++]  +  2;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _inputBuffer[ptr++]  +  2;	  ch    =    _inputBuffer[ptr++]    +    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
48	[BUG]  [BUGGY]  int  ch  =  _parseInt(ch,  startPtr,  ptr,  0);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  int  ch  =  _parseInt(ch,  startPtr,  ptr,  0);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	int  ch  =  _parseInt(ch,  startPtr,  ptr,  0);	  int    ch    =    _parseInt(ch,    startPtr,    ptr);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
49	[BUG]  [BUGGY]  char  ch  =  _parseInt(ch,  startPtr,  ptr);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  char  ch  =  _parseInt(ch,  startPtr,  ptr);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	char  ch  =  _parseInt(ch,  startPtr,  ptr);	  int    ch    =    _parseInt(ch,    startPtr,    ptr);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
50	[BUG]  [BUGGY]  int  ch  =  _parseInt(ch,  startPtr,  ptr  +  1);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  int  ch  =  _parseInt(ch,  startPtr,  ptr  +  1);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	int  ch  =  _parseInt(ch,  startPtr,  ptr  +  1);	  int    ch    =    _parseInt(ch,    startPtr,    ptr);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
51	[BUG]  [BUGGY]  int  ch  =  _parseInt(ch,  startPtr,  outputEnd);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  int  ch  =  _parseInt(ch,  startPtr,  outputEnd);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	int  ch  =  _parseInt(ch,  startPtr,  outputEnd);	  int    ch    =    _parseInt(ch,    startPtr,    ptr);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
52	[BUG]  [BUGGY]  ch  =  _decodedData[intLen++];  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _decodedData[intLen++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _decodedData[intLen++];	  ch    =    _decodedData[ptr++];    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
53	[BUG]  [BUGGY]  ch  =  _decodedData[ptr++]  +  1;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _decodedData[ptr++]  +  1;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _decodedData[ptr++]  +  1;	  ch    =    _decodedData[ptr++];    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
54	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  String)?(String)_inputBuffer[ptr++]  :(String)_inputBuffer[ptr++];  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  String)?(String)_inputBuffer[ptr++]  :(String)_inputBuffer[ptr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]  instanceof  String)?(String)_inputBuffer[ptr++]  :(String)_inputBuffer[ptr++];	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :(char)_inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
55	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[0];  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[0];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]  instanceof  char)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[0];	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :(char)_inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
56	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  byte)?(byte)_inputBuffer[ptr++]  :(byte)_inputBuffer[ptr++];  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  instanceof  byte)?(byte)_inputBuffer[ptr++]  :(byte)_inputBuffer[ptr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]  instanceof  byte)?(byte)_inputBuffer[ptr++]  :(byte)_inputBuffer[ptr++];	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :(char)_inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
57	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(intLen    ==    1)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
58	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  ==  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  ==  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  ==  inputLen)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(intLen    ==    1)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
59	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(intLen  ==  1)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(intLen  ==  1)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(intLen  ==  1)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(intLen    ==    1)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
60	[BUG]  [BUGGY]  int  ch  =  _parseInt(ch,  startPtr,  ptr  -  1);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  int  ch  =  _parseInt(ch,  startPtr,  ptr  -  1);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	int  ch  =  _parseInt(ch,  startPtr,  ptr  -  1);	  int    ch    =    _parseInt(ch,    startPtr,    ptr);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
61	[BUG]  [BUGGY]  int  ch  =  _parseInt(ch,  0,  ptr);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  int  ch  =  _parseInt(ch,  0,  ptr);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	int  ch  =  _parseInt(ch,  0,  ptr);	  int    ch    =    _parseInt(ch,    startPtr,    ptr);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
62	[BUG]  [BUGGY]  if(ch  ==  INT_PLUS)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  ==  INT_PLUS)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  ==  INT_PLUS)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    <    INT_0    ||    ch    >    INT_9)    {    return    _parseFloat(ch,    startPtr,    ptr,    true,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
63	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0  ||  ch  ==  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0  ||  ch  ==  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0  ||  ch  ==  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    <    INT_0    ||    ch    >    INT_9)    {    return    _parseFloat(ch,    startPtr,    ptr,    true,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
64	[BUG]  [BUGGY]  ch  =(int)_inputBuffer[0];  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(int)_inputBuffer[0];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(int)_inputBuffer[0];	  ch    =(char)_inputBuffer[0];    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
65	[BUG]  [BUGGY]  ch  =  _parseFloat(ch,  outputPtr,  ptr);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _parseFloat(ch,  outputPtr,  ptr);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _parseFloat(ch,  outputPtr,  ptr);	  ch    =    _parseFloat(ch,    startPtr,    ptr);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
66	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(ch,  startPtr  +  1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  Integer  ch  =  _parseInt(ch,  startPtr  +  1);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	Integer  ch  =  _parseInt(ch,  startPtr  +  1);	  Integer    ch    =    _parseInt(ch,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
67	[BUG]  [BUGGY]  Integer  ch  =  _parseInt(ch,  startPtr,  intLen);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  Integer  ch  =  _parseInt(ch,  startPtr,  intLen);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	Integer  ch  =  _parseInt(ch,  startPtr,  intLen);	  Integer    ch    =    _parseInt(ch,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
68	[BUG]  [BUGGY]  ch  =  _inputBuffer[ptr++]  +'';  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _inputBuffer[ptr++]  +'';  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _inputBuffer[ptr++]  +'';	  ch    =    _inputBuffer[ptr++]    +    intLen;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
69	[BUG]  [BUGGY]  if(ch  <  INT_LONG)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  break  intLen;  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  <  INT_LONG)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  break  intLen;  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  <  INT_LONG)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  break  intLen;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0    ||    ch    ==    INT_E)    {    break    intLen;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
70	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  break  intLen;  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  break  intLen;  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  break  intLen;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0    ||    ch    ==    INT_E)    {    break    intLen;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
71	[BUG]  [BUGGY]  if(ch  <  INT_LONG)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  <  INT_LONG)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  <  INT_LONG)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0    ||    ch    ==    INT_E)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
72	[BUG]  [BUGGY]  if(ch  ==  INT_0)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  ==  INT_0)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  ==  INT_0)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0    ||    ch    ==    INT_E)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
73	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]!=  null)?(char)_inputBuffer[ptr++]  :  null;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_inputBuffer[ptr++]!=  null)?(char)_inputBuffer[ptr++]  :  null;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]!=  null)?(char)_inputBuffer[ptr++]  :  null;	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :    null;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
74	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  null)?(char)_inputBuffer[ptr++]  :  null;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  null)?(char)_inputBuffer[ptr++]  :  null;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]  ==  null)?(char)_inputBuffer[ptr++]  :  null;	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :    null;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
75	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  ')'?(char)_inputBuffer[ptr++]  :  null;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  ')'?(char)_inputBuffer[ptr++]  :  null;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]  ==  ')'?(char)_inputBuffer[ptr++]  :  null;	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :    null;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
76	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(intLen  ==  2)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(intLen  ==  2)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(intLen  ==  2)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(intLen    ==    1)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
77	[BUG]  [BUGGY]  if(ch  ==  INT_PLUS)  {  if(intLen  ==  1)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  ==  INT_PLUS)  {  if(intLen  ==  1)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  ==  INT_PLUS)  {  if(intLen  ==  1)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(intLen    ==    1)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
78	[BUG]  [BUGGY]  if(ch  <  INT_0)  {  if(intLen  ==  1)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  <  INT_0)  {  if(intLen  ==  1)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  <  INT_0)  {  if(intLen  ==  1)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(intLen    ==    1)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
79	[BUG]  [BUGGY]  if(ch  ==  INT_PLUS)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  ==  INT_PLUS)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  ==  INT_PLUS)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    intLen;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
80	[BUG]  [BUGGY]  if(ch  <  INT_0)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  intLen;  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  <  INT_0)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  intLen;  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  <  INT_0)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  intLen;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    intLen;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
81	[BUG]  [BUGGY]  if(ch  ==  INT_0)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  intLen;  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  ==  INT_0)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  intLen;  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  ==  INT_0)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  intLen;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    intLen;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
82	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]!=  ')'?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_inputBuffer[ptr++]!=  ')'?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]!=  ')'?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :(char)_inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
83	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  ')'?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  ')'?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]  ==  ')'?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :(char)_inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
84	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]!=  INT_0)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_inputBuffer[ptr++]!=  INT_0)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]!=  INT_0)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :(char)_inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
85	[BUG]  [BUGGY]  ch  =  _decodedData[startPtr++];  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _decodedData[startPtr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _decodedData[startPtr++];	  ch    =    _decodedData[ptr++];    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
86	[BUG]  [BUGGY]  ch  =  _decodedData[0];  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _decodedData[0];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _decodedData[0];	  ch    =    _decodedData[ptr++];    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
87	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  ')'?(char)_inputPtr  :  _inputBuffer[ptr++];  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  ')'?(char)_inputPtr  :  _inputBuffer[ptr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]  ==  ')'?(char)_inputPtr  :  _inputBuffer[ptr++];	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputPtr    :    _inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
88	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]!=  ')'?(char)_inputPtr  :  _inputBuffer[ptr++];  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_inputBuffer[ptr++]!=  ')'?(char)_inputPtr  :  _inputBuffer[ptr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]!=  ')'?(char)_inputPtr  :  _inputBuffer[ptr++];	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputPtr    :    _inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
89	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  INT_0)?(char)_inputPtr  :  _inputBuffer[ptr++];  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  INT_0)?(char)_inputPtr  :  _inputBuffer[ptr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]  ==  INT_0)?(char)_inputPtr  :  _inputBuffer[ptr++];	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputPtr    :    _inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
90	[BUG]  [BUGGY]  int  ch  =  _parseInt(ch,  startPtr  +  1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  int  ch  =  _parseInt(ch,  startPtr  +  1);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	int  ch  =  _parseInt(ch,  startPtr  +  1);	  int    ch    =    _parseInt(ch,    startPtr);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
91	[BUG]  [BUGGY]  if(ch  ==  INT_PLUS)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  ==  INT_PLUS)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  ==  INT_PLUS)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    <    INT_0    ||    ch    >    INT_9)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
92	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0  ||  ch  ==  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0  ||  ch  ==  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  INT_0  ||  ch  ==  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    <    INT_0    ||    ch    >    INT_9)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
93	[BUG]  [BUGGY]  ch  =  _inputBuffer[ptr++]  -  Integer.MIN_VALUE;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _inputBuffer[ptr++]  -  Integer.MIN_VALUE;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _inputBuffer[ptr++]  -  Integer.MIN_VALUE;	  ch    =    _inputBuffer[ptr++]    +    Integer.MIN_VALUE;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
94	[BUG]  [BUGGY]  ch  =  _inputBuffer[ptr++]  +  Integer.toHexString(ch,  outputPtr);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _inputBuffer[ptr++]  +  Integer.toHexString(ch,  outputPtr);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _inputBuffer[ptr++]  +  Integer.toHexString(ch,  outputPtr);	  ch    =    _inputBuffer[ptr++]    +    Integer.toHexString(ch);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
95	[BUG]  [BUGGY]  ch  =  _inputBuffer[ptr++]  +  Integer.toHexString(ch,  outPtr);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _inputBuffer[ptr++]  +  Integer.toHexString(ch,  outPtr);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _inputBuffer[ptr++]  +  Integer.toHexString(ch,  outPtr);	  ch    =    _inputBuffer[ptr++]    +    Integer.toHexString(ch);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
96	[BUG]  [BUGGY]  if(ch  <  INT_len)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  intLen;  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  <  INT_len)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  intLen;  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  <  INT_len)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  intLen;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    intLen;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
97	[BUG]  [BUGGY]  if(ch  ==  INT_len)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  ==  INT_len)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  ==  INT_len)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    intLen;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
98	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  intLen;  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  intLen;  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  intLen;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    intLen;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
99	[BUG]  [BUGGY]  ch  =  _decodedData[inputLen++];  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _decodedData[inputLen++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _decodedData[inputLen++];	  ch    =    _decodedData[ptr++];    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
100	[BUG]  [BUGGY]  ch  =  _parseFloat(ch,  startPtr,  ptr,  true);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _parseFloat(ch,  startPtr,  ptr,  true);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _parseFloat(ch,  startPtr,  ptr,  true);	  ch    =    _parseFloat(ch,    startPtr,    ptr);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
101	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  char)?(char)_inputBuffer[ptr++]  :  null;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  char)?(char)_inputBuffer[ptr++]  :  null;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]  ==  char)?(char)_inputBuffer[ptr++]  :  null;	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :    null;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
102	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]!=  char)?(char)_inputBuffer[ptr++]  :  null;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_inputBuffer[ptr++]!=  char)?(char)_inputBuffer[ptr++]  :  null;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]!=  char)?(char)_inputBuffer[ptr++]  :  null;	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :    null;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
103	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]!=  char)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_inputBuffer[ptr++]!=  char)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]!=  char)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :(char)_inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
104	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  char)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  char)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]  ==  char)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :(char)_inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
105	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  INT_0)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  INT_0)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]  ==  INT_0)?(char)_inputBuffer[ptr++]  :(char)_inputBuffer[ptr++];	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputBuffer[ptr++]    :(char)_inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
106	[BUG]  [BUGGY]  if(ch  <  INT_len)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  <  INT_len)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  <  INT_len)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    intLen;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
107	[BUG]  [BUGGY]  if(ch  <  INT_len)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  break  intLen;  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  <  INT_len)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  break  intLen;  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  <  INT_len)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  break  intLen;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0    ||    ch    ==    INT_E)    {    break    intLen;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
108	[BUG]  [BUGGY]  if(ch  ==  INT_LEN)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  ==  INT_LEN)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  ==  INT_LEN)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0    ||    ch    ==    INT_E)    {    break    intLen;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
109	[BUG]  [BUGGY]  if(ptr  <  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ptr  <  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ptr  <  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    <    INT_0    ||    ch    >    INT_9)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
110	[BUG]  [BUGGY]  if(ch  <  INT_len)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  <  INT_len)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  <  INT_len)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    <    INT_0    ||    ch    >    INT_9)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
111	[BUG]  [BUGGY]  ch  =  _inputBuffer[ptr++]  &  0xff;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _inputBuffer[ptr++]  &  0xff;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _inputBuffer[ptr++]  &  0xff;	  ch    =    _inputBuffer[ptr++]    +    intLen;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
112	[BUG]  [BUGGY]  ch  =  _inputBuffer[ptr++]  &  intLen;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _inputBuffer[ptr++]  &  intLen;  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _inputBuffer[ptr++]  &  intLen;	  ch    =    _inputBuffer[ptr++]    +    intLen;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
113	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]!=  char)?(char)_inputPtr  :  _inputBuffer[ptr++];  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_inputBuffer[ptr++]!=  char)?(char)_inputPtr  :  _inputBuffer[ptr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]!=  char)?(char)_inputPtr  :  _inputBuffer[ptr++];	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputPtr    :    _inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
114	[BUG]  [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  char)?(char)_inputPtr  :  _inputBuffer[ptr++];  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_inputBuffer[ptr++]  ==  char)?(char)_inputPtr  :  _inputBuffer[ptr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_inputBuffer[ptr++]  ==  char)?(char)_inputPtr  :  _inputBuffer[ptr++];	  ch    =(_inputBuffer[ptr++]    instanceof    char)?(char)_inputPtr    :    _inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
115	[BUG]  [BUGGY]  if(ch  ==  INT_0)  {  if(intLen  ==  1)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ch  ==  INT_0)  {  if(intLen  ==  1)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ch  ==  INT_0)  {  if(intLen  ==  1)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(intLen    ==    1)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
116	[BUG]  [BUGGY]  ch  =(_int)_inputBuffer[ptr++];  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(_int)_inputBuffer[ptr++];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(_int)_inputBuffer[ptr++];	  ch    =(_char)_inputBuffer[ptr++];    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
117	[BUG]  [BUGGY]  ch  =  _inputBuffer[ptr++]  +  Integer.toHexString(ch,  _inputPtr);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _inputBuffer[ptr++]  +  Integer.toHexString(ch,  _inputPtr);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _inputBuffer[ptr++]  +  Integer.toHexString(ch,  _inputPtr);	  ch    =    _inputBuffer[ptr++]    +    Integer.toHexString(ch);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
118	[BUG]  [BUGGY]  ch  =  _inputBuffer[ptr++]  +  Integer.toString(ch);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =  _inputBuffer[ptr++]  +  Integer.toString(ch);  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =  _inputBuffer[ptr++]  +  Integer.toString(ch);	  ch    =    _inputBuffer[ptr++]    +    Integer.toHexString(ch);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
119	[BUG]  [BUGGY]  ch  =(byte)_inputBuffer[0];  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  ch  =(byte)_inputBuffer[0];  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	ch  =(byte)_inputBuffer[0];	  ch    =(char)_inputBuffer[0];    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
120	[BUG]  [BUGGY]  if(ptr  <  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ptr  <  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ptr  <  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  return  _parseFloat(ch,  startPtr,  ptr,  true,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    <    INT_0    ||    ch    >    INT_9)    {    return    _parseFloat(ch,    startPtr,    ptr,    true,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
121	[BUG]  [BUGGY]  if(ptr  <  inputLen)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      int  intLen  =  1;  //  already  got  one  int_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  _inputPtr  =  startPtr;  return  _parseNumber2(false,  startPtr);  }      [BUGGY]  if(ptr  <  inputLen)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [BUGGY]      if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	871	871	2	replace	if(ptr  <  inputLen)  {  if(ch  ==  INT_0  ||  ch  ==  INT_E)  {  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    INT_0    ||    ch    ==    INT_E)    {    return    _parseFloat(ch,    startPtr,    ptr,    false,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
