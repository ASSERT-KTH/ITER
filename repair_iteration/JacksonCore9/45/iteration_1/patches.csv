bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!_parsingContext.inSpace())  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(!_parsingContext.inSpace())  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inSpace())  {	  if(_parsingContext.inSpace())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  if(_parsingContext.inArray())  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inArray())  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray())  {	  if(_parsingContext.inSpace())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  if(_parsingContext.inSpace()  ||  _parsingContext.inSpace())  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inSpace()  ||  _parsingContext.inSpace())  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inSpace()  ||  _parsingContext.inSpace())  {	  if(_parsingContext.inSpace())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
4	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&  _currentToken!=  JsonToken.START_SPACE)  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRoot()  &&  _currentToken!=  JsonToken.START_SPACE)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&  _currentToken!=  JsonToken.START_SPACE)  {	  if(_parsingContext.inRoot()    ||    _currentToken!=    JsonToken.START_SPACE)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
5	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _currentToken  ==  JsonToken.START_SPACE)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRoot()  ||  _currentToken  ==  JsonToken.START_SPACE)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _currentToken  ==  JsonToken.START_SPACE)  {	  if(_parsingContext.inRoot()    ||    _currentToken!=    JsonToken.START_SPACE)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
6	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  ch!=  JsonToken.START_SPACE)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRoot()  ||  ch!=  JsonToken.START_SPACE)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  ch!=  JsonToken.START_SPACE)  {	  if(_parsingContext.inRoot()    ||    _currentToken!=    JsonToken.START_SPACE)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
7	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&!_tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRoot()  &&!_tokenIncomplete)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&!_tokenIncomplete)  {	  if(_parsingContext.inRoot()    ||!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
8	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||!_tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRoot()  ||!_tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||!_tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inRoot()    ||!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
9	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||!_bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRoot()  ||!_bufferRecyclable)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||!_bufferRecyclable)  {	  if(_parsingContext.inRoot()    ||!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
10	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&  _parsingContext.inRoot())  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRoot()  &&  _parsingContext.inRoot())  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&  _parsingContext.inRoot())  {	  if(_parsingContext.inRoot()    ||    _parsingContext.inRoot())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
11	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()  <  =  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()  <  =  Integer.MIN_VALUE)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()  <  =  Integer.MIN_VALUE)  {	  if(_parsingContext.inRoot()    ||    _parsingContext.inRoot())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
12	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()  <  =  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()  <  =  Integer.MAX_VALUE)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()  <  =  Integer.MAX_VALUE)  {	  if(_parsingContext.inRoot()    ||    _parsingContext.inRoot())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&  _tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRoot()  &&  _tokenIncomplete)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&  _tokenIncomplete)  {	  if(_parsingContext.inRoot()    ||    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
14	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRoot()  ||  _tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inRoot()    ||    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
15	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||!_parsingContext.inRoot())  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRoot()  ||!_parsingContext.inRoot())  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||!_parsingContext.inRoot())  {	  if(!_parsingContext.inRoot())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
16	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(!_parsingContext.inRoot()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!_parsingContext.inRoot())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
17	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  &&  Character.isDigit(ch))  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(!_parsingContext.inRoot()  &&  Character.isDigit(ch))  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  &&  Character.isDigit(ch))  {	  if(!_parsingContext.inRoot())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
18	[BUG]  [BUGGY]  if(!_parsingContext.inRootSpace())  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(!_parsingContext.inRootSpace())  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRootSpace())  {	  if(_parsingContext.inRootSpace())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
19	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  ||  _parsingContext.inRootSpace())  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRootSpace()  ||  _parsingContext.inRootSpace())  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  ||  _parsingContext.inRootSpace())  {	  if(_parsingContext.inRootSpace())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
20	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  &&(ch  <  =  Integer.MIN_VALUE  ||  ch  >  Integer.MAX_VALUE))  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRootSpace()  &&(ch  <  =  Integer.MIN_VALUE  ||  ch  >  Integer.MAX_VALUE))  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  &&(ch  <  =  Integer.MIN_VALUE  ||  ch  >  Integer.MAX_VALUE))  {	  if(_parsingContext.inRootSpace())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
21	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  &&(ch  ==  INT_PERIOD  ||  ch  ==  INT_E))  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRootSpace()  &&(ch  ==  INT_PERIOD  ||  ch  ==  INT_E))  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  &&(ch  ==  INT_PERIOD  ||  ch  ==  INT_E))  {	  if(_parsingContext.inRootSpace())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
22	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&  _currentToken!=  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRoot()  &&  _currentToken!=  JsonToken.VALUE_STRING)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&  _currentToken!=  JsonToken.VALUE_STRING)  {	  if(_parsingContext.inRoot()    ||    _currentToken!=    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
23	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  ch!=  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRoot()  ||  ch!=  JsonToken.VALUE_STRING)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  ch!=  JsonToken.VALUE_STRING)  {	  if(_parsingContext.inRoot()    ||    _currentToken!=    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
24	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _currentToken  ==  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRoot()  ||  _currentToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _currentToken  ==  JsonToken.VALUE_STRING)  {	  if(_parsingContext.inRoot()    ||    _currentToken!=    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
25	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
26	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  return  resetInt(false,  intLen);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  return  resetInt(false,  intLen);  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  return  resetInt(false,  intLen);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  false,  intLen);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  false,  intLen);  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  false,  intLen);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
28	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&  _bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRoot()  &&  _bufferRecyclable)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&  _bufferRecyclable)  {	  if(_parsingContext.inRoot()    ||    _bufferRecyclable)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
29	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _tokenIncomplete  ||  _bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRoot()  ||  _tokenIncomplete  ||  _bufferRecyclable)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _tokenIncomplete  ||  _bufferRecyclable)  {	  if(_parsingContext.inRoot()    ||    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
30	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _bufferRecyclable  &&  _tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRoot()  ||  _bufferRecyclable  &&  _tokenIncomplete)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _bufferRecyclable  &&  _tokenIncomplete)  {	  if(_parsingContext.inRoot()    ||    _bufferRecyclable)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
31	[BUG]  [BUGGY]  if(_textBuffer.inRoot()  ||  _currentToken!=  JsonToken.START_SPACE)  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_textBuffer.inRoot()  ||  _currentToken!=  JsonToken.START_SPACE)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_textBuffer.inRoot()  ||  _currentToken!=  JsonToken.START_SPACE)  {	  if(_parsingContext.inRoot()    ||    _currentToken!=    JsonToken.START_SPACE)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
32	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()  ||  _bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()  ||  _bufferRecyclable)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()  ||  _bufferRecyclable)  {	  if(_parsingContext.inRoot()    ||    _parsingContext.inRoot())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
33	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inRootSpace())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
34	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.AUTO_CLOSE_PADDING))  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.AUTO_CLOSE_PADDING))  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.AUTO_CLOSE_PADDING))  {	  if(_parsingContext.inRootSpace())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
35	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(_parsingContext.inRootSpace())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
36	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING  ||  _parsingContext.inRoot())  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING  ||  _parsingContext.inRoot())  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_currToken!=  JsonToken.VALUE_STRING  ||  _parsingContext.inRoot())  {	  if(_parsingContext.inRoot()    ||    _currentToken!=    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
37	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  &&  Character.isWhitespace(ch))  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(!_parsingContext.inRoot()  &&  Character.isWhitespace(ch))  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  &&  Character.isWhitespace(ch))  {	  if(!_parsingContext.inRoot())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
38	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  false,  intLen);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  false,  intLen);  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  false,  intLen);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
39	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  &&!_tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(!_parsingContext.inRoot()  &&!_tokenIncomplete)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  &&!_tokenIncomplete)  {	  if(_parsingContext.inRoot()    ||!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
40	[BUG]  [BUGGY]  if(_textBuffer.inRoot()  ||!_tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_textBuffer.inRoot()  ||!_tokenIncomplete)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_textBuffer.inRoot()  ||!_tokenIncomplete)  {	  if(_parsingContext.inRoot()    ||!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
41	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  false,  intLen);  return  resetInt(false,  intLen);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  false,  intLen);  return  resetInt(false,  intLen);  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  false,  intLen);  return  resetInt(false,  intLen);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
42	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  false);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  false);  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  false);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
43	[BUG]  [BUGGY]  if(_parsingContext.inArray()  ||  _currentToken!=  JsonToken.START_SPACE)  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inArray()  ||  _currentToken!=  JsonToken.START_SPACE)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  ||  _currentToken!=  JsonToken.START_SPACE)  {	  if(_parsingContext.inRoot()    ||    _currentToken!=    JsonToken.START_SPACE)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
44	[BUG]  [BUGGY]  if(_parsingContext.inArray()  ||  _bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inArray()  ||  _bufferRecyclable)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  ||  _bufferRecyclable)  {	  if(_parsingContext.inRoot()    ||    _bufferRecyclable)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
45	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  ||!_tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRootSpace()  ||!_tokenIncomplete)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  ||!_tokenIncomplete)  {	  if(_parsingContext.inRootSpace())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
46	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  ||  _tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRootSpace()  ||  _tokenIncomplete)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  ||  _tokenIncomplete)  {	  if(_parsingContext.inRootSpace())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
47	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _tokenIncomplete  ||!_bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRoot()  ||  _tokenIncomplete  ||!_bufferRecyclable)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _tokenIncomplete  ||!_bufferRecyclable)  {	  if(_parsingContext.inRoot()    ||    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
48	[BUG]  [BUGGY]  if(_parsingContext.inArray()  ||  _tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inArray()  ||  _tokenIncomplete)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  ||  _tokenIncomplete)  {	  if(_parsingContext.inRoot()    ||    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
49	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _tokenIncomplete  ||  _cfgPrettyPrinter!=  null)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRoot()  ||  _tokenIncomplete  ||  _cfgPrettyPrinter!=  null)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _tokenIncomplete  ||  _cfgPrettyPrinter!=  null)  {	  if(_parsingContext.inRoot()    ||    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
50	[BUG]  [BUGGY]  if(_parsingContext.inArray()  ||!_tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inArray()  ||!_tokenIncomplete)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  ||!_tokenIncomplete)  {	  if(_parsingContext.inRoot()    ||!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
51	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||!_tokenIncomplete  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRoot()  ||!_tokenIncomplete  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||!_tokenIncomplete  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inRoot()    ||!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
52	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||!_tokenIncomplete  ||!_bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inRoot()  ||!_tokenIncomplete  ||!_bufferRecyclable)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||!_tokenIncomplete  ||!_bufferRecyclable)  {	  if(_parsingContext.inRoot()    ||!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
53	[BUG]  [BUGGY]  if(_parsingContext.inArray()  ||  _currentToken!=  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(_parsingContext.inArray()  ||  _currentToken!=  JsonToken.VALUE_STRING)  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  ||  _currentToken!=  JsonToken.VALUE_STRING)  {	  if(_parsingContext.inRoot()    ||    _currentToken!=    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
54	[BUG]  [BUGGY]  if(!_parsingContext.inArray())  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;      [BUGGY]  if(!_parsingContext.inArray())  {  [BUGGY]    _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inArray())  {	  if(!_parsingContext.inRoot())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
