bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  ||  Character.isWhitespace(ch))  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRoot()  ||  Character.isWhitespace(ch))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  ||  Character.isWhitespace(ch))  {	  if(!_parsingContext.inRoot()    &&    Character.isWhitespace(ch))    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
2	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  &&  Character.isWhitespace(ch)||  Character.isLetterOrDigit(ch))  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRoot()  &&  Character.isWhitespace(ch)||  Character.isLetterOrDigit(ch))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  &&  Character.isWhitespace(ch)||  Character.isLetterOrDigit(ch))  {	  if(!_parsingContext.inRoot()    &&    Character.isWhitespace(ch))    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
3	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  Character.isWhitespace(ch))  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  Character.isWhitespace(ch))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  Character.isWhitespace(ch))  {	  if(!_parsingContext.inRoot()    &&    Character.isWhitespace(ch))    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
4	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  &&  Character.isWhitespace(ch)||  Character.isDigit(ch))  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRoot()  &&  Character.isWhitespace(ch)||  Character.isDigit(ch))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  &&  Character.isWhitespace(ch)||  Character.isDigit(ch))  {	  if(!_parsingContext.inRoot()    &&    Character.isWhitespace(ch))    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
5	[BUG]  [BUGGY]  if(_parsingContext.inArray()  ||!_tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  ||!_tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  ||!_tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inArray()    ||!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
6	[BUG]  [BUGGY]  if(_parsingContext.inArray()  ||!_bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  ||!_bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  ||!_bufferRecyclable)  {	  if(_parsingContext.inArray()    ||!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
7	[BUG]  [BUGGY]  if(_parsingContext.inObject()  ||!_tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inObject()  ||!_tokenIncomplete)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inObject()  ||!_tokenIncomplete)  {	  if(_parsingContext.inArray()    ||!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
8	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  true,  intLen);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  true,  intLen);  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  true,  intLen);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    ptr,    false,    intLen);    return    resetInt(false,    intLen);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
9	[BUG]  [BUGGY]  if(ch  ==  INT_PERIOD)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  false,  intLen);  return  resetInt(false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(ch  ==  INT_PERIOD)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  false,  intLen);  return  resetInt(false,  intLen);  }  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(ch  ==  INT_PERIOD)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  false,  intLen);  return  resetInt(false,  intLen);  }	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    ptr,    false,    intLen);    return    resetInt(false,    intLen);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
10	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inRootSpace()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
11	[BUG]  [BUGGY]  if(!_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inRootSpace()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
12	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  ch))  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  ch))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  ch))  {	  if(_parsingContext.inRootSpace()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
13	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FLOAT))  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FLOAT))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FLOAT))  {	  if(_parsingContext.inRootSpace()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
14	[BUG]  [BUGGY]  if(_parsingContext.inObject()  ||  _bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inObject()  ||  _bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inObject()  ||  _bufferRecyclable)  {	  if(_parsingContext.inArray()    ||    _bufferRecyclable)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
15	[BUG]  [BUGGY]  if(_parsingContext.inArray()  ||  _bufferRecyclable  &&  _tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  ||  _bufferRecyclable  &&  _tokenIncomplete)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  ||  _bufferRecyclable  &&  _tokenIncomplete)  {	  if(_parsingContext.inArray()    ||    _bufferRecyclable)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
16	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!_parsingContext.inRoot()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
17	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRoot()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!_parsingContext.inRoot()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
18	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!_parsingContext.inRoot()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
19	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&!_bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  &&!_bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&!_bufferRecyclable)  {	  if(_parsingContext.inRoot()    ||!_bufferRecyclable)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
20	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||!_bufferRecyclable  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||!_bufferRecyclable  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||!_bufferRecyclable  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inRoot()    ||!_bufferRecyclable)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
21	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  ||!_bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRoot()  ||!_bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  ||!_bufferRecyclable)  {	  if(_parsingContext.inRoot()    ||!_bufferRecyclable)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
22	[BUG]  [BUGGY]  if(ptr  <  0)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  return  resetInt(false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(ptr  <  0)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  return  resetInt(false,  intLen);  }  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(ptr  <  0)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  return  resetInt(false,  intLen);  }	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    ptr);    return    resetInt(false,    intLen);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
23	[BUG]  [BUGGY]  if(ptr  >=  0)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  return  resetInt(false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(ptr  >=  0)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  return  resetInt(false,  intLen);  }  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(ptr  >=  0)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  return  resetInt(false,  intLen);  }	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    ptr);    return    resetInt(false,    intLen);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
24	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  ||  _parsingContext.inSpace())  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  ||  _parsingContext.inSpace())  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  ||  _parsingContext.inSpace())  {	  if(_parsingContext.inSpace()    ||    _parsingContext.inSpace())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
25	[BUG]  [BUGGY]  if(_parsingContext.inSpace()  ||  _parsingContext.inRootSpace())  {  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inSpace()  ||  _parsingContext.inRootSpace())  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inSpace()  ||  _parsingContext.inRootSpace())  {	  if(_parsingContext.inSpace()    ||    _parsingContext.inSpace())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
26	[BUG]  [BUGGY]  if(_parsingContext.inSpace()  ||  _parsingContext.inSpace()  <  =  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inSpace()  ||  _parsingContext.inSpace()  <  =  Integer.MAX_VALUE)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inSpace()  ||  _parsingContext.inSpace()  <  =  Integer.MAX_VALUE)  {	  if(_parsingContext.inSpace()    ||    _parsingContext.inSpace())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
27	[BUG]  [BUGGY]  if(_parsingContext.inArray()  ||  ch!=  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  ||  ch!=  JsonToken.VALUE_STRING)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  ||  ch!=  JsonToken.VALUE_STRING)  {	  if(_parsingContext.inArray()    ||    _currentToken!=    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
28	[BUG]  [BUGGY]  if(_parsingContext.inObject()  ||  _currentToken!=  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inObject()  ||  _currentToken!=  JsonToken.VALUE_STRING)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inObject()  ||  _currentToken!=  JsonToken.VALUE_STRING)  {	  if(_parsingContext.inArray()    ||    _currentToken!=    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
29	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  ||  _currentToken!=  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  ||  _currentToken!=  JsonToken.VALUE_STRING)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  ||  _currentToken!=  JsonToken.VALUE_STRING)  {	  if(_parsingContext.inArray()    ||    _currentToken!=    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
30	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  true);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  true);  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  true);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    ptr,    false);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
31	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING  &&  _parsingContext.inRoot())  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING  &&  _parsingContext.inRoot())  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_currToken!=  JsonToken.VALUE_STRING  &&  _parsingContext.inRoot())  {	  if(_currToken!=    JsonToken.VALUE_STRING    ||    _parsingContext.inRoot())    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
32	[BUG]  [BUGGY]  if(_parsingContext!=  null  ||  _currToken!=  JsonToken.VALUE_STRING  ||  _parsingContext.inRoot())  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext!=  null  ||  _currToken!=  JsonToken.VALUE_STRING  ||  _parsingContext.inRoot())  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext!=  null  ||  _currToken!=  JsonToken.VALUE_STRING  ||  _parsingContext.inRoot())  {	  if(_currToken!=    JsonToken.VALUE_STRING    ||    _parsingContext.inRoot())    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
33	[BUG]  [BUGGY]  if(ch!=  JsonToken.VALUE_STRING  ||  _parsingContext.inRoot())  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(ch!=  JsonToken.VALUE_STRING  ||  _parsingContext.inRoot())  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(ch!=  JsonToken.VALUE_STRING  ||  _parsingContext.inRoot())  {	  if(_currToken!=    JsonToken.VALUE_STRING    ||    _parsingContext.inRoot())    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
34	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  &&  _parsingContext.inRoot())  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  &&  _parsingContext.inRoot())  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_currToken  ==  JsonToken.VALUE_STRING  &&  _parsingContext.inRoot())  {	  if(_currToken!=    JsonToken.VALUE_STRING    ||    _parsingContext.inRoot())    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
35	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  ch  ==  JsonToken.START_SPACE)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  ch  ==  JsonToken.START_SPACE)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  ch  ==  JsonToken.START_SPACE)  {	  if(_parsingContext.inRoot()    ||    _currentToken    ==    JsonToken.START_SPACE)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
36	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&  _currentToken  ==  JsonToken.START_SPACE)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  &&  _currentToken  ==  JsonToken.START_SPACE)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&  _currentToken  ==  JsonToken.START_SPACE)  {	  if(_parsingContext.inRoot()    ||    _currentToken    ==    JsonToken.START_SPACE)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  if(_parsingContext.inObject()  ||  _tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inObject()  ||  _tokenIncomplete)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inObject()  ||  _tokenIncomplete)  {	  if(_parsingContext.inArray()    ||    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
38	[BUG]  [BUGGY]  if(_parsingContext.inArray()  ||  _tokenIncomplete  ||  _bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  ||  _tokenIncomplete  ||  _bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  ||  _tokenIncomplete  ||  _bufferRecyclable)  {	  if(_parsingContext.inArray()    ||    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
39	[BUG]  [BUGGY]  if(_textBuffer.inRoot()  ||  ch!=  JsonToken.START_SPACE)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_textBuffer.inRoot()  ||  ch!=  JsonToken.START_SPACE)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_textBuffer.inRoot()  ||  ch!=  JsonToken.START_SPACE)  {	  if(_textBuffer.inRoot()    ||    _currentToken!=    JsonToken.START_SPACE)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
40	[BUG]  [BUGGY]  if(_currentToken!=  JsonToken.START_SPACE  ||  _textBuffer.inRoot()!=  JsonToken.START_SPACE)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_currentToken!=  JsonToken.START_SPACE  ||  _textBuffer.inRoot()!=  JsonToken.START_SPACE)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_currentToken!=  JsonToken.START_SPACE  ||  _textBuffer.inRoot()!=  JsonToken.START_SPACE)  {	  if(_textBuffer.inRoot()    ||    _currentToken!=    JsonToken.START_SPACE)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
41	[BUG]  [BUGGY]  if(_textBuffer.inRoot()  ||  _currentToken  ==  JsonToken.START_SPACE)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_textBuffer.inRoot()  ||  _currentToken  ==  JsonToken.START_SPACE)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_textBuffer.inRoot()  ||  _currentToken  ==  JsonToken.START_SPACE)  {	  if(_textBuffer.inRoot()    ||    _currentToken!=    JsonToken.START_SPACE)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
42	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&  ch!=  JsonToken.START_SPACE)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  &&  ch!=  JsonToken.START_SPACE)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&  ch!=  JsonToken.START_SPACE)  {	  if(_parsingContext.inRoot()    &&    _currentToken!=    JsonToken.START_SPACE)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
43	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()  ||  _tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()  ||  _tokenIncomplete)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()  ||  _tokenIncomplete)  {	  if(_parsingContext.inRoot()    ||    _parsingContext.inRoot()    ||    _bufferRecyclable)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
44	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()  ||!_tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()  ||!_tokenIncomplete)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()  ||!_tokenIncomplete)  {	  if(_parsingContext.inRoot()    ||    _parsingContext.inRoot()    ||    _bufferRecyclable)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
45	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&  _parsingContext.inRoot()  ||  _bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  &&  _parsingContext.inRoot()  ||  _bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&  _parsingContext.inRoot()  ||  _bufferRecyclable)  {	  if(_parsingContext.inRoot()    ||    _parsingContext.inRoot()    ||    _bufferRecyclable)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
46	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&!_tokenIncomplete  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  &&!_tokenIncomplete  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&!_tokenIncomplete  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inRoot()    ||!_tokenIncomplete    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
47	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  _parsingContext.inRoot()  ||!_tokenIncomplete  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  _parsingContext.inRoot()  ||!_tokenIncomplete  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  _parsingContext.inRoot()  ||!_tokenIncomplete  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inRoot()    ||!_tokenIncomplete    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
48	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  ch  >=  JsonToken.START_SPACE)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  ch  >=  JsonToken.START_SPACE)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  ch  >=  JsonToken.START_SPACE)  {	  if(_parsingContext.inRoot()    ||    ch!=    JsonToken.START_SPACE)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
49	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  ||!_parsingContext.inRootSpace())  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  ||!_parsingContext.inRootSpace())  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  ||!_parsingContext.inRootSpace())  {	  if(!_parsingContext.inRootSpace())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
50	[BUG]  [BUGGY]  if(!_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  ch))  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  ch))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  ch))  {	  if(!_parsingContext.inRootSpace())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
51	[BUG]  [BUGGY]  if(!_parsingContext.inRootSpace()  &&  Character.isDigit(ch))  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRootSpace()  &&  Character.isDigit(ch))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRootSpace()  &&  Character.isDigit(ch))  {	  if(!_parsingContext.inRootSpace())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
52	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()  ==  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()  ==  Integer.MAX_VALUE)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()  ==  Integer.MAX_VALUE)  {	  if(_parsingContext.inRoot()    ||    _parsingContext.inRoot()    <    =    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
53	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()  <  Integer.MAX_VALUE)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()  <  Integer.MAX_VALUE)  {	  if(_parsingContext.inRoot()    ||    _parsingContext.inRoot()    <    =    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
54	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()!=  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()!=  Integer.MAX_VALUE)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()!=  Integer.MAX_VALUE)  {	  if(_parsingContext.inRoot()    ||    _parsingContext.inRoot()    <    =    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
55	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&  _parsingContext.inRoot()  <  =  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  &&  _parsingContext.inRoot()  <  =  Integer.MAX_VALUE)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&  _parsingContext.inRoot()  <  =  Integer.MAX_VALUE)  {	  if(_parsingContext.inRoot()    ||    _parsingContext.inRoot()    <    =    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
56	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  &&  _tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  &&  _tokenIncomplete)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  &&  _tokenIncomplete)  {	  if(_parsingContext.inRootSpace()    ||    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
57	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  ||  _tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  ||  _tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  ||  _tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inRootSpace()    ||    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
58	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  ||  _tokenIncomplete  &&!_bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  ||  _tokenIncomplete  &&!_bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  ||  _tokenIncomplete  &&!_bufferRecyclable)  {	  if(_parsingContext.inRootSpace()    ||    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
59	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&!_parsingContext.inRoot())  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  &&!_parsingContext.inRoot())  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&!_parsingContext.inRoot())  {	  if(_parsingContext.inRoot()    ||!_parsingContext.inRoot())    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
60	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  ||!_parsingContext.inRoot())  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRoot()  ||!_parsingContext.inRoot())  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  ||!_parsingContext.inRoot())  {	  if(_parsingContext.inRoot()    ||!_parsingContext.inRoot())    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
61	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||!_parsingContext.inRoot()  ||  ch  ==  INT_PERIOD)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||!_parsingContext.inRoot()  ||  ch  ==  INT_PERIOD)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||!_parsingContext.inRoot()  ||  ch  ==  INT_PERIOD)  {	  if(_parsingContext.inRoot()    ||!_parsingContext.inRoot())    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
62	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  true,  intLen);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  true,  intLen);  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  true,  intLen);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    false,    intLen);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
63	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  false,  intLen  +  1);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  false,  intLen  +  1);  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  false,  intLen  +  1);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    false,    intLen);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
64	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  ||(ch  <  Integer.MIN_VALUE  ||  ch  >  Integer.MAX_VALUE))  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  ||(ch  <  Integer.MIN_VALUE  ||  ch  >  Integer.MAX_VALUE))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  ||(ch  <  Integer.MIN_VALUE  ||  ch  >  Integer.MAX_VALUE))  {	  if(_parsingContext.inRootSpace()    &&(ch    <    =    Integer.MIN_VALUE    ||    ch    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
65	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  &&(ch  ==  Integer.MIN_VALUE  ||  ch  >=  Integer.MAX_VALUE))  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  &&(ch  ==  Integer.MIN_VALUE  ||  ch  >=  Integer.MAX_VALUE))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  &&(ch  ==  Integer.MIN_VALUE  ||  ch  >=  Integer.MAX_VALUE))  {	  if(_parsingContext.inRootSpace()    &&(ch    <    =    Integer.MIN_VALUE    ||    ch    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
66	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  &&(ch  ==  Integer.MIN_VALUE  ||  ch  <  Integer.MAX_VALUE))  {  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  &&(ch  ==  Integer.MIN_VALUE  ||  ch  <  Integer.MAX_VALUE))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  &&(ch  ==  Integer.MIN_VALUE  ||  ch  <  Integer.MAX_VALUE))  {	  if(_parsingContext.inRootSpace()    &&(ch    <    =    Integer.MIN_VALUE    ||    ch    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
67	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  &&  _bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRoot()  &&  _bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  &&  _bufferRecyclable)  {	  if(_parsingContext.inRoot()    &&    _bufferRecyclable)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
68	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _tokenIncomplete  &&  _bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  _tokenIncomplete  &&  _bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _tokenIncomplete  &&  _bufferRecyclable)  {	  if(_parsingContext.inRoot()    ||    _tokenIncomplete    ||    _bufferRecyclable)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
69	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&  _tokenIncomplete  ||  _bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  &&  _tokenIncomplete  ||  _bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&  _tokenIncomplete  ||  _bufferRecyclable)  {	  if(_parsingContext.inRoot()    ||    _tokenIncomplete    ||    _bufferRecyclable)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
70	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _bufferRecyclable  ||  _tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  _bufferRecyclable  ||  _tokenIncomplete)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _bufferRecyclable  ||  _tokenIncomplete)  {	  if(_parsingContext.inRoot()    ||    _tokenIncomplete    ||    _bufferRecyclable)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
71	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  ||!_tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRoot()  ||!_tokenIncomplete)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  ||!_tokenIncomplete)  {	  if(!_parsingContext.inRoot()    &&!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
72	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||!_tokenIncomplete  &&!_bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||!_tokenIncomplete  &&!_bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||!_tokenIncomplete  &&!_bufferRecyclable)  {	  if(_parsingContext.inRoot()    ||!_tokenIncomplete    ||!_bufferRecyclable)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
73	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&!_tokenIncomplete  ||!_bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  &&!_tokenIncomplete  ||!_bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&!_tokenIncomplete  ||!_bufferRecyclable)  {	  if(_parsingContext.inRoot()    ||!_tokenIncomplete    ||!_bufferRecyclable)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
74	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  ch  ==  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  ch  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  ch  ==  JsonToken.VALUE_STRING)  {	  if(_parsingContext.inRoot()    ||    _currentToken    ==    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
75	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&  _currentToken  ==  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  &&  _currentToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&  _currentToken  ==  JsonToken.VALUE_STRING)  {	  if(_parsingContext.inRoot()    ||    _currentToken    ==    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
76	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _currentToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  _currentToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _currentToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_parsingContext.inRoot()    ||    _currentToken    ==    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
77	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&  _tokenIncomplete  ||!_bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  &&  _tokenIncomplete  ||!_bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&  _tokenIncomplete  ||!_bufferRecyclable)  {	  if(_parsingContext.inRoot()    ||    _tokenIncomplete    ||!_bufferRecyclable)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
78	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _tokenIncomplete  &&!_bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  _tokenIncomplete  &&!_bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _tokenIncomplete  &&!_bufferRecyclable)  {	  if(_parsingContext.inRoot()    ||    _tokenIncomplete    ||!_bufferRecyclable)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
79	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _tokenIncomplete  ||!_bufferRecyclable  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  _tokenIncomplete  ||!_bufferRecyclable  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _tokenIncomplete  ||!_bufferRecyclable  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inRoot()    ||    _tokenIncomplete    ||!_bufferRecyclable)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
80	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _bufferRecyclable  ||!_tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  _bufferRecyclable  ||!_tokenIncomplete)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _bufferRecyclable  ||!_tokenIncomplete)  {	  if(_parsingContext.inRoot()    ||    _tokenIncomplete    ||!_bufferRecyclable)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
81	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  false,  intLen  +  1);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  false,  intLen  +  1);  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  false,  intLen  +  1);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    ptr,    false,    intLen);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
82	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()  ==  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()  ==  Integer.MIN_VALUE)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()  ==  Integer.MIN_VALUE)  {	  if(_parsingContext.inRoot()    ||    _parsingContext.inRoot()    <    =    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
83	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()  <  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()  <  Integer.MIN_VALUE)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()  <  Integer.MIN_VALUE)  {	  if(_parsingContext.inRoot()    ||    _parsingContext.inRoot()    <    =    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
84	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&  _parsingContext.inRoot()  <  =  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  &&  _parsingContext.inRoot()  <  =  Integer.MIN_VALUE)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&  _parsingContext.inRoot()  <  =  Integer.MIN_VALUE)  {	  if(_parsingContext.inRoot()    ||    _parsingContext.inRoot()    <    =    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
85	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()!=  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()!=  Integer.MIN_VALUE)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _parsingContext.inRoot()!=  Integer.MIN_VALUE)  {	  if(_parsingContext.inRoot()    ||    _parsingContext.inRoot()    <    =    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
86	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&  _bufferRecyclable  &&  _tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  &&  _bufferRecyclable  &&  _tokenIncomplete)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&  _bufferRecyclable  &&  _tokenIncomplete)  {	  if(_parsingContext.inRoot()    ||    _bufferRecyclable    &&    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
87	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    ptr);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
88	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr-startPtr);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr-startPtr);  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr-startPtr);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    ptr);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
89	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr  +  1);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr  +  1);  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr  +  1);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    ptr);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
90	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&!_tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  &&!_tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&!_tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inRoot()    ||!_tokenIncomplete    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
91	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||!_tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  ch))  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||!_tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  ch))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||!_tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  ch))  {	  if(_parsingContext.inRoot()    ||!_tokenIncomplete    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
92	[BUG]  [BUGGY]  if(!_parsingContext.inSpace()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inSpace()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inSpace()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!_parsingContext.inSpace())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
93	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  &&  _parsingContext.inRootSpace())  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  &&  _parsingContext.inRootSpace())  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  &&  _parsingContext.inRootSpace())  {	  if(_parsingContext.inRootSpace()    ||    _parsingContext.inRootSpace())    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
94	[BUG]  [BUGGY]  if(!_parsingContext.inRootSpace()  ||  _parsingContext.inRootSpace())  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRootSpace()  ||  _parsingContext.inRootSpace())  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRootSpace()  ||  _parsingContext.inRootSpace())  {	  if(_parsingContext.inRootSpace()    ||    _parsingContext.inRootSpace())    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
95	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&  ch!=  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  &&  ch!=  JsonToken.VALUE_STRING)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&  ch!=  JsonToken.VALUE_STRING)  {	  if(_parsingContext.inRoot()    ||    ch!=    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
96	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  ch  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  ch  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  ch  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_parsingContext.inRoot()    ||    ch!=    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
97	[BUG]  [BUGGY]  if(_textBuffer.inRoot()  ||!_tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_textBuffer.inRoot()  ||!_tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_textBuffer.inRoot()  ||!_tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_textBuffer.inRoot()    ||!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
98	[BUG]  [BUGGY]  if(_tokenIncomplete.inRoot()  ||!_tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_tokenIncomplete.inRoot()  ||!_tokenIncomplete)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_tokenIncomplete.inRoot()  ||!_tokenIncomplete)  {	  if(_textBuffer.inRoot()    ||!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
99	[BUG]  [BUGGY]  if(_textBuffer.inRoot()  ||!_tokenIncomplete  &&  Character.isDigit(ch))  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_textBuffer.inRoot()  ||!_tokenIncomplete  &&  Character.isDigit(ch))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_textBuffer.inRoot()  ||!_tokenIncomplete  &&  Character.isDigit(ch))  {	  if(_textBuffer.inRoot()    ||!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
100	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  ||  isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  ||  isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  ||  isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(_parsingContext.inRootSpace()    &&    isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
101	[BUG]  [BUGGY]  if(!_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(_parsingContext.inRootSpace()    &&    isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
102	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_NULL_VALUE,  ch))  {  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_NULL_VALUE,  ch))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_NULL_VALUE,  ch))  {	  if(_parsingContext.inRootSpace()    &&    isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
103	[BUG]  [BUGGY]  if(!_parsingContext.inArray()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inArray()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inArray()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!_parsingContext.inArray())    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
104	[BUG]  [BUGGY]  if(_parsingContext.inArray()  ||!_parsingContext.inArray())  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  ||!_parsingContext.inArray())  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  ||!_parsingContext.inArray())  {	  if(!_parsingContext.inArray())    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
105	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&!_tokenIncomplete  &&  Character.isDigit(ch))  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  &&!_tokenIncomplete  &&  Character.isDigit(ch))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&!_tokenIncomplete  &&  Character.isDigit(ch))  {	  if(_parsingContext.inRoot()    &&!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
106	[BUG]  [BUGGY]  if(_parsingContext.inArray()  ||  ch!=  JsonToken.START_SPACE)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  ||  ch!=  JsonToken.START_SPACE)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  ||  ch!=  JsonToken.START_SPACE)  {	  if(_parsingContext.inArray()    ||    _currentToken!=    JsonToken.START_SPACE)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
107	[BUG]  [BUGGY]  if(_parsingContext.inObject()  ||  _currentToken!=  JsonToken.START_SPACE)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inObject()  ||  _currentToken!=  JsonToken.START_SPACE)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inObject()  ||  _currentToken!=  JsonToken.START_SPACE)  {	  if(_parsingContext.inArray()    ||    _currentToken!=    JsonToken.START_SPACE)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
108	[BUG]  [BUGGY]  if(_parsingContext.inArray()  ||  _currentToken  ==  JsonToken.START_SPACE)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  ||  _currentToken  ==  JsonToken.START_SPACE)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  ||  _currentToken  ==  JsonToken.START_SPACE)  {	  if(_parsingContext.inArray()    ||    _currentToken!=    JsonToken.START_SPACE)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
109	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  ||  Character.isDigit(ch))  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRoot()  ||  Character.isDigit(ch))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  ||  Character.isDigit(ch))  {	  if(!_parsingContext.inRoot()    &&    Character.isDigit(ch))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
110	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  Character.isDigit(ch))  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  Character.isDigit(ch))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  Character.isDigit(ch))  {	  if(!_parsingContext.inRoot()    &&    Character.isDigit(ch))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
111	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  &&  Character.isDigit(ch)||  Character.isLetterOrDigit(ch))  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRoot()  &&  Character.isDigit(ch)||  Character.isLetterOrDigit(ch))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  &&  Character.isDigit(ch)||  Character.isLetterOrDigit(ch))  {	  if(!_parsingContext.inRoot()    &&    Character.isDigit(ch))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
112	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  ||  isEnabled(Feature.AUTO_CLOSE_PADDING))  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  ||  isEnabled(Feature.AUTO_CLOSE_PADDING))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  ||  isEnabled(Feature.AUTO_CLOSE_PADDING))  {	  if(_parsingContext.inRootSpace()    &&    isEnabled(Feature.AUTO_CLOSE_PADDING))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
113	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.AUTO_CLOSE_PADDING,  ch))  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.AUTO_CLOSE_PADDING,  ch))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.AUTO_CLOSE_PADDING,  ch))  {	  if(_parsingContext.inRootSpace()    &&    isEnabled(Feature.AUTO_CLOSE_PADDING))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
114	[BUG]  [BUGGY]  if(!_parsingContext.inRootSpace()  &&  isEnabled(Feature.AUTO_CLOSE_PADDING))  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRootSpace()  &&  isEnabled(Feature.AUTO_CLOSE_PADDING))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRootSpace()  &&  isEnabled(Feature.AUTO_CLOSE_PADDING))  {	  if(_parsingContext.inRootSpace()    &&    isEnabled(Feature.AUTO_CLOSE_PADDING))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
115	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.AUTO_CLOSE_PADDING  ||  ch  >  AUTO_CLOSE_PADDING))  {  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.AUTO_CLOSE_PADDING  ||  ch  >  AUTO_CLOSE_PADDING))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.AUTO_CLOSE_PADDING  ||  ch  >  AUTO_CLOSE_PADDING))  {	  if(_parsingContext.inRootSpace()    &&    isEnabled(Feature.AUTO_CLOSE_PADDING))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
116	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  _parsingContext.inRoot()  ||  _tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  _parsingContext.inRoot()  ||  _tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  _parsingContext.inRoot()  ||  _tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inRoot()    ||    _tokenIncomplete    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
117	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  _parsingContext.inRoot()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  _parsingContext.inRoot()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  _parsingContext.inRoot()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inRoot()    ||    _tokenIncomplete    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
118	[BUG]  [BUGGY]  if(_parsingContext.inArray()  >  0)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  >  0)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  >  0)  {	  if(_parsingContext.inArray())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
119	[BUG]  [BUGGY]  if(_parsingContext.inArray()  ||  _parsingContext.inArray())  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  ||  _parsingContext.inArray())  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  ||  _parsingContext.inArray())  {	  if(_parsingContext.inArray())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
120	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _tokenIncomplete  &&  _cfgPrettyPrinter!=  null)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  _tokenIncomplete  &&  _cfgPrettyPrinter!=  null)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _tokenIncomplete  &&  _cfgPrettyPrinter!=  null)  {	  if(_parsingContext.inRoot()    ||    _tokenIncomplete    ||    _cfgPrettyPrinter!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
121	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&  _tokenIncomplete  ||  _cfgPrettyPrinter!=  null)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  &&  _tokenIncomplete  ||  _cfgPrettyPrinter!=  null)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&  _tokenIncomplete  ||  _cfgPrettyPrinter!=  null)  {	  if(_parsingContext.inRoot()    ||    _tokenIncomplete    ||    _cfgPrettyPrinter!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
122	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _cfgPrettyPrinter!=  null)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  _cfgPrettyPrinter!=  null)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _cfgPrettyPrinter!=  null)  {	  if(_parsingContext.inRoot()    ||    _tokenIncomplete    ||    _cfgPrettyPrinter!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
123	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  &&  _parsingContext.inRoot())  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRoot()  &&  _parsingContext.inRoot())  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  &&  _parsingContext.inRoot())  {	  if(_parsingContext.inRoot()    &&    _parsingContext.inRoot())    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
124	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  &&!_tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  &&!_tokenIncomplete)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  &&!_tokenIncomplete)  {	  if(_parsingContext.inRootSpace()    ||!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
125	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  ||!_tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  ||!_tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  ||!_tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inRootSpace()    ||!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
126	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  ||!_bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  ||!_bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  ||!_bufferRecyclable)  {	  if(_parsingContext.inRootSpace()    ||!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
127	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&  _currentToken!=  JsonToken.VALUE_NUMBER_INT)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  &&  _currentToken!=  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&  _currentToken!=  JsonToken.VALUE_NUMBER_INT)  {	  if(_parsingContext.inRoot()    &&    _currentToken!=    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
128	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&  _tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  &&  _tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&  _tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inRoot()    &&    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
129	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  &&  _tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRoot()  &&  _tokenIncomplete)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  &&  _tokenIncomplete)  {	  if(_parsingContext.inRoot()    &&    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
130	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  ||(ch  ==  INT_PERIOD  ||  ch  ==  INT_E))  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  ||(ch  ==  INT_PERIOD  ||  ch  ==  INT_E))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  ||(ch  ==  INT_PERIOD  ||  ch  ==  INT_E))  {	  if(_parsingContext.inRootSpace()    &&(ch    ==    INT_PERIOD    ||    ch    ==    INT_E))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
131	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  ||(ch  ==  INT_E  ||  ch  ==  INT_PERIOD))  {  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  ||(ch  ==  INT_E  ||  ch  ==  INT_PERIOD))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  ||(ch  ==  INT_E  ||  ch  ==  INT_PERIOD))  {	  if(_parsingContext.inRootSpace()    &&(ch    ==    INT_PERIOD    ||    ch    ==    INT_E))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
132	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  &&(ch  ==  INT_E  ||  ch  ==  INT_PERIOD))  {  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  &&(ch  ==  INT_E  ||  ch  ==  INT_PERIOD))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  &&(ch  ==  INT_E  ||  ch  ==  INT_PERIOD))  {	  if(_parsingContext.inRootSpace()    &&(ch    ==    INT_PERIOD    ||    ch    ==    INT_E))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
133	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  &&(ch  ==  INT_0  ||  ch  ==  INT_E))  {  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  &&(ch  ==  INT_0  ||  ch  ==  INT_E))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  &&(ch  ==  INT_0  ||  ch  ==  INT_E))  {	  if(_parsingContext.inRootSpace()    &&(ch    ==    INT_PERIOD    ||    ch    ==    INT_E))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
134	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  ||  _tokenIncomplete  ||  _bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  ||  _tokenIncomplete  ||  _bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  ||  _tokenIncomplete  ||  _bufferRecyclable)  {	  if(_parsingContext.inRootSpace()    ||    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
135	[BUG]  [BUGGY]  if(_parsingContext.inArray()  &&  _tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  &&  _tokenIncomplete)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  &&  _tokenIncomplete)  {	  if(_parsingContext.inArray()    ||    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
136	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  &&  _currentToken!=  JsonToken.START_SPACE)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRoot()  &&  _currentToken!=  JsonToken.START_SPACE)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  &&  _currentToken!=  JsonToken.START_SPACE)  {	  if(_parsingContext.inRoot()    &&    _currentToken!=    JsonToken.START_SPACE)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
137	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  &&(ch  ==  Integer.MIN_VALUE  ||  ch  ==  Integer.MAX_VALUE))  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  &&(ch  ==  Integer.MIN_VALUE  ||  ch  ==  Integer.MAX_VALUE))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  &&(ch  ==  Integer.MIN_VALUE  ||  ch  ==  Integer.MAX_VALUE))  {	  if(_parsingContext.inRootSpace()    &&(ch    <    =    Integer.MIN_VALUE    ||    ch    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
138	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  &&(ch  >=  Integer.MIN_VALUE  ||  ch  ==  Integer.MAX_VALUE))  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  &&(ch  >=  Integer.MIN_VALUE  ||  ch  ==  Integer.MAX_VALUE))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  &&(ch  >=  Integer.MIN_VALUE  ||  ch  ==  Integer.MAX_VALUE))  {	  if(_parsingContext.inRootSpace()    &&(ch    <    =    Integer.MIN_VALUE    ||    ch    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
139	[BUG]  [BUGGY]  if(_parsingContext.inArray()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inArray())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
140	[BUG]  [BUGGY]  if(_parsingContext.inObject())  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inObject())  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inObject())  {	  if(_parsingContext.inArray())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
141	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NUMBER_FLOAT))  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NUMBER_FLOAT))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NUMBER_FLOAT))  {	  if(_parsingContext.inRootSpace()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
142	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.AUTO_CLOSE_PADDING  ||  ch  <  INT_PERIOD))  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.AUTO_CLOSE_PADDING  ||  ch  <  INT_PERIOD))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.AUTO_CLOSE_PADDING  ||  ch  <  INT_PERIOD))  {	  if(_parsingContext.inRootSpace()    &&    isEnabled(Feature.AUTO_CLOSE_PADDING))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
143	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  &&  Character.isWhitespace(ch)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRoot()  &&  Character.isWhitespace(ch)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  &&  Character.isWhitespace(ch)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!_parsingContext.inRoot()    &&    Character.isWhitespace(ch))    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
144	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  &&  Character.isWhitespace(ch)&&  isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRoot()  &&  Character.isWhitespace(ch)&&  isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  &&  Character.isWhitespace(ch)&&  isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(!_parsingContext.inRoot()    &&    Character.isWhitespace(ch))    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
145	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  &&  _currentToken!=  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRoot()  &&  _currentToken!=  JsonToken.VALUE_STRING)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  &&  _currentToken!=  JsonToken.VALUE_STRING)  {	  if(_parsingContext.inRoot()    &&    _currentToken!=    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
146	[BUG]  [BUGGY]  if(_parsingContext.inArray()  &&  _bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  &&  _bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  &&  _bufferRecyclable)  {	  if(_parsingContext.inArray()    ||    _bufferRecyclable)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
147	[BUG]  [BUGGY]  if(_textBuffer.inRoot()  ||!_tokenIncomplete  &&!_bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_textBuffer.inRoot()  ||!_tokenIncomplete  &&!_bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_textBuffer.inRoot()  ||!_tokenIncomplete  &&!_bufferRecyclable)  {	  if(_textBuffer.inRoot()    ||!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
148	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  false);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  false);  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  false);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    ptr,    false);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
149	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  true,  intLen);  return  resetInt(false,  intLen);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  true,  intLen);  return  resetInt(false,  intLen);  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  true,  intLen);  return  resetInt(false,  intLen);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    ptr,    false,    intLen);    return    resetInt(false,    intLen);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
150	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&!_tokenIncomplete  &&  Character.isWhitespace(ch))  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  &&!_tokenIncomplete  &&  Character.isWhitespace(ch))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&!_tokenIncomplete  &&  Character.isWhitespace(ch))  {	  if(_parsingContext.inRoot()    &&!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
151	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _currentToken  ==  JsonToken.START_SPACE  ||  _currentToken  ==  JsonToken.START_ARRAY)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  _currentToken  ==  JsonToken.START_SPACE  ||  _currentToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _currentToken  ==  JsonToken.START_SPACE  ||  _currentToken  ==  JsonToken.START_ARRAY)  {	  if(_parsingContext.inRoot()    ||    _currentToken    ==    JsonToken.START_SPACE)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
152	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  &&  Character.isDigit(ch)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRoot()  &&  Character.isDigit(ch)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  &&  Character.isDigit(ch)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!_parsingContext.inRoot()    &&    Character.isDigit(ch))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
153	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  &&  ch!=  JsonToken.START_SPACE)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRoot()  &&  ch!=  JsonToken.START_SPACE)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  &&  ch!=  JsonToken.START_SPACE)  {	  if(_parsingContext.inRoot()    ||    ch!=    JsonToken.START_SPACE)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
154	[BUG]  [BUGGY]  if(_parsingContext.inArray()  ||  _currentToken  ==  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  ||  _currentToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  ||  _currentToken  ==  JsonToken.VALUE_STRING)  {	  if(_parsingContext.inArray()    ||    _currentToken!=    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
155	[BUG]  [BUGGY]  if(_parsingContext.inArray()  &&  _currentToken!=  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  &&  _currentToken!=  JsonToken.VALUE_STRING)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  &&  _currentToken!=  JsonToken.VALUE_STRING)  {	  if(_parsingContext.inArray()    ||    _currentToken!=    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
156	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _parsingContext.inRoot())  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _parsingContext.inRoot())  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _parsingContext.inRoot())  {	  if(_currToken!=    JsonToken.VALUE_STRING    ||    _parsingContext.inRoot())    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
157	[BUG]  [BUGGY]  if(_parsingContext!=  null  &&  _currToken!=  JsonToken.VALUE_STRING  ||  _parsingContext.inRoot())  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext!=  null  &&  _currToken!=  JsonToken.VALUE_STRING  ||  _parsingContext.inRoot())  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext!=  null  &&  _currToken!=  JsonToken.VALUE_STRING  ||  _parsingContext.inRoot())  {	  if(_currToken!=    JsonToken.VALUE_STRING    ||    _parsingContext.inRoot())    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
158	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||!_tokenIncomplete  &&  _bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||!_tokenIncomplete  &&  _bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||!_tokenIncomplete  &&  _bufferRecyclable)  {	  if(_parsingContext.inRoot()    ||    _bufferRecyclable    &&    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
159	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _cfgPrettyPrinter  ==  null)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  _cfgPrettyPrinter  ==  null)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _cfgPrettyPrinter  ==  null)  {	  if(_parsingContext.inRoot()    ||    _tokenIncomplete    ||    _cfgPrettyPrinter!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
160	[BUG]  [BUGGY]  if(!_parsingContext.inArray()  &&  isEnabled(Feature.QUOTE_SOURCE))  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inArray()  &&  isEnabled(Feature.QUOTE_SOURCE))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inArray()  &&  isEnabled(Feature.QUOTE_SOURCE))  {	  if(!_parsingContext.inArray())    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
161	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ch);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ch);  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ch);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    ptr);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
162	[BUG]  [BUGGY]  if(ptr  <  _inputEnd)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  return  resetInt(false,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(ptr  <  _inputEnd)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  return  resetInt(false,  intLen);  }  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(ptr  <  _inputEnd)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  return  resetInt(false,  intLen);  }	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    ptr);    return    resetInt(false,    intLen);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
163	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  return  resetInt(true,  intLen);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  return  resetInt(true,  intLen);  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  return  resetInt(true,  intLen);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    ptr);    return    resetInt(false,    intLen);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
164	[BUG]  [BUGGY]  if(_parsingContext.inArray()  &&!_tokenIncomplete)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  &&!_tokenIncomplete)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  &&!_tokenIncomplete)  {	  if(_parsingContext.inArray()    ||!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
165	[BUG]  [BUGGY]  if(!_parsingContext.inRootSpace()  &&  startPtr  >=  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRootSpace()  &&  startPtr  >=  _inputEnd)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRootSpace()  &&  startPtr  >=  _inputEnd)  {	  if(!_parsingContext.inRootSpace())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
166	[BUG]  [BUGGY]  if(_parsingContext.inSpace()  &&  _parsingContext.inSpace())  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inSpace()  &&  _parsingContext.inSpace())  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inSpace()  &&  _parsingContext.inSpace())  {	  if(_parsingContext.inSpace()    ||    _parsingContext.inSpace())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
167	[BUG]  [BUGGY]  if(_textBuffer.inRoot()  ||!_tokenIncomplete  ||!_bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_textBuffer.inRoot()  ||!_tokenIncomplete  ||!_bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_textBuffer.inRoot()  ||!_tokenIncomplete  ||!_bufferRecyclable)  {	  if(_parsingContext.inRoot()    ||!_tokenIncomplete    ||!_bufferRecyclable)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
168	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  &&  _tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRoot()  &&  _tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  &&  _tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inRoot()    ||    _tokenIncomplete    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
169	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_ARRAY_VALUE))  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_ARRAY_VALUE))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_ARRAY_VALUE))  {	  if(_parsingContext.inRootSpace()    &&    isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
170	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_NULL_VALUE)||  isEnabled(Feature.DEFAULT_ROOT_SIZE))  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_NULL_VALUE)||  isEnabled(Feature.DEFAULT_ROOT_SIZE))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_NULL_VALUE)||  isEnabled(Feature.DEFAULT_ROOT_SIZE))  {	  if(_parsingContext.inRootSpace()    &&    isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
171	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  &&!_bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRoot()  &&!_bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  &&!_bufferRecyclable)  {	  if(_parsingContext.inRoot()    ||!_bufferRecyclable)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
172	[BUG]  [BUGGY]  if(_parsingContext.inArray()  &&  _currentToken!=  JsonToken.START_SPACE)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  &&  _currentToken!=  JsonToken.START_SPACE)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  &&  _currentToken!=  JsonToken.START_SPACE)  {	  if(_parsingContext.inArray()    ||    _currentToken!=    JsonToken.START_SPACE)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
173	[BUG]  [BUGGY]  if(_currentToken!=  JsonToken.START_SPACE)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_currentToken!=  JsonToken.START_SPACE)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_currentToken!=  JsonToken.START_SPACE)  {	  if(_textBuffer.inRoot()    ||    _currentToken!=    JsonToken.START_SPACE)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
174	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  &&  ch!=  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRoot()  &&  ch!=  JsonToken.VALUE_STRING)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  &&  ch!=  JsonToken.VALUE_STRING)  {	  if(_parsingContext.inRoot()    ||    ch!=    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
175	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  ||  _parsingContext.inRootSpace()  ||  _parsingContext.inRootSpace())  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  ||  _parsingContext.inRootSpace()  ||  _parsingContext.inRootSpace())  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  ||  _parsingContext.inRootSpace()  ||  _parsingContext.inRootSpace())  {	  if(_parsingContext.inRootSpace()    ||    _parsingContext.inRootSpace())    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
176	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING  &&  _parsingContext.inRoot()  &&  _currentToken!=  JsonToken.VALUE_PADDING)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING  &&  _parsingContext.inRoot()  &&  _currentToken!=  JsonToken.VALUE_PADDING)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_currToken!=  JsonToken.VALUE_STRING  &&  _parsingContext.inRoot()  &&  _currentToken!=  JsonToken.VALUE_PADDING)  {	  if(_parsingContext.inRoot()    &&    _currentToken!=    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
177	[BUG]  [BUGGY]  if(_parsingContext.inArray()  &&(ch  ==  INT_PERIOD  ||  ch  ==  INT_E))  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  &&(ch  ==  INT_PERIOD  ||  ch  ==  INT_E))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  &&(ch  ==  INT_PERIOD  ||  ch  ==  INT_E))  {	  if(_parsingContext.inRootSpace()    &&(ch    ==    INT_PERIOD    ||    ch    ==    INT_E))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
178	[BUG]  [BUGGY]  if(!_parsingContext.inRootSpace()  &&(ch  ==  INT_PERIOD  ||  ch  ==  INT_E))  {  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRootSpace()  &&(ch  ==  INT_PERIOD  ||  ch  ==  INT_E))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRootSpace()  &&(ch  ==  INT_PERIOD  ||  ch  ==  INT_E))  {	  if(_parsingContext.inRootSpace()    &&(ch    ==    INT_PERIOD    ||    ch    ==    INT_E))    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
179	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING  &&  _tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING  &&  _tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_currToken!=  JsonToken.VALUE_STRING  &&  _tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inRoot()    ||    _tokenIncomplete    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
180	[BUG]  [BUGGY]  if(_textBuffer.inRoot()  ||!_tokenIncomplete  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_textBuffer.inRoot()  ||!_tokenIncomplete  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_textBuffer.inRoot()  ||!_tokenIncomplete  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_textBuffer.inRoot()    ||!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
181	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  &&!_tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRoot()  &&!_tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  &&!_tokenIncomplete  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!_parsingContext.inRoot()    &&!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
182	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  &&!_tokenIncomplete  &&  Character.isWhitespace(ch))  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRoot()  &&!_tokenIncomplete  &&  Character.isWhitespace(ch))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  &&!_tokenIncomplete  &&  Character.isWhitespace(ch))  {	  if(!_parsingContext.inRoot()    &&!_tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
183	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  &&  Character.isDigit(ch)&&  Character.isWhitespace(ch))  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRoot()  &&  Character.isDigit(ch)&&  Character.isWhitespace(ch))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  &&  Character.isDigit(ch)&&  Character.isWhitespace(ch))  {	  if(!_parsingContext.inRoot()    &&    Character.isDigit(ch))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
184	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  intLen);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  intLen);  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  intLen);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    ptr);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
185	[BUG]  [BUGGY]  if(!_parsingContext.inRoot()  ||  _parsingContext.inRoot()  ||  _bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRoot()  ||  _parsingContext.inRoot()  ||  _bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRoot()  ||  _parsingContext.inRoot()  ||  _bufferRecyclable)  {	  if(_parsingContext.inRoot()    ||    _parsingContext.inRoot()    ||    _bufferRecyclable)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
186	[BUG]  [BUGGY]  if(!_parsingContext.inArray()  &&  Character.isWhitespace(ch))  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inArray()  &&  Character.isWhitespace(ch))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inArray()  &&  Character.isWhitespace(ch))  {	  if(!_parsingContext.inArray())    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
187	[BUG]  [BUGGY]  if(_textBuffer.inArray()  ||  _currentToken!=  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_textBuffer.inArray()  ||  _currentToken!=  JsonToken.VALUE_STRING)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_textBuffer.inArray()  ||  _currentToken!=  JsonToken.VALUE_STRING)  {	  if(_parsingContext.inArray()    ||    _currentToken!=    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
188	[BUG]  [BUGGY]  if(_parsingContext.inArray()  ||  _tokenIncomplete  ||!_bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  ||  _tokenIncomplete  ||!_bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  ||  _tokenIncomplete  ||!_bufferRecyclable)  {	  if(_parsingContext.inArray()    ||    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
189	[BUG]  [BUGGY]  if(_parsingContext.inArray()  ||  _tokenIncomplete  ||  _cfgPrettyPrinter!=  null)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  ||  _tokenIncomplete  ||  _cfgPrettyPrinter!=  null)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  ||  _tokenIncomplete  ||  _cfgPrettyPrinter!=  null)  {	  if(_parsingContext.inArray()    ||    _tokenIncomplete)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
190	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  <  Integer.MIN_VALUE  ||  _parsingContext.inRoot()  >  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  <  Integer.MIN_VALUE  ||  _parsingContext.inRoot()  >  Integer.MAX_VALUE)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  <  Integer.MIN_VALUE  ||  _parsingContext.inRoot()  >  Integer.MAX_VALUE)  {	  if(_parsingContext.inRoot()    ||    _parsingContext.inRoot()    <    =    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
191	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  <  Integer.MIN_VALUE  ||  _parsingContext.inRoot()  <  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  <  Integer.MIN_VALUE  ||  _parsingContext.inRoot()  <  Integer.MAX_VALUE)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  <  Integer.MIN_VALUE  ||  _parsingContext.inRoot()  <  Integer.MAX_VALUE)  {	  if(_parsingContext.inRoot()    ||    _parsingContext.inRoot()    <    =    Integer.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
192	[BUG]  [BUGGY]  if(_textBuffer.inRoot()  ||  _tokenIncomplete  ||  _bufferRecyclable)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_textBuffer.inRoot()  ||  _tokenIncomplete  ||  _bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_textBuffer.inRoot()  ||  _tokenIncomplete  ||  _bufferRecyclable)  {	  if(_parsingContext.inRoot()    ||    _tokenIncomplete    ||    _bufferRecyclable)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
193	[BUG]  [BUGGY]  if(!_parsingContext.inRootSpace()  &&  Character.isWhitespace(ch))  {  [CE]  '('  expected  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(!_parsingContext.inRootSpace()  &&  Character.isWhitespace(ch))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(!_parsingContext.inRootSpace()  &&  Character.isWhitespace(ch))  {	  if(!_parsingContext.inRootSpace())    {    	non-compiled	[CE]  '('  expected	18	None	replace
194	[BUG]  [BUGGY]  if(_parsingContext.inArray()  ||!_parsingContext.inRoot())  {  [CE]  '('  expected  [FE]            ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  ||!_parsingContext.inRoot())  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  ||!_parsingContext.inRoot())  {	  if(_parsingContext.inRoot()    ||!_parsingContext.inRoot())    {    	non-compiled	[CE]  '('  expected	15	None	replace
195	[BUG]  [BUGGY]  if(_parsingContext.inArray()  &&  isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  '('  expected  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  &&  isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  &&  isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(_parsingContext.inRootSpace()    &&    isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  '('  expected	35	None	replace
196	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_NULL_VALUE)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  '('  expected  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_NULL_VALUE)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_NULL_VALUE)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inRootSpace()    &&    isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  '('  expected	35	None	replace
197	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  ||  _tokenIncomplete  ||!_bufferRecyclable)  {  [CE]  '('  expected  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  ||  _tokenIncomplete  ||!_bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  ||  _tokenIncomplete  ||!_bufferRecyclable)  {	  if(_parsingContext.inRootSpace()    ||    _tokenIncomplete)    {    	non-compiled	[CE]  '('  expected	46	None	replace
198	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  ||  _tokenIncomplete  ||  _cfgPrettyPrinter!=  null)  {  [CE]  '('  expected  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  ||  _tokenIncomplete  ||  _cfgPrettyPrinter!=  null)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  ||  _tokenIncomplete  ||  _cfgPrettyPrinter!=  null)  {	  if(_parsingContext.inRootSpace()    ||    _tokenIncomplete)    {    	non-compiled	[CE]  '('  expected	46	None	replace
199	[BUG]  [BUGGY]  if(ptr  >  0)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  return  resetInt(false,  intLen);  }  [CE]  '('  expected  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(ptr  >  0)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  return  resetInt(false,  intLen);  }  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(ptr  >  0)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  return  resetInt(false,  intLen);  }	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    ptr);    return    resetInt(false,    intLen);    	non-compiled	[CE]  '('  expected	26	None	replace
200	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  return  resetInt(false,  intLen);  }  [CE]  '('  expected  [FE]                        ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(ptr  >=  _inputEnd)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  return  resetInt(false,  intLen);  }  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(ptr  >=  _inputEnd)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  return  resetInt(false,  intLen);  }	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    ptr);    return    resetInt(false,    intLen);    	non-compiled	[CE]  '('  expected	26	None	replace
201	[BUG]  [BUGGY]  if(_parsingContext.inArray()  ||!_tokenIncomplete  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  '('  expected  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  ||!_tokenIncomplete  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  ||!_tokenIncomplete  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inArray()    ||!_tokenIncomplete)    {    	non-compiled	[CE]  '('  expected	50	None	replace
202	[BUG]  [BUGGY]  if(_parsingContext.inArray()  ||!_tokenIncomplete  ||!_bufferRecyclable)  {  [CE]  '('  expected  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  ||!_tokenIncomplete  ||!_bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  ||!_tokenIncomplete  ||!_bufferRecyclable)  {	  if(_parsingContext.inArray()    ||!_tokenIncomplete)    {    	non-compiled	[CE]  '('  expected	50	None	replace
203	[BUG]  [BUGGY]  if(_parsingContext.inArray()  ||!_tokenIncomplete  ||  _bufferRecyclable)  {  [CE]  '('  expected  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  ||!_tokenIncomplete  ||  _bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  ||!_tokenIncomplete  ||  _bufferRecyclable)  {	  if(_parsingContext.inArray()    ||!_tokenIncomplete)    {    	non-compiled	[CE]  '('  expected	50	None	replace
204	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  ||!_tokenIncomplete  ||!_bufferRecyclable)  {  [CE]  '('  expected  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  ||!_tokenIncomplete  ||!_bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  ||!_tokenIncomplete  ||!_bufferRecyclable)  {	  if(_parsingContext.inRootSpace()    ||!_tokenIncomplete)    {    	non-compiled	[CE]  '('  expected	45	None	replace
205	[BUG]  [BUGGY]  if(_parsingContext.inArray()  ||  _bufferRecyclable.inArray())  {  [CE]  '('  expected  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  ||  _bufferRecyclable.inArray())  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  ||  _bufferRecyclable.inArray())  {	  if(_parsingContext.inArray())    {    	non-compiled	[CE]  '('  expected	2	None	replace
206	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _tokenIncomplete  ||  _cfgPrettyPrinter  ==  null)  {  [CE]  '('  expected  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  _tokenIncomplete  ||  _cfgPrettyPrinter  ==  null)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _tokenIncomplete  ||  _cfgPrettyPrinter  ==  null)  {	  if(_parsingContext.inRoot()    ||    _tokenIncomplete    ||    _cfgPrettyPrinter!=    null)    {    	non-compiled	[CE]  '('  expected	49	None	replace
207	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _currToken!=  JsonToken.VALUE_STRING)  {  [CE]  '('  expected  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  _currToken!=  JsonToken.VALUE_STRING)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _currToken!=  JsonToken.VALUE_STRING)  {	  if(_currToken!=    JsonToken.VALUE_STRING    ||    _parsingContext.inRoot())    {    	non-compiled	[CE]  '('  expected	36	None	replace
208	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  <  =  Integer.MAX_VALUE)  {  [CE]  '('  expected  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  <  =  Integer.MAX_VALUE)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  <  =  Integer.MAX_VALUE)  {	  if(_parsingContext.inRoot()    ||    _parsingContext.inRoot()    <    =    Integer.MAX_VALUE)    {    	non-compiled	[CE]  '('  expected	12	None	replace
209	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  <  Integer.MAX_VALUE)  {  [CE]  '('  expected  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  <  Integer.MAX_VALUE)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  <  Integer.MAX_VALUE)  {	  if(_parsingContext.inRoot()    ||    _parsingContext.inRoot()    <    =    Integer.MAX_VALUE)    {    	non-compiled	[CE]  '('  expected	12	None	replace
210	[BUG]  [BUGGY]  if(ptr  <  _inputEnd)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  false,  intLen);  return  resetInt(false,  intLen);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(ptr  <  _inputEnd)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  false,  intLen);  return  resetInt(false,  intLen);  }  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(ptr  <  _inputEnd)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  false,  intLen);  return  resetInt(false,  intLen);  }	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    ptr,    false,    intLen);    return    resetInt(false,    intLen);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
211	[BUG]  [BUGGY]  if(ptr  >  0)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  false,  intLen);  return  resetInt(false,  intLen);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(ptr  >  0)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  false,  intLen);  return  resetInt(false,  intLen);  }  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(ptr  >  0)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr,  false,  intLen);  return  resetInt(false,  intLen);  }	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    ptr,    false,    intLen);    return    resetInt(false,    intLen);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
212	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  &&(ch  <  =  Integer.MAX_VALUE  ||  ch  >  Integer.MIN_VALUE))  {  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  &&(ch  <  =  Integer.MAX_VALUE  ||  ch  >  Integer.MIN_VALUE))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  &&(ch  <  =  Integer.MAX_VALUE  ||  ch  >  Integer.MIN_VALUE))  {	  if(_parsingContext.inRootSpace()    &&(ch    <    =    Integer.MIN_VALUE    ||    ch    >    Integer.MAX_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
213	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.VISIBILITY_MISMATCH))  {	  if(_parsingContext.inRootSpace()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
214	[BUG]  [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.AUTO_CLOSE_PADDING)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.AUTO_CLOSE_PADDING)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRootSpace()  &&  isEnabled(Feature.AUTO_CLOSE_PADDING)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inRootSpace()    &&    isEnabled(Feature.AUTO_CLOSE_PADDING))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
215	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _parsingContext.inSpace())  {  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  _parsingContext.inSpace())  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _parsingContext.inSpace())  {	  if(_parsingContext.inSpace()    ||    _parsingContext.inSpace())    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
216	[BUG]  [BUGGY]  if(_parsingContext.inArray()  ||  _parsingContext.inSpace())  {  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  ||  _parsingContext.inSpace())  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  ||  _parsingContext.inSpace())  {	  if(_parsingContext.inSpace()    ||    _parsingContext.inSpace())    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
217	[BUG]  [BUGGY]  if(_parsingContext.inArray()  ||  _currentToken!=  JsonToken.START_ARRAY)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  ||  _currentToken!=  JsonToken.START_ARRAY)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  ||  _currentToken!=  JsonToken.START_ARRAY)  {	  if(_parsingContext.inArray()    ||    _currentToken!=    JsonToken.START_SPACE)    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
218	[BUG]  [BUGGY]  if(_textBuffer.inRoot()  ||  _currentToken!=  JsonToken.END_ARRAY)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_textBuffer.inRoot()  ||  _currentToken!=  JsonToken.END_ARRAY)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_textBuffer.inRoot()  ||  _currentToken!=  JsonToken.END_ARRAY)  {	  if(_textBuffer.inRoot()    ||    _currentToken!=    JsonToken.START_SPACE)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
219	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  &&  _tokenIncomplete  &&  _bufferRecyclable)  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  &&  _tokenIncomplete  &&  _bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  &&  _tokenIncomplete  &&  _bufferRecyclable)  {	  if(_parsingContext.inRoot()    ||    _bufferRecyclable    &&    _tokenIncomplete)    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
220	[BUG]  [BUGGY]  if(_parsingContext.inArray()  ||  _tokenIncomplete  &&  _bufferRecyclable)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inArray()  ||  _tokenIncomplete  &&  _bufferRecyclable)  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inArray()  ||  _tokenIncomplete  &&  _bufferRecyclable)  {	  if(_parsingContext.inRoot()    ||    _bufferRecyclable    &&    _tokenIncomplete)    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
221	[BUG]  [BUGGY]  if(_parsingContext.inRoot()  ||  _currentToken  ==  JsonToken.VALUE_STRING  &&  Character.isWhitespace(ch))  {  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      ++intLen;  }  if  (ch  ==  INT_PERIOD  ||  ch  ==  INT_e  ||  ch  ==  INT_E)  {  _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;        [BUGGY]  if(_parsingContext.inRoot()  ||  _currentToken  ==  JsonToken.VALUE_STRING  &&  Character.isWhitespace(ch))  {  [BUGGY]      _verifyRootSpace(ch);  }  int  len  =  ptr-startPtr;  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	885	885	2	replace	if(_parsingContext.inRoot()  ||  _currentToken  ==  JsonToken.VALUE_STRING  &&  Character.isWhitespace(ch))  {	  if(_parsingContext.inRoot()    ||    _currentToken    ==    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
