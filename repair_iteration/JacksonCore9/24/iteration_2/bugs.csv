bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  case  ID_FIELD_NAME:  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  case  ID_FIELD_NAME:  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	case  ID_FIELD_NAME:	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  ||  t.id()  ==  JsonToken.FIELD_NAME;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  ||  t.id()  ==  JsonToken.FIELD_NAME;  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	||  t.id()  ==  JsonToken.FIELD_NAME;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  return  _textBuffer.contentsAsFieldName(t.id());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  _textBuffer.contentsAsFieldName(t.id());  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  _textBuffer.contentsAsFieldName(t.id());	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
4	[BUG]  [BUGGY]  return  t.getCurrentName()  +  1;  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  t.getCurrentName()  +  1;  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  t.getCurrentName()  +  1;	  return    _parsingContext.getCurrentName()    +    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  return  _parsingContext.getSimpleName()  +  1;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  _parsingContext.getSimpleName()  +  1;  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  _parsingContext.getSimpleName()  +  1;	  return    _parsingContext.getCurrentName()    +    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  return  t.getFieldName();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  t.getFieldName();  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  t.getFieldName();	  return    _parsingContext.getFieldName();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
7	[BUG]  [BUGGY]  return  _parsingContext.getFieldName()  +  1;  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  _parsingContext.getFieldName()  +  1;  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  _parsingContext.getFieldName()  +  1;	  return    _parsingContext.getFieldName();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
8	[BUG]  [BUGGY]  return  t.contentsAsFieldName();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  t.contentsAsFieldName();  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  t.contentsAsFieldName();	  return    _textBuffer.contentsAsFieldName();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
9	[BUG]  [BUGGY]  return  _textBuffer.contentsAsFieldName(t);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  _textBuffer.contentsAsFieldName(t);  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  _textBuffer.contentsAsFieldName(t);	  return    _textBuffer.contentsAsFieldName();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
10	[BUG]  [BUGGY]  return  _textBuffer.contentsAsFieldName()  +  1;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  _textBuffer.contentsAsFieldName()  +  1;  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  _textBuffer.contentsAsFieldName()  +  1;	  return    _textBuffer.contentsAsFieldName();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
11	[BUG]  [BUGGY]  return  _parsingContext.getText2(t,  _textBuffer);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  _parsingContext.getText2(t,  _textBuffer);  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  _parsingContext.getText2(t,  _textBuffer);	  return    _parsingContext.getText2(t);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
12	[BUG]  [BUGGY]  return  _parsingContext.getText1(t);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  _parsingContext.getText1(t);  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  _parsingContext.getText1(t);	  return    _parsingContext.getText2(t);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
13	[BUG]  [BUGGY]  return  _parsingContext.getText2(t,  _icLatin1);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  _parsingContext.getText2(t,  _icLatin1);  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  _parsingContext.getText2(t,  _icLatin1);	  return    _parsingContext.getText2(t);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
14	[BUG]  [BUGGY]  return  t.contentsAsString();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  t.contentsAsString();  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  t.contentsAsString();	  return    _textBuffer.contentsAsString();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
15	[BUG]  [BUGGY]  return  _textBuffer.contentsAsString()  +  1;  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  _textBuffer.contentsAsString()  +  1;  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  _textBuffer.contentsAsString()  +  1;	  return    _textBuffer.contentsAsString();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
16	[BUG]  [BUGGY]  return  _parsingContext.getText1();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  _parsingContext.getText1();  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  _parsingContext.getText1();	  return    _parsingContext.getText2();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  return  _parsingContext.getText2(t.id());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  _parsingContext.getText2(t.id());  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  _parsingContext.getText2(t.id());	  return    _parsingContext.getText2();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
18	[BUG]  [BUGGY]  return  t.getFullName();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  t.getFullName();  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  t.getFullName();	  return    _parsingContext.getFullName();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
19	[BUG]  [BUGGY]  return  _parsingContext.getFullName()  +  1;  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  _parsingContext.getFullName()  +  1;  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  _parsingContext.getFullName()  +  1;	  return    _parsingContext.getFullName();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
20	[BUG]  [BUGGY]  return  _textBuffer.getCurrentName()  +  1;  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  _textBuffer.getCurrentName()  +  1;  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  _textBuffer.getCurrentName()  +  1;	  return    _parsingContext.getCurrentName()    +    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
21	[BUG]  [BUGGY]  case  ID_FIELD_NAME:  return  _textBuffer.contentsAsString();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  case  ID_FIELD_NAME:  return  _textBuffer.contentsAsString();  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	case  ID_FIELD_NAME:  return  _textBuffer.contentsAsString();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
22	[BUG]  [BUGGY]  return  _textBuffer.getText2();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  _textBuffer.getText2();  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  _textBuffer.getText2();	  return    _parsingContext.getText2();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
23	[BUG]  [BUGGY]  return  _textBuffer.contentsAsText2();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  _textBuffer.contentsAsText2();  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  _textBuffer.contentsAsText2();	  return    _textBuffer.contentsAsString();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
24	[BUG]  [BUGGY]  return  _textBuffer.getFieldName();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  _textBuffer.getFieldName();  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  _textBuffer.getFieldName();	  return    _parsingContext.getFieldName();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
25	[BUG]  [BUGGY]  return  _parsingContext.getFieldName(t);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  _parsingContext.getFieldName(t);  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  _parsingContext.getFieldName(t);	  return    _parsingContext.getFieldName();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
26	[BUG]  [BUGGY]  return  _textBuffer.getText2(t);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  _textBuffer.getText2(t);  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  _textBuffer.getText2(t);	  return    _parsingContext.getText2(t);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
27	[BUG]  [BUGGY]  return  _textBuffer.getFullName();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  _textBuffer.getFullName();  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  _textBuffer.getFullName();	  return    _parsingContext.getFullName();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
28	[BUG]  [BUGGY]  return  t.asString();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  t.asString();  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  t.asString();	  return    _textBuffer.contentsAsString();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
29	[BUG]  [BUGGY]  case  ID_FIELD_NAME:  return  t.asString();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  case  ID_FIELD_NAME:  return  t.asString();  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	case  ID_FIELD_NAME:  return  t.asString();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
30	[BUG]  [BUGGY]  return  t.getText2(_parsingContext);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  t.getText2(_parsingContext);  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  t.getText2(_parsingContext);	  return    _parsingContext.getText2(t);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
31	[BUG]  [BUGGY]  return  t.asFieldName();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  t.asFieldName();  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  t.asFieldName();	  return    _textBuffer.contentsAsFieldName();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
32	[BUG]  [BUGGY]  return  t.getText2();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    protected  final  String  _getText2(JsonToken  t)  {  if  (t  ==  null)  {  return  null;  }  switch  (t.id())  {  case  ID_FIELD_NAME:    [BUGGY]  return  t.getText2();  [BUGGY]      case  ID_STRING:  case  ID_NUMBER_INT:  case  ID_NUMBER_FLOAT:  return  _textBuffer.contentsAsString();  default:  return  t.asString();  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _getText2  [RETURN_TYPE]  String  JsonToken  t  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	275	275	2	replace	return  t.getText2();	  return    _parsingContext.getText2();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
