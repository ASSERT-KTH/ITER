bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  parent  ==  if(i  ==  INT_QUOTE)  {  return  findName(q,  3);  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  parent  ==  if(i  ==  INT_QUOTE)  {  return  findName(q,  3);  }  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	parent  ==  if(i  ==  INT_QUOTE)  {  return  findName(q,  3);  }	  if(i    ==    INT_QUOTE)    {    return    findName(q,    3);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
2	[BUG]  [BUGGY]  parent  ==  if(i  ==  INT_QUOTE  ||  i  ==  INT_QUOTE)  {  return  findName(q,  3);  }  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  parent  ==  if(i  ==  INT_QUOTE  ||  i  ==  INT_QUOTE)  {  return  findName(q,  3);  }  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	parent  ==  if(i  ==  INT_QUOTE  ||  i  ==  INT_QUOTE)  {  return  findName(q,  3);  }	  if(i    ==    INT_QUOTE)    {    return    findName(q,    3);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
3	[BUG]  [BUGGY]  parent  ==  if(i  ==  INT_QUOTE)  {  return  parseName(q,  3);  }  [CE]  <identifier>  expected  [FE]                              ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  parent  ==  if(i  ==  INT_QUOTE)  {  return  parseName(q,  3);  }  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	parent  ==  if(i  ==  INT_QUOTE)  {  return  parseName(q,  3);  }	  if(i    ==    INT_QUOTE)    {    return    findName(q,    3);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
4	[BUG]  [BUGGY]  return  parseName(q,  i);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  return  parseName(q,  i);  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	return  parseName(q,  i);	  return    parseName(q,    4);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
5	[BUG]  [BUGGY]  parent  ==  if(i  ==  INT_QUOTE)  {  return  findName(q,  2);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  parent  ==  if(i  ==  INT_QUOTE)  {  return  findName(q,  2);  }  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	parent  ==  if(i  ==  INT_QUOTE)  {  return  findName(q,  2);  }	  if(i    ==    INT_QUOTE)    {    return    findName(q,    2);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
6	[BUG]  [BUGGY]  parent  ==  if(i  ==  INT_QUOTE  ||  i  ==  INT_QUOTE)  {  return  findName(q,  2);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  parent  ==  if(i  ==  INT_QUOTE  ||  i  ==  INT_QUOTE)  {  return  findName(q,  2);  }  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	parent  ==  if(i  ==  INT_QUOTE  ||  i  ==  INT_QUOTE)  {  return  findName(q,  2);  }	  if(i    ==    INT_QUOTE)    {    return    findName(q,    2);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
7	[BUG]  [BUGGY]  parent  ==  if(i  ==  INT_QUOTE)  {  return  parseName(q,  1);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  parent  ==  if(i  ==  INT_QUOTE)  {  return  parseName(q,  1);  }  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	parent  ==  if(i  ==  INT_QUOTE)  {  return  parseName(q,  1);  }	  if(i    ==    INT_QUOTE)    {    return    parseName(q,    1);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
8	[BUG]  [BUGGY]  parent!=  if(i  ==  INT_QUOTE)  {  return  parseName(q,  1);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  parent!=  if(i  ==  INT_QUOTE)  {  return  parseName(q,  1);  }  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	parent!=  if(i  ==  INT_QUOTE)  {  return  parseName(q,  1);  }	  if(i    ==    INT_QUOTE)    {    return    parseName(q,    1);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
9	[BUG]  [BUGGY]  bucket  ==  0)  {  return  parseName(q,  1);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  bucket  ==  0)  {  return  parseName(q,  1);  }  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	bucket  ==  0)  {  return  parseName(q,  1);  }	  if(i    ==    INT_QUOTE)    {    return    parseName(q,    1);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
10	[BUG]  [BUGGY]  parent  ==  if(i  ==  INT_QUOTE)  {  return  findName(q,  1);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  parent  ==  if(i  ==  INT_QUOTE)  {  return  findName(q,  1);  }  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	parent  ==  if(i  ==  INT_QUOTE)  {  return  findName(q,  1);  }	  if(i    ==    INT_QUOTE)    {    return    findName(q,    1);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
11	[BUG]  [BUGGY]  parent  ==  if(i  ==  INT_QUOTE  ||  i  ==  INT_QUOTE)  {  return  findName(q,  1);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  parent  ==  if(i  ==  INT_QUOTE  ||  i  ==  INT_QUOTE)  {  return  findName(q,  1);  }  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	parent  ==  if(i  ==  INT_QUOTE  ||  i  ==  INT_QUOTE)  {  return  findName(q,  1);  }	  if(i    ==    INT_QUOTE)    {    return    findName(q,    1);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
12	[BUG]  [BUGGY]  parent  ==  if(i  ==  INT_QUOTE)  {  return  findName(q,  0);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  parent  ==  if(i  ==  INT_QUOTE)  {  return  findName(q,  0);  }  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	parent  ==  if(i  ==  INT_QUOTE)  {  return  findName(q,  0);  }	  if(i    ==    INT_QUOTE)    {    return    findName(q,    0);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
13	[BUG]  [BUGGY]  return  parseName(i,  0);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  return  parseName(i,  0);  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	return  parseName(i,  0);	  return    parseName(q,    0);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
14	[BUG]  [BUGGY]  bucket  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  bucket  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	bucket  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(i    ==    INT_QUOTE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
15	[BUG]  [BUGGY]  bucket!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  bucket!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	bucket!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(i    ==    INT_QUOTE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
16	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ");  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ");  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	aughtExceptionHandler.throwAsUnquotedException( " ");	  if(i    ==    INT_QUOTE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
17	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [CE]  <identifier>  expected  [FE]                              ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	aughtExceptionHandler.throwAsIOException( " ");	  if(i    ==    INT_QUOTE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
18	[BUG]  [BUGGY]  aughtExceptionHandler.throwUnquotedException( " ");  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  aughtExceptionHandler.throwUnquotedException( " ");  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	aughtExceptionHandler.throwUnquotedException( " ");	  if(i    ==    INT_QUOTE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
19	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(i);  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  aughtExceptionHandler.handleMissingName(i);  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	aughtExceptionHandler.handleMissingName(i);	  if(i    ==    INT_QUOTE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
20	[BUG]  [BUGGY]  parent  ==  0)  {  return  findName(q,  0);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  parent  ==  0)  {  return  findName(q,  0);  }  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	parent  ==  0)  {  return  findName(q,  0);  }	  if(i    ==    INT_QUOTE)    {    return    findName(q,    0);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
21	[BUG]  [BUGGY]  return  findName(q,  i);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  return  findName(q,  i);  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	return  findName(q,  i);	  if(i    ==    INT_QUOTE)    {    return    findName(q,    0);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
22	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(q,  i);  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  aughtExceptionHandler.handleMissingName(q,  i);  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	aughtExceptionHandler.handleMissingName(q,  i);	  if(i    ==    INT_QUOTE)    {    return    findName(q,    3);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
23	[BUG]  [BUGGY]  parent  ==  if(i  ==  INT_QUOTE)  {  return  parseName(q,  2);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  parent  ==  if(i  ==  INT_QUOTE)  {  return  parseName(q,  2);  }  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	parent  ==  if(i  ==  INT_QUOTE)  {  return  parseName(q,  2);  }	  if(i    ==    INT_QUOTE)    {    return    parseName(q,    1);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
24	[BUG]  [BUGGY]  parent  ==  _parseName(q,  1);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  parent  ==  _parseName(q,  1);  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	parent  ==  _parseName(q,  1);	  if(i    ==    INT_QUOTE)    {    return    parseName(q,    1);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
25	[BUG]  [BUGGY]  parent  ==  0)  {  return  parseName(q,  1);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  parent  ==  0)  {  return  parseName(q,  1);  }  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	parent  ==  0)  {  return  parseName(q,  1);  }	  if(i    ==    INT_QUOTE)    {    return    parseName(q,    1);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
26	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(q,  1);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  aughtExceptionHandler.handleMissingName(q,  1);  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	aughtExceptionHandler.handleMissingName(q,  1);	  if(i    ==    INT_QUOTE)    {    return    parseName(q,    1);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
27	[BUG]  [BUGGY]  [Delete]  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  [Delete]  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	[Delete]	  if(i    ==    INT_QUOTE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
28	[BUG]  [BUGGY]  aughtInvalidArgumentException( " ");  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      return  findName(q,  3);  }  return  parseName(q,  i,  3);  }  if  (i  ==  INT_QUOTE)  {  //  2  byte/char  case  or  broken  return  findName(q,  2);  }  return  parseName(q,  i,  2);  }  if  (i  ==  INT_QUOTE)  {  //  one  byte/char  case  or  broken      [BUGGY]  aughtInvalidArgumentException( " ");  [BUGGY]      }  return  parseName(q,  i,  1);  }  if  (q  ==  INT_QUOTE)  {  //  special  case,       "     "  return       "     ";  }  return  parseName(0,  q,  0);  //  quoting  or  invalid  char  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  input  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  ByteQuadsCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _quadBuffer  codes  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  col  count  decodedData  defValue  defaultValue  end  expLen  features  fractLen  i  intLen  intPartLength  integerPartLength  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  q  space  start  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.5	1695	1695	2	replace	aughtInvalidArgumentException( " ");	  if(i    ==    INT_QUOTE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
