bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  len  =  startPtr-startPtr  +  1L;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  int  len  =  startPtr-startPtr  +  1L;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	int  len  =  startPtr-startPtr  +  1L;	  int    len    =    ptr-startPtr    +    1L;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
2	[BUG]  [BUGGY]  int  len  =  _inputBuffer.length-startPtr  +  1;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  int  len  =  _inputBuffer.length-startPtr  +  1;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	int  len  =  _inputBuffer.length-startPtr  +  1;	  int    len    =    startPtr-startPtr    +    1;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
3	[BUG]  [BUGGY]  Integer  len  =  _inputBuffer.readInt(ch);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  Integer  len  =  _inputBuffer.readInt(ch);  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	Integer  len  =  _inputBuffer.readInt(ch);	  Integer    len    =    _inputBuffer.readInt();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
4	[BUG]  [BUGGY]  Integer  len  =  _inputBuffer.readFully(ch);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  Integer  len  =  _inputBuffer.readFully(ch);  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	Integer  len  =  _inputBuffer.readFully(ch);	  Integer    len    =    _inputBuffer.readInt();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
5	[BUG]  [BUGGY]  int  len  =  ch-inputPtr;  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  int  len  =  ch-inputPtr;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	int  len  =  ch-inputPtr;	  int    len    =    ch-ptr;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
6	[BUG]  [BUGGY]  char  len  =  ch-ptr;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  char  len  =  ch-ptr;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	char  len  =  ch-ptr;	  int    len    =    ch-ptr;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
7	[BUG]  [BUGGY]  int  len  =  _inputBuffer.length-  1;  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  int  len  =  _inputBuffer.length-  1;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	int  len  =  _inputBuffer.length-  1;	  int    len    =    _inputBuffer.length-startPtr;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
8	[BUG]  [BUGGY]  char  len  =  _inputBuffer.length-startPtr;  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  char  len  =  _inputBuffer.length-startPtr;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	char  len  =  _inputBuffer.length-startPtr;	  int    len    =    _inputBuffer.length-startPtr;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
9	[BUG]  [BUGGY]  if(ch  ==  JsonToken.VALUE_NUMBER_INT)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  <  len)  {  return  resetInt  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  ==  JsonToken.VALUE_NUMBER_INT)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  <  len)  {  return  resetInt  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  ==  JsonToken.VALUE_NUMBER_INT)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  <  len)  {  return  resetInt	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(startPtr,    startPtr,    ptr);    if(buf.length    <    len)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
10	[BUG]  [BUGGY]  if(ch  ==  JsonToken.VALUE_NULL)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  <  len)  {  return  resetInt  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  ==  JsonToken.VALUE_NULL)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  <  len)  {  return  resetInt  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  ==  JsonToken.VALUE_NULL)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  <  len)  {  return  resetInt	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(startPtr,    startPtr,    ptr);    if(buf.length    <    len)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
11	[BUG]  [BUGGY]  if(ch  <  0x7F)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  <  len)  {  return  resetInt  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  <  0x7F)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  <  len)  {  return  resetInt  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  <  0x7F)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  <  len)  {  return  resetInt	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(startPtr,    startPtr,    ptr);    if(buf.length    <    len)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
12	[BUG]  [BUGGY]  if(ch  ==  JsonToken.VALUE_NUMBER_INT)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  <  len)  {  return  resetIn  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  ==  JsonToken.VALUE_NUMBER_INT)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  <  len)  {  return  resetIn  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  ==  JsonToken.VALUE_NUMBER_INT)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  <  len)  {  return  resetIn	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(startPtr,    startPtr,    ptr);    if(buf.length    <    len)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
13	[BUG]  [BUGGY]  char  len  =  ch-startPtr  +  1;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  char  len  =  ch-startPtr  +  1;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	char  len  =  ch-startPtr  +  1;	  int    len    =    ch-startPtr    +    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
14	[BUG]  [BUGGY]  if(ptr  >=  _parsingContext.getDelimiter())  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.resetWithShared  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ptr  >=  _parsingContext.getDelimiter())  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.resetWithShared  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ptr  >=  _parsingContext.getDelimiter())  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.resetWithShared	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(startPtr,    startPtr,    len);    if(buf.length    >    0)    {    _textBuffer.resetWithShared(_inputBuffer,    startPtr,    	non-compiled	[CE]  <identifier>  expected	7	None	replace
15	[BUG]  [BUGGY]  if(ptr  >=  _parsingContext.getDelimiter())  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _text  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ptr  >=  _parsingContext.getDelimiter())  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _text  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ptr  >=  _parsingContext.getDelimiter())  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _text	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(startPtr,    startPtr,    len);    if(buf.length    >    0)    {    _textBuffer.resetWithShared(_inputBuffer,    startPtr,    	non-compiled	[CE]  <identifier>  expected	7	None	replace
16	[BUG]  [BUGGY]  if(ptr  >=  _parsingContext.getDelimiter())  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.resetWithShared(_in  [CE]  <identifier>  expected  [FE]                              ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ptr  >=  _parsingContext.getDelimiter())  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.resetWithShared(_in  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ptr  >=  _parsingContext.getDelimiter())  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.resetWithShared(_in	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(startPtr,    startPtr,    len);    if(buf.length    >    0)    {    _textBuffer.resetWithShared(_inputBuffer,    startPtr,    	non-compiled	[CE]  <identifier>  expected	7	None	replace
17	[BUG]  [BUGGY]  if(ptr  >=  _parsingContext.getDelimiter())  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.re  [CE]  <identifier>  expected  [FE]                                ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ptr  >=  _parsingContext.getDelimiter())  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.re  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ptr  >=  _parsingContext.getDelimiter())  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.re	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(startPtr,    startPtr,    len);    if(buf.length    >    0)    {    _textBuffer.resetWithShared(_inputBuffer,    startPtr,    	non-compiled	[CE]  <identifier>  expected	7	None	replace
18	[BUG]  [BUGGY]  int  len  =  ch-startLen;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  int  len  =  ch-startLen;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	int  len  =  ch-startLen;	  int    len    =    startPtr-startLen;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
19	[BUG]  [BUGGY]  int  len  =  _inputPtr-startLen;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  int  len  =  _inputPtr-startLen;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	int  len  =  _inputPtr-startLen;	  int    len    =    startPtr-startLen;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
20	[BUG]  [BUGGY]  int  len  =  _inputBuffer.length-startLen;  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  int  len  =  _inputBuffer.length-startLen;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	int  len  =  _inputBuffer.length-startLen;	  int    len    =    startPtr-startLen;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
21	[BUG]  [BUGGY]  int  len  =  startPtr-startLen  +  1;  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  int  len  =  startPtr-startLen  +  1;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	int  len  =  startPtr-startLen  +  1;	  int    len    =    startPtr-startLen;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
22	[BUG]  [BUGGY]  int  len  =  _inputEnd-startPtr  +  1;  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  int  len  =  _inputEnd-startPtr  +  1;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	int  len  =  _inputEnd-startPtr  +  1;	  int    len    =    _inputEnd-startPtr;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
23	[BUG]  [BUGGY]  char  len  =  _inputEnd-startPtr;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  char  len  =  _inputEnd-startPtr;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	char  len  =  _inputEnd-startPtr;	  int    len    =    _inputEnd-startPtr;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
24	[BUG]  [BUGGY]  int  len  =  startPtr-_inputEnd;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  int  len  =  startPtr-_inputEnd;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	int  len  =  startPtr-_inputEnd;	  int    len    =    _inputEnd-startPtr;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
25	[BUG]  [BUGGY]  int  len  =  _inputStart-startPtr;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  int  len  =  _inputStart-startPtr;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	int  len  =  _inputStart-startPtr;	  int    len    =    _inputEnd-startPtr;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
26	[BUG]  [BUGGY]  char  len  =  _inputPtr-startPtr  +  1;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  char  len  =  _inputPtr-startPtr  +  1;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	char  len  =  _inputPtr-startPtr  +  1;	  int    len    =    _inputPtr-startPtr    +    1;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
27	[BUG]  [BUGGY]  char  len  =  _inputBuffer.length-ptr;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  char  len  =  _inputBuffer.length-ptr;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	char  len  =  _inputBuffer.length-ptr;	  int    len    =    _inputBuffer.length-ptr;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
28	[BUG]  [BUGGY]  if(ch  ==  JsonToken.VALUE_NUMBER_INT)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  ==  JsonToken.VALUE_NUMBER_INT)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  ==  JsonToken.VALUE_NUMBER_INT)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(ch,    startPtr,    0);    if(buf.length    <    len)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
29	[BUG]  [BUGGY]  if(ch  ==  JsonToken.VALUE_NULL)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  ==  JsonToken.VALUE_NULL)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  ==  JsonToken.VALUE_NULL)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(ch,    startPtr,    0);    if(buf.length    <    len)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
30	[BUG]  [BUGGY]  if(ch  ==  JsonToken.VALUE_NULL)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt(true,  in  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  ==  JsonToken.VALUE_NULL)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt(true,  in  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  ==  JsonToken.VALUE_NULL)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt(true,  in	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(ch,    startPtr,    0);    if(buf.length    <    len)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
31	[BUG]  [BUGGY]  if(ch  <  =  0x7F)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt(true,  intLen);  }  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  <  =  0x7F)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt(true,  intLen);  }  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  <  =  0x7F)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt(true,  intLen);  }	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(ch,    startPtr,    0);    if(buf.length    <    len)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
32	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  resetInt  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ptr  >=  _inputEnd)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  resetInt  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ptr  >=  _inputEnd)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  resetInt	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(startPtr,    startPtr,    ptr);    if(buf.length    ==    0)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
33	[BUG]  [BUGGY]  if(ptr  >=  0)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  resetInt(true,  in  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ptr  >=  0)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  resetInt(true,  in  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ptr  >=  0)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  resetInt(true,  in	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(startPtr,    startPtr,    ptr);    if(buf.length    ==    0)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
34	[BUG]  [BUGGY]  if(ptr  >=  0)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  resetInt(true,  intLen);  }  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ptr  >=  0)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  resetInt(true,  intLen);  }  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ptr  >=  0)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  resetInt(true,  intLen);  }	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(startPtr,    startPtr,    ptr);    if(buf.length    ==    0)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
35	[BUG]  [BUGGY]  char  len  =  _inputPtr-1;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  char  len  =  _inputPtr-1;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	char  len  =  _inputPtr-1;	  int    len    =    _inputPtr-1;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
36	[BUG]  [BUGGY]  int  len  =  _inputPtr.length-1;  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  int  len  =  _inputPtr.length-1;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	int  len  =  _inputPtr.length-1;	  int    len    =    _inputPtr-1;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
37	[BUG]  [BUGGY]  int  len  =  _symbols.length-1;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  int  len  =  _symbols.length-1;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	int  len  =  _symbols.length-1;	  int    len    =    ch-1;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
38	[BUG]  [BUGGY]  String  len  =  startPtr-ptr;  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  String  len  =  startPtr-ptr;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	String  len  =  startPtr-ptr;	  char    len    =    startPtr-ptr;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
39	[BUG]  [BUGGY]  char  len  =  ptr-startPtr;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  char  len  =  ptr-startPtr;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	char  len  =  ptr-startPtr;	  char    len    =    startPtr-ptr;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
40	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
41	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  0);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  0);  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  0);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
42	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ch);  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ch);  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ch);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
43	[BUG]  [BUGGY]  int  len  =  _inputPtr-start;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  int  len  =  _inputPtr-start;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	int  len  =  _inputPtr-start;	  int    len    =    _inputPtr-ptr;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
44	[BUG]  [BUGGY]  char  len  =  _inputPtr-ptr;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  char  len  =  _inputPtr-ptr;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	char  len  =  _inputPtr-ptr;	  int    len    =    _inputPtr-ptr;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
45	[BUG]  [BUGGY]  char[]  buf  =  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  char[]  buf  =  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	char[]  buf  =  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);	  char[]    buf    =    _textBuffer.getCurrentToken();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
46	[BUG]  [BUGGY]  char[]  buf  =  _textBuffer.finishCurrentToken();  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  char[]  buf  =  _textBuffer.finishCurrentToken();  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	char[]  buf  =  _textBuffer.finishCurrentToken();	  char[]    buf    =    _textBuffer.getCurrentToken();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
47	[BUG]  [BUGGY]  char[]  buf  =  _textBuffer.getCurrentCharacter();  [CE]  <identifier>  expected  [FE]                              ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  char[]  buf  =  _textBuffer.getCurrentCharacter();  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	char[]  buf  =  _textBuffer.getCurrentCharacter();	  char[]    buf    =    _textBuffer.getCurrentToken();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
48	[BUG]  [BUGGY]  if(ptr  >=  0)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ptr  >=  0)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ptr  >=  0)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len);    return    resetInt(false,    intLen);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
49	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  return  resetInt(false,  intLen);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  return  resetInt(false,  intLen);  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  ptr);  return  resetInt(false,  intLen);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len);    return    resetInt(false,    intLen);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
50	[BUG]  [BUGGY]  if(ch  ==  '.')  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(true,  intLen);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  ==  '.')  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(true,  intLen);  }  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  ==  '.')  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(true,  intLen);  }	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len);    return    resetInt(true,    intLen);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
51	[BUG]  [BUGGY]  int  len  =  ch-startPtr  +  1L;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  int  len  =  ch-startPtr  +  1L;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	int  len  =  ch-startPtr  +  1L;	  int    len    =    ch-startPtr    +    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
52	[BUG]  [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  _textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len);  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	_textBuffer.resetWithFloat(_inputBuffer,  startPtr,  len);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
53	[BUG]  [BUGGY]  int  len  =  ch-start;  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  int  len  =  ch-start;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	int  len  =  ch-start;	  int    len    =    ch-ptr;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
54	[BUG]  [BUGGY]  int  len  =  _inputBuffer.length-start;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  int  len  =  _inputBuffer.length-start;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	int  len  =  _inputBuffer.length-start;	  int    len    =    _inputBuffer.length-ptr;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
55	[BUG]  [BUGGY]  int  len  =  ptr-inputPtr;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  int  len  =  ptr-inputPtr;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	int  len  =  ptr-inputPtr;	  int    len    =    _inputPtr-ptr;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
56	[BUG]  [BUGGY]  if(ch  <  =  INT_0)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt(true,  intLen);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  <  =  INT_0)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt(true,  intLen);  }  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  <  =  INT_0)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt(true,  intLen);  }	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(ch,    startPtr,    0);    if(buf.length    <    len)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
57	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(ch,    startPtr,    0);    if(buf.length    <    len)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
58	[BUG]  [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_10)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_10)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  <  =  INT_0  ||  ch  >  INT_10)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(ch,    startPtr,    0);    if(buf.length    <    len)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
59	[BUG]  [BUGGY]  if(ch  <  =  INT_0)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt(true,  intLen  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  <  =  INT_0)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt(true,  intLen  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  <  =  INT_0)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt(true,  intLen	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(ch,    startPtr,    0);    if(buf.length    <    len)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
60	[BUG]  [BUGGY]  Integer  len  =  _inputBuffer.readInt(0);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  Integer  len  =  _inputBuffer.readInt(0);  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	Integer  len  =  _inputBuffer.readInt(0);	  Integer    len    =    _inputBuffer.readInt();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
61	[BUG]  [BUGGY]  Integer  len  =  _inputBuffer.readInt(0,  0);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  Integer  len  =  _inputBuffer.readInt(0,  0);  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	Integer  len  =  _inputBuffer.readInt(0,  0);	  Integer    len    =    _inputBuffer.readInt();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
62	[BUG]  [BUGGY]  int  len  =  _inputPtr-startPtr  +  1L;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  int  len  =  _inputPtr-startPtr  +  1L;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	int  len  =  _inputPtr-startPtr  +  1L;	  int    len    =    _inputPtr-startPtr    +    1;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
63	[BUG]  [BUGGY]  char[]  buf  =  _textBuffer.startCurrentToken();  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  char[]  buf  =  _textBuffer.startCurrentToken();  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	char[]  buf  =  _textBuffer.startCurrentToken();	  char[]    buf    =    _textBuffer.getCurrentToken();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
64	[BUG]  [BUGGY]  int  len  =  _inputPtr+1;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  int  len  =  _inputPtr+1;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	int  len  =  _inputPtr+1;	  int    len    =    _inputPtr-1;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
65	[BUG]  [BUGGY]  if(ch  <  =  INT_0)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  resetInt  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  <  =  INT_0)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  resetInt  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  <  =  INT_0)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  resetInt	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(startPtr,    startPtr,    ptr);    if(buf.length    ==    0)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
66	[BUG]  [BUGGY]  if(ptr  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  resetInt(true,  intLen);  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ptr  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  resetInt(true,  intLen);  }  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ptr  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  resetInt(true,  intLen);  }	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(startPtr,    startPtr,    ptr);    if(buf.length    ==    0)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
67	[BUG]  [BUGGY]  if(ch  ==  ' "')  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  resetInt(true,  in  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  ==  ' "')  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  resetInt(true,  in  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  ==  ' "')  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  resetInt(true,  in	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(startPtr,    startPtr,    ptr);    if(buf.length    ==    0)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
68	[BUG]  [BUGGY]  if(ch  <  =  0x7F)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  <  len)  {  return  resetInt  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  <  =  0x7F)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  <  len)  {  return  resetInt  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  <  =  0x7F)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  <  len)  {  return  resetInt	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(startPtr,    startPtr,    ptr);    if(buf.length    <    len)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
69	[BUG]  [BUGGY]  if(ch  <  =  INT_0)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  <  len)  {  return  resetInt  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  <  =  INT_0)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  <  len)  {  return  resetInt  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  <  =  INT_0)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  <  len)  {  return  resetInt	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(startPtr,    startPtr,    ptr);    if(buf.length    <    len)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
70	[BUG]  [BUGGY]  if(ch  <  INT_0)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  <  len)  {  return  resetInt(true,  in  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  <  INT_0)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  <  len)  {  return  resetInt(true,  in  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  <  INT_0)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  <  len)  {  return  resetInt(true,  in	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(startPtr,    startPtr,    ptr);    if(buf.length    <    len)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
71	[BUG]  [BUGGY]  char  len  =  startPtr-outputPtr;  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  char  len  =  startPtr-outputPtr;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	char  len  =  startPtr-outputPtr;	  char    len    =    startPtr-ptr;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
72	[BUG]  [BUGGY]  Char  len  =  ptr-startPtr;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  Char  len  =  ptr-startPtr;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	Char  len  =  ptr-startPtr;	  char    len    =    startPtr-ptr;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
73	[BUG]  [BUGGY]  int  len  =  _parsingContext.inRoot();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  int  len  =  _parsingContext.inRoot();  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	int  len  =  _parsingContext.inRoot();	  int    len    =    ch-1;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
74	[BUG]  [BUGGY]  if(ch  ==  ' "')  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  ==  ' "')  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  ==  ' "')  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len);    return    resetInt(false,    intLen);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
75	[BUG]  [BUGGY]  if(_parsingContext.inRoot())  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(_parsingContext.inRoot())  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(_parsingContext.inRoot())  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len);    return    resetInt(false,    intLen);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
76	[BUG]  [BUGGY]  if(ch  =='<  ')  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  =='<  ')  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  =='<  ')  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len);    return    resetInt(false,    intLen);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
77	[BUG]  [BUGGY]  if(ch  <  =  0x7F)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  <  =  0x7F)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  <  =  0x7F)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len);    return    resetInt(false,    intLen);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
78	[BUG]  [BUGGY]  int  len  =  _inputEnd-startLen;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  int  len  =  _inputEnd-startLen;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	int  len  =  _inputEnd-startLen;	  int    len    =    startPtr-startLen;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
79	[BUG]  [BUGGY]  if(ch  ==  INT_0)  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.resetWithShared  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  ==  INT_0)  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.resetWithShared  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  ==  INT_0)  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.resetWithShared	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(startPtr,    startPtr,    len);    if(buf.length    >    0)    {    _textBuffer.resetWithShared(_inputBuffer,    startPtr,    	non-compiled	[CE]  <identifier>  expected	7	None	replace
80	[BUG]  [BUGGY]  if(ch  =='<  ')  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.resetWithShared  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  =='<  ')  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.resetWithShared  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  =='<  ')  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.resetWithShared	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(startPtr,    startPtr,    len);    if(buf.length    >    0)    {    _textBuffer.resetWithShared(_inputBuffer,    startPtr,    	non-compiled	[CE]  <identifier>  expected	7	None	replace
81	[BUG]  [BUGGY]  if(ch  ==  ' "')  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.resetWithShared  [CE]  <identifier>  expected  [FE]                              ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  ==  ' "')  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.resetWithShared  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  ==  ' "')  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.resetWithShared	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(startPtr,    startPtr,    len);    if(buf.length    >    0)    {    _textBuffer.resetWithShared(_inputBuffer,    startPtr,    	non-compiled	[CE]  <identifier>  expected	7	None	replace
82	[BUG]  [BUGGY]  if(ch  <  =  INT_0)  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.resetWithShared  [CE]  <identifier>  expected  [FE]                                ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  <  =  INT_0)  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.resetWithShared  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  <  =  INT_0)  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.resetWithShared	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(startPtr,    startPtr,    len);    if(buf.length    >    0)    {    _textBuffer.resetWithShared(_inputBuffer,    startPtr,    	non-compiled	[CE]  <identifier>  expected	7	None	replace
83	[BUG]  [BUGGY]  if(ch  ==  ' "')  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(true,  intLen);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  ==  ' "')  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(true,  intLen);  }  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  ==  ' "')  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(true,  intLen);  }	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len);    return    resetInt(true,    intLen);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
84	[BUG]  [BUGGY]  if(ch  =='<  ')  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(true,  intLen);  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  =='<  ')  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(true,  intLen);  }  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  =='<  ')  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(true,  intLen);  }	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len);    return    resetInt(true,    intLen);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
85	[BUG]  [BUGGY]  int  len  =  _inputPtr-startPtr  *  startPtr  +  1;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  int  len  =  _inputPtr-startPtr  *  startPtr  +  1;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	int  len  =  _inputPtr-startPtr  *  startPtr  +  1;	  int    len    =    _inputPtr-startPtr    +    1;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
86	[BUG]  [BUGGY]  int  len  =  _inputPtr-startPtr  +  2;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  int  len  =  _inputPtr-startPtr  +  2;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	int  len  =  _inputPtr-startPtr  +  2;	  int    len    =    _inputPtr-startPtr    +    1;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
87	[BUG]  [BUGGY]  Character  len  =  startPtr-ptr;  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  Character  len  =  startPtr-ptr;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	Character  len  =  startPtr-ptr;	  char    len    =    startPtr-ptr;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
88	[BUG]  [BUGGY]  if(ptr  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  <  len)  {  return  resetInt(true,  intLen);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ptr  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  <  len)  {  return  resetInt(true,  intLen);  }  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ptr  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  <  len)  {  return  resetInt(true,  intLen);  }	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(startPtr,    startPtr,    ptr);    if(buf.length    <    len)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
89	[BUG]  [BUGGY]  if(ch  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  <  len)  {  return  resetInt(true,  intLen);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  <  len)  {  return  resetInt(true,  intLen);  }  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  ptr);  if(buf.length  <  len)  {  return  resetInt(true,  intLen);  }	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(startPtr,    startPtr,    ptr);    if(buf.length    <    len)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
90	[BUG]  [BUGGY]  if(ptr  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  len);  if(buf.length  <  len)  {  return  resetInt(true,  intLen);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ptr  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  len);  if(buf.length  <  len)  {  return  resetInt(true,  intLen);  }  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ptr  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  len);  if(buf.length  <  len)  {  return  resetInt(true,  intLen);  }	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(startPtr,    startPtr,    ptr);    if(buf.length    <    len)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
91	[BUG]  [BUGGY]  int  len  =  _inputBuffer.startPtr-startPtr  +  1L;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  int  len  =  _inputBuffer.startPtr-startPtr  +  1L;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	int  len  =  _inputBuffer.startPtr-startPtr  +  1L;	  int    len    =    ptr-startPtr    +    1L;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
92	[BUG]  [BUGGY]  int  len  =  ch-startPtr  *  1  +  1;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  int  len  =  ch-startPtr  *  1  +  1;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	int  len  =  ch-startPtr  *  1  +  1;	  int    len    =    ch-startPtr    +    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
93	[BUG]  [BUGGY]  Integer  len  =  _inputBuffer.decodeInt(ch);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  Integer  len  =  _inputBuffer.decodeInt(ch);  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	Integer  len  =  _inputBuffer.decodeInt(ch);	  Integer    len    =    _inputBuffer.readInt();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
94	[BUG]  [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt(true,  intLen);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt(true,  intLen);  }  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  <  =  INT_0  ||  ch  >  INT_0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt(true,  intLen);  }	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(ch,    startPtr,    0);    if(buf.length    <    len)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
95	[BUG]  [BUGGY]  if(ptr  <  _inputEnd)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt(true,  in  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ptr  <  _inputEnd)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt(true,  in  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ptr  <  _inputEnd)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt(true,  in	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(ch,    startPtr,    0);    if(buf.length    <    len)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
96	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt(true,  in  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ptr  >=  _inputEnd)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt(true,  in  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ptr  >=  _inputEnd)  {  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  0);  if(buf.length  <  len)  {  return  resetInt(true,  in	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(ch,    startPtr,    0);    if(buf.length    <    len)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
97	[BUG]  [BUGGY]  int  len  =  _inputEnd-ptr;  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  int  len  =  _inputEnd-ptr;  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	int  len  =  _inputEnd-ptr;	  int    len    =    _inputEnd-startPtr;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
98	[BUG]  [BUGGY]  if(len  >  0)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(len  >  0)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  }  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(len  >  0)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  }	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
99	[BUG]  [BUGGY]  if(ch  <  =  INT_0)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  <  =  INT_0)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  <  =  INT_0)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len);    return    resetInt(true,    intLen);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
100	[BUG]  [BUGGY]  if(ch  <  =  INT_0)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(true,  intLen);  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  <  =  INT_0)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(true,  intLen);  }  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  <  =  INT_0)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(true,  intLen);  }	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len);    return    resetInt(true,    intLen);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
101	[BUG]  [BUGGY]  if(ptr  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  len);  if(buf.length  ==  0)  {  return  resetInt(true,  intLen);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ptr  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  len);  if(buf.length  ==  0)  {  return  resetInt(true,  intLen);  }  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ptr  >  0)  {  char[]  buf  =  _textBuffer.getChars(startPtr,  startPtr,  len);  if(buf.length  ==  0)  {  return  resetInt(true,  intLen);  }	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(startPtr,    startPtr,    ptr);    if(buf.length    ==    0)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
102	[BUG]  [BUGGY]  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  resetInt(true,  intLen);  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  resetInt(true,  intLen);  }  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(len  >  0)  {  char[]  buf  =  _textBuffer.getChars(ch,  startPtr,  ptr);  if(buf.length  ==  0)  {  return  resetInt(true,  intLen);  }	  if(len    >    0)    {    char[]    buf    =    _textBuffer.getChars(startPtr,    startPtr,    ptr);    if(buf.length    ==    0)    {    return    resetInt(true,    intLen);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
103	[BUG]  [BUGGY]  if(ch  <  INT_0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.resetWithShared(_inputBuffer,  start  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  <  INT_0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.resetWithShared(_inputBuffer,  start  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  <  INT_0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.resetWithShared(_inputBuffer,  start	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(startPtr,    startPtr,    len);    if(buf.length    >    0)    {    _textBuffer.resetWithShared(_inputBuffer,    startPtr,    	non-compiled	[CE]  <identifier>  expected	7	None	replace
104	[BUG]  [BUGGY]  if(ch  <  =  INT_0)  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.resetWith  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  <  =  INT_0)  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.resetWith  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  <  =  INT_0)  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.resetWith	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(startPtr,    startPtr,    len);    if(buf.length    >    0)    {    _textBuffer.resetWithShared(_inputBuffer,    startPtr,    	non-compiled	[CE]  <identifier>  expected	7	None	replace
105	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.resetWithShared  [CE]  <identifier>  expected  [FE]                              ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ptr  >=  _inputEnd)  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.resetWithShared  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ptr  >=  _inputEnd)  {  if(len  >  0)  {  char[]  buf  =  _reader.readChars(startPtr,  startPtr,  len);  if(buf.length  >  0)  {  _textBuffer.resetWithShared	  if(len    >    0)    {    char[]    buf    =    _reader.readChars(startPtr,    startPtr,    len);    if(buf.length    >    0)    {    _textBuffer.resetWithShared(_inputBuffer,    startPtr,    	non-compiled	[CE]  <identifier>  expected	7	None	replace
106	[BUG]  [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_0)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      _inputPtr  =  ptr;  return  _parseFloat(ch,  startPtr,  ptr,  false,  intLen);  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  if  (_parsingContext.inRoot())  {  _verifyRootSpace(ch);  }      [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_0)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [BUGGY]      _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parsePosNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  features  i  id  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	888	888	2	replace	if(ch  <  =  INT_0  ||  ch  >  INT_0)  {  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len);  return  resetInt(false,  intLen);  }	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len);    return    resetInt(false,    intLen);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
