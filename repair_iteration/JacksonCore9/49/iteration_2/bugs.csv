bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  char  i  =  _inputBuffer[++_inputPtr  +  1];  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space    [BUGGY]  char  i  =  _inputBuffer[++_inputPtr  +  1];  [BUGGY]    if  (i  >  INT_SPACE)  {  //  nor  trailing  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1702	1702	2	replace	char  i  =  _inputBuffer[++_inputPtr  +  1];	  int    i    =    _inputBuffer[++_inputPtr    +    1];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
2	[BUG]  [BUGGY]  int  i  =  _inputBuffer[++_inputPtr  +  2];  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space    [BUGGY]  int  i  =  _inputBuffer[++_inputPtr  +  2];  [BUGGY]    if  (i  >  INT_SPACE)  {  //  nor  trailing  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1702	1702	2	replace	int  i  =  _inputBuffer[++_inputPtr  +  2];	  int    i    =    _inputBuffer[++_inputPtr    +    1];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
3	[BUG]  [BUGGY]  int  i  =  _inputBuffer[++_inputPtr]  &  1;  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space    [BUGGY]  int  i  =  _inputBuffer[++_inputPtr]  &  1;  [BUGGY]    if  (i  >  INT_SPACE)  {  //  nor  trailing  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1702	1702	2	replace	int  i  =  _inputBuffer[++_inputPtr]  &  1;	  int    i    =    _inputBuffer[++_inputPtr]    +    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
4	[BUG]  [BUGGY]  int  i  =  _inputBuffer[++_inputPtr]  &  0xff;  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space    [BUGGY]  int  i  =  _inputBuffer[++_inputPtr]  &  0xff;  [BUGGY]    if  (i  >  INT_SPACE)  {  //  nor  trailing  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1702	1702	2	replace	int  i  =  _inputBuffer[++_inputPtr]  &  0xff;	  int    i    =    _inputBuffer[++_inputPtr]    +    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
5	[BUG]  [BUGGY]  char  i  =  _inputBuffer[++_inputPtr]  +  1;  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space    [BUGGY]  char  i  =  _inputBuffer[++_inputPtr]  +  1;  [BUGGY]    if  (i  >  INT_SPACE)  {  //  nor  trailing  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1702	1702	2	replace	char  i  =  _inputBuffer[++_inputPtr]  +  1;	  int    i    =    _inputBuffer[++_inputPtr]    +    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
6	[BUG]  [BUGGY]  int  i  =  _inputBuffer[++_inputPtr]  -  1;  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space    [BUGGY]  int  i  =  _inputBuffer[++_inputPtr]  -  1;  [BUGGY]    if  (i  >  INT_SPACE)  {  //  nor  trailing  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1702	1702	2	replace	int  i  =  _inputBuffer[++_inputPtr]  -  1;	  int    i    =    _inputBuffer[++_inputPtr]    +    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
7	[BUG]  [BUGGY]  char  i  =(char)_inputBuffer[++_inputPtr];  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space    [BUGGY]  char  i  =(char)_inputBuffer[++_inputPtr];  [BUGGY]    if  (i  >  INT_SPACE)  {  //  nor  trailing  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1702	1702	2	replace	char  i  =(char)_inputBuffer[++_inputPtr];	  int    i    =(int)_inputBuffer[++_inputPtr];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
8	[BUG]  [BUGGY]  int  i  =(int)_inputBuffer[++_inputPtr  +  1];  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space    [BUGGY]  int  i  =(int)_inputBuffer[++_inputPtr  +  1];  [BUGGY]    if  (i  >  INT_SPACE)  {  //  nor  trailing  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1702	1702	2	replace	int  i  =(int)_inputBuffer[++_inputPtr  +  1];	  int    i    =(int)_inputBuffer[++_inputPtr];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
9	[BUG]  [BUGGY]  if(i  ==  INT_SLASH  ||  i  ==  INT_TAB)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space    [BUGGY]  if(i  ==  INT_SLASH  ||  i  ==  INT_TAB)  {  return  _skipColon2(false);  }  [BUGGY]    if  (i  >  INT_SPACE)  {  //  nor  trailing  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1702	1702	2	replace	if(i  ==  INT_SLASH  ||  i  ==  INT_TAB)  {  return  _skipColon2(false);  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
10	[BUG]  [BUGGY]  if(i  ==  INT_SLASH  ||  i  ==  INT_TAB)  {  if(i  >=  INT_SEMI)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space    [BUGGY]  if(i  ==  INT_SLASH  ||  i  ==  INT_TAB)  {  if(i  >=  INT_SEMI)  {  return  _skipColon2(false);  }  [BUGGY]    if  (i  >  INT_SPACE)  {  //  nor  trailing  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1702	1702	2	replace	if(i  ==  INT_SLASH  ||  i  ==  INT_TAB)  {  if(i  >=  INT_SEMI)  {  return  _skipColon2(false);  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
11	[BUG]  [BUGGY]  if(i  ==  INT_SLASH  ||  i  ==  INT_TAB)  {  if(i  >=  INT_CLOSE)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space    [BUGGY]  if(i  ==  INT_SLASH  ||  i  ==  INT_TAB)  {  if(i  >=  INT_CLOSE)  {  return  _skipColon2(false);  }  [BUGGY]    if  (i  >  INT_SPACE)  {  //  nor  trailing  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1702	1702	2	replace	if(i  ==  INT_SLASH  ||  i  ==  INT_TAB)  {  if(i  >=  INT_CLOSE)  {  return  _skipColon2(false);  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
12	[BUG]  [BUGGY]  if(i  ==  INT_SLASH  ||  i  ==  INT_TAB)  {  if(i  <  INT_CLOSE)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space    [BUGGY]  if(i  ==  INT_SLASH  ||  i  ==  INT_TAB)  {  if(i  <  INT_CLOSE)  {  return  _skipColon2(false);  }  [BUGGY]    if  (i  >  INT_SPACE)  {  //  nor  trailing  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1702	1702	2	replace	if(i  ==  INT_SLASH  ||  i  ==  INT_TAB)  {  if(i  <  INT_CLOSE)  {  return  _skipColon2(false);  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
13	[BUG]  [BUGGY]  char  i  =  _inputBuffer[++_inputPtr  -  1];  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space    [BUGGY]  char  i  =  _inputBuffer[++_inputPtr  -  1];  [BUGGY]    if  (i  >  INT_SPACE)  {  //  nor  trailing  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1702	1702	2	replace	char  i  =  _inputBuffer[++_inputPtr  -  1];	  int    i    =    _inputBuffer[++_inputPtr    -    1];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
14	[BUG]  [BUGGY]  char  i  =  _inputBuffer[0];  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space    [BUGGY]  char  i  =  _inputBuffer[0];  [BUGGY]    if  (i  >  INT_SPACE)  {  //  nor  trailing  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1702	1702	2	replace	char  i  =  _inputBuffer[0];	  char    i    =    _inputBuffer[++_inputPtr];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
15	[BUG]  [BUGGY]  char  i  =  _inputBuffer[++_inputPtr  +  2];  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space    [BUGGY]  char  i  =  _inputBuffer[++_inputPtr  +  2];  [BUGGY]    if  (i  >  INT_SPACE)  {  //  nor  trailing  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1702	1702	2	replace	char  i  =  _inputBuffer[++_inputPtr  +  2];	  char    i    =    _inputBuffer[++_inputPtr];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
16	[BUG]  [BUGGY]  int  i  =  _inputBuffer[++_inputPtr  +  3];  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space    [BUGGY]  int  i  =  _inputBuffer[++_inputPtr  +  3];  [BUGGY]    if  (i  >  INT_SPACE)  {  //  nor  trailing  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1702	1702	2	replace	int  i  =  _inputBuffer[++_inputPtr  +  3];	  int    i    =    _inputBuffer[++_inputPtr    +    1];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
17	[BUG]  [BUGGY]  if(i  ==  INT_SLASH)  {  if(i  ==  INT_TAB)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space    [BUGGY]  if(i  ==  INT_SLASH)  {  if(i  ==  INT_TAB)  {  return  _skipColon2(false);  }  [BUGGY]    if  (i  >  INT_SPACE)  {  //  nor  trailing  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1702	1702	2	replace	if(i  ==  INT_SLASH)  {  if(i  ==  INT_TAB)  {  return  _skipColon2(false);  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
18	[BUG]  [BUGGY]  if(i  ==  INT_TAB)  {  if(i  ==  INT_SLASH  ||  i  ==  INT_TAB)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space    [BUGGY]  if(i  ==  INT_TAB)  {  if(i  ==  INT_SLASH  ||  i  ==  INT_TAB)  {  return  _skipColon2(false);  }  [BUGGY]    if  (i  >  INT_SPACE)  {  //  nor  trailing  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1702	1702	2	replace	if(i  ==  INT_TAB)  {  if(i  ==  INT_SLASH  ||  i  ==  INT_TAB)  {  return  _skipColon2(false);  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
19	[BUG]  [BUGGY]  if(i  ==  INT_TAB)  {  if(i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space    [BUGGY]  if(i  ==  INT_TAB)  {  if(i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(false);  }  [BUGGY]    if  (i  >  INT_SPACE)  {  //  nor  trailing  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1702	1702	2	replace	if(i  ==  INT_TAB)  {  if(i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(false);  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
20	[BUG]  [BUGGY]  int  i  =  _inputBuffer[++_inputPtr]  +  2;  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space    [BUGGY]  int  i  =  _inputBuffer[++_inputPtr]  +  2;  [BUGGY]    if  (i  >  INT_SPACE)  {  //  nor  trailing  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1702	1702	2	replace	int  i  =  _inputBuffer[++_inputPtr]  +  2;	  int    i    =    _inputBuffer[++_inputPtr]    +    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
21	[BUG]  [BUGGY]  int  i  =  _inputBuffer[++_inputPtr]  +  4;  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space    [BUGGY]  int  i  =  _inputBuffer[++_inputPtr]  +  4;  [BUGGY]    if  (i  >  INT_SPACE)  {  //  nor  trailing  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1702	1702	2	replace	int  i  =  _inputBuffer[++_inputPtr]  +  4;	  int    i    =    _inputBuffer[++_inputPtr]    +    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
22	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space    [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(false);  }  [BUGGY]    if  (i  >  INT_SPACE)  {  //  nor  trailing  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1702	1702	2	replace	if(i  <  =  INT_LCURLY)  {  if(i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(false);  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
23	[BUG]  [BUGGY]  char  c  =  _inputBuffer[_inputPtr];  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space    [BUGGY]  char  c  =  _inputBuffer[_inputPtr];  [BUGGY]    if  (i  >  INT_SPACE)  {  //  nor  trailing  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1702	1702	2	replace	char  c  =  _inputBuffer[_inputPtr];	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
24	[BUG]  [BUGGY]  i  =(char)_inputBuffer[++_inputPtr];  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space    [BUGGY]  i  =(char)_inputBuffer[++_inputPtr];  [BUGGY]    if  (i  >  INT_SPACE)  {  //  nor  trailing  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1702	1702	2	replace	i  =(char)_inputBuffer[++_inputPtr];	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
25	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  ==  INT_SLASH  ||  i  ==  INT_TAB)  {  return  _skipColon2(false);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space    [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(i  ==  INT_SLASH  ||  i  ==  INT_TAB)  {  return  _skipColon2(false);  }  [BUGGY]    if  (i  >  INT_SPACE)  {  //  nor  trailing  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1702	1702	2	replace	if(i  <  =  INT_LCURLY)  {  if(i  ==  INT_SLASH  ||  i  ==  INT_TAB)  {  return  _skipColon2(false);  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
26	[BUG]  [BUGGY]  char  i  =(_int)_inputBuffer[++_inputPtr];  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    {  if  ((_inputPtr  +  4)  >=  _inputEnd)  {  return  _skipColon2(false);  }  char  c  =  _inputBuffer[_inputPtr];  if  (c  ==  ':')  {  //  common  case,  no  leading  space    [BUGGY]  char  i  =(_int)_inputBuffer[++_inputPtr];  [BUGGY]    if  (i  >  INT_SPACE)  {  //  nor  trailing  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipColon2(true);  }  ++_inputPtr;  return  i;  }  if  (i  ==  INT_SPACE  ||  i  ==  INT_TAB)  {  i  =  (int)  _inputBuffer[++_inputPtr];  if  (i  >  INT_SPACE)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipColon  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  inObject  neg  negative  char  c  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  char[]  _inputBuffer  buf  inBuf  inputBuffer  outBuf  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1702	1702	2	replace	char  i  =(_int)_inputBuffer[++_inputPtr];	  char    i    =    _inputBuffer[++_inputPtr];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
