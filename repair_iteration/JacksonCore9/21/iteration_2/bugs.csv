bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  _getText1(t,  JsonToken.VALUE_STRING);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  return  _getText1(t,  JsonToken.VALUE_STRING);  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText1(t,  JsonToken.VALUE_STRING);	  return    _getText1(t);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  return  _getText(t,  JsonToken.VALUE_STRING);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  return  _getText(t,  JsonToken.VALUE_STRING);  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText(t,  JsonToken.VALUE_STRING);	  return    _getText1(t);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  return  _getText0(JsonToken.VALUE_STRING);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  return  _getText0(JsonToken.VALUE_STRING);  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText0(JsonToken.VALUE_STRING);	  return    _getText0(t);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
4	[BUG]  [BUGGY]  return  _getText0(t,  JsonToken.VALUE_STRING);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  return  _getText0(t,  JsonToken.VALUE_STRING);  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText0(t,  JsonToken.VALUE_STRING);	  return    _getText0(t);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
5	[BUG]  [BUGGY]  return  _getText0(JsonToken.FIELD_NAME);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  return  _getText0(JsonToken.FIELD_NAME);  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText0(JsonToken.FIELD_NAME);	  return    _getText0(t);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
6	[BUG]  [BUGGY]  return  _textBuffer.getText();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  return  _textBuffer.getText();  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _textBuffer.getText();	  return    _getText();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
7	[BUG]  [BUGGY]  return  _getText().trim();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  return  _getText().trim();  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText().trim();	  return    _getText();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
8	[BUG]  [BUGGY]  return  t.toString();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  return  t.toString();  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  t.toString();	  return    _getText();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
9	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.contentsAsString();  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.contentsAsString();  }  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.contentsAsString();  }	  return    _textBuffer.contentsAsString();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
10	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.contentsAsString();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.contentsAsString();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.contentsAsString();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    _textBuffer.contentsAsString();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
11	[BUG]  [BUGGY]  return  _textBuffer.contentsAsString().trim();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  return  _textBuffer.contentsAsString().trim();  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _textBuffer.contentsAsString().trim();	  return    _textBuffer.contentsAsString();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
12	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
13	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
14	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  _currToken  =  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  _currToken  =  JsonToken.END_OBJECT;  }  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  _currToken  =  JsonToken.END_OBJECT;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
15	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.END_OBJECT;  }  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.END_OBJECT;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
16	[BUG]  [BUGGY]  return  _getText(JsonToken.VALUE_STRING);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  return  _getText(JsonToken.VALUE_STRING);  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText(JsonToken.VALUE_STRING);	  return    _getText(t);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
17	[BUG]  [BUGGY]  return  _textBuffer.getText(t);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  return  _textBuffer.getText(t);  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _textBuffer.getText(t);	  return    _getText(t);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
18	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText2(t,  JsonToken.VALUE_STRING);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText2(t,  JsonToken.VALUE_STRING);  }  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText2(t,  JsonToken.VALUE_STRING);  }	  return    _getText2(t,    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
19	[BUG]  [BUGGY]  return  _getText2(t,  JsonToken.VALUE_STRING,  _currToken);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  return  _getText2(t,  JsonToken.VALUE_STRING,  _currToken);  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText2(t,  JsonToken.VALUE_STRING,  _currToken);	  return    _getText2(t,    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
20	[BUG]  [BUGGY]  return  _getText2(t,  JsonToken.VALUE_STRING,  _textBuffer);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  return  _getText2(t,  JsonToken.VALUE_STRING,  _textBuffer);  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText2(t,  JsonToken.VALUE_STRING,  _textBuffer);	  return    _getText2(t,    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
21	[BUG]  [BUGGY]  return  _getText2(JsonToken.VALUE_STRING,  t);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  return  _getText2(JsonToken.VALUE_STRING,  t);  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText2(JsonToken.VALUE_STRING,  t);	  return    _getText2(t,    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
22	[BUG]  [BUGGY]  return  t.getText();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  return  t.getText();  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  t.getText();	  return    _getText();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
23	[BUG]  [BUGGY]  return  _getText(t.toString());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  return  _getText(t.toString());  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText(t.toString());	  return    _getText1(t);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
24	[BUG]  [BUGGY]  return  _textBuffer.contentsAsText();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  return  _textBuffer.contentsAsText();  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _textBuffer.contentsAsText();	  return    _textBuffer.contentsAsString();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
25	[BUG]  [BUGGY]  return  _textBuffer.contentsAsString()  +  1;  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  return  _textBuffer.contentsAsString()  +  1;  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _textBuffer.contentsAsString()  +  1;	  return    _textBuffer.contentsAsString();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
26	[BUG]  [BUGGY]  return  _getText2(jsonToken,  JsonToken.VALUE_STRING);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  return  _getText2(jsonToken,  JsonToken.VALUE_STRING);  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText2(jsonToken,  JsonToken.VALUE_STRING);	  return    _getText2(t,    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
27	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  }  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
28	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  true;  _finishString();  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  true;  _finishString();  }  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  true;  _finishString();  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
29	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_bufferRecyclable)  {  _bufferRecyclable  =  false;  _finishString();  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_bufferRecyclable)  {  _bufferRecyclable  =  false;  _finishString();  }  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  if(_bufferRecyclable)  {  _bufferRecyclable  =  false;  _finishString();  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
30	[BUG]  [BUGGY]  return  _getText1(t,  _textBuffer.contentsAsString());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  return  _getText1(t,  _textBuffer.contentsAsString());  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText1(t,  _textBuffer.contentsAsString());	  return    _getText1(t);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
31	[BUG]  [BUGGY]  return  _textBuffer.getText0(t);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  return  _textBuffer.getText0(t);  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _textBuffer.getText0(t);	  return    _getText0(t);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
32	[BUG]  [BUGGY]  return(t  ==  JsonToken.VALUE_STRING)?  t  :  _getText();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  return(t  ==  JsonToken.VALUE_STRING)?  t  :  _getText();  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return(t  ==  JsonToken.VALUE_STRING)?  t  :  _getText();	  return    _getText();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
33	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  null)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  null)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  null)  {  _currToken  =  JsonToken.VALUE_STRING;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
34	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  null)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  null)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  null)  {  _currToken  =  JsonToken.FIELD_NAME;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
35	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  char[]  buf  =  t.toCharArray();  if(buf.length  >  0)  {  return  t.toString();  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  char[]  buf  =  t.toCharArray();  if(buf.length  >  0)  {  return  t.toString();  }  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  char[]  buf  =  t.toCharArray();  if(buf.length  >  0)  {  return  t.toString();  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
36	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  null)  {  _currToken  =  JsonToken.FIELD_NAME;  return  _textBuffer.contentsAsString();  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure    [CONTEXT]    public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }    [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  null)  {  _currToken  =  JsonToken.FIELD_NAME;  return  _textBuffer.contentsAsString();  }  [BUGGY]    }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  null)  {  _currToken  =  JsonToken.FIELD_NAME;  return  _textBuffer.contentsAsString();  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
