bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText2(jsonToken,  JsonToken.VALUE_STRING);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText2(jsonToken,  JsonToken.VALUE_STRING);  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText2(jsonToken,  JsonToken.VALUE_STRING);  }	  return    _getText2(jsonToken,    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
2	[BUG]  [BUGGY]  return  _getText2(jsonToken,  JsonToken.VALUE_STRING,  t);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText2(jsonToken,  JsonToken.VALUE_STRING,  t);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText2(jsonToken,  JsonToken.VALUE_STRING,  t);	  return    _getText2(jsonToken,    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
3	[BUG]  [BUGGY]  return  _getText1(jsonToken,  JsonToken.VALUE_STRING);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText1(jsonToken,  JsonToken.VALUE_STRING);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText1(jsonToken,  JsonToken.VALUE_STRING);	  return    _getText2(jsonToken,    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
4	[BUG]  [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	_currToken  =  JsonToken.FIELD_NAME;	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    null)    {    _currToken    =    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
5	[BUG]  [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	||  t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    null)    {    _currToken    =    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
6	[BUG]  [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	||  t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    null)    {    _currToken    =    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
7	[BUG]  [BUGGY]  return  _textBuffer.toString();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _textBuffer.toString();  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _textBuffer.toString();	  return    t.toString();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
8	[BUG]  [BUGGY]  return  t.toString()  + "n ";  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  t.toString()  + "n ";  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  t.toString()  + "n ";	  return    t.toString();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
9	[BUG]  [BUGGY]  return(t  ==  JsonToken.VALUE_STRING)?  _textBuffer.toString()  :  _getText();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return(t  ==  JsonToken.VALUE_STRING)?  _textBuffer.toString()  :  _getText();  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return(t  ==  JsonToken.VALUE_STRING)?  _textBuffer.toString()  :  _getText();	  return(t    ==    JsonToken.VALUE_STRING)?    t    :    _getText();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
10	[BUG]  [BUGGY]  return(t  ==  JsonToken.VALUE_STRING)?  _currToken  :  _getText();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return(t  ==  JsonToken.VALUE_STRING)?  _currToken  :  _getText();  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return(t  ==  JsonToken.VALUE_STRING)?  _currToken  :  _getText();	  return(t    ==    JsonToken.VALUE_STRING)?    t    :    _getText();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
11	[BUG]  [BUGGY]  return(t  ==  JsonToken.VALUE_STRING)?  _textBuffer.getText()  :  _getText();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return(t  ==  JsonToken.VALUE_STRING)?  _textBuffer.getText()  :  _getText();  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return(t  ==  JsonToken.VALUE_STRING)?  _textBuffer.getText()  :  _getText();	  return(t    ==    JsonToken.VALUE_STRING)?    t    :    _getText();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
12	[BUG]  [BUGGY]  return(t  ==  JsonToken.VALUE_STRING)?  _textBuffer.getText()  :  t;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return(t  ==  JsonToken.VALUE_STRING)?  _textBuffer.getText()  :  t;  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return(t  ==  JsonToken.VALUE_STRING)?  _textBuffer.getText()  :  t;	  return(t    ==    JsonToken.VALUE_STRING)?    t    :    _getText();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
13	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	_currToken  =  JsonToken.VALUE_STRING;	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    null)    {    _currToken    =    JsonToken.VALUE_STRING;    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
14	[BUG]  [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	||  t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    null)    {    _currToken    =    JsonToken.VALUE_STRING;    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
15	[BUG]  [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	||  t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    null)    {    _currToken    =    JsonToken.VALUE_STRING;    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
16	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText(JsonToken.VALUE_STRING);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText(JsonToken.VALUE_STRING);  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText(JsonToken.VALUE_STRING);  }	  return    _getText(JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
17	[BUG]  [BUGGY]  return  _getText(JsonToken.VALUE_STRING,  t);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText(JsonToken.VALUE_STRING,  t);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText(JsonToken.VALUE_STRING,  t);	  return    _getText(JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
18	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText(JsonToken.VALUE_STRING);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText(JsonToken.VALUE_STRING);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText(JsonToken.VALUE_STRING);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    _getText(JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
19	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText(JsonToken.VALUE_STRING);  }  else  {  return  _textBuffer.contentsAsString();  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText(JsonToken.VALUE_STRING);  }  else  {  return  _textBuffer.contentsAsString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText(JsonToken.VALUE_STRING);  }  else  {  return  _textBuffer.contentsAsString();  }	  return    _getText(JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
20	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText1(t,  JsonToken.VALUE_STRING);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText1(t,  JsonToken.VALUE_STRING);  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText1(t,  JsonToken.VALUE_STRING);  }	  if(t    ==    JsonToken.VALUE_STRING)    {    return    _getText2(t,    JsonToken.VALUE_STRING);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
21	[BUG]  [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  return  _getText2(t,  JsonToken.VALUE_STRING);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  return  _getText2(t,  JsonToken.VALUE_STRING);  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	||  t  ==  JsonToken.VALUE_STRING)  {  return  _getText2(t,  JsonToken.VALUE_STRING);  }	  if(t    ==    JsonToken.VALUE_STRING)    {    return    _getText2(t,    JsonToken.VALUE_STRING);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
22	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText0(t,  JsonToken.VALUE_STRING);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText0(t,  JsonToken.VALUE_STRING);  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText0(t,  JsonToken.VALUE_STRING);  }	  if(t    ==    JsonToken.VALUE_STRING)    {    return    _getText2(t,    JsonToken.VALUE_STRING);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
23	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.contentsAsText();  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.contentsAsText();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.contentsAsText();  }	  return    _textBuffer.contentsAsText();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
24	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.contentsAsText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.contentsAsText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.contentsAsText();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    _textBuffer.contentsAsText();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
25	[BUG]  [BUGGY]  return  _getText0(JsonToken.VALUE_STRING,  t);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText0(JsonToken.VALUE_STRING,  t);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText0(JsonToken.VALUE_STRING,  t);	  return    _getText0(JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
26	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText0(JsonToken.VALUE_STRING);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText0(JsonToken.VALUE_STRING);  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText0(JsonToken.VALUE_STRING);  }	  return    _getText0(JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
27	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText0(JsonToken.VALUE_STRING);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText0(JsonToken.VALUE_STRING);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText0(JsonToken.VALUE_STRING);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    _getText0(JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
28	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText0(JsonToken.VALUE_STRING);  }  else  {  return  _textBuffer.contentsAsString();  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText0(JsonToken.VALUE_STRING);  }  else  {  return  _textBuffer.contentsAsString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText0(JsonToken.VALUE_STRING);  }  else  {  return  _textBuffer.contentsAsString();  }	  return    _getText0(JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
29	[BUG]  [BUGGY]  _currToken  =  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  _currToken  =  JsonToken.END_OBJECT;  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	_currToken  =  JsonToken.END_OBJECT;	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
30	[BUG]  [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.END_OBJECT;  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	||  t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.END_OBJECT;  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
31	[BUG]  [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.END_OBJECT;  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	||  t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.END_OBJECT;	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
32	[BUG]  [BUGGY]  _tokenIncomplete  =  true;  _finishString();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  _tokenIncomplete  =  true;  _finishString();  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	_tokenIncomplete  =  true;  _finishString();	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    true;    _finishString();    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
33	[BUG]  [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  _tokenIncomplete  =  true;  _finishString();  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  _tokenIncomplete  =  true;  _finishString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	||  t  ==  JsonToken.VALUE_STRING)  {  _tokenIncomplete  =  true;  _finishString();  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    true;    _finishString();    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
34	[BUG]  [BUGGY]  _finishString();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  _finishString();  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	_finishString();	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    true;    _finishString();    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
35	[BUG]  [BUGGY]  _textBuffer.contentsAsString();  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  _textBuffer.contentsAsString();  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	_textBuffer.contentsAsString();	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    true;    _finishString();    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
36	[BUG]  [BUGGY]  return  _textBuffer.contentsAsString().toLowerCase();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _textBuffer.contentsAsString().toLowerCase();  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _textBuffer.contentsAsString().toLowerCase();	  return    _textBuffer.contentsAsString().trim();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
37	[BUG]  [BUGGY]  return  _textBuffer.contentsAsString().trim()  +  1;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _textBuffer.contentsAsString().trim()  +  1;  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _textBuffer.contentsAsString().trim()  +  1;	  return    _textBuffer.contentsAsString().trim();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
38	[BUG]  [BUGGY]  String[]  buf  =  t.toCharArray();  if(buf.length  >  0)  {  return  t.toString();  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  String[]  buf  =  t.toCharArray();  if(buf.length  >  0)  {  return  t.toString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	String[]  buf  =  t.toCharArray();  if(buf.length  >  0)  {  return  t.toString();  }	  if(t    ==    JsonToken.VALUE_STRING)    {    char[]    buf    =    t.toCharArray();    if(buf.length    >    0)    {    return    t.toString();    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
39	[BUG]  [BUGGY]  String[]  buf  =  t.toCharArray();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  String[]  buf  =  t.toCharArray();  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	String[]  buf  =  t.toCharArray();	  if(t    ==    JsonToken.VALUE_STRING)    {    char[]    buf    =    t.toCharArray();    if(buf.length    >    0)    {    return    t.toString();    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
40	[BUG]  [BUGGY]  char[]  buf  =  t.toCharArray();  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  char[]  buf  =  t.toCharArray();  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	char[]  buf  =  t.toCharArray();	  if(t    ==    JsonToken.VALUE_STRING)    {    char[]    buf    =    t.toCharArray();    if(buf.length    >    0)    {    return    t.toString();    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
41	[BUG]  [BUGGY]  char[]  buf  =  t.toCharArray();  if(buf.length  >  0)  {  return  t.toString();  }  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  char[]  buf  =  t.toCharArray();  if(buf.length  >  0)  {  return  t.toString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	char[]  buf  =  t.toCharArray();  if(buf.length  >  0)  {  return  t.toString();  }	  if(t    ==    JsonToken.VALUE_STRING)    {    char[]    buf    =    t.toCharArray();    if(buf.length    >    0)    {    return    t.toString();    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
42	[BUG]  [BUGGY]  _bufferRecyclable  =  false;  _finishString();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  _bufferRecyclable  =  false;  _finishString();  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	_bufferRecyclable  =  false;  _finishString();	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_bufferRecyclable)    {    _bufferRecyclable    =    false;    _finishString();    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
43	[BUG]  [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  _tokenIncomplete  =  false;  _finishString();  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  _tokenIncomplete  =  false;  _finishString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	||  t  ==  JsonToken.VALUE_STRING)  {  _tokenIncomplete  =  false;  _finishString();  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    false;    _finishString();    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
44	[BUG]  [BUGGY]  _tokenIncomplete  =  false;  _finishString();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  _tokenIncomplete  =  false;  _finishString();  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	_tokenIncomplete  =  false;  _finishString();	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    false;    _finishString();    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
45	[BUG]  [BUGGY]  return  _getText2(t,  JsonToken.VALUE_STRING,  _textBuffer.contentsAsString());  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText2(t,  JsonToken.VALUE_STRING,  _textBuffer.contentsAsString());  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText2(t,  JsonToken.VALUE_STRING,  _textBuffer.contentsAsString());	  return    _getText2(t,    JsonToken.VALUE_STRING,    _textBuffer);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
46	[BUG]  [BUGGY]  return  _getText2(JsonToken.VALUE_STRING,  _textBuffer.contentsAsString());  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText2(JsonToken.VALUE_STRING,  _textBuffer.contentsAsString());  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText2(JsonToken.VALUE_STRING,  _textBuffer.contentsAsString());	  return    _getText2(t,    JsonToken.VALUE_STRING,    _textBuffer);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
47	[BUG]  [BUGGY]  return  _getText2(_textBuffer,  JsonToken.VALUE_STRING);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText2(_textBuffer,  JsonToken.VALUE_STRING);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText2(_textBuffer,  JsonToken.VALUE_STRING);	  return    _getText2(t,    JsonToken.VALUE_STRING,    _textBuffer);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
48	[BUG]  [BUGGY]  return  _getText2(jsonToken,  JsonToken.VALUE_STRING,  _textBuffer);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText2(jsonToken,  JsonToken.VALUE_STRING,  _textBuffer);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText2(jsonToken,  JsonToken.VALUE_STRING,  _textBuffer);	  return    _getText2(t,    JsonToken.VALUE_STRING,    _textBuffer);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
49	[BUG]  [BUGGY]  ||  _currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  ||  _currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	||  _currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
50	[BUG]  [BUGGY]  return  _getText1(t,  JsonToken.VALUE_STRING,  _textBuffer);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText1(t,  JsonToken.VALUE_STRING,  _textBuffer);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText1(t,  JsonToken.VALUE_STRING,  _textBuffer);	  return    _getText1(t,    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
51	[BUG]  [BUGGY]  return  _getText1(t,  JsonToken.VALUE_STRING,  _currToken);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText1(t,  JsonToken.VALUE_STRING,  _currToken);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText1(t,  JsonToken.VALUE_STRING,  _currToken);	  return    _getText1(t,    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
52	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText(t,  JsonToken.VALUE_STRING);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText(t,  JsonToken.VALUE_STRING);  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText(t,  JsonToken.VALUE_STRING);  }	  return    _getText(t,    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
53	[BUG]  [BUGGY]  return  _getText(jsonToken,  JsonToken.VALUE_STRING);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText(jsonToken,  JsonToken.VALUE_STRING);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText(jsonToken,  JsonToken.VALUE_STRING);	  return    _getText(t,    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
54	[BUG]  [BUGGY]  return  _getText(t,  JsonToken.VALUE_STRING,  _currToken);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText(t,  JsonToken.VALUE_STRING,  _currToken);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText(t,  JsonToken.VALUE_STRING,  _currToken);	  return    _getText(t,    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
55	[BUG]  [BUGGY]  return  _getText2(JsonToken.VALUE_STRING,  t,  _currToken);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText2(JsonToken.VALUE_STRING,  t,  _currToken);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText2(JsonToken.VALUE_STRING,  t,  _currToken);	  return    _getText2(JsonToken.VALUE_STRING,    t);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
56	[BUG]  [BUGGY]  return  _getText1(JsonToken.VALUE_STRING,  t);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText1(JsonToken.VALUE_STRING,  t);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText1(JsonToken.VALUE_STRING,  t);	  return    _getText2(JsonToken.VALUE_STRING,    t);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
57	[BUG]  [BUGGY]  return  _getText2(JsonToken.VALUE_STRING,  t,  _textBuffer);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText2(JsonToken.VALUE_STRING,  t,  _textBuffer);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText2(JsonToken.VALUE_STRING,  t,  _textBuffer);	  return    _getText2(JsonToken.VALUE_STRING,    t);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
58	[BUG]  [BUGGY]  return  _getText0(jsonToken,  JsonToken.VALUE_STRING);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText0(jsonToken,  JsonToken.VALUE_STRING);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText0(jsonToken,  JsonToken.VALUE_STRING);	  return    _getText0(t,    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
59	[BUG]  [BUGGY]  return  _getText0(t,  JsonToken.VALUE_STRING,  _currToken);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText0(t,  JsonToken.VALUE_STRING,  _currToken);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText0(t,  JsonToken.VALUE_STRING,  _currToken);	  return    _getText0(t,    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
60	[BUG]  [BUGGY]  return  _textBuffer.getText0(t,  _hashSeed);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _textBuffer.getText0(t,  _hashSeed);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _textBuffer.getText0(t,  _hashSeed);	  return    _textBuffer.getText0(t);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
61	[BUG]  [BUGGY]  return  _textBuffer.getText0(t,  _currToken);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _textBuffer.getText0(t,  _currToken);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _textBuffer.getText0(t,  _currToken);	  return    _textBuffer.getText0(t);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
62	[BUG]  [BUGGY]  return  t.trim();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  t.trim();  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  t.trim();	  return    _getText().trim();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
63	[BUG]  [BUGGY]  return  _getText().toLowerCase();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText().toLowerCase();  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText().toLowerCase();	  return    _getText().trim();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
64	[BUG]  [BUGGY]  return  _getText().toString();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText().toString();  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText().toString();	  return    _getText().trim();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
65	[BUG]  [BUGGY]  ||  _currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  ||  _currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	||  _currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.VALUE_STRING;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
66	[BUG]  [BUGGY]  ||  _currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  ||  _currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	||  _currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.VALUE_STRING;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
67	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.getText();  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.getText();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.getText();  }	  return    _textBuffer.getText();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
68	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.getText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.getText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.getText();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    _textBuffer.getText();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
69	[BUG]  [BUGGY]  return  _getText(JsonToken.VALUE_STRING,  t.toString());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText(JsonToken.VALUE_STRING,  t.toString());  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText(JsonToken.VALUE_STRING,  t.toString());	  return    _getText(t.toString());    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
70	[BUG]  [BUGGY]  return  _getText(jsonToken.toString());  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText(jsonToken.toString());  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText(jsonToken.toString());	  return    _getText(t.toString());    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
71	[BUG]  [BUGGY]  ||  _currToken!=  JsonToken.FIELD_NAME)  {  _currToken  =  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  ||  _currToken!=  JsonToken.FIELD_NAME)  {  _currToken  =  JsonToken.END_OBJECT;  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	||  _currToken!=  JsonToken.FIELD_NAME)  {  _currToken  =  JsonToken.END_OBJECT;  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    _currToken    =    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
72	[BUG]  [BUGGY]  ||  _currToken!=  JsonToken.FIELD_NAME)  {  _currToken  =  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  ||  _currToken!=  JsonToken.FIELD_NAME)  {  _currToken  =  JsonToken.END_OBJECT;  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	||  _currToken!=  JsonToken.FIELD_NAME)  {  _currToken  =  JsonToken.END_OBJECT;	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    _currToken    =    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
73	[BUG]  [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.contentsAsString();  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.contentsAsString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	||  t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.contentsAsString();  }	  if(t    ==    JsonToken.VALUE_STRING)    {    return    _textBuffer.contentsAsString();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
74	[BUG]  [BUGGY]  StringBuffer  s  =  new  StringBuffer(_textBuffer.contentsAsString());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  StringBuffer  s  =  new  StringBuffer(_textBuffer.contentsAsString());  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	StringBuffer  s  =  new  StringBuffer(_textBuffer.contentsAsString());	  if(t    ==    JsonToken.VALUE_STRING)    {    return    _textBuffer.contentsAsString();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
75	[BUG]  [BUGGY]  if(_currToken!=  null)  {  if(t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  return  _textBuffer.contentsAsString();  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(_currToken!=  null)  {  if(t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  return  _textBuffer.contentsAsString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(_currToken!=  null)  {  if(t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  return  _textBuffer.contentsAsString();  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    null)    {    _currToken    =    JsonToken.FIELD_NAME;    return    _textBuffer.contentsAsString();    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
76	[BUG]  [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  null)  {  _currToken  =  JsonToken.FIELD_NAME;  return  _textBuffer.contentsAsString();  }  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  null)  {  _currToken  =  JsonToken.FIELD_NAME;  return  _textBuffer.contentsAsString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	||  t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  null)  {  _currToken  =  JsonToken.FIELD_NAME;  return  _textBuffer.contentsAsString();  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    null)    {    _currToken    =    JsonToken.FIELD_NAME;    return    _textBuffer.contentsAsString();    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
77	[BUG]  [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  return  _textBuffer.contentsAsString();  }  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  return  _textBuffer.contentsAsString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	||  t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  return  _textBuffer.contentsAsString();  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    null)    {    _currToken    =    JsonToken.FIELD_NAME;    return    _textBuffer.contentsAsString();    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
78	[BUG]  [BUGGY]  return(_textBuffer.contentsAsString()  ==  JsonToken.VALUE_STRING)?  t  :  _textBuffer.contentsAsString();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return(_textBuffer.contentsAsString()  ==  JsonToken.VALUE_STRING)?  t  :  _textBuffer.contentsAsString();  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return(_textBuffer.contentsAsString()  ==  JsonToken.VALUE_STRING)?  t  :  _textBuffer.contentsAsString();	  return    _textBuffer.contentsAsString()    +    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
79	[BUG]  [BUGGY]  return(_textBuffer.contentsAsString()  ==  JsonToken.VALUE_STRING)?  null  :  _textBuffer.contentsAsString();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return(_textBuffer.contentsAsString()  ==  JsonToken.VALUE_STRING)?  null  :  _textBuffer.contentsAsString();  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return(_textBuffer.contentsAsString()  ==  JsonToken.VALUE_STRING)?  null  :  _textBuffer.contentsAsString();	  return    _textBuffer.contentsAsString()    +    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
80	[BUG]  [BUGGY]  return(_textBuffer.contentsAsString()  ==  null)?  null  :  _textBuffer.contentsAsString();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return(_textBuffer.contentsAsString()  ==  null)?  null  :  _textBuffer.contentsAsString();  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return(_textBuffer.contentsAsString()  ==  null)?  null  :  _textBuffer.contentsAsString();	  return    _textBuffer.contentsAsString()    +    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
81	[BUG]  [BUGGY]  return  _textBuffer.getText(t,  _currToken);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _textBuffer.getText(t,  _currToken);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _textBuffer.getText(t,  _currToken);	  return    _textBuffer.getText(t);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
82	[BUG]  [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.contentsAsString();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.contentsAsString();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	||  t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.contentsAsString();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(t    ==    JsonToken.VALUE_STRING)    {    return    _textBuffer.contentsAsString();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
83	[BUG]  [BUGGY]  return  _getText0(JsonToken.FIELD_NAME,  t);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText0(JsonToken.FIELD_NAME,  t);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText0(JsonToken.FIELD_NAME,  t);	  return    _getText0(JsonToken.FIELD_NAME);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
84	[BUG]  [BUGGY]  if(t  ==  JsonToken.FIELD_NAME)  {  return  _getText0(JsonToken.FIELD_NAME);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.FIELD_NAME)  {  return  _getText0(JsonToken.FIELD_NAME);  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.FIELD_NAME)  {  return  _getText0(JsonToken.FIELD_NAME);  }	  return    _getText0(JsonToken.FIELD_NAME);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
85	[BUG]  [BUGGY]  if(t  ==  JsonToken.FIELD_NAME)  {  return  _getText0(JsonToken.FIELD_NAME);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.FIELD_NAME)  {  return  _getText0(JsonToken.FIELD_NAME);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.FIELD_NAME)  {  return  _getText0(JsonToken.FIELD_NAME);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    _getText0(JsonToken.FIELD_NAME);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
86	[BUG]  [BUGGY]  return  _getText2(_currToken,  JsonToken.VALUE_STRING);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText2(_currToken,  JsonToken.VALUE_STRING);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText2(_currToken,  JsonToken.VALUE_STRING);	  return    _getText2(t,    JsonToken.VALUE_STRING,    _currToken);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
87	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _getText2(t,  JsonToken.VALUE_STRING,  _currToken);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _getText2(t,  JsonToken.VALUE_STRING,  _currToken);  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _getText2(t,  JsonToken.VALUE_STRING,  _currToken);  }	  return    _getText2(t,    JsonToken.VALUE_STRING,    _currToken);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
88	[BUG]  [BUGGY]  return  _getText2(jsonToken,  JsonToken.VALUE_STRING,  _currToken);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText2(jsonToken,  JsonToken.VALUE_STRING,  _currToken);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText2(jsonToken,  JsonToken.VALUE_STRING,  _currToken);	  return    _getText2(t,    JsonToken.VALUE_STRING,    _currToken);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
89	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _getText2(t,  JsonToken.VALUE_STRING,  _currToken);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _getText2(t,  JsonToken.VALUE_STRING,  _currToken);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _getText2(t,  JsonToken.VALUE_STRING,  _currToken);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    _getText2(t,    JsonToken.VALUE_STRING,    _currToken);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
90	[BUG]  [BUGGY]  return  t.getText()  +  1;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  t.getText()  +  1;  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  t.getText()  +  1;	  return    t.getText();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
91	[BUG]  [BUGGY]  return  _getText1(t,  JsonToken.VALUE_STRING,  _textBuffer.contentsAsString());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText1(t,  JsonToken.VALUE_STRING,  _textBuffer.contentsAsString());  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText1(t,  JsonToken.VALUE_STRING,  _textBuffer.contentsAsString());	  return    _getText1(t,    _textBuffer.contentsAsString());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
92	[BUG]  [BUGGY]  return  _getText1(t,  _textBuffer.contentsAsString(),  JsonToken.VALUE_STRING);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText1(t,  _textBuffer.contentsAsString(),  JsonToken.VALUE_STRING);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText1(t,  _textBuffer.contentsAsString(),  JsonToken.VALUE_STRING);	  return    _getText1(t,    _textBuffer.contentsAsString());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
93	[BUG]  [BUGGY]  return  _getText2(t,  _textBuffer.contentsAsString());  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText2(t,  _textBuffer.contentsAsString());  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText2(t,  _textBuffer.contentsAsString());	  return    _getText1(t,    _textBuffer.contentsAsString());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
94	[BUG]  [BUGGY]  return  _getText2(JsonToken.VALUE_STRING,  _textBuffer);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText2(JsonToken.VALUE_STRING,  _textBuffer);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText2(JsonToken.VALUE_STRING,  _textBuffer);	  return    _getText2(JsonToken.VALUE_STRING,    t);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
95	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_tokenRecyclable)  {  _bufferRecyclable  =  false;  _finishString();  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_tokenRecyclable)  {  _bufferRecyclable  =  false;  _finishString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  if(_tokenRecyclable)  {  _bufferRecyclable  =  false;  _finishString();  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_bufferRecyclable)    {    _bufferRecyclable    =    false;    _finishString();    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
96	[BUG]  [BUGGY]  ||  _currToken!=  null)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  ||  _currToken!=  null)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	||  _currToken!=  null)  {  _currToken  =  JsonToken.VALUE_STRING;  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    null)    {    _currToken    =    JsonToken.VALUE_STRING;    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
97	[BUG]  [BUGGY]  ||  _currToken!=  JsonToken.FIELD_NAME)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  ||  _currToken!=  JsonToken.FIELD_NAME)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	||  _currToken!=  JsonToken.FIELD_NAME)  {  _currToken  =  JsonToken.FIELD_NAME;  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
98	[BUG]  [BUGGY]  ||  _currToken!=  JsonToken.FIELD_NAME)  {  _currToken  =  JsonToken.FIELD_NAME;  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  ||  _currToken!=  JsonToken.FIELD_NAME)  {  _currToken  =  JsonToken.FIELD_NAME;  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	||  _currToken!=  JsonToken.FIELD_NAME)  {  _currToken  =  JsonToken.FIELD_NAME;	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
99	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currTokenIncomplete  =  false;  _finishString();  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currTokenIncomplete  =  false;  _finishString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currTokenIncomplete  =  false;  _finishString();  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    false;    _finishString();    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
100	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_bufferRecyclable)  {  _tokenIncomplete  =  false;  _finishString();  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_bufferRecyclable)  {  _tokenIncomplete  =  false;  _finishString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  if(_bufferRecyclable)  {  _tokenIncomplete  =  false;  _finishString();  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    false;    _finishString();    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
101	[BUG]  [BUGGY]  return  _getText(JsonToken.FIELD_NAME);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText(JsonToken.FIELD_NAME);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText(JsonToken.FIELD_NAME);	  return    _getText0(JsonToken.FIELD_NAME);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
102	[BUG]  [BUGGY]  return  _getText1(JsonToken.FIELD_NAME);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText1(JsonToken.FIELD_NAME);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText1(JsonToken.FIELD_NAME);	  return    _getText0(JsonToken.FIELD_NAME);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
103	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText(t,  JsonToken.VALUE_STRING);  }  else  {  return  _textBuffer.contentsAsString();  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText(t,  JsonToken.VALUE_STRING);  }  else  {  return  _textBuffer.contentsAsString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText(t,  JsonToken.VALUE_STRING);  }  else  {  return  _textBuffer.contentsAsString();  }	  return    _getText(t,    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
104	[BUG]  [BUGGY]  return  _textBuffer.contentsAsText()  +  1;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _textBuffer.contentsAsText()  +  1;  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _textBuffer.contentsAsText()  +  1;	  return    _textBuffer.contentsAsText();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
105	[BUG]  [BUGGY]  return  _textBuffer.contentsAsText().trim();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _textBuffer.contentsAsText().trim();  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _textBuffer.contentsAsText().trim();	  return    _textBuffer.contentsAsText();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
106	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING  ||  t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.contentsAsString();  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING  ||  t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.contentsAsString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING  ||  t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.contentsAsString();  }	  if(t    ==    JsonToken.VALUE_STRING)    {    return    _textBuffer.contentsAsString();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
107	[BUG]  [BUGGY]  return  _getText2(JsonToken.VALUE_STRING,  _textBuffer.length);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText2(JsonToken.VALUE_STRING,  _textBuffer.length);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText2(JsonToken.VALUE_STRING,  _textBuffer.length);	  return    _getText2(t,    JsonToken.VALUE_STRING,    _textBuffer);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
108	[BUG]  [BUGGY]  return  _getText1(JsonToken.VALUE_STRING,  _textBuffer.contentsAsString());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText1(JsonToken.VALUE_STRING,  _textBuffer.contentsAsString());  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText1(JsonToken.VALUE_STRING,  _textBuffer.contentsAsString());	  return    _getText1(t,    _textBuffer.contentsAsString());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
109	[BUG]  [BUGGY]  return  _getText0(t,  _textBuffer.contentsAsString());  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText0(t,  _textBuffer.contentsAsString());  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText0(t,  _textBuffer.contentsAsString());	  return    _getText1(t,    _textBuffer.contentsAsString());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
110	[BUG]  [BUGGY]  return  _textBuffer.getTextAsString();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _textBuffer.getTextAsString();  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _textBuffer.getTextAsString();	  return    _textBuffer.getText(t);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
111	[BUG]  [BUGGY]  return  _textBuffer.getText(_currToken);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _textBuffer.getText(_currToken);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _textBuffer.getText(_currToken);	  return    _textBuffer.getText(t);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
112	[BUG]  [BUGGY]  if(_currToken  ==  null)  {  if(t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  return  _textBuffer.contentsAsString();  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(_currToken  ==  null)  {  if(t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  return  _textBuffer.contentsAsString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(_currToken  ==  null)  {  if(t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  return  _textBuffer.contentsAsString();  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    null)    {    _currToken    =    JsonToken.FIELD_NAME;    return    _textBuffer.contentsAsString();    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
113	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  null)  {  _currToken  =  JsonToken.FIELD_NAME;  return  _textBuffer.contentsAsString();  }  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  null)  {  _currToken  =  JsonToken.FIELD_NAME;  return  _textBuffer.contentsAsString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  null)  {  _currToken  =  JsonToken.FIELD_NAME;  return  _textBuffer.contentsAsString();  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    null)    {    _currToken    =    JsonToken.FIELD_NAME;    return    _textBuffer.contentsAsString();    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
114	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(_textBuffer.contentsAsString());  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  StringBuffer  buf  =  new  StringBuffer(_textBuffer.contentsAsString());  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	StringBuffer  buf  =  new  StringBuffer(_textBuffer.contentsAsString());	  if(t    ==    JsonToken.VALUE_STRING)    {    char[]    buf    =    t.toCharArray();    if(buf.length    >    0)    {    return    t.toString();    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
115	[BUG]  [BUGGY]  return(_textBuffer.contentsAsString()  +  1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return(_textBuffer.contentsAsString()  +  1);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return(_textBuffer.contentsAsString()  +  1);	  return    _textBuffer.contentsAsString()    +    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
116	[BUG]  [BUGGY]  return  _getText2(JsonToken.VALUE_STRING,  _textBuffer,  _currToken);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText2(JsonToken.VALUE_STRING,  _textBuffer,  _currToken);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText2(JsonToken.VALUE_STRING,  _textBuffer,  _currToken);	  return    _getText2(t,    JsonToken.VALUE_STRING,    _currToken);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
117	[BUG]  [BUGGY]  return  _textBuffer.getText1(t);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _textBuffer.getText1(t);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _textBuffer.getText1(t);	  return    _textBuffer.getText0(t);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
118	[BUG]  [BUGGY]  return  _textBuffer.contentsAsString().substring(0,  _textBuffer.length()  -  1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _textBuffer.contentsAsString().substring(0,  _textBuffer.length()  -  1);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _textBuffer.contentsAsString().substring(0,  _textBuffer.length()  -  1);	  return    _textBuffer.contentsAsString().trim();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
119	[BUG]  [BUGGY]  return  _getText1(JsonToken.VALUE_STRING);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText1(JsonToken.VALUE_STRING);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText1(JsonToken.VALUE_STRING);	  return    _getText0(JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
120	[BUG]  [BUGGY]  return(t  ==  JsonToken.VALUE_STRING)?  _textBuffer.contentsAsString()  :  _getText();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return(t  ==  JsonToken.VALUE_STRING)?  _textBuffer.contentsAsString()  :  _getText();  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return(t  ==  JsonToken.VALUE_STRING)?  _textBuffer.contentsAsString()  :  _getText();	  return(t    ==    JsonToken.VALUE_STRING)?    t    :    _getText();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
121	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
122	[BUG]  [BUGGY]  ||  _currToken!=  JsonToken.FIELD_NAME)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  ||  _currToken!=  JsonToken.FIELD_NAME)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	||  _currToken!=  JsonToken.FIELD_NAME)  {  _currToken  =  JsonToken.VALUE_STRING;  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
123	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText0(JsonToken.VALUE_STRING);  }  else  {  return  t.toString();  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText0(JsonToken.VALUE_STRING);  }  else  {  return  t.toString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText0(JsonToken.VALUE_STRING);  }  else  {  return  t.toString();  }	  return    _getText0(JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
124	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING  ||  t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.contentsAsString();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING  ||  t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.contentsAsString();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING  ||  t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.contentsAsString();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(t    ==    JsonToken.VALUE_STRING)    {    return    _textBuffer.contentsAsString();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
125	[BUG]  [BUGGY]  return  _textBuffer.contentsAsString().toCharArray();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _textBuffer.contentsAsString().toCharArray();  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _textBuffer.contentsAsString().toCharArray();	  return    _textBuffer.contentsAsString().trim();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
126	[BUG]  [BUGGY]  return  _getText(t,  JsonToken.VALUE_STRING,  _textBuffer.contentsAsString());  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText(t,  JsonToken.VALUE_STRING,  _textBuffer.contentsAsString());  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText(t,  JsonToken.VALUE_STRING,  _textBuffer.contentsAsString());	  return    _getText2(t,    JsonToken.VALUE_STRING,    _textBuffer);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
127	[BUG]  [BUGGY]  return(t  ==  JsonToken.VALUE_STRING)?  _tokenIncomplete  :  _getText();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return(t  ==  JsonToken.VALUE_STRING)?  _tokenIncomplete  :  _getText();  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return(t  ==  JsonToken.VALUE_STRING)?  _tokenIncomplete  :  _getText();	  return(t    ==    JsonToken.VALUE_STRING)?    t    :    _getText();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
128	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_tokenIncomplete)  {  _bufferRecyclable  =  false;  _finishString();  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_tokenIncomplete)  {  _bufferRecyclable  =  false;  _finishString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  if(_tokenIncomplete)  {  _bufferRecyclable  =  false;  _finishString();  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_bufferRecyclable)    {    _bufferRecyclable    =    false;    _finishString();    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
129	[BUG]  [BUGGY]  return(_textBuffer.contentsAsString()  ==  JsonToken.VALUE_STRING)?  t  :  null;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return(_textBuffer.contentsAsString()  ==  JsonToken.VALUE_STRING)?  t  :  null;  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return(_textBuffer.contentsAsString()  ==  JsonToken.VALUE_STRING)?  t  :  null;	  return    _textBuffer.contentsAsString()    +    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
130	[BUG]  [BUGGY]  return(t  ==  JsonToken.VALUE_STRING)?  t  :  _getText().trim();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return(t  ==  JsonToken.VALUE_STRING)?  t  :  _getText().trim();  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return(t  ==  JsonToken.VALUE_STRING)?  t  :  _getText().trim();	  return    _getText().trim();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
131	[BUG]  [BUGGY]  return(t  ==  JsonToken.VALUE_STRING  ||  t  ==  JsonToken.VALUE_STRING)?  t  :  _getText().trim();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return(t  ==  JsonToken.VALUE_STRING  ||  t  ==  JsonToken.VALUE_STRING)?  t  :  _getText().trim();  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return(t  ==  JsonToken.VALUE_STRING  ||  t  ==  JsonToken.VALUE_STRING)?  t  :  _getText().trim();	  return    _getText().trim();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
132	[BUG]  [BUGGY]  return(t  ==  JsonToken.VALUE_STRING  ||  t  ==  JsonToken.VALUE_STRING)?  t  :  _getText();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return(t  ==  JsonToken.VALUE_STRING  ||  t  ==  JsonToken.VALUE_STRING)?  t  :  _getText();  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return(t  ==  JsonToken.VALUE_STRING  ||  t  ==  JsonToken.VALUE_STRING)?  t  :  _getText();	  return    _getText().trim();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
133	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText0(t,  JsonToken.VALUE_STRING);  }  else  {  return  _textBuffer.contentsAsString();  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText0(t,  JsonToken.VALUE_STRING);  }  else  {  return  _textBuffer.contentsAsString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText0(t,  JsonToken.VALUE_STRING);  }  else  {  return  _textBuffer.contentsAsString();  }	  return    _getText0(t,    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
134	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  _currToken  =  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  _currToken  =  JsonToken.END_OBJECT;  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  _currToken  =  JsonToken.END_OBJECT;  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    _currToken    =    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
135	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  _currToken  =  JsonToken.END_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  _currToken  =  JsonToken.END_ARRAY;  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  _currToken  =  JsonToken.END_ARRAY;  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    _currToken    =    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
136	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING  ||  t  ==  JsonToken.VALUE_STRING)  {  return  _getText2(t,  JsonToken.VALUE_STRING);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING  ||  t  ==  JsonToken.VALUE_STRING)  {  return  _getText2(t,  JsonToken.VALUE_STRING);  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING  ||  t  ==  JsonToken.VALUE_STRING)  {  return  _getText2(t,  JsonToken.VALUE_STRING);  }	  if(t    ==    JsonToken.VALUE_STRING)    {    return    _getText2(t,    JsonToken.VALUE_STRING);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
137	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  null)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  null)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  null)  {  _currToken  =  JsonToken.VALUE_STRING;  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    null)    {    _currToken    =    JsonToken.VALUE_STRING;    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
138	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.contentsAsQuotedString();  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.contentsAsQuotedString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.contentsAsQuotedString();  }	  if(t    ==    JsonToken.VALUE_STRING)    {    return    _textBuffer.contentsAsString();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
139	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText(JsonToken.VALUE_STRING);  }  else  {  return  t.toString();  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText(JsonToken.VALUE_STRING);  }  else  {  return  t.toString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  return  _getText(JsonToken.VALUE_STRING);  }  else  {  return  t.toString();  }	  return    _getText(JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
140	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.END_OBJECT;  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.END_OBJECT;  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.END_OBJECT;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
141	[BUG]  [BUGGY]  if(t!=  JsonToken.VALUE_STRING)  {  char[]  buf  =  t.toCharArray();  if(buf.length  >  0)  {  return  t.toString();  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t!=  JsonToken.VALUE_STRING)  {  char[]  buf  =  t.toCharArray();  if(buf.length  >  0)  {  return  t.toString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t!=  JsonToken.VALUE_STRING)  {  char[]  buf  =  t.toCharArray();  if(buf.length  >  0)  {  return  t.toString();  }	  if(t    ==    JsonToken.VALUE_STRING)    {    char[]    buf    =    t.toCharArray();    if(buf.length    >    0)    {    return    t.toString();    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
142	[BUG]  [BUGGY]  if(t!=  JsonToken.VALUE_STRING)  {  char[]  buf  =  t.toString();  if(buf.length  >  0)  {  return  buf.toString();  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t!=  JsonToken.VALUE_STRING)  {  char[]  buf  =  t.toString();  if(buf.length  >  0)  {  return  buf.toString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t!=  JsonToken.VALUE_STRING)  {  char[]  buf  =  t.toString();  if(buf.length  >  0)  {  return  buf.toString();  }	  if(t    ==    JsonToken.VALUE_STRING)    {    char[]    buf    =    t.toCharArray();    if(buf.length    >    0)    {    return    t.toString();    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
143	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  null)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  null)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  null)  {  _currToken  =  JsonToken.FIELD_NAME;  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    null)    {    _currToken    =    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
144	[BUG]  [BUGGY]  return  _getText2(_currToken,  JsonToken.VALUE_STRING,  t);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  return  _getText2(_currToken,  JsonToken.VALUE_STRING,  t);  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	return  _getText2(_currToken,  JsonToken.VALUE_STRING,  t);	  return    _getText2(t,    JsonToken.VALUE_STRING,    _currToken);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
145	[BUG]  [BUGGY]  if(t!=  JsonToken.VALUE_STRING)  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t!=  JsonToken.VALUE_STRING)  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t!=  JsonToken.VALUE_STRING)  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    false;    _finishString();    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
146	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING  ||  t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.getText();  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING  ||  t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.getText();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING  ||  t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.getText();  }	  return    _textBuffer.getText();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
147	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.getText();  }  else  {  return  _textBuffer.contentsAsString();  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.getText();  }  else  {  return  _textBuffer.contentsAsString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  return  _textBuffer.getText();  }  else  {  return  _textBuffer.contentsAsString();  }	  return    _textBuffer.getText(t);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
148	[BUG]  [BUGGY]  if(t!=  JsonToken.VALUE_STRING)  {  if(_currToken!=  null)  {  _currToken  =  JsonToken.FIELD_NAME;  return  _textBuffer.contentsAsString();  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t!=  JsonToken.VALUE_STRING)  {  if(_currToken!=  null)  {  _currToken  =  JsonToken.FIELD_NAME;  return  _textBuffer.contentsAsString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t!=  JsonToken.VALUE_STRING)  {  if(_currToken!=  null)  {  _currToken  =  JsonToken.FIELD_NAME;  return  _textBuffer.contentsAsString();  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    null)    {    _currToken    =    JsonToken.FIELD_NAME;    return    _textBuffer.contentsAsString();    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
149	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  null)  {  _currToken  =  JsonToken.FIELD_NAME;  return  _buffer.contentsAsString();  }  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  final  String  getText()  throws  IOException  {  JsonToken  t  =  _currToken;  if  (t  ==  JsonToken.VALUE_STRING)  {  if  (_tokenIncomplete)  {  _tokenIncomplete  =  false;  _finishString();  //  only  strings  can  be  incomplete  }  return  _textBuffer.contentsAsString();  }      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  null)  {  _currToken  =  JsonToken.FIELD_NAME;  return  _buffer.contentsAsString();  }  [BUGGY]      }  [CLASS]  ReaderBasedJsonParser  [METHOD]  getText  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  count  end  features  origPtr  start  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore9/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	237	237	2	replace	if(t  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  null)  {  _currToken  =  JsonToken.FIELD_NAME;  return  _buffer.contentsAsString();  }	  if(t    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=    null)    {    _currToken    =    JsonToken.FIELD_NAME;    return    _textBuffer.contentsAsString();    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
