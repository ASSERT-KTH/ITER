bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBigInteger(l  +  1);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBigInteger(l  +  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToBigInteger(l  +  1);	  this.gid    =    ZipUtil.longToBig(l    +    1);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
2	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  /  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	add	this.gid  =  ZipUtil.longToBig(l  /  1);	  this.gid    =    ZipUtil.longToBig(l    +    1);    	compilable	  [FE]  AssertionError  	3	1	replace
3	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  /  1);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  /  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToBig(l  /  1);	  this.gid    =    ZipUtil.longToBig(l    +    1);    	compilable	  [FE]  AssertionError  	3	1	replace
4	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  *  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	add	this.gid  =  ZipUtil.longToBig(l  *  1);	  this.gid    =    ZipUtil.longToBig(l    +    1);    	compilable	  [FE]  AssertionError  	3	1	replace
5	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  *  1);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  *  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToBig(l  *  1);	  this.gid    =    ZipUtil.longToBig(l    +    1);    	compilable	  [FE]  AssertionError  	3	1	replace
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  2);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	add	this.gid  =  ZipUtil.longToBig(l  +  2);	  this.gid    =    ZipUtil.longToBig(l    +    1);    	compilable	  [FE]  AssertionError  	3	1	replace
7	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  2);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  2);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToBig(l  +  2);	  this.gid    =    ZipUtil.longToBig(l    +    1);    	compilable	  [FE]  AssertionError  	3	1	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  2);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	add	this.gid  =  ZipUtil.longToBig(l  -  2);	  this.gid    =    ZipUtil.longToBig(l    -    1);    	compilable	  [FE]  AssertionError  	8	1	replace
9	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  2);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  2);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToBig(l  -  2);	  this.gid    =    ZipUtil.longToBig(l    -    1);    	compilable	  [FE]  AssertionError  	8	1	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  4);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	add	this.gid  =  ZipUtil.longToBig(l  -  4);	  this.gid    =    ZipUtil.longToBig(l    -    1);    	compilable	  [FE]  AssertionError  	8	1	replace
11	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  4);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  4);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToBig(l  -  4);	  this.gid    =    ZipUtil.longToBig(l    -    1);    	compilable	  [FE]  AssertionError  	8	1	replace
12	[BUG]  [BUGGY]  this.gid  =  ZipUtil.doubleToBig(l  +  1);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.doubleToBig(l  +  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.doubleToBig(l  +  1);	  this.gid    =    ZipUtil.doubleToBig(l);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
13	[BUG]  [BUGGY]  this.gid  =  ZipUtil.doubleToBig(l,  ONE_THOUSAND);  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.doubleToBig(l,  ONE_THOUSAND);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.doubleToBig(l,  ONE_THOUSAND);	  this.gid    =    ZipUtil.doubleToBig(l);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
14	[BUG]  [BUGGY]  this.gid  =  ZipUtil.doubleToBig(l,  BigInteger.MAX_VALUE);  [CE]  cannot  find  symbol  MAX_VALUE  [FE]                    AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.doubleToBig(l,  BigInteger.MAX_VALUE);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.doubleToBig(l,  BigInteger.MAX_VALUE);	  this.gid    =    ZipUtil.doubleToBig(l);    	non-compiled	[CE]  cannot  find  symbol  MAX_VALUE	6	None	replace
15	[BUG]  [BUGGY]  this.gid  =  ZipUtil.doubleToBig(l).longValue();  [CE]  cannot  find  symbol  [FE]                      AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.doubleToBig(l).longValue();  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.doubleToBig(l).longValue();	  this.gid    =    ZipUtil.doubleToBig(l);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
16	[BUG]  [BUGGY]  this.gid  =  ZipUtil.doubleToBig(l  -  1);  [CE]  cannot  find  symbol  [FE]                        AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.doubleToBig(l  -  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.doubleToBig(l  -  1);	  this.gid    =    ZipUtil.doubleToBig(l);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
17	[BUG]  [BUGGY]  this.gid  =  ZipUtil.doubleToBig(l)+  1;  [CE]  cannot  find  symbol  [FE]                          AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.doubleToBig(l)+  1;  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.doubleToBig(l)+  1;	  this.gid    =    ZipUtil.doubleToBig(l);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
18	[BUG]  [BUGGY]      this.gid  =  l;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]      this.gid  =  l;  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	        this.gid  =  l;	  	non-compiled	[CE]  incompatible  types	9	None	add
19	[BUG]  [BUGGY]      super.setGID(l);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]      super.setGID(l);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	        super.setGID(l);	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
20	[BUG]  [BUGGY]      this.gid  =  new  BigInteger(l);  [CE]  BigInteger(long)  has  private  access  in  BigInteger  [FE]        AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]      this.gid  =  new  BigInteger(l);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	        this.gid  =  new  BigInteger(l);	  	non-compiled	[CE]  BigInteger(long)  has  private  access  in  BigInteger	9	None	add
21	[BUG]  [BUGGY]      this.gid  =(long)Long.parseLong(l);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]          AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]      this.gid  =(long)Long.parseLong(l);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	        this.gid  =(long)Long.parseLong(l);	  	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	9	None	add
22	[BUG]  [BUGGY]      this.gid  =  new  Long(l);  [CE]  incompatible  types  [FE]            AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]      this.gid  =  new  Long(l);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	        this.gid  =  new  Long(l);	  	non-compiled	[CE]  incompatible  types	9	None	add
23	[BUG]  [BUGGY]      this.gid  =  new  BigInteger(Long.parseLong(l));  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]              AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]      this.gid  =  new  BigInteger(Long.parseLong(l));  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	        this.gid  =  new  BigInteger(Long.parseLong(l));	  	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	9	None	add
24	[BUG]  [BUGGY]      this.gid  =  new  BigInteger(Long.MAX_VALUE);  [CE]  BigInteger(long)  has  private  access  in  BigInteger  [FE]                AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]      this.gid  =  new  BigInteger(Long.MAX_VALUE);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	        this.gid  =  new  BigInteger(Long.MAX_VALUE);	  	non-compiled	[CE]  BigInteger(long)  has  private  access  in  BigInteger	9	None	add
25	[BUG]  [BUGGY]      this.gid  =  new  BigInteger(l).longValue();  [CE]  BigInteger(long)  has  private  access  in  BigInteger  [FE]                  AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]      this.gid  =  new  BigInteger(l).longValue();  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	        this.gid  =  new  BigInteger(l).longValue();	  	non-compiled	[CE]  BigInteger(long)  has  private  access  in  BigInteger	9	None	add
26	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBigDecimal(l,  ONE_THOUSAND);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBigDecimal(l,  ONE_THOUSAND);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToBigDecimal(l,  ONE_THOUSAND);	  this.gid    =    ZipUtil.longToBigDecimal(l);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
27	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBigDecimal(l  +  1);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBigDecimal(l  +  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToBigDecimal(l  +  1);	  this.gid    =    ZipUtil.longToBigDecimal(l);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
28	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBigDecimal(l,  version);  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBigDecimal(l,  version);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToBigDecimal(l,  version);	  this.gid    =    ZipUtil.longToBigDecimal(l);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
29	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBigDecimal(l  -  1);  [CE]  cannot  find  symbol  [FE]                    AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBigDecimal(l  -  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToBigDecimal(l  -  1);	  this.gid    =    ZipUtil.longToBigDecimal(l);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
30	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBigDecimal(l)+  1;  [CE]  cannot  find  symbol  [FE]                      AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBigDecimal(l)+  1;  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToBigDecimal(l)+  1;	  this.gid    =    ZipUtil.longToBigDecimal(l);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
31	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBigInteger(l,  ONE_THOUSAND);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBigInteger(l,  ONE_THOUSAND);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToBigInteger(l,  ONE_THOUSAND);	  this.gid    =    ZipUtil.longToBigInteger(l);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
32	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBigInteger(l,  version);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBigInteger(l,  version);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToBigInteger(l,  version);	  this.gid    =    ZipUtil.longToBigInteger(l);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
33	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBigInteger(Long.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBigInteger(Long.MAX_VALUE);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToBigInteger(Long.MAX_VALUE);	  this.gid    =    ZipUtil.longToBigInteger(l);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
34	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBigInteger(l  -  1);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBigInteger(l  -  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToBigInteger(l  -  1);	  this.gid    =    ZipUtil.longToBigInteger(l);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
35	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBigInteger(l,  0);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBigInteger(l,  0);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToBigInteger(l,  0);	  this.gid    =    ZipUtil.longToBigInteger(l);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
36	[BUG]  [BUGGY]  this.gid  =  ZipShort.longToBig(l,  ONE_THOUSAND);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipShort.longToBig(l,  ONE_THOUSAND);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipShort.longToBig(l,  ONE_THOUSAND);	  this.gid    =    ZipShort.longToBig(l);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
37	[BUG]  [BUGGY]  this.gid  =  ZipShort.longToBig(Long.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipShort.longToBig(Long.MAX_VALUE);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipShort.longToBig(Long.MAX_VALUE);	  this.gid    =    ZipShort.longToBig(l);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
38	[BUG]  [BUGGY]  this.gid  =  ZipShort.longToBig(l  +  1);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipShort.longToBig(l  +  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipShort.longToBig(l  +  1);	  this.gid    =    ZipShort.longToBig(l);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
39	[BUG]  [BUGGY]  this.gid  =  ZipShort.longToBig(l).longValue();  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipShort.longToBig(l).longValue();  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipShort.longToBig(l).longValue();	  this.gid    =    ZipShort.longToBig(l);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
40	[BUG]  [BUGGY]  this.gid  =  ZipShort.longToBig(l  -  1);  [CE]  cannot  find  symbol  [FE]                    AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipShort.longToBig(l  -  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipShort.longToBig(l  -  1);	  this.gid    =    ZipShort.longToBig(l);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
41	[BUG]  [BUGGY]  this.gid  =  ZipShort.longToBig(l)+  1;  [CE]  cannot  find  symbol  [FE]                      AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipShort.longToBig(l)+  1;  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipShort.longToBig(l)+  1;	  this.gid    =    ZipShort.longToBig(l);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
42	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToInteger(l,  version);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToInteger(l,  version);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToInteger(l,  version);	  this.gid    =    ZipUtil.longToInteger(l);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
43	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToInteger(l,  ONE_THOUSAND);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToInteger(l,  ONE_THOUSAND);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToInteger(l,  ONE_THOUSAND);	  this.gid    =    ZipUtil.longToInteger(l);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
44	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToInteger(Long.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToInteger(Long.MAX_VALUE);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToInteger(Long.MAX_VALUE);	  this.gid    =    ZipUtil.longToInteger(l);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
45	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToInteger(l  +  1);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToInteger(l  +  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToInteger(l  +  1);	  this.gid    =    ZipUtil.longToInteger(l);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
46	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToInteger(l,  0);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToInteger(l,  0);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToInteger(l,  0);	  this.gid    =    ZipUtil.longToInteger(l);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
47	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToInteger(l  -  1);  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToInteger(l  -  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToInteger(l  -  1);	  this.gid    =    ZipUtil.longToInteger(l);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
48	[BUG]  [BUGGY]  this.gid  =  ZipUtil.floatToBig(l  +  1);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.floatToBig(l  +  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.floatToBig(l  +  1);	  this.gid    =    ZipUtil.floatToBig(l);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
49	[BUG]  [BUGGY]  this.gid  =  ZipUtil.floatToBig(l,  BigInteger.MAX_VALUE);  [CE]  cannot  find  symbol  MAX_VALUE  [FE]          AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.floatToBig(l,  BigInteger.MAX_VALUE);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.floatToBig(l,  BigInteger.MAX_VALUE);	  this.gid    =    ZipUtil.floatToBig(l);    	non-compiled	[CE]  cannot  find  symbol  MAX_VALUE	11	None	replace
50	[BUG]  [BUGGY]  this.gid  =  ZipUtil.floatToBig(l,  ONE_THOUSAND);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.floatToBig(l,  ONE_THOUSAND);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.floatToBig(l,  ONE_THOUSAND);	  this.gid    =    ZipUtil.floatToBig(l);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
51	[BUG]  [BUGGY]  this.gid  =  ZipUtil.floatToBig(l,  BigInteger.MIN_VALUE);  [CE]  cannot  find  symbol  MIN_VALUE  [FE]              AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.floatToBig(l,  BigInteger.MIN_VALUE);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.floatToBig(l,  BigInteger.MIN_VALUE);	  this.gid    =    ZipUtil.floatToBig(l);    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	11	None	replace
52	[BUG]  [BUGGY]  this.gid  =  ZipUtil.floatToBig(l,  l);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.floatToBig(l,  l);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.floatToBig(l,  l);	  this.gid    =    ZipUtil.floatToBig(l);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
53	[BUG]  [BUGGY]  this.gid  =  ZipUtil.floatToBig(l  -  1);  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.floatToBig(l  -  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.floatToBig(l  -  1);	  this.gid    =    ZipUtil.floatToBig(l);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
54	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  this.gid  =  ZipUtil.longToBig(l  -  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	add	this.gid    =    ZipUtil.longToBig(l    -    1);    this.gid  =  ZipUtil.longToBig(l  -  1);	  	compilable	  [FE]  AssertionError  	7	1	add
55	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  this.gid  =  ZipUtil.longToBig(l  -  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  this.gid  =  ZipUtil.longToBig(l  -  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    -    1);    this.gid  =  ZipUtil.longToBig(l  -  1);	  	compilable	  [FE]  AssertionError  	7	1	add
56	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  This.gid  =  ZipUtil.longToBig(l  -  1);  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  This.gid  =  ZipUtil.longToBig(l  -  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    -    1);    This.gid  =  ZipUtil.longToBig(l  -  1);	  	non-compiled	[CE]  cannot  find  symbol  This	7	None	add
57	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  int  l  =  ZipUtil.longToBig(l  -  1);  [CE]  variable  l  is  already  defined  in  method  setGID(long)  [FE]        AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  int  l  =  ZipUtil.longToBig(l  -  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    -    1);    int  l  =  ZipUtil.longToBig(l  -  1);	  	non-compiled	[CE]  variable  l  is  already  defined  in  method  setGID(long)	7	None	add
58	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  int  uid  =  ZipUtil.longToBig(l  -  1);  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  int  uid  =  ZipUtil.longToBig(l  -  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    -    1);    int  uid  =  ZipUtil.longToBig(l  -  1);	  	non-compiled	[CE]  incompatible  types	7	None	add
59	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  this.gid  =  ZipUtil.longToBig(l  -  1);  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  this.gid  =  ZipUtil.longToBig(l  -  1);  }  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    -    1);    this.gid  =  ZipUtil.longToBig(l  -  1);  }	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
60	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  l  =  ZipUtil.longToBig(l  -  1);  [CE]  incompatible  types  [FE]              AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  l  =  ZipUtil.longToBig(l  -  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    -    1);    l  =  ZipUtil.longToBig(l  -  1);	  	non-compiled	[CE]  incompatible  types	7	None	add
61	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  gid  =  ZipUtil.longToBig(l  -  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	add	this.gid    =    ZipUtil.longToBig(l    -    1);    gid  =  ZipUtil.longToBig(l  -  1);	  	compilable	  [FE]  AssertionError  	7	1	add
62	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  gid  =  ZipUtil.longToBig(l  -  1);  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  gid  =  ZipUtil.longToBig(l  -  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    -    1);    gid  =  ZipUtil.longToBig(l  -  1);	  	compilable	  [FE]  AssertionError  	7	1	add
63	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  this.gid  =  ZipUtil.longToBig(l  +  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	add	this.gid    =    ZipUtil.longToBig(l    +    1);    this.gid  =  ZipUtil.longToBig(l  +  1);	  	compilable	  [FE]  AssertionError  	2	1	add
64	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  this.gid  =  ZipUtil.longToBig(l  +  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  this.gid  =  ZipUtil.longToBig(l  +  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    +    1);    this.gid  =  ZipUtil.longToBig(l  +  1);	  	compilable	  [FE]  AssertionError  	2	1	add
65	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  This.gid  =  ZipUtil.longToBig(l  +  1);  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  This.gid  =  ZipUtil.longToBig(l  +  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    +    1);    This.gid  =  ZipUtil.longToBig(l  +  1);	  	non-compiled	[CE]  cannot  find  symbol  This	2	None	add
66	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  int  uid  =  ZipUtil.longToBig(l  +  1);  [CE]  incompatible  types  [FE]        AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  int  uid  =  ZipUtil.longToBig(l  +  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    +    1);    int  uid  =  ZipUtil.longToBig(l  +  1);	  	non-compiled	[CE]  incompatible  types	2	None	add
67	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  int  l  =  ZipUtil.longToBig(l  +  1);  [CE]  variable  l  is  already  defined  in  method  setGID(long)  [FE]          AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  int  l  =  ZipUtil.longToBig(l  +  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    +    1);    int  l  =  ZipUtil.longToBig(l  +  1);	  	non-compiled	[CE]  variable  l  is  already  defined  in  method  setGID(long)	2	None	add
68	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  gid  =  ZipUtil.longToBig(l  +  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	add	this.gid    =    ZipUtil.longToBig(l    +    1);    gid  =  ZipUtil.longToBig(l  +  1);	  	compilable	  [FE]  AssertionError  	2	1	add
69	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  gid  =  ZipUtil.longToBig(l  +  1);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  gid  =  ZipUtil.longToBig(l  +  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    +    1);    gid  =  ZipUtil.longToBig(l  +  1);	  	compilable	  [FE]  AssertionError  	2	1	add
70	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  this.gid  =  ZipUtil.longToBig(l  +  1);  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  this.gid  =  ZipUtil.longToBig(l  +  1);  }  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    +    1);    this.gid  =  ZipUtil.longToBig(l  +  1);  }	  	non-compiled	[CE]  illegal  start  of  type	2	None	add
71	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  l  =  ZipUtil.longToBig(l  +  1);  [CE]  incompatible  types  [FE]                AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  l  =  ZipUtil.longToBig(l  +  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    +    1);    l  =  ZipUtil.longToBig(l  +  1);	  	non-compiled	[CE]  incompatible  types	2	None	add
72	[BUG]  [BUGGY]  this.gid  =  ZipShort.longToBig(l,  BigInteger.MAX_VALUE);  [CE]  cannot  find  symbol  MAX_VALUE  [FE]            AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipShort.longToBig(l,  BigInteger.MAX_VALUE);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipShort.longToBig(l,  BigInteger.MAX_VALUE);	  this.gid    =    ZipShort.longToBig(l);    	non-compiled	[CE]  cannot  find  symbol  MAX_VALUE	4	None	replace
73	[BUG]  [BUGGY]  this.gid  =  ZipShort.longToBig(l,  BigInteger.MIN_VALUE);  [CE]  cannot  find  symbol  MIN_VALUE  [FE]              AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipShort.longToBig(l,  BigInteger.MIN_VALUE);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipShort.longToBig(l,  BigInteger.MIN_VALUE);	  this.gid    =    ZipShort.longToBig(l);    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	4	None	replace
74	[BUG]  [BUGGY]  this.gid  =  ZipUtil.floatToBig(l).longValue();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.floatToBig(l).longValue();  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.floatToBig(l).longValue();	  this.gid    =    ZipUtil.floatToBig(l);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
75	[BUG]  [BUGGY]  this.gid  =  ZipUtil.doubleToBig(Long.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.doubleToBig(Long.MAX_VALUE);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.doubleToBig(Long.MAX_VALUE);	  this.gid    =    ZipUtil.doubleToBig(l);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
76	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBigInteger(Long.valueOf(l));  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBigInteger(Long.valueOf(l));  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToBigInteger(Long.valueOf(l));	  this.gid    =    ZipUtil.longToBigInteger(l);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
77	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBigInteger(l)+  1;  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBigInteger(l)+  1;  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToBigInteger(l)+  1;	  this.gid    =    ZipUtil.longToBigInteger(l);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
78	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToInteger(Long.valueOf(l));  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToInteger(Long.valueOf(l));  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToInteger(Long.valueOf(l));	  this.gid    =    ZipUtil.longToInteger(l);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
79	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToInteger(l)+  1;  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToInteger(l)+  1;  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToInteger(l)+  1;	  this.gid    =    ZipUtil.longToInteger(l);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
80	[BUG]  [BUGGY]  int  version  =  getVersion();  setGID(version,  l);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  int  version  =  getVersion();  setGID(version,  l);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	int  version  =  getVersion();  setGID(version,  l);	      	non-compiled	[CE]  cannot  find  symbol	10	None	replace
81	[BUG]  [BUGGY]  int  version  =  getVersion();  setGid(version,  l);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  int  version  =  getVersion();  setGid(version,  l);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	int  version  =  getVersion();  setGid(version,  l);	      	non-compiled	[CE]  cannot  find  symbol	10	None	replace
82	[BUG]  [BUGGY]      int  version  =  getVersion();  this.gid  =  l;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]      int  version  =  getVersion();  this.gid  =  l;  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	        int  version  =  getVersion();  this.gid  =  l;	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
83	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  long  l  =  ZipUtil.longToBig(l  -  1);  [CE]  variable  l  is  already  defined  in  method  setGID(long)  [FE]    AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  long  l  =  ZipUtil.longToBig(l  -  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    -    1);    long  l  =  ZipUtil.longToBig(l  -  1);	  	non-compiled	[CE]  variable  l  is  already  defined  in  method  setGID(long)	7	None	add
84	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  int  version  =  ZipUtil.longToBig(l  -  1);  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  int  version  =  ZipUtil.longToBig(l  -  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    -    1);    int  version  =  ZipUtil.longToBig(l  -  1);	  	non-compiled	[CE]  incompatible  types	7	None	add
85	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  this.uid  =  ZipUtil.longToBig(l  +  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	add	this.gid    =    ZipUtil.longToBig(l    +    1);    this.uid  =  ZipUtil.longToBig(l  +  1);	  	compilable	  [FE]  AssertionError  	2	1	add
86	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  this.uid  =  ZipUtil.longToBig(l  +  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  this.uid  =  ZipUtil.longToBig(l  +  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    +    1);    this.uid  =  ZipUtil.longToBig(l  +  1);	  	compilable	  [FE]  AssertionError  	2	1	add
87	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  this.id  =  ZipUtil.longToBig(l  +  1);  [CE]  cannot  find  symbol  id  [FE]      AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  this.id  =  ZipUtil.longToBig(l  +  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    +    1);    this.id  =  ZipUtil.longToBig(l  +  1);	  	non-compiled	[CE]  cannot  find  symbol  id	2	None	add
88	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  int  version  =  ZipUtil.longToBig(l  +  1);  [CE]  incompatible  types  [FE]        AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  int  version  =  ZipUtil.longToBig(l  +  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    +    1);    int  version  =  ZipUtil.longToBig(l  +  1);	  	non-compiled	[CE]  incompatible  types	2	None	add
89	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBigDecimal(l,  this.version);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBigDecimal(l,  this.version);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToBigDecimal(l,  this.version);	  this.gid    =    ZipUtil.longToBigDecimal(l);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
90	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBigDecimal(Long.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBigDecimal(Long.MAX_VALUE);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToBigDecimal(Long.MAX_VALUE);	  this.gid    =    ZipUtil.longToBigDecimal(l);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
91	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBigInteger(l,  this.version);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBigInteger(l,  this.version);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToBigInteger(l,  this.version);	  this.gid    =    ZipUtil.longToBigInteger(l);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
92	[BUG]  [BUGGY]  this.gid  =  ZipUtil.doubleToBig(l,  this.version);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.doubleToBig(l,  this.version);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.doubleToBig(l,  this.version);	  this.gid    =    ZipUtil.doubleToBig(l);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
93	[BUG]  [BUGGY]  this.gid  =  ZipUtil.doubleToBig(l,  l);  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.doubleToBig(l,  l);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.doubleToBig(l,  l);	  this.gid    =    ZipUtil.doubleToBig(l);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
94	[BUG]  [BUGGY]  this.gid  =  ZipUtil.floatToBig(l,  this.version);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.floatToBig(l,  this.version);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.floatToBig(l,  this.version);	  this.gid    =    ZipUtil.floatToBig(l);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
95	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  int  uid  =  ZipUtil.longToBig(l  -  1);  this.gid  =  ZipUtil.longToBig(l  -  1);  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  int  uid  =  ZipUtil.longToBig(l  -  1);  this.gid  =  ZipUtil.longToBig(l  -  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    -    1);    int  uid  =  ZipUtil.longToBig(l  -  1);  this.gid  =  ZipUtil.longToBig(l  -  1);	  	non-compiled	[CE]  incompatible  types	7	None	add
96	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  int  l  =  ZipUtil.longToBig(l  -  1);  this.gid  =  ZipUtil.longToBig(l  -  1);  [CE]  variable  l  is  already  defined  in  method  setGID(long)  [FE]      AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  int  l  =  ZipUtil.longToBig(l  -  1);  this.gid  =  ZipUtil.longToBig(l  -  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    -    1);    int  l  =  ZipUtil.longToBig(l  -  1);  this.gid  =  ZipUtil.longToBig(l  -  1);	  	non-compiled	[CE]  variable  l  is  already  defined  in  method  setGID(long)	7	None	add
97	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  int  version  =  ZipUtil.longToBig(l  -  1);  this.gid  =  ZipUtil.longToBig(version  -  1);  [CE]  incompatible  types  [FE]        AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  int  version  =  ZipUtil.longToBig(l  -  1);  this.gid  =  ZipUtil.longToBig(version  -  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    -    1);    int  version  =  ZipUtil.longToBig(l  -  1);  this.gid  =  ZipUtil.longToBig(version  -  1);	  	non-compiled	[CE]  incompatible  types	7	None	add
98	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  this.gid  =  ZipUtil.longToBig(l  -  1);  }  else  {  this.gid  =  ZipUtil.longToBig(l  -  1);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  this.gid  =  ZipUtil.longToBig(l  -  1);  }  else  {  this.gid  =  ZipUtil.longToBig(l  -  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    -    1);    this.gid  =  ZipUtil.longToBig(l  -  1);  }  else  {  this.gid  =  ZipUtil.longToBig(l  -  1);	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
99	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  this.gid  =  ZipUtil.longToBig(l  -  1);  }  else  {  this.uid  =  ZipUtil.longToBig(l  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  -  1);  this.gid  =  ZipUtil.longToBig(l  -  1);  }  else  {  this.uid  =  ZipUtil.longToBig(l  -  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    -    1);    this.gid  =  ZipUtil.longToBig(l  -  1);  }  else  {  this.uid  =  ZipUtil.longToBig(l  -  1);	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
100	[BUG]  [BUGGY]  this.gid  =  l.longToBig(ZipShort.LONG);  [CE]  cannot  find  symbol  LONG  [FE]            AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  l.longToBig(ZipShort.LONG);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  l.longToBig(ZipShort.LONG);	  this.gid    =    ZipShort.longToBig(l);    	non-compiled	[CE]  cannot  find  symbol  LONG	4	None	replace
101	[BUG]  [BUGGY]  this.gid  =  zipShort.longToBig(l);  [CE]  cannot  find  symbol  zipShort  [FE]              AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  zipShort.longToBig(l);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  zipShort.longToBig(l);	  this.gid    =    ZipShort.longToBig(l);    	non-compiled	[CE]  cannot  find  symbol  zipShort	4	None	replace
102	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  int  uid  =  ZipUtil.longToBig(l  +  1);  this.gid  =  ZipUtil.longToBig(l  +  1);  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  int  uid  =  ZipUtil.longToBig(l  +  1);  this.gid  =  ZipUtil.longToBig(l  +  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    +    1);    int  uid  =  ZipUtil.longToBig(l  +  1);  this.gid  =  ZipUtil.longToBig(l  +  1);	  	non-compiled	[CE]  incompatible  types	2	None	add
103	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  int  version  =  ZipUtil.longToBig(l  +  1);  this.gid  =  ZipUtil.longToBig(version  +  1);  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  int  version  =  ZipUtil.longToBig(l  +  1);  this.gid  =  ZipUtil.longToBig(version  +  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    +    1);    int  version  =  ZipUtil.longToBig(l  +  1);  this.gid  =  ZipUtil.longToBig(version  +  1);	  	non-compiled	[CE]  incompatible  types	2	None	add
104	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  this.gid  =  ZipUtil.longToBig(l  +  1);  }  else  {  this.gid  =  ZipUtil.longToBig(l  +  1);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  this.gid  =  ZipUtil.longToBig(l  +  1);  }  else  {  this.gid  =  ZipUtil.longToBig(l  +  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    +    1);    this.gid  =  ZipUtil.longToBig(l  +  1);  }  else  {  this.gid  =  ZipUtil.longToBig(l  +  1);	  	non-compiled	[CE]  illegal  start  of  type	2	None	add
105	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  this.gid  =  ZipUtil.longToBig(l  +  1);  uid  =  ZipUtil.longToBig(l  +  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	add	this.gid    =    ZipUtil.longToBig(l    +    1);    this.gid  =  ZipUtil.longToBig(l  +  1);  uid  =  ZipUtil.longToBig(l  +  1);	  	compilable	  [FE]  AssertionError  	2	1	add
106	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  this.gid  =  ZipUtil.longToBig(l  +  1);  uid  =  ZipUtil.longToBig(l  +  1);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  this.gid  =  ZipUtil.longToBig(l  +  1);  uid  =  ZipUtil.longToBig(l  +  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    +    1);    this.gid  =  ZipUtil.longToBig(l  +  1);  uid  =  ZipUtil.longToBig(l  +  1);	  	compilable	  [FE]  AssertionError  	2	1	add
107	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  this.gid  =  ZipUtil.longToBig(l  +  1);  }  else  {  this.uid  =  ZipUtil.longToBig(l  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  this.gid  =  ZipUtil.longToBig(l  +  1);  }  else  {  this.uid  =  ZipUtil.longToBig(l  +  1);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    +    1);    this.gid  =  ZipUtil.longToBig(l  +  1);  }  else  {  this.uid  =  ZipUtil.longToBig(l  +  1);	  	non-compiled	[CE]  illegal  start  of  type	2	None	add
108	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  this.gid  =  ZipUtil.longToBig(l  +  1);  }  else  {  this.gid  =  ZipUtil.longToBig(l  +  1);  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBig(l  +  1);  this.gid  =  ZipUtil.longToBig(l  +  1);  }  else  {  this.gid  =  ZipUtil.longToBig(l  +  1);  }  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid    =    ZipUtil.longToBig(l    +    1);    this.gid  =  ZipUtil.longToBig(l  +  1);  }  else  {  this.gid  =  ZipUtil.longToBig(l  +  1);  }	  	non-compiled	[CE]  illegal  start  of  type	2	None	add
109	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBigDecimal(l).longValue();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBigDecimal(l).longValue();  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToBigDecimal(l).longValue();	  this.gid    =    ZipUtil.longToBigDecimal(l);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
110	[BUG]  [BUGGY]  this.gid  =  ZipUtil.longToBigDecimal(l,  l);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    public  void  setGID(long  l)  {    [BUGGY]  this.gid  =  ZipUtil.longToBigDecimal(l,  l);  [BUGGY]    }  [CLASS]  X7875_NewUnix  [METHOD]  setGID  [RETURN_TYPE]  void  long  l  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  l  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	1.0	122	122	1	replace	this.gid  =  ZipUtil.longToBigDecimal(l,  l);	  this.gid    =    ZipUtil.longToBigDecimal(l);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
