bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  version  =  getVersion();  [CE]  variable  version  is  already  defined  in  class  X7875_NewUnix  [FE]    NoSuchMethodError    [CONTEXT]      [BUGGY]  int  version  =  getVersion();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	int  version  =  getVersion();	      	non-compiled	[CE]  variable  version  is  already  defined  in  class  X7875_NewUnix	9	None	replace
2	[BUG]  [BUGGY]  Integer  version  =  getVersion();  [CE]  variable  version  is  already  defined  in  class  X7875_NewUnix  [FE]      NoSuchMethodError    [CONTEXT]      [BUGGY]  Integer  version  =  getVersion();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	Integer  version  =  getVersion();	      	non-compiled	[CE]  variable  version  is  already  defined  in  class  X7875_NewUnix	9	None	replace
3	[BUG]  [BUGGY]  Integer  version  =  Version.parseInt(version);  [CE]  variable  version  is  already  defined  in  class  X7875_NewUnix  [FE]        NoSuchMethodError    [CONTEXT]      [BUGGY]  Integer  version  =  Version.parseInt(version);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	Integer  version  =  Version.parseInt(version);	      	non-compiled	[CE]  variable  version  is  already  defined  in  class  X7875_NewUnix	9	None	replace
4	[BUG]  [BUGGY]  int  version  =  Version.parseInt(version);  [CE]  variable  version  is  already  defined  in  class  X7875_NewUnix  [FE]          NoSuchMethodError    [CONTEXT]      [BUGGY]  int  version  =  Version.parseInt(version);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	int  version  =  Version.parseInt(version);	      	non-compiled	[CE]  variable  version  is  already  defined  in  class  X7875_NewUnix	9	None	replace
5	[BUG]  [BUGGY]  Integer  version  =  getVersion().getIntValue();  [CE]  variable  version  is  already  defined  in  class  X7875_NewUnix  [FE]            NoSuchMethodError    [CONTEXT]      [BUGGY]  Integer  version  =  getVersion().getIntValue();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	Integer  version  =  getVersion().getIntValue();	      	non-compiled	[CE]  variable  version  is  already  defined  in  class  X7875_NewUnix	9	None	replace
6	[BUG]  [BUGGY]  Integer  version  =  getVersion().intValue();  [CE]  variable  version  is  already  defined  in  class  X7875_NewUnix  [FE]              NoSuchMethodError    [CONTEXT]      [BUGGY]  Integer  version  =  getVersion().intValue();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	Integer  version  =  getVersion().intValue();	      	non-compiled	[CE]  variable  version  is  already  defined  in  class  X7875_NewUnix	9	None	replace
7	[BUG]  [BUGGY]  Integer  version  =  Version.parseInt(Version.class);  [CE]  variable  version  is  already  defined  in  class  X7875_NewUnix  [FE]                NoSuchMethodError    [CONTEXT]      [BUGGY]  Integer  version  =  Version.parseInt(Version.class);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	Integer  version  =  Version.parseInt(Version.class);	      	non-compiled	[CE]  variable  version  is  already  defined  in  class  X7875_NewUnix	9	None	replace
8	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(HEADER_ID);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(HEADER_ID);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipUtil.bigToLong(HEADER_ID);  }	  public    long    getUID()    {    return    ZipUtil.bigToLong(size);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	6	None	replace
9	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(length);  }  [CE]  cannot  find  symbol  length  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(length);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipUtil.bigToLong(length);  }	  public    long    getUID()    {    return    ZipUtil.bigToLong(size);    }    	non-compiled	[CE]  cannot  find  symbol  length	6	None	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(this.uid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	add	public  long  getUID()  {  return  ZipUtil.bigToLong(this.uid);  }	  public    long    getUID()    {    return    ZipUtil.bigToLong(size);    }    	compilable	  [FE]  AssertionError  	6	1	replace
11	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(this.uid);  }  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(this.uid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipUtil.bigToLong(this.uid);  }	  public    long    getUID()    {    return    ZipUtil.bigToLong(size);    }    	compilable	  [FE]  AssertionError  	6	1	replace
12	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipShort.bigToLong(gid);  }  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipShort.bigToLong(gid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipShort.bigToLong(gid);  }	  public    long    getUID()    {    return    ZipShort.bigToLong(uid);    }    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
13	[BUG]  [BUGGY]  public  int  getUID()  {  return  ZipShort.bigToLong(uid);  }  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  int  getUID()  {  return  ZipShort.bigToLong(uid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  int  getUID()  {  return  ZipShort.bigToLong(uid);  }	  public    long    getUID()    {    return    ZipShort.bigToLong(uid);    }    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
14	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipShort.bigToLong(HEADER_ID);  }  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipShort.bigToLong(HEADER_ID);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipShort.bigToLong(HEADER_ID);  }	  public    long    getUID()    {    return    ZipShort.bigToLong(uid);    }    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
15	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipShort.bigToLong(id);  }  [CE]  cannot  find  symbol  id  [FE]                AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipShort.bigToLong(id);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipShort.bigToLong(id);  }	  public    long    getUID()    {    return    ZipShort.bigToLong(uid);    }    	non-compiled	[CE]  cannot  find  symbol  id	11	None	replace
16	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipShort.bigToLong(this.version);  }  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipShort.bigToLong(this.version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipShort.bigToLong(this.version);  }	  public    long    getUID()    {    return    ZipShort.bigToLong(uid);    }    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
17	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  long  uid  =  ZipShort.size();  [CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix  [FE]    AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  long  uid  =  ZipShort.size();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public    long    getUID()    {    return    ZipUtil.bigToLong(gid);    }    long  uid  =  ZipShort.size();	  	non-compiled	[CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix	12	None	add
18	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  long  uid  =  ZipShort.getLongValue(gid);  [CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix  [FE]      AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  long  uid  =  ZipShort.getLongValue(gid);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public    long    getUID()    {    return    ZipUtil.bigToLong(gid);    }    long  uid  =  ZipShort.getLongValue(gid);	  	non-compiled	[CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix	12	None	add
19	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  long  uid  =  ZipShort.getLong(gid);  [CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  long  uid  =  ZipShort.getLong(gid);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public    long    getUID()    {    return    ZipUtil.bigToLong(gid);    }    long  uid  =  ZipShort.getLong(gid);	  	non-compiled	[CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix	12	None	add
20	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  long  uid  =  ZipShort.getUpperBound(gid);  [CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  long  uid  =  ZipShort.getUpperBound(gid);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public    long    getUID()    {    return    ZipUtil.bigToLong(gid);    }    long  uid  =  ZipShort.getUpperBound(gid);	  	non-compiled	[CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix	12	None	add
21	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  long  uid  =  ZipShort.getUpperBound();  [CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  long  uid  =  ZipShort.getUpperBound();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public    long    getUID()    {    return    ZipUtil.bigToLong(gid);    }    long  uid  =  ZipShort.getUpperBound();	  	non-compiled	[CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix	12	None	add
22	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  long  uid  =  getUpperBound();  [CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix  [FE]              AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  long  uid  =  getUpperBound();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public    long    getUID()    {    return    ZipUtil.bigToLong(gid);    }    long  uid  =  getUpperBound();	  	non-compiled	[CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix	12	None	add
23	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  this.uid  =  ZipShort.getLong(gid);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  this.uid  =  ZipShort.getLong(gid);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public    long    getUID()    {    return    ZipUtil.bigToLong(gid);    }    this.uid  =  ZipShort.getLong(gid);	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
24	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  long  uid  =  ZipShort.length();  [CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  long  uid  =  ZipShort.length();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public    long    getUID()    {    return    ZipUtil.bigToLong(gid);    }    long  uid  =  ZipShort.length();	  	non-compiled	[CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix	12	None	add
25	[BUG]  [BUGGY]  private  long  getUID()  {  return  ZipUtil.bigToLong(version);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  long  getUID()  {  return  ZipUtil.bigToLong(version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	private  long  getUID()  {  return  ZipUtil.bigToLong(version);  }	  public    short    getUID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	10	None	replace
26	[BUG]  [BUGGY]  private  int  getUID()  {  return  ZipUtil.bigToLong(version);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  int  getUID()  {  return  ZipUtil.bigToLong(version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	private  int  getUID()  {  return  ZipUtil.bigToLong(version);  }	  public    short    getUID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	10	None	replace
27	[BUG]  [BUGGY]  Public  long  getUID()  {  return  ZipUtil.bigToLong(version);  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  Public  long  getUID()  {  return  ZipUtil.bigToLong(version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	Public  long  getUID()  {  return  ZipUtil.bigToLong(version);  }	  public    short    getUID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
28	[BUG]  [BUGGY]  Public  int  getUID()  {  return  ZipUtil.bigToLong(version);  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  Public  int  getUID()  {  return  ZipUtil.bigToLong(version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	Public  int  getUID()  {  return  ZipUtil.bigToLong(version);  }	  public    short    getUID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
29	[BUG]  [BUGGY]  public  short  getUID()  {  return  ZipUtil.bigToLong(version,  ONE_THOUSAND);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]                AssertionError    [CONTEXT]      [BUGGY]  public  short  getUID()  {  return  ZipUtil.bigToLong(version,  ONE_THOUSAND);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  short  getUID()  {  return  ZipUtil.bigToLong(version,  ONE_THOUSAND);  }	  public    short    getUID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	10	None	replace
30	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(hid);  }  [CE]  cannot  find  symbol  hid  [FE]                AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(hid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipUtil.bigToLong(hid);  }	  public    long    getUID()    {    return    ZipUtil.bigToLong(id);    }    	non-compiled	[CE]  cannot  find  symbol  hid	5	None	replace
31	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(this.gid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	add	public  long  getUID()  {  return  ZipUtil.bigToLong(this.gid);  }	  public    long    getUID()    {    return    ZipUtil.bigToLong(id);    }    	compilable	  [FE]  AssertionError  	5	1	replace
32	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(this.gid);  }  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(this.gid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipUtil.bigToLong(this.gid);  }	  public    long    getUID()    {    return    ZipUtil.bigToLong(id);    }    	compilable	  [FE]  AssertionError  	5	1	replace
33	[BUG]  [BUGGY]  public  int  getUID()  {  return  ZipUtil.bigToLong(version,  ONE_THOUSAND);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  public  int  getUID()  {  return  ZipUtil.bigToLong(version,  ONE_THOUSAND);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  int  getUID()  {  return  ZipUtil.bigToLong(version,  ONE_THOUSAND);  }	  public    int    getUID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	7	None	replace
34	[BUG]  [BUGGY]  public  int  getUID()  {  return  ZipUtil.bigToLong(version,  HEADER_ID);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  public  int  getUID()  {  return  ZipUtil.bigToLong(version,  HEADER_ID);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  int  getUID()  {  return  ZipUtil.bigToLong(version,  HEADER_ID);  }	  public    int    getUID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	7	None	replace
35	[BUG]  [BUGGY]  public  int  getUID()  {  return  ZipUtil.bigToLong(this.version);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  public  int  getUID()  {  return  ZipUtil.bigToLong(this.version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  int  getUID()  {  return  ZipUtil.bigToLong(this.version);  }	  public    int    getUID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	7	None	replace
36	[BUG]  [BUGGY]  public  int  getUID()  {  return  ZipUtil.bigToLong(gid,  version);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]                          AssertionError    [CONTEXT]      [BUGGY]  public  int  getUID()  {  return  ZipUtil.bigToLong(gid,  version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  int  getUID()  {  return  ZipUtil.bigToLong(gid,  version);  }	  public    int    getUID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	7	None	replace
37	[BUG]  [BUGGY]  final  public  int  getUID()  {  return  ZipUtil.bigToLong(version);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]                            AssertionError    [CONTEXT]      [BUGGY]  final  public  int  getUID()  {  return  ZipUtil.bigToLong(version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	final  public  int  getUID()  {  return  ZipUtil.bigToLong(version);  }	  public    int    getUID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	7	None	replace
38	[BUG]  [BUGGY]  public  int  getUID()  {  return  ZipUtil.bigToLong(this.uid,  version);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]                              AssertionError    [CONTEXT]      [BUGGY]  public  int  getUID()  {  return  ZipUtil.bigToLong(this.uid,  version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  int  getUID()  {  return  ZipUtil.bigToLong(this.uid,  version);  }	  public    int    getUID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	7	None	replace
39	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid,  version);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid,  version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipUtil.bigToLong(gid,  version);  }	  public    long    getUID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	1	None	replace
40	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(version,  ONE_THOUSAND);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(version,  ONE_THOUSAND);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipUtil.bigToLong(version,  ONE_THOUSAND);  }	  public    long    getUID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	1	None	replace
41	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(version,  HEADER_ID);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(version,  HEADER_ID);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipUtil.bigToLong(version,  HEADER_ID);  }	  public    long    getUID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	1	None	replace
42	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(this.uid,  version);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]              AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(this.uid,  version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipUtil.bigToLong(this.uid,  version);  }	  public    long    getUID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	1	None	replace
43	[BUG]  [BUGGY]  [FE]  NoSuchMethodError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  double  getUID()  {  return  ZipUtil.bigToLong(uid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	add	public  double  getUID()  {  return  ZipUtil.bigToLong(uid);  }	  public    int    getUID()    {    return    ZipUtil.bigToLong(uid);    }    	compilable	  [FE]  NoSuchMethodError  	2	2	replace
44	[BUG]  [BUGGY]  public  double  getUID()  {  return  ZipUtil.bigToLong(uid);  }  [FE]  NoSuchMethodError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  double  getUID()  {  return  ZipUtil.bigToLong(uid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  double  getUID()  {  return  ZipUtil.bigToLong(uid);  }	  public    int    getUID()    {    return    ZipUtil.bigToLong(uid);    }    	compilable	  [FE]  NoSuchMethodError  	2	2	replace
45	[BUG]  [BUGGY]  [FE]  IllegalAccessError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  long  getUID()  {  return  ZipUtil.bigToLong(uid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	add	private  long  getUID()  {  return  ZipUtil.bigToLong(uid);  }	  public    int    getUID()    {    return    ZipUtil.bigToLong(uid);    }    	compilable	  [FE]  IllegalAccessError  	2	2	replace
46	[BUG]  [BUGGY]  private  long  getUID()  {  return  ZipUtil.bigToLong(uid);  }  [FE]  IllegalAccessError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  long  getUID()  {  return  ZipUtil.bigToLong(uid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	private  long  getUID()  {  return  ZipUtil.bigToLong(uid);  }	  public    int    getUID()    {    return    ZipUtil.bigToLong(uid);    }    	compilable	  [FE]  IllegalAccessError  	2	2	replace
47	[BUG]  [BUGGY]  Public  long  getUID()  {  return  ZipUtil.bigToLong(uid);  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  Public  long  getUID()  {  return  ZipUtil.bigToLong(uid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	Public  long  getUID()  {  return  ZipUtil.bigToLong(uid);  }	  public    int    getUID()    {    return    ZipUtil.bigToLong(uid);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
48	[BUG]  [BUGGY]  public  short  getUID()  {  return  ZipUtil.bigToLong(uid);  }  [CE]  possible  loss  of  precision  [FE]                AssertionError    [CONTEXT]      [BUGGY]  public  short  getUID()  {  return  ZipUtil.bigToLong(uid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  short  getUID()  {  return  ZipUtil.bigToLong(uid);  }	  public    int    getUID()    {    return    ZipUtil.bigToLong(uid);    }    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
49	[BUG]  [BUGGY]  [FE]  NoSuchMethodError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  public  Long  getUID()  {  return  ZipUtil.bigToLong(uid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	add	public  Long  getUID()  {  return  ZipUtil.bigToLong(uid);  }	  public    int    getUID()    {    return    ZipUtil.bigToLong(uid);    }    	compilable	  [FE]  NoSuchMethodError  	2	2	replace
50	[BUG]  [BUGGY]  public  Long  getUID()  {  return  ZipUtil.bigToLong(uid);  }  [FE]  NoSuchMethodError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  public  Long  getUID()  {  return  ZipUtil.bigToLong(uid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  Long  getUID()  {  return  ZipUtil.bigToLong(uid);  }	  public    int    getUID()    {    return    ZipUtil.bigToLong(uid);    }    	compilable	  [FE]  NoSuchMethodError  	2	2	replace
51	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipShort.bigToLong(version,  HEADER_ID);  }  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipShort.bigToLong(version,  HEADER_ID);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipShort.bigToLong(version,  HEADER_ID);  }	  public    long    getUID()    {    return    ZipShort.bigToLong(version);    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
52	[BUG]  [BUGGY]  public  int  getUID()  {  return  ZipShort.bigToLong(version);  }  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]      [BUGGY]  public  int  getUID()  {  return  ZipShort.bigToLong(version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  int  getUID()  {  return  ZipShort.bigToLong(version);  }	  public    long    getUID()    {    return    ZipShort.bigToLong(version);    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
53	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipShort.bigToLong(version,  ONE_THOUSAND);  }  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipShort.bigToLong(version,  ONE_THOUSAND);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipShort.bigToLong(version,  ONE_THOUSAND);  }	  public    long    getUID()    {    return    ZipShort.bigToLong(version);    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
54	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipShort.bigToLong(version,  1);  }  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipShort.bigToLong(version,  1);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipShort.bigToLong(version,  1);  }	  public    long    getUID()    {    return    ZipShort.bigToLong(version);    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
55	[BUG]  [BUGGY]  public  int  getUID()  {  return  ZipUtil.bigToLong(gid);  }  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      [BUGGY]  public  int  getUID()  {  return  ZipUtil.bigToLong(gid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  int  getUID()  {  return  ZipUtil.bigToLong(gid);  }	  public    long    getUID()    {    return    ZipUtil.bigToLong(gid);    }    	non-compiled	[CE]  possible  loss  of  precision	13	None	replace
56	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  final  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	add	final  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }	  public    long    getUID()    {    return    ZipUtil.bigToLong(gid);    }    	compilable	  [FE]  AssertionError  	13	1	replace
57	[BUG]  [BUGGY]  final  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      [BUGGY]  final  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	final  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }	  public    long    getUID()    {    return    ZipUtil.bigToLong(gid);    }    	compilable	  [FE]  AssertionError  	13	1	replace
58	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(this.version,  ONE_THOUSAND);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]              AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(this.version,  ONE_THOUSAND);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipUtil.bigToLong(this.version,  ONE_THOUSAND);  }	  public    long    getUID()    {    return    ZipUtil.bigToLong(this.version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	4	None	replace
59	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(this.version,  version);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]                AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(this.version,  version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipUtil.bigToLong(this.version,  version);  }	  public    long    getUID()    {    return    ZipUtil.bigToLong(this.version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	4	None	replace
60	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(this.version,  this.version);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(this.version,  this.version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipUtil.bigToLong(this.version,  this.version);  }	  public    long    getUID()    {    return    ZipUtil.bigToLong(this.version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	4	None	replace
61	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(this.version,  HEADER_ID);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(this.version,  HEADER_ID);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipUtil.bigToLong(this.version,  HEADER_ID);  }	  public    long    getUID()    {    return    ZipUtil.bigToLong(this.version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	4	None	replace
62	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(this.version,  this.gid);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(this.version,  this.gid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipUtil.bigToLong(this.version,  this.gid);  }	  public    long    getUID()    {    return    ZipUtil.bigToLong(this.version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	4	None	replace
63	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(this.version,  null);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(this.version,  null);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipUtil.bigToLong(this.version,  null);  }	  public    long    getUID()    {    return    ZipUtil.bigToLong(this.version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	4	None	replace
64	[BUG]  [BUGGY]      long  version  =  getVersion();  [CE]  variable  version  is  already  defined  in  class  X7875_NewUnix  [FE]    NoSuchMethodError    [CONTEXT]      [BUGGY]      long  version  =  getVersion();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	        long  version  =  getVersion();	  	non-compiled	[CE]  variable  version  is  already  defined  in  class  X7875_NewUnix	8	None	add
65	[BUG]  [BUGGY]  public  byte  getUID()  {  return  ZipUtil.bigToLong(this.version);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]              AssertionError    [CONTEXT]      [BUGGY]  public  byte  getUID()  {  return  ZipUtil.bigToLong(this.version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  byte  getUID()  {  return  ZipUtil.bigToLong(this.version);  }	  public    long    getUID()    {    return    ZipUtil.bigToLong(this.version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	4	None	replace
66	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(this.version,  0);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]                AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(this.version,  0);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipUtil.bigToLong(this.version,  0);  }	  public    long    getUID()    {    return    ZipUtil.bigToLong(this.version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	4	None	replace
67	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipShort.bigToLong(0L);  }  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipShort.bigToLong(0L);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipShort.bigToLong(0L);  }	  public    long    getUID()    {    return    ZipShort.bigToLong(uid);    }    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
68	[BUG]  [BUGGY]  public  short  getUID()  {  return  ZipUtil.bigToLong(version,  HEADER_ID);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  short  getUID()  {  return  ZipUtil.bigToLong(version,  HEADER_ID);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  short  getUID()  {  return  ZipUtil.bigToLong(version,  HEADER_ID);  }	  public    short    getUID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	10	None	replace
69	[BUG]  [BUGGY]  public  byte  getUID()  {  return  ZipUtil.bigToLong(version);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  byte  getUID()  {  return  ZipUtil.bigToLong(version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  byte  getUID()  {  return  ZipUtil.bigToLong(version);  }	  public    short    getUID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	10	None	replace
70	[BUG]  [BUGGY]  public  int  getUID()  {  return  ZipUtil.bigToLong(size);  }  [CE]  cannot  find  symbol  size  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  public  int  getUID()  {  return  ZipUtil.bigToLong(size);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  int  getUID()  {  return  ZipUtil.bigToLong(size);  }	  public    long    getUID()    {    return    ZipUtil.bigToLong(size);    }    	non-compiled	[CE]  cannot  find  symbol  size	6	None	replace
71	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  long  uid  =  ZipShort.getLong(version);  [CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix  [FE]    AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  long  uid  =  ZipShort.getLong(version);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public    long    getUID()    {    return    ZipUtil.bigToLong(gid);    }    long  uid  =  ZipShort.getLong(version);	  	non-compiled	[CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix	12	None	add
72	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  Validate.notNull(gid);  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  Validate.notNull(gid);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public    long    getUID()    {    return    ZipUtil.bigToLong(gid);    }    Validate.notNull(gid);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
73	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  Integer  version  =  getVersion();  [CE]  variable  version  is  already  defined  in  class  X7875_NewUnix  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  Integer  version  =  getVersion();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public    long    getUID()    {    return    ZipUtil.bigToLong(gid);    }    Integer  version  =  getVersion();	  	non-compiled	[CE]  variable  version  is  already  defined  in  class  X7875_NewUnix	12	None	add
74	[BUG]  [BUGGY]  BigInteger  gid  =(BigInteger)this.version.clone();  [CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix  [FE]    NoSuchMethodError    [CONTEXT]      [BUGGY]  BigInteger  gid  =(BigInteger)this.version.clone();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	BigInteger  gid  =(BigInteger)this.version.clone();	      	non-compiled	[CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix	9	None	replace
75	[BUG]  [BUGGY]  BigInteger  version  =(BigInteger)this.version.clone();  [CE]  variable  version  is  already  defined  in  class  X7875_NewUnix  [FE]      NoSuchMethodError    [CONTEXT]      [BUGGY]  BigInteger  version  =(BigInteger)this.version.clone();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	BigInteger  version  =(BigInteger)this.version.clone();	      	non-compiled	[CE]  variable  version  is  already  defined  in  class  X7875_NewUnix	9	None	replace
76	[BUG]  [BUGGY]  BigInteger  gid  =(BigInteger)super.getValue();  [CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix  [FE]        NoSuchMethodError    [CONTEXT]      [BUGGY]  BigInteger  gid  =(BigInteger)super.getValue();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	BigInteger  gid  =(BigInteger)super.getValue();	      	non-compiled	[CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix	9	None	replace
77	[BUG]  [BUGGY]  ((  NoSuchMethodError)null).returnZero();  [CE]  illegal  start  of  type  [FE]          NoSuchMethodError    [CONTEXT]      [BUGGY]  ((  NoSuchMethodError)null).returnZero();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	((  NoSuchMethodError)null).returnZero();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
78	[BUG]  [BUGGY]  public  int  getUID()  {  return  ZipUtil.bigToLong(version,  Long.MAX_VALUE);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  public  int  getUID()  {  return  ZipUtil.bigToLong(version,  Long.MAX_VALUE);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  int  getUID()  {  return  ZipUtil.bigToLong(version,  Long.MAX_VALUE);  }	  public    int    getUID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	7	None	replace
79	[BUG]  [BUGGY]  public  int  getUID()  {  return  ZipUtil.bigToLong(version,  Long.MIN_VALUE);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  public  int  getUID()  {  return  ZipUtil.bigToLong(version,  Long.MIN_VALUE);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  int  getUID()  {  return  ZipUtil.bigToLong(version,  Long.MIN_VALUE);  }	  public    int    getUID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	7	None	replace
80	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipShort.BigInteger.bigToLong(version);  }  [CE]  cannot  find  symbol  BigInteger  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipShort.BigInteger.bigToLong(version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipShort.BigInteger.bigToLong(version);  }	  public    long    getUID()    {    return    ZipShort.bigToLong(version);    }    	non-compiled	[CE]  cannot  find  symbol  BigInteger	3	None	replace
81	[BUG]  [BUGGY]      Validate.notNull(version);  [CE]  <identifier>  expected  [FE]    NoSuchMethodError    [CONTEXT]      [BUGGY]      Validate.notNull(version);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	        Validate.notNull(version);	  	non-compiled	[CE]  <identifier>  expected	8	None	add
82	[BUG]  [BUGGY]  public  short  getUID()  {  return  ZipUtil.bigToLong(version,  gid);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  short  getUID()  {  return  ZipUtil.bigToLong(version,  gid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  short  getUID()  {  return  ZipUtil.bigToLong(version,  gid);  }	  public    short    getUID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	10	None	replace
83	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(hEADER_ID);  }  [CE]  cannot  find  symbol  hEADER_ID  [FE]                AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(hEADER_ID);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipUtil.bigToLong(hEADER_ID);  }	  public    long    getUID()    {    return    ZipUtil.bigToLong(id);    }    	non-compiled	[CE]  cannot  find  symbol  hEADER_ID	5	None	replace
84	[BUG]  [BUGGY]  public  int  getUID()  {  return  ZipUtil.bigToLong(version,  gid);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  public  int  getUID()  {  return  ZipUtil.bigToLong(version,  gid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  int  getUID()  {  return  ZipUtil.bigToLong(version,  gid);  }	  public    int    getUID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	7	None	replace
85	[BUG]  [BUGGY]  public  int  getUID()  {  return  ZipUtil.bigToLong(version,  BigInteger.MIN_VALUE);  }  [CE]  cannot  find  symbol  MIN_VALUE  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  public  int  getUID()  {  return  ZipUtil.bigToLong(version,  BigInteger.MIN_VALUE);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  int  getUID()  {  return  ZipUtil.bigToLong(version,  BigInteger.MIN_VALUE);  }	  public    int    getUID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	7	None	replace
86	[BUG]  [BUGGY]  public  int  getUID()  {  return  ZipUtil.bigToLong(version,  BigInteger.MAX_VALUE);  }  [CE]  cannot  find  symbol  MAX_VALUE  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  public  int  getUID()  {  return  ZipUtil.bigToLong(version,  BigInteger.MAX_VALUE);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  int  getUID()  {  return  ZipUtil.bigToLong(version,  BigInteger.MAX_VALUE);  }	  public    int    getUID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  cannot  find  symbol  MAX_VALUE	7	None	replace
87	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(version,  BigInteger.MAX_VALUE);  }  [CE]  cannot  find  symbol  MAX_VALUE  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(version,  BigInteger.MAX_VALUE);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipUtil.bigToLong(version,  BigInteger.MAX_VALUE);  }	  public    long    getUID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  cannot  find  symbol  MAX_VALUE	1	None	replace
88	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(version,  BigInteger.MIN_VALUE);  }  [CE]  cannot  find  symbol  MIN_VALUE  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(version,  BigInteger.MIN_VALUE);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipUtil.bigToLong(version,  BigInteger.MIN_VALUE);  }	  public    long    getUID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	1	None	replace
89	[BUG]  [BUGGY]  public  double  getUID()  {  return  ZipUtil.bigToLong(version);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  double  getUID()  {  return  ZipUtil.bigToLong(version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  double  getUID()  {  return  ZipUtil.bigToLong(version);  }	  public    int    getUID()    {    return    ZipUtil.bigToLong(uid);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	2	None	replace
90	[BUG]  [BUGGY]      gid  =  ZipShort.getInstance();  [CE]  <identifier>  expected  [FE]    NoSuchMethodError    [CONTEXT]      [BUGGY]      gid  =  ZipShort.getInstance();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	        gid  =  ZipShort.getInstance();	  	non-compiled	[CE]  <identifier>  expected	8	None	add
91	[BUG]  [BUGGY]      gid  =  ZipShort.getInstance(version);  [CE]  <identifier>  expected  [FE]      NoSuchMethodError    [CONTEXT]      [BUGGY]      gid  =  ZipShort.getInstance(version);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	        gid  =  ZipShort.getInstance(version);	  	non-compiled	[CE]  <identifier>  expected	8	None	add
92	[BUG]  [BUGGY]      this.version  =  Version.unknownVersion();  [CE]  illegal  start  of  type  [FE]        NoSuchMethodError    [CONTEXT]      [BUGGY]      this.version  =  Version.unknownVersion();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	        this.version  =  Version.unknownVersion();	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
93	[BUG]  [BUGGY]      int  version  =  Version.unknownVersion();  [CE]  variable  version  is  already  defined  in  class  X7875_NewUnix  [FE]          NoSuchMethodError    [CONTEXT]      [BUGGY]      int  version  =  Version.unknownVersion();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	        int  version  =  Version.unknownVersion();	  	non-compiled	[CE]  variable  version  is  already  defined  in  class  X7875_NewUnix	8	None	add
94	[BUG]  [BUGGY]      gid  =  ZipShort.getNumberInstance();  [CE]  <identifier>  expected  [FE]            NoSuchMethodError    [CONTEXT]      [BUGGY]      gid  =  ZipShort.getNumberInstance();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	        gid  =  ZipShort.getNumberInstance();	  	non-compiled	[CE]  <identifier>  expected	8	None	add
95	[BUG]  [BUGGY]      gid  =  ZipShort.getLongValue(version);  [CE]  <identifier>  expected  [FE]              NoSuchMethodError    [CONTEXT]      [BUGGY]      gid  =  ZipShort.getLongValue(version);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	        gid  =  ZipShort.getLongValue(version);	  	non-compiled	[CE]  <identifier>  expected	8	None	add
96	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipShort.bigToLong(version  +  1);  }  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipShort.bigToLong(version  +  1);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public  long  getUID()  {  return  ZipShort.bigToLong(version  +  1);  }	  public    long    getUID()    {    return    ZipShort.bigToLong(version);    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
97	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  int  version  =  ZipShort.size();  [CE]  variable  version  is  already  defined  in  class  X7875_NewUnix  [FE]    AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  int  version  =  ZipShort.size();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public    long    getUID()    {    return    ZipUtil.bigToLong(gid);    }    int  version  =  ZipShort.size();	  	non-compiled	[CE]  variable  version  is  already  defined  in  class  X7875_NewUnix	12	None	add
98	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  int  version  =  ZipShort.getLongValue(gid);  [CE]  variable  version  is  already  defined  in  class  X7875_NewUnix  [FE]      AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  int  version  =  ZipShort.getLongValue(gid);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public    long    getUID()    {    return    ZipUtil.bigToLong(gid);    }    int  version  =  ZipShort.getLongValue(gid);	  	non-compiled	[CE]  variable  version  is  already  defined  in  class  X7875_NewUnix	12	None	add
99	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  int  version  =  ZipShort.getVersion();  [CE]  variable  version  is  already  defined  in  class  X7875_NewUnix  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  int  version  =  ZipShort.getVersion();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public    long    getUID()    {    return    ZipUtil.bigToLong(gid);    }    int  version  =  ZipShort.getVersion();	  	non-compiled	[CE]  variable  version  is  already  defined  in  class  X7875_NewUnix	12	None	add
100	[BUG]  [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  this.uid  =  ZipShort.getLongValue(gid);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  long  getUID()  {  return  ZipUtil.bigToLong(gid);  }  this.uid  =  ZipShort.getLongValue(gid);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getUID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	95	95	1	replace	public    long    getUID()    {    return    ZipUtil.bigToLong(gid);    }    this.uid  =  ZipShort.getLongValue(gid);	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
