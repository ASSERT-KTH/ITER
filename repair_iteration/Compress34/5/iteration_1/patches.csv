bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  public  int  getGID()  {  return  ZipUtil.bigToLong(this.version);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  int  getGID()  {  return  ZipUtil.bigToLong(this.version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  int  getGID()  {  return  ZipUtil.bigToLong(this.version);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(this.version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	13	None	replace
2	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.version,  ONE_THOUSAND);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]              AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.version,  ONE_THOUSAND);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipUtil.bigToLong(this.version,  ONE_THOUSAND);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(this.version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	13	None	replace
3	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.version,  HEADER_ID);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]                AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.version,  HEADER_ID);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipUtil.bigToLong(this.version,  HEADER_ID);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(this.version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	13	None	replace
4	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.version,  this.gid);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.version,  this.gid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipUtil.bigToLong(this.version,  this.gid);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(this.version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	13	None	replace
5	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.version,  version);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.version,  version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipUtil.bigToLong(this.version,  version);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(this.version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	13	None	replace
6	[BUG]  [BUGGY]  private  int  getGID()  {  return  ZipUtil.bigToLong(this.version);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  private  int  getGID()  {  return  ZipUtil.bigToLong(this.version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	private  int  getGID()  {  return  ZipUtil.bigToLong(this.version);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(this.version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	13	None	replace
7	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.version,  this.version);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.version,  this.version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipUtil.bigToLong(this.version,  this.version);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(this.version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	13	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.gid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	add	public  long  getGID()  {  return  ZipUtil.bigToLong(this.gid);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(size);    }    	compilable	  [FE]  AssertionError  	8	1	replace
9	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.gid);  }  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.gid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipUtil.bigToLong(this.gid);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(size);    }    	compilable	  [FE]  AssertionError  	8	1	replace
10	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(HEADER_ID);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(HEADER_ID);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipUtil.bigToLong(HEADER_ID);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(size);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	8	None	replace
11	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(length);  }  [CE]  cannot  find  symbol  length  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(length);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipUtil.bigToLong(length);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(size);    }    	non-compiled	[CE]  cannot  find  symbol  length	8	None	replace
12	[BUG]  [BUGGY]  public  int  getGID()  {  return  ZipUtil.bigToLong(size);  }  [CE]  cannot  find  symbol  size  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  public  int  getGID()  {  return  ZipUtil.bigToLong(size);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  int  getGID()  {  return  ZipUtil.bigToLong(size);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(size);    }    	non-compiled	[CE]  cannot  find  symbol  size	8	None	replace
13	[BUG]  [BUGGY]  public  int  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      [BUGGY]  public  int  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  int  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    	non-compiled	[CE]  possible  loss  of  precision	4	None	replace
14	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.id);  }  [CE]  cannot  find  symbol  id  [FE]      AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.id);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipUtil.bigToLong(this.id);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    	non-compiled	[CE]  cannot  find  symbol  id	4	None	replace
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  final  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	add	final  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    	compilable	  [FE]  AssertionError  	4	1	replace
16	[BUG]  [BUGGY]  final  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  final  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	final  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    	compilable	  [FE]  AssertionError  	4	1	replace
17	[BUG]  [BUGGY]  [FE]  IllegalAccessError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	add	private  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    	compilable	  [FE]  IllegalAccessError  	4	2	replace
18	[BUG]  [BUGGY]  private  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  [FE]  IllegalAccessError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	private  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    	compilable	  [FE]  IllegalAccessError  	4	2	replace
19	[BUG]  [BUGGY]  public  int  getGID()  {  return  ZipUtil.bigToLong(uid);  }  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      [BUGGY]  public  int  getGID()  {  return  ZipUtil.bigToLong(uid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  int  getGID()  {  return  ZipUtil.bigToLong(uid);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(uid);    }    	non-compiled	[CE]  possible  loss  of  precision	7	None	replace
20	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(id);  }  [CE]  cannot  find  symbol  id  [FE]      AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(id);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipUtil.bigToLong(id);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(uid);    }    	non-compiled	[CE]  cannot  find  symbol  id	7	None	replace
21	[BUG]  [BUGGY]  BigInteger  gid  =(BigInteger)this.version.clone();  [CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix  [FE]    NoSuchMethodError    [CONTEXT]      [BUGGY]  BigInteger  gid  =(BigInteger)this.version.clone();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	BigInteger  gid  =(BigInteger)this.version.clone();	      	non-compiled	[CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix	10	None	replace
22	[BUG]  [BUGGY]  int  version  =  getVersion();  [CE]  variable  version  is  already  defined  in  class  X7875_NewUnix  [FE]      NoSuchMethodError    [CONTEXT]      [BUGGY]  int  version  =  getVersion();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	int  version  =  getVersion();	      	non-compiled	[CE]  variable  version  is  already  defined  in  class  X7875_NewUnix	10	None	replace
23	[BUG]  [BUGGY]  BigInteger  gid  =(BigInteger)this.version.getValue();  [CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix  [FE]        NoSuchMethodError    [CONTEXT]      [BUGGY]  BigInteger  gid  =(BigInteger)this.version.getValue();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	BigInteger  gid  =(BigInteger)this.version.getValue();	      	non-compiled	[CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix	10	None	replace
24	[BUG]  [BUGGY]  Integer  version  =  getVersion();  [CE]  variable  version  is  already  defined  in  class  X7875_NewUnix  [FE]          NoSuchMethodError    [CONTEXT]      [BUGGY]  Integer  version  =  getVersion();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	Integer  version  =  getVersion();	      	non-compiled	[CE]  variable  version  is  already  defined  in  class  X7875_NewUnix	10	None	replace
25	[BUG]  [BUGGY]  BigInteger  gid  =(BigInteger)super.getGid();  [CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix  [FE]            NoSuchMethodError    [CONTEXT]      [BUGGY]  BigInteger  gid  =(BigInteger)super.getGid();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	BigInteger  gid  =(BigInteger)super.getGid();	      	non-compiled	[CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix	10	None	replace
26	[BUG]  [BUGGY]  BigInteger  gid  =(BigInteger)this.version.nextDouble();  [CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix  [FE]              NoSuchMethodError    [CONTEXT]      [BUGGY]  BigInteger  gid  =(BigInteger)this.version.nextDouble();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	BigInteger  gid  =(BigInteger)this.version.nextDouble();	      	non-compiled	[CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix	10	None	replace
27	[BUG]  [BUGGY]  BigInteger  version  =(BigInteger)this.version.clone();  [CE]  variable  version  is  already  defined  in  class  X7875_NewUnix  [FE]                NoSuchMethodError    [CONTEXT]      [BUGGY]  BigInteger  version  =(BigInteger)this.version.clone();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	BigInteger  version  =(BigInteger)this.version.clone();	      	non-compiled	[CE]  variable  version  is  already  defined  in  class  X7875_NewUnix	10	None	replace
28	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipShort.bigToLong(uid);  }  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipShort.bigToLong(uid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipShort.bigToLong(uid);  }	  public    long    getGID()    {    return    ZipShort.bigToLong(gid);    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
29	[BUG]  [BUGGY]  public  int  getGID()  {  return  ZipShort.bigToLong(gid);  }  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]      [BUGGY]  public  int  getGID()  {  return  ZipShort.bigToLong(gid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  int  getGID()  {  return  ZipShort.bigToLong(gid);  }	  public    long    getGID()    {    return    ZipShort.bigToLong(gid);    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
30	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipShort.bigToLong(gid,  ONE_THOUSAND);  }  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipShort.bigToLong(gid,  ONE_THOUSAND);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipShort.bigToLong(gid,  ONE_THOUSAND);  }	  public    long    getGID()    {    return    ZipShort.bigToLong(gid);    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
31	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipShort.BigInteger.bigToLong(gid);  }  [CE]  cannot  find  symbol  BigInteger  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipShort.BigInteger.bigToLong(gid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipShort.BigInteger.bigToLong(gid);  }	  public    long    getGID()    {    return    ZipShort.bigToLong(gid);    }    	non-compiled	[CE]  cannot  find  symbol  BigInteger	5	None	replace
32	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipShort.bigToLong(gid,  version);  }  [CE]  cannot  find  symbol  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipShort.bigToLong(gid,  version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipShort.bigToLong(gid,  version);  }	  public    long    getGID()    {    return    ZipShort.bigToLong(gid);    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
33	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipShort.bigToLong(id);  }  [CE]  cannot  find  symbol  id  [FE]                        AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipShort.bigToLong(id);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipShort.bigToLong(id);  }	  public    long    getGID()    {    return    ZipShort.bigToLong(gid);    }    	non-compiled	[CE]  cannot  find  symbol  id	5	None	replace
34	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  BigInteger  gid  =(BigInteger)this.version;  [CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix  [FE]    AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  BigInteger  gid  =(BigInteger)this.version;  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    BigInteger  gid  =(BigInteger)this.version;	  	non-compiled	[CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix	3	None	add
35	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  BigInteger  gid  =(BigInteger)this.version.clone();  [CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix  [FE]      AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  BigInteger  gid  =(BigInteger)this.version.clone();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    BigInteger  gid  =(BigInteger)this.version.clone();	  	non-compiled	[CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix	3	None	add
36	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  BigInteger  gid  =(BigInteger)this.version.getValue();  [CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  BigInteger  gid  =(BigInteger)this.version.getValue();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    BigInteger  gid  =(BigInteger)this.version.getValue();	  	non-compiled	[CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix	3	None	add
37	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  BigInteger  gid  =(BigInteger)this.size();  [CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  BigInteger  gid  =(BigInteger)this.size();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    BigInteger  gid  =(BigInteger)this.size();	  	non-compiled	[CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix	3	None	add
38	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  long  uid  =  ZipShort.getLong(this.gid);  [CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  long  uid  =  ZipShort.getLong(this.gid);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    long  uid  =  ZipShort.getLong(this.gid);	  	non-compiled	[CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix	3	None	add
39	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  long  uid  =  ZipShort.size();  [CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix  [FE]              AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  long  uid  =  ZipShort.size();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    long  uid  =  ZipShort.size();	  	non-compiled	[CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix	3	None	add
40	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  long  uid  =  ZipShort.getLongValue(this.gid);  [CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix  [FE]                AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  long  uid  =  ZipShort.getLongValue(this.gid);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    long  uid  =  ZipShort.getLongValue(this.gid);	  	non-compiled	[CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix	3	None	add
41	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  BigInteger  gid  =(BigInteger)this.version.nextDouble();  [CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  BigInteger  gid  =(BigInteger)this.version.nextDouble();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    BigInteger  gid  =(BigInteger)this.version.nextDouble();	  	non-compiled	[CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix	3	None	add
42	[BUG]  [BUGGY]  public  int  getGID()  {  return  ZipUtil.bigToLong(version);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  int  getGID()  {  return  ZipUtil.bigToLong(version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  int  getGID()  {  return  ZipUtil.bigToLong(version);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	2	None	replace
43	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(gid,  version);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(gid,  version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipUtil.bigToLong(gid,  version);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	2	None	replace
44	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.gid,  version);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]              AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.gid,  version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipUtil.bigToLong(this.gid,  version);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	2	None	replace
45	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(version,  ONE_THOUSAND);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]                AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(version,  ONE_THOUSAND);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipUtil.bigToLong(version,  ONE_THOUSAND);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	2	None	replace
46	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(version,  HEADER_ID);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(version,  HEADER_ID);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipUtil.bigToLong(version,  HEADER_ID);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	2	None	replace
47	[BUG]  [BUGGY]  private  int  getGID()  {  return  ZipUtil.bigToLong(version);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  private  int  getGID()  {  return  ZipUtil.bigToLong(version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	private  int  getGID()  {  return  ZipUtil.bigToLong(version);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	2	None	replace
48	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(version,  BigInteger.MIN_VALUE);  }  [CE]  cannot  find  symbol  MIN_VALUE  [FE]                      AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(version,  BigInteger.MIN_VALUE);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipUtil.bigToLong(version,  BigInteger.MIN_VALUE);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	2	None	replace
49	[BUG]  [BUGGY]  [FE]  NoSuchMethodError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  Long  getGID()  {  return  ZipUtil.bigToLong(gid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	add	public  Long  getGID()  {  return  ZipUtil.bigToLong(gid);  }	  public    short    getGID()    {    return    ZipUtil.bigToLong(gid);    }    	compilable	  [FE]  NoSuchMethodError  	12	2	replace
50	[BUG]  [BUGGY]  public  Long  getGID()  {  return  ZipUtil.bigToLong(gid);  }  [FE]  NoSuchMethodError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  Long  getGID()  {  return  ZipUtil.bigToLong(gid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  Long  getGID()  {  return  ZipUtil.bigToLong(gid);  }	  public    short    getGID()    {    return    ZipUtil.bigToLong(gid);    }    	compilable	  [FE]  NoSuchMethodError  	12	2	replace
51	[BUG]  [BUGGY]  [FE]  IllegalAccessError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  long  getGID()  {  return  ZipUtil.bigToLong(gid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	add	private  long  getGID()  {  return  ZipUtil.bigToLong(gid);  }	  public    short    getGID()    {    return    ZipUtil.bigToLong(gid);    }    	compilable	  [FE]  IllegalAccessError  	12	2	replace
52	[BUG]  [BUGGY]  private  long  getGID()  {  return  ZipUtil.bigToLong(gid);  }  [FE]  IllegalAccessError  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  long  getGID()  {  return  ZipUtil.bigToLong(gid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	private  long  getGID()  {  return  ZipUtil.bigToLong(gid);  }	  public    short    getGID()    {    return    ZipUtil.bigToLong(gid);    }    	compilable	  [FE]  IllegalAccessError  	12	2	replace
53	[BUG]  [BUGGY]  Public  long  getGID()  {  return  ZipUtil.bigToLong(gid);  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  Public  long  getGID()  {  return  ZipUtil.bigToLong(gid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	Public  long  getGID()  {  return  ZipUtil.bigToLong(gid);  }	  public    short    getGID()    {    return    ZipUtil.bigToLong(gid);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
54	[BUG]  [BUGGY]  public  byte  getGID()  {  return  ZipUtil.bigToLong(gid);  }  [CE]  possible  loss  of  precision  [FE]                AssertionError    [CONTEXT]      [BUGGY]  public  byte  getGID()  {  return  ZipUtil.bigToLong(gid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  byte  getGID()  {  return  ZipUtil.bigToLong(gid);  }	  public    short    getGID()    {    return    ZipUtil.bigToLong(gid);    }    	non-compiled	[CE]  possible  loss  of  precision	12	None	replace
55	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  long  uid  =  ZipShort.size();  [CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix  [FE]    AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  long  uid  =  ZipShort.size();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(uid);    }    long  uid  =  ZipShort.size();	  	non-compiled	[CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix	6	None	add
56	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  BigInteger  uid  =(BigInteger)this.gid.clone();  [CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix  [FE]      AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  BigInteger  uid  =(BigInteger)this.gid.clone();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(uid);    }    BigInteger  uid  =(BigInteger)this.gid.clone();	  	non-compiled	[CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix	6	None	add
57	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  BigInteger  uid  =(BigInteger)this.gid.getValue();  [CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  BigInteger  uid  =(BigInteger)this.gid.getValue();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(uid);    }    BigInteger  uid  =(BigInteger)this.gid.getValue();	  	non-compiled	[CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix	6	None	add
58	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  BigInteger  uid  =(BigInteger)this.version;  [CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  BigInteger  uid  =(BigInteger)this.version;  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(uid);    }    BigInteger  uid  =(BigInteger)this.version;	  	non-compiled	[CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix	6	None	add
59	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  long  uid  =  ZipShort.parseLong(gid);  [CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  long  uid  =  ZipShort.parseLong(gid);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(uid);    }    long  uid  =  ZipShort.parseLong(gid);	  	non-compiled	[CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix	6	None	add
60	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  BigInteger  uid  =(BigInteger)super.getGid();  [CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix  [FE]              AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  BigInteger  uid  =(BigInteger)super.getGid();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(uid);    }    BigInteger  uid  =(BigInteger)super.getGid();	  	non-compiled	[CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix	6	None	add
61	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  BigInteger  uid  =(BigInteger)this.version.getValue();  [CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix  [FE]                AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  BigInteger  uid  =(BigInteger)this.version.getValue();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(uid);    }    BigInteger  uid  =(BigInteger)this.version.getValue();	  	non-compiled	[CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix	6	None	add
62	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  BigInteger  uid  =(BigInteger)super.getGID();  [CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  BigInteger  uid  =(BigInteger)super.getGID();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(uid);    }    BigInteger  uid  =(BigInteger)super.getGID();	  	non-compiled	[CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix	6	None	add
63	[BUG]  [BUGGY]  [FE]  NoSuchMethodError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  double  getGID()  {  return  ZipUtil.bigToLong(gid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	add	public  double  getGID()  {  return  ZipUtil.bigToLong(gid);  }	  public    int    getGID()    {    return    ZipUtil.bigToLong(gid);    }    	compilable	  [FE]  NoSuchMethodError  	1	2	replace
64	[BUG]  [BUGGY]  public  double  getGID()  {  return  ZipUtil.bigToLong(gid);  }  [FE]  NoSuchMethodError  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  double  getGID()  {  return  ZipUtil.bigToLong(gid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  double  getGID()  {  return  ZipUtil.bigToLong(gid);  }	  public    int    getGID()    {    return    ZipUtil.bigToLong(gid);    }    	compilable	  [FE]  NoSuchMethodError  	1	2	replace
65	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  long  getGID()  {  return  ZipUtil.bigToLong(gid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	add	long  getGID()  {  return  ZipUtil.bigToLong(gid);  }	  public    int    getGID()    {    return    ZipUtil.bigToLong(gid);    }    	compilable	  [FE]  AssertionError  	1	1	replace
66	[BUG]  [BUGGY]  long  getGID()  {  return  ZipUtil.bigToLong(gid);  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      [BUGGY]  long  getGID()  {  return  ZipUtil.bigToLong(gid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	long  getGID()  {  return  ZipUtil.bigToLong(gid);  }	  public    int    getGID()    {    return    ZipUtil.bigToLong(gid);    }    	compilable	  [FE]  AssertionError  	1	1	replace
67	[BUG]  [BUGGY]      BigInteger  gid  =(BigInteger)this.version;  [CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix  [FE]    NoSuchMethodError    [CONTEXT]      [BUGGY]      BigInteger  gid  =(BigInteger)this.version;  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	        BigInteger  gid  =(BigInteger)this.version;	  	non-compiled	[CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix	9	None	add
68	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipShort.bigToLong(version,  HEADER_ID);  }  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipShort.bigToLong(version,  HEADER_ID);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipShort.bigToLong(version,  HEADER_ID);  }	  public    long    getGID()    {    return    ZipShort.bigToLong(version);    }    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
69	[BUG]  [BUGGY]  public  int  getGID()  {  return  ZipShort.bigToLong(version);  }  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  int  getGID()  {  return  ZipShort.bigToLong(version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  int  getGID()  {  return  ZipShort.bigToLong(version);  }	  public    long    getGID()    {    return    ZipShort.bigToLong(version);    }    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
70	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipShort.bigToLong(version,  ONE_THOUSAND);  }  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipShort.bigToLong(version,  ONE_THOUSAND);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipShort.bigToLong(version,  ONE_THOUSAND);  }	  public    long    getGID()    {    return    ZipShort.bigToLong(version);    }    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
71	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipShort.bigToLong(HEADER_ID);  }  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipShort.bigToLong(HEADER_ID);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipShort.bigToLong(HEADER_ID);  }	  public    long    getGID()    {    return    ZipShort.bigToLong(version);    }    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
72	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipShort.bigToLong(version  +  1);  }  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipShort.bigToLong(version  +  1);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipShort.bigToLong(version  +  1);  }	  public    long    getGID()    {    return    ZipShort.bigToLong(version);    }    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
73	[BUG]  [BUGGY]  public  short  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      [BUGGY]  public  short  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  short  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    	non-compiled	[CE]  possible  loss  of  precision	4	None	replace
74	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipShort.bigToLong(this.uid);  }  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipShort.bigToLong(this.uid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipShort.bigToLong(this.uid);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
75	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  Validate.notNull(this.gid);  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  Validate.notNull(this.gid);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    Validate.notNull(this.gid);	  	non-compiled	[CE]  <identifier>  expected	3	None	add
76	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  Integer  version  =  getVersion();  [CE]  variable  version  is  already  defined  in  class  X7875_NewUnix  [FE]      AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  Integer  version  =  getVersion();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    Integer  version  =  getVersion();	  	non-compiled	[CE]  variable  version  is  already  defined  in  class  X7875_NewUnix	3	None	add
77	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  int  version  =  ZipShort.size();  [CE]  variable  version  is  already  defined  in  class  X7875_NewUnix  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  int  version  =  ZipShort.size();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    int  version  =  ZipShort.size();	  	non-compiled	[CE]  variable  version  is  already  defined  in  class  X7875_NewUnix	3	None	add
78	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  long  uid  =  ZipShort.getIntValue(this.version);  [CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  long  uid  =  ZipShort.getIntValue(this.version);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    long  uid  =  ZipShort.getIntValue(this.version);	  	non-compiled	[CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix	3	None	add
79	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  long  uid  =  ZipShort.getLong(this.version);  [CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  long  uid  =  ZipShort.getLong(this.version);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    long  uid  =  ZipShort.getLong(this.version);	  	non-compiled	[CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix	3	None	add
80	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  this.gid  =  ZipShort.getLong(this.version);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  this.gid  =  ZipShort.getLong(this.version);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    this.gid  =  ZipShort.getLong(this.version);	  	non-compiled	[CE]  illegal  start  of  type	3	None	add
81	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  this.gid  =  ZipShort.getIntValue(this.version);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  this.gid  =  ZipShort.getIntValue(this.version);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    this.gid  =  ZipShort.getIntValue(this.version);	  	non-compiled	[CE]  illegal  start  of  type	3	None	add
82	[BUG]  [BUGGY]  BigInteger  gid  =  BigInteger.valueOf(size());  [CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix  [FE]    NoSuchMethodError    [CONTEXT]      [BUGGY]  BigInteger  gid  =  BigInteger.valueOf(size());  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	BigInteger  gid  =  BigInteger.valueOf(size());	      	non-compiled	[CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix	10	None	replace
83	[BUG]  [BUGGY]  BigInteger  gid  =  BigInteger.valueOf(getValue());  [CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix  [FE]      NoSuchMethodError    [CONTEXT]      [BUGGY]  BigInteger  gid  =  BigInteger.valueOf(getValue());  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	BigInteger  gid  =  BigInteger.valueOf(getValue());	      	non-compiled	[CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix	10	None	replace
84	[BUG]  [BUGGY]  BigInteger  gid  =  BigInteger.valueOf(version);  [CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix  [FE]        NoSuchMethodError    [CONTEXT]      [BUGGY]  BigInteger  gid  =  BigInteger.valueOf(version);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	BigInteger  gid  =  BigInteger.valueOf(version);	      	non-compiled	[CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix	10	None	replace
85	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipShort.bigToLong(size);  }  [CE]  cannot  find  symbol  size  [FE]              AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipShort.bigToLong(size);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipShort.bigToLong(size);  }	  public    long    getGID()    {    return    ZipShort.bigToLong(gid);    }    	non-compiled	[CE]  cannot  find  symbol  size	5	None	replace
86	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.version,  gid);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.version,  gid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipUtil.bigToLong(this.version,  gid);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(this.version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	13	None	replace
87	[BUG]  [BUGGY]  public  byte  getGID()  {  return  ZipUtil.bigToLong(this.version);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]              AssertionError    [CONTEXT]      [BUGGY]  public  byte  getGID()  {  return  ZipUtil.bigToLong(this.version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  byte  getGID()  {  return  ZipUtil.bigToLong(this.version);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(this.version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	13	None	replace
88	[BUG]  [BUGGY]  public  short  getGID()  {  return  ZipUtil.bigToLong(this.version);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]                AssertionError    [CONTEXT]      [BUGGY]  public  short  getGID()  {  return  ZipUtil.bigToLong(this.version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  short  getGID()  {  return  ZipUtil.bigToLong(this.version);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(this.version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	13	None	replace
89	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  Validate.notNull(gid);  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  Validate.notNull(gid);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(uid);    }    Validate.notNull(gid);	  	non-compiled	[CE]  <identifier>  expected	6	None	add
90	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  int  version  =  ZipShort.size();  [CE]  variable  version  is  already  defined  in  class  X7875_NewUnix  [FE]      AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  int  version  =  ZipShort.size();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(uid);    }    int  version  =  ZipShort.size();	  	non-compiled	[CE]  variable  version  is  already  defined  in  class  X7875_NewUnix	6	None	add
91	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  long  uid  =  ZipShort.getIntValue(version);  [CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  long  uid  =  ZipShort.getIntValue(version);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(uid);    }    long  uid  =  ZipShort.getIntValue(version);	  	non-compiled	[CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix	6	None	add
92	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  long  uid  =  ZipShort.getLong(gid);  [CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  long  uid  =  ZipShort.getLong(gid);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(uid);    }    long  uid  =  ZipShort.getLong(gid);	  	non-compiled	[CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix	6	None	add
93	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  Integer  version  =  getVersion();  [CE]  variable  version  is  already  defined  in  class  X7875_NewUnix  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  Integer  version  =  getVersion();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(uid);    }    Integer  version  =  getVersion();	  	non-compiled	[CE]  variable  version  is  already  defined  in  class  X7875_NewUnix	6	None	add
94	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  Validate.notNull(uid);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  Validate.notNull(uid);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(uid);    }    Validate.notNull(uid);	  	non-compiled	[CE]  <identifier>  expected	6	None	add
95	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  long  uid  =  ZipShort.getLong(version);  [CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix  [FE]                AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  long  uid  =  ZipShort.getLong(version);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(uid);    }    long  uid  =  ZipShort.getLong(version);	  	non-compiled	[CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix	6	None	add
96	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipShort.BigInteger.bigToLong(version);  }  [CE]  cannot  find  symbol  BigInteger  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipShort.BigInteger.bigToLong(version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipShort.BigInteger.bigToLong(version);  }	  public    long    getGID()    {    return    ZipShort.bigToLong(version);    }    	non-compiled	[CE]  cannot  find  symbol  BigInteger	11	None	replace
97	[BUG]  [BUGGY]  public  byte  getGID()  {  return  ZipUtil.bigToLong(version);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  byte  getGID()  {  return  ZipUtil.bigToLong(version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  byte  getGID()  {  return  ZipUtil.bigToLong(version);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	2	None	replace
98	[BUG]  [BUGGY]  gid  =  ZipShort.getInstance();  [CE]  <identifier>  expected  [FE]    NoSuchMethodError    [CONTEXT]      [BUGGY]  gid  =  ZipShort.getInstance();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	gid  =  ZipShort.getInstance();	      	non-compiled	[CE]  <identifier>  expected	10	None	replace
99	[BUG]  [BUGGY]  Integer  gid  =  getGid(version);  [CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix  [FE]      NoSuchMethodError    [CONTEXT]      [BUGGY]  Integer  gid  =  getGid(version);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	Integer  gid  =  getGid(version);	      	non-compiled	[CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix	10	None	replace
100	[BUG]  [BUGGY]  Integer  gid  =  getGid();  [CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix  [FE]        NoSuchMethodError    [CONTEXT]      [BUGGY]  Integer  gid  =  getGid();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	Integer  gid  =  getGid();	      	non-compiled	[CE]  variable  gid  is  already  defined  in  class  X7875_NewUnix	10	None	replace
101	[BUG]  [BUGGY]  int  version  =  Version.unknownVersion();  [CE]  variable  version  is  already  defined  in  class  X7875_NewUnix  [FE]          NoSuchMethodError    [CONTEXT]      [BUGGY]  int  version  =  Version.unknownVersion();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	int  version  =  Version.unknownVersion();	      	non-compiled	[CE]  variable  version  is  already  defined  in  class  X7875_NewUnix	10	None	replace
102	[BUG]  [BUGGY]  gid  =  ZipShort.getInstance(version);  [CE]  <identifier>  expected  [FE]            NoSuchMethodError    [CONTEXT]      [BUGGY]  gid  =  ZipShort.getInstance(version);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	gid  =  ZipShort.getInstance(version);	      	non-compiled	[CE]  <identifier>  expected	10	None	replace
103	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipShort.bigToLong(this.version);  }  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipShort.bigToLong(this.version);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipShort.bigToLong(this.version);  }	  public    long    getGID()    {    return    ZipShort.bigToLong(version);    }    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
104	[BUG]  [BUGGY]      gid  =  ZipShort.getNumberInstance();  [CE]  <identifier>  expected  [FE]    NoSuchMethodError    [CONTEXT]      [BUGGY]      gid  =  ZipShort.getNumberInstance();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	        gid  =  ZipShort.getNumberInstance();	  	non-compiled	[CE]  <identifier>  expected	9	None	add
105	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(name);  }  [CE]  cannot  find  symbol  name  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(name);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipUtil.bigToLong(name);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(size);    }    	non-compiled	[CE]  cannot  find  symbol  name	8	None	replace
106	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(version,  gid);  }  [CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(version,  gid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipUtil.bigToLong(version,  gid);  }	  public    long    getGID()    {    return    ZipUtil.bigToLong(version);    }    	non-compiled	[CE]  method  bigToLong  in  class  ZipUtil  cannot  be  applied  to  given  types;	2	None	replace
107	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  return  ZipShort.bigToLong(this.gid);  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  return  ZipShort.bigToLong(this.gid);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    return  ZipShort.bigToLong(this.gid);	  	non-compiled	[CE]  illegal  start  of  type	3	None	add
108	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  int  version  =  ZipShort.getLong(this.version);  [CE]  variable  version  is  already  defined  in  class  X7875_NewUnix  [FE]      AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  int  version  =  ZipShort.getLong(this.version);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    int  version  =  ZipShort.getLong(this.version);	  	non-compiled	[CE]  variable  version  is  already  defined  in  class  X7875_NewUnix	3	None	add
109	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  int  version  =  ZipShort.getVersion();  [CE]  variable  version  is  already  defined  in  class  X7875_NewUnix  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  int  version  =  ZipShort.getVersion();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    int  version  =  ZipShort.getVersion();	  	non-compiled	[CE]  variable  version  is  already  defined  in  class  X7875_NewUnix	3	None	add
110	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  return  ZipShort.bigToLong(this.version);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  return  ZipShort.bigToLong(this.version);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    return  ZipShort.bigToLong(this.version);	  	non-compiled	[CE]  illegal  start  of  type	3	None	add
111	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  this.gid  =  ZipShort.getInstance(this.version);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(this.uid);  }  this.gid  =  ZipShort.getInstance(this.version);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(this.uid);    }    this.gid  =  ZipShort.getInstance(this.version);	  	non-compiled	[CE]  illegal  start  of  type	3	None	add
112	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  int  version  =  ZipShort.getVersion();  [CE]  variable  version  is  already  defined  in  class  X7875_NewUnix  [FE]    AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  int  version  =  ZipShort.getVersion();  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(uid);    }    int  version  =  ZipShort.getVersion();	  	non-compiled	[CE]  variable  version  is  already  defined  in  class  X7875_NewUnix	6	None	add
113	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  return  ZipShort.bigToLong(gid);  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  return  ZipShort.bigToLong(gid);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(uid);    }    return  ZipShort.bigToLong(gid);	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
114	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  long  uid  =  ZipShort.getLongValue(gid);  [CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix  [FE]        AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  long  uid  =  ZipShort.getLongValue(gid);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(uid);    }    long  uid  =  ZipShort.getLongValue(gid);	  	non-compiled	[CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix	6	None	add
115	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  long  uid  =  ZipShort.getLong(HEADER_ID);  [CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  long  uid  =  ZipShort.getLong(HEADER_ID);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(uid);    }    long  uid  =  ZipShort.getLong(HEADER_ID);	  	non-compiled	[CE]  variable  uid  is  already  defined  in  class  X7875_NewUnix	6	None	add
116	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  return  ZipShort.bigToLong(version);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipUtil.bigToLong(uid);  }  return  ZipShort.bigToLong(version);  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public    long    getGID()    {    return    ZipUtil.bigToLong(uid);    }    return  ZipShort.bigToLong(version);	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
117	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipShort.bigToLong(hid);  }  [CE]  cannot  find  symbol  hid  [FE]              AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipShort.bigToLong(hid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipShort.bigToLong(hid);  }	  public    long    getGID()    {    return    ZipShort.bigToLong(gid);    }    	non-compiled	[CE]  cannot  find  symbol  hid	5	None	replace
118	[BUG]  [BUGGY]  public  long  getGID()  {  return  ZipShort.bigToLong(this.gid);  }  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]      [BUGGY]  public  long  getGID()  {  return  ZipShort.bigToLong(this.gid);  }  [BUGGY]      [CLASS]  X7875_NewUnix  [METHOD]  getGID  [RETURN_TYPE]  long  [VARIABLES]  BigInteger  ONE_THOUSAND  gid  uid  ZipShort  HEADER_ID  boolean  long  serialVersionUID  int  version  	projects/Compress34/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java	0.7071067811865475	105	105	1	replace	public  long  getGID()  {  return  ZipShort.bigToLong(this.gid);  }	  public    long    getGID()    {    return    ZipShort.bigToLong(gid);    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
