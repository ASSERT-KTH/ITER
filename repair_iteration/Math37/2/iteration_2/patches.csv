bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  true);  [CE]  no  suitable  constructor  found  for  Complex(double,double,boolean)  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  true);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  realPart,  true);	  return    new    Complex(imaginaryPart,    realPart,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,boolean)	69	None	replace
2	[BUG]  [BUGGY]  return  new  Complex(realPart,  realPart,  false);  [CE]  no  suitable  constructor  found  for  Complex(double,double,boolean)  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  realPart,  false);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  realPart,  false);	  return    new    Complex(imaginaryPart,    realPart,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,boolean)	69	None	replace
3	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart,  false,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart,  false,  denominator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  imaginaryPart,  false,  denominator);	  return    new    Complex(imaginaryPart,    realPart,    false);    	non-compiled	[CE]  cannot  find  symbol  denominator	69	None	replace
4	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(imaginaryPart,  imaginaryPart);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(imaginaryPart,  imaginaryPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(imaginaryPart,  imaginaryPart);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    realPart);    	non-compiled	[CE]  ')'  expected	9	None	replace
5	[BUG]  [BUGGY]  if(Double.isNaN(denominator)||  Double.isNaN(denominator))  {  return  NaN;  }  [CE]  cannot  find  symbol  denominator  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(denominator)||  Double.isNaN(denominator))  {  return  NaN;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Double.isNaN(denominator)||  Double.isNaN(denominator))  {  return  NaN;  }	  if(Double.isNaN(denominator)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  cannot  find  symbol  denominator	86	None	replace
6	[BUG]  [BUGGY]  if(Double.isNaN(divisor)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  cannot  find  symbol  divisor  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(divisor)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Double.isNaN(divisor)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  if(Double.isNaN(denominator)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  cannot  find  symbol  divisor	86	None	replace
7	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart,  realPart);  [CE]  no  suitable  constructor  found  for  Complex(double,double,double)  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart,  realPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  imaginaryPart,  realPart);	  return    new    Complex(realPart,    imaginaryPart,    imaginaryPart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,double)	117	None	replace
8	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  denominator,  ZERO);  [CE]  cannot  find  symbol  denominator  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  denominator,  ZERO);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  null,  denominator,  ZERO);	  return    new    Complex(realPart,    imaginaryPart,    null,    ZERO);    	non-compiled	[CE]  cannot  find  symbol  denominator	139	None	replace
9	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  diminator,  ZERO);  [CE]  cannot  find  symbol  diminator  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  diminator,  ZERO);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  null,  diminator,  ZERO);	  return    new    Complex(realPart,    imaginaryPart,    null,    ZERO);    	non-compiled	[CE]  cannot  find  symbol  diminator	139	None	replace
10	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  ZERO,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  ZERO,  denominator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  null,  ZERO,  denominator);	  return    new    Complex(realPart,    imaginaryPart,    null,    ZERO);    	non-compiled	[CE]  cannot  find  symbol  denominator	139	None	replace
11	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  divisor,  ZERO);  [CE]  cannot  find  symbol  divisor  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  divisor,  ZERO);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  null,  divisor,  ZERO);	  return    new    Complex(realPart,    imaginaryPart,    null,    ZERO);    	non-compiled	[CE]  cannot  find  symbol  divisor	139	None	replace
12	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.valueOf(Double.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.valueOf(Double.MAX_VALUE);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart.valueOf(Double.MAX_VALUE);	  RealPart    imaginaryPart    =    realPart.valueOf(Double.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
13	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  nthRootOfAbs.valueOf(Double.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  nthRootOfAbs.valueOf(Double.MAX_VALUE);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  nthRootOfAbs.valueOf(Double.MAX_VALUE);	  RealPart    imaginaryPart    =    realPart.valueOf(Double.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
14	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  this.realPart.valueOf(Double.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  this.realPart.valueOf(Double.MAX_VALUE);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  this.realPart.valueOf(Double.MAX_VALUE);	  RealPart    imaginaryPart    =    realPart.valueOf(Double.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
15	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  true,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  true,  denominator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  true,  denominator);	  return    new    Complex(realPart,    imaginaryPart,    true);    	non-compiled	[CE]  cannot  find  symbol  denominator	68	None	replace
16	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  true);  [CE]  no  suitable  constructor  found  for  Complex(double,double,<null>,boolean)  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  true);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  null,  true);	  return    new    Complex(realPart,    imaginaryPart,    true);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,<null>,boolean)	68	None	replace
17	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  nthRootOfAbs.valueOf(Double.valueOf(imaginaryPart));  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  nthRootOfAbs.valueOf(Double.valueOf(imaginaryPart));  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  nthRootOfAbs.valueOf(Double.valueOf(imaginaryPart));	  RealPart    imaginaryPart    =    realPart.valueOf(Double.valueOf(imaginaryPart));    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
18	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart.valueOf(realPart));  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart.valueOf(realPart));  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart.valueOf(realPart));	  RealPart    imaginaryPart    =    realPart.valueOf(Double.valueOf(imaginaryPart));    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
19	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.valueOf(Double.valueOf(realPart));  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.valueOf(Double.valueOf(realPart));  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart.valueOf(Double.valueOf(realPart));	  RealPart    imaginaryPart    =    realPart.valueOf(Double.valueOf(imaginaryPart));    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
20	[BUG]  [BUGGY]  Neighbor.isNaN(denominator)||  Double.isNaN(realPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(denominator)||  Double.isNaN(realPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(denominator)||  Double.isNaN(realPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	  Neighbor.isNaN(imaginaryPart)||    Double.isNaN(denominator))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	74	None	replace
21	[BUG]  [BUGGY]  Neighbor.isNaN(denominator)||  Double.isNaN(denominator))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(denominator)||  Double.isNaN(denominator))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(denominator)||  Double.isNaN(denominator))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	  Neighbor.isNaN(imaginaryPart)||    Double.isNaN(denominator))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	74	None	replace
22	[BUG]  [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(denominator))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(denominator))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(realPart)||  Double.isNaN(denominator))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	  Neighbor.isNaN(imaginaryPart)||    Double.isNaN(denominator))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	74	None	replace
23	[BUG]  [BUGGY]  NegativeFactory.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  NegativeFactory.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	NegativeFactory.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }	  NegativeFactory.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	100	None	replace
24	[BUG]  [BUGGY]  NegativeFactory.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [CE]  not  a  statement  [FE]                            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  NegativeFactory.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	NegativeFactory.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }	  NegativeFactory.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	100	None	replace
25	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  this);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  realPart,  this);	  return    new    Complex(realPart,    imaginaryPart,    this);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	88	None	replace
26	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  innerPart.doubleValue();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  innerPart.doubleValue();  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  innerPart.doubleValue();	  RealPart    imaginaryPart    =    nthRootOfAbs.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
27	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.getInFactor();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.getInFactor();  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart.getInFactor();	  RealPart    imaginaryPart    =    realPart.getInFactor();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
28	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  this.realPart.getInFactor();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  this.realPart.getInFactor();  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  this.realPart.getInFactor();	  RealPart    imaginaryPart    =    realPart.getInFactor();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
29	[BUG]  [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }	  Neighbor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	73	None	replace
30	[BUG]  [BUGGY]  nisipisNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  nisipisNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	nisipisNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }	  nisipisNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	2	None	replace
31	[BUG]  [BUGGY]  nisipisNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  nisipisNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	nisipisNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }	  nisipisNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	2	None	replace
32	[BUG]  [BUGGY]  nisipisNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  nisipisNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	nisipisNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  new  Complex(realPart,  imaginaryPart);  }	  nisipisNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	2	None	replace
33	[BUG]  [BUGGY]  Annotation.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Annotation.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Annotation.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  Annotation.isNaN(denominator)||    Double.isNaN(denominator))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	48	None	replace
34	[BUG]  [BUGGY]  Annotation.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Annotation.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Annotation.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }	  Annotation.isNaN(denominator)||    Double.isNaN(denominator))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	48	None	replace
35	[BUG]  [BUGGY]  Annotation.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Annotation.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Annotation.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }	  Annotation.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	122	None	replace
36	[BUG]  [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  cannot  find  symbol  Divisor  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  return    new    Complex(imaginaryPart,    realPart);    if(isInfinite)    {    if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  cannot  find  symbol  Divisor	126	None	replace
37	[BUG]  [BUGGY]  if(Divisor.isNaN(realPart)||  double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  class  expected  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Divisor.isNaN(realPart)||  double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(realPart)||  double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  return    new    Complex(imaginaryPart,    realPart);    if(isInfinite)    {    if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  class  expected	126	None	replace
38	[BUG]  [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }  [CE]  cannot  find  symbol  Divisor  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }	  return    new    Complex(imaginaryPart,    realPart);    if(isInfinite)    {    if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  cannot  find  symbol  Divisor	126	None	replace
39	[BUG]  [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  class  expected  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  double.isNaN(imaginaryPart))  {  return  NaN;  }	  return    new    Complex(imaginaryPart,    realPart);    if(isInfinite)    {    if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  class  expected	126	None	replace
40	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  Complex.valueOf(imaginaryPart,  realPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	add	return  Complex.valueOf(imaginaryPart,  realPart);	  return    Complex.valueOf(realPart,    imaginaryPart);    	compilable	  [FE]  StackOverflowError  	20	4	replace
41	[BUG]  [BUGGY]  return  Complex.valueOf(imaginaryPart,  realPart);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  Complex.valueOf(imaginaryPart,  realPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  Complex.valueOf(imaginaryPart,  realPart);	  return    Complex.valueOf(realPart,    imaginaryPart);    	compilable	  [FE]  StackOverflowError  	20	4	replace
42	[BUG]  [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart,  false);  [CE]  no  suitable  method  found  for  valueOf(double,double,boolean)  [FE]      StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart,  false);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  Complex.valueOf(realPart,  imaginaryPart,  false);	  return    Complex.valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(double,double,boolean)	20	None	replace
43	[BUG]  [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart)+  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart)+  1;  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  Complex.valueOf(realPart,  imaginaryPart)+  1;	  return    Complex.valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	20	None	replace
44	[BUG]  [BUGGY]  RealPart  realPart  =  new  Complex(imaginaryPart,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  realPart  =  new  Complex(imaginaryPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  realPart  =  new  Complex(imaginaryPart,  imaginaryPart);	  return    new    Complex(imaginaryPart,    realPart);    RealPart    realPart    =    new    Complex(imaginaryPart,    realPart);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
45	[BUG]  [BUGGY]  RealPart  realPart  =  new  Complex(realPart,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  realPart  =  new  Complex(realPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  realPart  =  new  Complex(realPart,  imaginaryPart);	  return    new    Complex(imaginaryPart,    realPart);    RealPart    realPart    =    new    Complex(imaginaryPart,    realPart);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
46	[BUG]  [BUGGY]  RealPart  realPart  =  new  Complex(imaginaryPart,  realPart);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  realPart  =  new  Complex(imaginaryPart,  realPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  realPart  =  new  Complex(imaginaryPart,  realPart);	  return    new    Complex(imaginaryPart,    realPart);    RealPart    realPart    =    new    Complex(imaginaryPart,    realPart);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
47	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.evaluate(imaginaryPart);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  realPart.evaluate(imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.evaluate(imaginaryPart);	  return    new    Complex(imaginaryPart,    imaginaryPart);    RealPart    imaginaryPart    =    realPart.evaluate(imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
48	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.evaluate(imaginaryPart);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.evaluate(imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart.evaluate(imaginaryPart);	  return    new    Complex(imaginaryPart,    imaginaryPart);    RealPart    imaginaryPart    =    realPart.evaluate(imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
49	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.evaluate(realPart);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.evaluate(realPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart.evaluate(realPart);	  return    new    Complex(imaginaryPart,    imaginaryPart);    RealPart    imaginaryPart    =    realPart.evaluate(imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
50	[BUG]  [BUGGY]  realPart  =  imaginaryPart.evaluate(imaginaryPart);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  realPart  =  imaginaryPart.evaluate(imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	realPart  =  imaginaryPart.evaluate(imaginaryPart);	  return    new    Complex(imaginaryPart,    imaginaryPart);    RealPart    imaginaryPart    =    realPart.evaluate(imaginaryPart);    	non-compiled	[CE]  double  cannot  be  dereferenced	96	None	replace
51	[BUG]  [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN  +  1;  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN  +  1;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN  +  1;  }	  Neighbor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	65	None	replace
52	[BUG]  [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  2;  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  2;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  2;  }	  Neighbor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	65	None	replace
53	[BUG]  [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  -  1;  }  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  -  1;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  -  1;  }	  Neighbor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	65	None	replace
54	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  imaginaryPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  imaginaryPart);	  RealPart    imaginaryPart    =    Complex.createInfinite(realPart);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
55	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.createInfinite(Complex.createInfinite(imaginaryPart);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  realPart.createInfinite(Complex.createInfinite(imaginaryPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.createInfinite(Complex.createInfinite(imaginaryPart);	  RealPart    imaginaryPart    =    Complex.createInfinite(realPart);    	non-compiled	[CE]  ')'  expected	7	None	replace
56	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.parseDouble(Double.parseDouble(imaginaryPart);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  realPart.parseDouble(Double.parseDouble(imaginaryPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.parseDouble(Double.parseDouble(imaginaryPart);	  RealPart    imaginaryPart    =    Double.parseDouble(realPart);    	non-compiled	[CE]  ')'  expected	60	None	replace
57	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.parseDouble(Double.parseDouble(realPart);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  realPart.parseDouble(Double.parseDouble(realPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.parseDouble(Double.parseDouble(realPart);	  RealPart    imaginaryPart    =    Double.parseDouble(realPart);    	non-compiled	[CE]  ')'  expected	60	None	replace
58	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.parseDouble(Double.parseDouble(realPart));  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  realPart.parseDouble(Double.parseDouble(realPart));  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.parseDouble(Double.parseDouble(realPart));	  RealPart    imaginaryPart    =    Double.parseDouble(realPart);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
59	[BUG]  [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }	  if(Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	1	None	replace
60	[BUG]  [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }	  if(Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	1	None	replace
61	[BUG]  [BUGGY]  Neighbor.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }	  if(Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	1	None	replace
62	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  denominator,  ZERO);  [CE]  cannot  find  symbol  denominator  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  denominator,  ZERO);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  denominator,  ZERO);	  return    new    Complex(realPart,    imaginaryPart,    diminator,    ZERO);    	non-compiled	[CE]  cannot  find  symbol  denominator	52	None	replace
63	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  divisor,  ZERO);  [CE]  cannot  find  symbol  divisor  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  divisor,  ZERO);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  divisor,  ZERO);	  return    new    Complex(realPart,    imaginaryPart,    diminator,    ZERO);    	non-compiled	[CE]  cannot  find  symbol  divisor	52	None	replace
64	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  dimdenator,  ZERO);  [CE]  cannot  find  symbol  dimdenator  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  dimdenator,  ZERO);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  dimdenator,  ZERO);	  return    new    Complex(realPart,    imaginaryPart,    diminator,    ZERO);    	non-compiled	[CE]  cannot  find  symbol  dimdenator	52	None	replace
65	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  DEMINE_DIMENSION,  ZERO);  [CE]  cannot  find  symbol  DEMINE_DIMENSION  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  DEMINE_DIMENSION,  ZERO);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  DEMINE_DIMENSION,  ZERO);	  return    new    Complex(realPart,    imaginaryPart,    diminator,    ZERO);    	non-compiled	[CE]  cannot  find  symbol  DEMINE_DIMENSION	52	None	replace
66	[BUG]  [BUGGY]  NegativeFactory.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN  +  1;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  NegativeFactory.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN  +  1;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	NegativeFactory.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN  +  1;  }	  NegativeFactory.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	97	None	replace
67	[BUG]  [BUGGY]  NegativeFactory.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  2;  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  NegativeFactory.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  2;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	NegativeFactory.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  2;  }	  NegativeFactory.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	97	None	replace
68	[BUG]  [BUGGY]  NegativeFactory.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  NegativeFactory.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	NegativeFactory.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }	  NegativeFactory.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	97	None	replace
69	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.getInFactory();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  realPart.getInFactory();  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.getInFactory();	  RealPart    imaginaryPart    =    imaginaryPart.getInFactory();    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
70	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  this.imaginaryPart.getInFactory();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  this.imaginaryPart.getInFactory();  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  this.imaginaryPart.getInFactory();	  RealPart    imaginaryPart    =    imaginaryPart.getInFactory();    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
71	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  innerPart.getInFactory();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  innerPart.getInFactory();  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  innerPart.getInFactory();	  RealPart    imaginaryPart    =    imaginaryPart.getInFactory();    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
72	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.valueOf(Double.NaN);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.valueOf(Double.NaN);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart.valueOf(Double.NaN);	  RealPart    imaginaryPart    =    realPart.valueOf(Double.NaN);    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
73	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  nthRootOfAbs.valueOf(Double.NaN);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  nthRootOfAbs.valueOf(Double.NaN);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  nthRootOfAbs.valueOf(Double.NaN);	  RealPart    imaginaryPart    =    realPart.valueOf(Double.NaN);    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
74	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  virtualPart.valueOf(Double.NaN);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  virtualPart.valueOf(Double.NaN);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  virtualPart.valueOf(Double.NaN);	  RealPart    imaginaryPart    =    realPart.valueOf(Double.NaN);    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
75	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  imaginaryPart,  null);  [CE]  no  suitable  constructor  found  for  Complex(double,double,double,<null>)  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  imaginaryPart,  null);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  imaginaryPart,  null);	  return    new    Complex(realPart,    imaginaryPart,    scale,    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,double,<null>)	87	None	replace
76	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  imaginaryPart,  denominator,  null);  [CE]  cannot  find  symbol  denominator  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  imaginaryPart,  denominator,  null);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  imaginaryPart,  denominator,  null);	  return    new    Complex(realPart,    imaginaryPart,    scale,    null);    	non-compiled	[CE]  cannot  find  symbol  denominator	87	None	replace
77	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart,  null);  [CE]  no  suitable  constructor  found  for  Complex(double,double,<null>)  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart,  null);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  imaginaryPart,  null);	  return    new    Complex(realPart,    imaginaryPart,    scale,    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,<null>)	87	None	replace
78	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  imaginaryPart,  null);  [CE]  no  suitable  constructor  found  for  Complex(double,double,double,<null>)  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  imaginaryPart,  null);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  realPart,  imaginaryPart,  null);	  return    new    Complex(realPart,    imaginaryPart,    scale,    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,double,<null>)	87	None	replace
79	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  Denominator.isNaN(denominator));  [CE]  cannot  find  symbol  denominator  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  Denominator.isNaN(denominator));  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  Denominator.isNaN(denominator));	  return    new    Complex(realPart,    imaginaryPart,    Denominator.isNaN(imaginaryPart));    	non-compiled	[CE]  cannot  find  symbol  denominator	32	None	replace
80	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  Denominator.isNaN(divisor));  [CE]  cannot  find  symbol  divisor  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  Denominator.isNaN(divisor));  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  Denominator.isNaN(divisor));	  return    new    Complex(realPart,    imaginaryPart,    Denominator.isNaN(imaginaryPart));    	non-compiled	[CE]  cannot  find  symbol  divisor	32	None	replace
81	[BUG]  [BUGGY]  realPart  =  imaginaryPart.getINF();  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  realPart  =  imaginaryPart.getINF();  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	realPart  =  imaginaryPart.getINF();	  return    new    Complex(imaginaryPart,    imaginaryPart);    RealPart    imaginaryPart    =    realPart.getINF();    	non-compiled	[CE]  double  cannot  be  dereferenced	37	None	replace
82	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(implicitePart,  denominator);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(implicitePart,  denominator);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Double.valueOf(implicitePart,  denominator);	  RealPart    imaginaryPart    =    Double.valueOf(implicitePart);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
83	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(implicitePart);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(implicitePart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(implicitePart);	  RealPart    imaginaryPart    =    Double.valueOf(implicitePart);    	non-compiled	[CE]  ')'  expected	63	None	replace
84	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  c.doubleValue();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  c.doubleValue();  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  c.doubleValue();	  RealPart    imaginaryPart    =    imaginaryPart.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
85	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  false,  divisor);  [CE]  cannot  find  symbol  divisor  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  false,  divisor);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  false,  divisor);	  return    new    Complex(realPart,    imaginaryPart,    false,    denominator);    	non-compiled	[CE]  cannot  find  symbol  divisor	70	None	replace
86	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  false,  diminator);  [CE]  cannot  find  symbol  diminator  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  false,  diminator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  false,  diminator);	  return    new    Complex(realPart,    imaginaryPart,    false,    denominator);    	non-compiled	[CE]  cannot  find  symbol  diminator	70	None	replace
87	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  virtualPart.doubleValue();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  virtualPart.doubleValue();  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  virtualPart.doubleValue();	  RealPart    imaginaryPart    =    this.imaginaryPart.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
88	[BUG]  [BUGGY]  Annotation.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN  +  1;  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Annotation.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN  +  1;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Annotation.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN  +  1;  }	  Annotation.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	123	None	replace
89	[BUG]  [BUGGY]  Annotation.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  2;  }  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Annotation.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  2;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Annotation.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  2;  }	  Annotation.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	123	None	replace
90	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(realPart,  RealPart.NaN);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(realPart,  RealPart.NaN);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Double.valueOf(realPart,  RealPart.NaN);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    RealPart.NaN);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
91	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(imaginaryPart,  RealPart.NaN);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(imaginaryPart,  RealPart.NaN);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(imaginaryPart,  RealPart.NaN);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    RealPart.NaN);    	non-compiled	[CE]  ')'  expected	91	None	replace
92	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(ImaginaryPart.NaN,  RealPart.NaN);  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(ImaginaryPart.NaN,  RealPart.NaN);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(ImaginaryPart.NaN,  RealPart.NaN);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    RealPart.NaN);    	non-compiled	[CE]  ')'  expected	91	None	replace
93	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(realPart,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(realPart,  imaginaryPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Complex.createInfinite(realPart,  imaginaryPart);	  RealPart    imaginaryPart    =    Complex.createInfinite(imaginaryPart,    realPart);    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
94	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  divisor);  [CE]  cannot  find  symbol  divisor  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  divisor);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  null,  divisor);	  return    new    Complex(realPart,    imaginaryPart,    null,    denominator);    	non-compiled	[CE]  cannot  find  symbol  divisor	57	None	replace
95	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart,  null,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart,  null,  denominator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  imaginaryPart,  null,  denominator);	  return    new    Complex(realPart,    imaginaryPart,    null,    denominator);    	non-compiled	[CE]  cannot  find  symbol  denominator	57	None	replace
96	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  diminator);  [CE]  cannot  find  symbol  diminator  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  diminator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  null,  diminator);	  return    new    Complex(realPart,    imaginaryPart,    null,    denominator);    	non-compiled	[CE]  cannot  find  symbol  diminator	57	None	replace
97	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart);  RealPart  imaginaryPart  =  Double.parseDouble(imaginaryPart);  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(realPart,  imaginaryPart);  RealPart  imaginaryPart  =  Double.parseDouble(imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    valueOf(realPart,    imaginaryPart);    RealPart  imaginaryPart  =  Double.parseDouble(imaginaryPart);	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
98	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart);  RealPart  imaginaryPart  =  realPart.doubleValue();  [CE]  cannot  find  symbol  [FE]      StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(realPart,  imaginaryPart);  RealPart  imaginaryPart  =  realPart.doubleValue();  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    valueOf(realPart,    imaginaryPart);    RealPart  imaginaryPart  =  realPart.doubleValue();	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
99	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart);  RealPart  imaginaryPart  =  realPart.getINF();  [CE]  cannot  find  symbol  [FE]        StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(realPart,  imaginaryPart);  RealPart  imaginaryPart  =  realPart.getINF();  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    valueOf(realPart,    imaginaryPart);    RealPart  imaginaryPart  =  realPart.getINF();	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
100	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart);  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart);  [CE]  cannot  find  symbol  [FE]          StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(realPart,  imaginaryPart);  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    valueOf(realPart,    imaginaryPart);    RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart);	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
101	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart);  RealPart  imaginaryPart  =  Double.valueOf(realPart,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]            StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(realPart,  imaginaryPart);  RealPart  imaginaryPart  =  Double.valueOf(realPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    valueOf(realPart,    imaginaryPart);    RealPart  imaginaryPart  =  Double.valueOf(realPart,  imaginaryPart);	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
102	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  imaginaryPart,  ZERO);  [CE]  no  suitable  constructor  found  for  Complex(double,double,double,Complex)  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  imaginaryPart,  ZERO);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  realPart,  imaginaryPart,  ZERO);	  return    new    Complex(realPart,    imaginaryPart,    imaginaryPart,    ONE);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,double,Complex)	115	None	replace
103	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  imaginaryPart,  ONE);  [CE]  no  suitable  constructor  found  for  Complex(double,double,double,Complex)  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  imaginaryPart,  ONE);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  realPart,  imaginaryPart,  ONE);	  return    new    Complex(realPart,    imaginaryPart,    imaginaryPart,    ONE);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,double,Complex)	115	None	replace
104	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  ZERO,  imaginaryPart,  ONE);  [CE]  no  suitable  constructor  found  for  Complex(double,double,Complex,double,Complex)  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  ZERO,  imaginaryPart,  ONE);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  ZERO,  imaginaryPart,  ONE);	  return    new    Complex(realPart,    imaginaryPart,    imaginaryPart,    ONE);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,Complex,double,Complex)	115	None	replace
105	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  realPart,  ZERO);  [CE]  no  suitable  constructor  found  for  Complex(double,double,double,Complex)  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  realPart,  ZERO);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  realPart,  ZERO);	  return    new    Complex(realPart,    imaginaryPart,    imaginaryPart,    ONE);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,double,Complex)	115	None	replace
106	[BUG]  [BUGGY]  Annotation.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN  +  1;  }  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Annotation.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN  +  1;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Annotation.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN  +  1;  }	  Annotation.isNaN(denominator)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	67	None	replace
107	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.valueOf(Double.valueOf(realPart);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.valueOf(Double.valueOf(realPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart.valueOf(Double.valueOf(realPart);	  RealPart    imaginaryPart    =    realPart.valueOf(Double.valueOf(realPart);    	non-compiled	[CE]  ')'  expected	76	None	replace
108	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  nthRootOfAbs.valueOf(Double.valueOf(imaginaryPart);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  nthRootOfAbs.valueOf(Double.valueOf(imaginaryPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  nthRootOfAbs.valueOf(Double.valueOf(imaginaryPart);	  RealPart    imaginaryPart    =    realPart.valueOf(Double.valueOf(realPart);    	non-compiled	[CE]  ')'  expected	76	None	replace
109	[BUG]  [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart);  RealPart  imaginaryPart  =  Complex.valueOf(realPart,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart);  RealPart  imaginaryPart  =  Complex.valueOf(realPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    Complex.valueOf(realPart,    imaginaryPart);    RealPart  imaginaryPart  =  Complex.valueOf(realPart,  imaginaryPart);	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
110	[BUG]  [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart);  Complex.valueOf(realPart,  imaginaryPart);  [CE]  unreachable  statement  [FE]      StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart);  Complex.valueOf(realPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    Complex.valueOf(realPart,    imaginaryPart);    Complex.valueOf(realPart,  imaginaryPart);	  	non-compiled	[CE]  unreachable  statement	19	None	add
111	[BUG]  [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart);  RealPart  imaginaryPart  =  Complex.valueOf(imaginaryPart,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]        StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart);  RealPart  imaginaryPart  =  Complex.valueOf(imaginaryPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    Complex.valueOf(realPart,    imaginaryPart);    RealPart  imaginaryPart  =  Complex.valueOf(imaginaryPart,  imaginaryPart);	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
112	[BUG]  [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart);  RealPart  imaginaryPart  =  Complex.valueOf(imaginaryPart,  realPart);  [CE]  cannot  find  symbol  [FE]          StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart);  RealPart  imaginaryPart  =  Complex.valueOf(imaginaryPart,  realPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    Complex.valueOf(realPart,    imaginaryPart);    RealPart  imaginaryPart  =  Complex.valueOf(imaginaryPart,  realPart);	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
113	[BUG]  [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart);  RealPart  imaginaryPart  =  Complex.valueOf(imaginaryPart,  denominator);  [CE]  cannot  find  symbol  [FE]            StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart);  RealPart  imaginaryPart  =  Complex.valueOf(imaginaryPart,  denominator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    Complex.valueOf(realPart,    imaginaryPart);    RealPart  imaginaryPart  =  Complex.valueOf(imaginaryPart,  denominator);	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
114	[BUG]  [BUGGY]  Neighbor  realPart  =  new  Neighbor(realPart,  denominator);  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor  realPart  =  new  Neighbor(realPart,  denominator);  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor  realPart  =  new  Neighbor(realPart,  denominator);  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  return    new    Complex(imaginaryPart,    realPart);    if(isInfinite)    {    if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
115	[BUG]  [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  Divisor  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  throw  new  IllegalArgumentException( " ");  }	  return    new    Complex(imaginaryPart,    realPart);    if(isInfinite)    {    if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  cannot  find  symbol  Divisor	124	None	replace
116	[BUG]  [BUGGY]  Neighbor  realPart  =  new  Neighbor(realPart,  denominator);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor  realPart  =  new  Neighbor(realPart,  denominator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor  realPart  =  new  Neighbor(realPart,  denominator);	  return    new    Complex(imaginaryPart,    realPart);    if(isInfinite)    {    if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
117	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  ZERO,  divisor);  [CE]  cannot  find  symbol  divisor  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  ZERO,  divisor);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  ZERO,  divisor);	  return    new    Complex(realPart,    imaginaryPart,    ZERO,    denominator);    	non-compiled	[CE]  cannot  find  symbol  divisor	50	None	replace
118	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  ONE,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  ONE,  denominator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  ONE,  denominator);	  return    new    Complex(realPart,    imaginaryPart,    ZERO,    denominator);    	non-compiled	[CE]  cannot  find  symbol  denominator	50	None	replace
119	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  DELIMITER,  denominator);  [CE]  cannot  find  symbol  DELIMITER  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  DELIMITER,  denominator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  DELIMITER,  denominator);	  return    new    Complex(realPart,    imaginaryPart,    ZERO,    denominator);    	non-compiled	[CE]  cannot  find  symbol  DELIMITER	50	None	replace
120	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  null,  false);  [CE]  no  suitable  constructor  found  for  Complex(double,double,<null>,boolean)  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  null,  false);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  realPart,  null,  false);	  return    new    Complex(realPart,    imaginaryPart,    null,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,<null>,boolean)	130	None	replace
121	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  false,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  false,  denominator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  null,  false,  denominator);	  return    new    Complex(realPart,    imaginaryPart,    null,    false);    	non-compiled	[CE]  cannot  find  symbol  denominator	130	None	replace
122	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  denominator,  false);  [CE]  cannot  find  symbol  denominator  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  denominator,  false);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  null,  denominator,  false);	  return    new    Complex(realPart,    imaginaryPart,    null,    false);    	non-compiled	[CE]  cannot  find  symbol  denominator	130	None	replace
123	[BUG]  [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	108	None	replace
124	[BUG]  [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart);  }  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart);  }	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	108	None	replace
125	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.parseDouble(realPart);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.parseDouble(realPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart.parseDouble(realPart);	  RealPart    imaginaryPart    =    realPart.parseDouble(imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
126	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  nthRootOfAbs.parseDouble(imaginaryPart);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  nthRootOfAbs.parseDouble(imaginaryPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  nthRootOfAbs.parseDouble(imaginaryPart);	  RealPart    imaginaryPart    =    realPart.parseDouble(imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
127	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart,  divisor);  [CE]  cannot  find  symbol  divisor  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart,  divisor);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  imaginaryPart,  divisor);	  return    new    Complex(imaginaryPart,    realPart,    denominator);    	non-compiled	[CE]  cannot  find  symbol  divisor	54	None	replace
128	[BUG]  [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }  [CE]  cannot  find  symbol  denominator  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Double.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }	  if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  cannot  find  symbol  denominator	28	None	replace
129	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  false,  true,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  false,  true,  denominator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  false,  true,  denominator);	  return    new    Complex(realPart,    imaginaryPart,    false,    true);    	non-compiled	[CE]  cannot  find  symbol  denominator	131	None	replace
130	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  true,  false);  [CE]  no  suitable  constructor  found  for  Complex(double,double,boolean,boolean)  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  true,  false);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  true,  false);	  return    new    Complex(realPart,    imaginaryPart,    false,    true);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,boolean,boolean)	131	None	replace
131	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  false,  true);  [CE]  no  suitable  constructor  found  for  Complex(double,double,boolean,boolean)  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  false,  true);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  realPart,  false,  true);	  return    new    Complex(realPart,    imaginaryPart,    false,    true);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,boolean,boolean)	131	None	replace
132	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  this.realPart.getInf();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  this.realPart.getInf();  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  this.realPart.getInf();	  RealPart    imaginaryPart    =    realPart.getInf();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
133	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(realPart,  Double.POSITIVE_INFINITY);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(realPart,  Double.POSITIVE_INFINITY);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Double.valueOf(realPart,  Double.POSITIVE_INFINITY);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
134	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(implicitePart,  Double.POSITIVE_INFINITY);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(implicitePart,  Double.POSITIVE_INFINITY);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Double.valueOf(implicitePart,  Double.POSITIVE_INFINITY);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
135	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(null,  Double.POSITIVE_INFINITY);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(null,  Double.POSITIVE_INFINITY);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Double.valueOf(null,  Double.POSITIVE_INFINITY);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
136	[BUG]  [BUGGY]  Neighbor.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }	  Neighbor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	64	None	replace
137	[BUG]  [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  2;  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  2;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  2;  }	  Neighbor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	64	None	replace
138	[BUG]  [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(realPart))  {  return  NaN;  }  [CE]  cannot  find  symbol  Divisor  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(realPart))  {  return  NaN;  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(realPart)||  Double.isNaN(realPart))  {  return  NaN;  }	  return    new    Complex(imaginaryPart,    imaginaryPart);    if(isInfinite)    {    if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  cannot  find  symbol  Divisor	133	None	replace
139	[BUG]  [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(expReal))  {  return  NaN;  }  [CE]  cannot  find  symbol  Divisor  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(expReal))  {  return  NaN;  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(realPart)||  Double.isNaN(expReal))  {  return  NaN;  }	  return    new    Complex(imaginaryPart,    imaginaryPart);    if(isInfinite)    {    if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  cannot  find  symbol  Divisor	133	None	replace
140	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  ONE);  [CE]  no  suitable  constructor  found  for  Complex(double,double,Complex)  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  ONE);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  realPart,  ONE);	  return    new    Complex(realPart,    imaginaryPart,    ONE);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,Complex)	104	None	replace
141	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  scale,  ONE);  [CE]  cannot  find  symbol  scale  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  scale,  ONE);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  scale,  ONE);	  return    new    Complex(realPart,    imaginaryPart,    ONE);    	non-compiled	[CE]  cannot  find  symbol  scale	104	None	replace
142	[BUG]  [BUGGY]  Real  imaginaryPart  =  new  Complex(realPart,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Real  imaginaryPart  =  new  Complex(realPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Real  imaginaryPart  =  new  Complex(realPart,  imaginaryPart);	  return    new    Complex(imaginaryPart,    imaginaryPart);    Complex    imaginaryPart    =    new    Complex(imaginaryPart,    imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
143	[BUG]  [BUGGY]  Complex  imaginaryPart  =  new  Complex(realPart,  imaginaryPart);  [CE]  variable  imaginaryPart  is  already  defined  in  method  valueOf(double,double)  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Complex  imaginaryPart  =  new  Complex(realPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Complex  imaginaryPart  =  new  Complex(realPart,  imaginaryPart);	  return    new    Complex(imaginaryPart,    imaginaryPart);    Complex    imaginaryPart    =    new    Complex(imaginaryPart,    imaginaryPart);    	non-compiled	[CE]  variable  imaginaryPart  is  already  defined  in  method  valueOf(double,double)	34	None	replace
144	[BUG]  [BUGGY]  Real  imaginaryPart  =  new  Complex(imaginaryPart,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Real  imaginaryPart  =  new  Complex(imaginaryPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Real  imaginaryPart  =  new  Complex(imaginaryPart,  imaginaryPart);	  return    new    Complex(imaginaryPart,    imaginaryPart);    Complex    imaginaryPart    =    new    Complex(imaginaryPart,    imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
145	[BUG]  [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN;  }	  Neighbor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	47	None	replace
146	[BUG]  [BUGGY]  Neighbor.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  Neighbor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	47	None	replace
147	[BUG]  [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }	  Neighbor.isNaN(denominator)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	75	None	replace
148	[BUG]  [BUGGY]  Neighbor.isNaN(denominator)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(denominator)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(denominator)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }	  Neighbor.isNaN(denominator)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	75	None	replace
149	[BUG]  [BUGGY]  Negative.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Negative.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Negative.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN;  }	  Negative.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	83	None	replace
150	[BUG]  [BUGGY]  Negative.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Negative.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Negative.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }	  Negative.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	83	None	replace
151	[BUG]  [BUGGY]  Negative.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Negative.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Negative.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  Negative.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	83	None	replace
152	[BUG]  [BUGGY]  Neighbor.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  Neighbor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	46	None	replace
153	[BUG]  [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }	  Neighbor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	46	None	replace
154	[BUG]  [BUGGY]  new  Complex(realPart,  imaginaryPart);  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  new  Complex(realPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	new  Complex(realPart,  imaginaryPart);	  return    new    Complex(imaginaryPart,    realPart);    new    Complex(imaginaryPart,    realPart);    	non-compiled	[CE]  missing  return  statement	38	None	replace
155	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart);  new  Complex(realPart,  imaginaryPart);  [CE]  unreachable  statement  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart);  new  Complex(realPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart);  new  Complex(realPart,  imaginaryPart);	  return    new    Complex(imaginaryPart,    realPart);    new    Complex(imaginaryPart,    realPart);    	non-compiled	[CE]  unreachable  statement	38	None	replace
156	[BUG]  [BUGGY]  new  Complex(imaginaryPart,  imaginaryPart);  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  new  Complex(imaginaryPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	new  Complex(imaginaryPart,  imaginaryPart);	  return    new    Complex(imaginaryPart,    realPart);    new    Complex(imaginaryPart,    realPart);    	non-compiled	[CE]  missing  return  statement	38	None	replace
157	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart);  new  Complex(imaginaryPart,  realPart);  [CE]  unreachable  statement  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart);  new  Complex(imaginaryPart,  realPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart);  new  Complex(imaginaryPart,  realPart);	  return    new    Complex(imaginaryPart,    realPart);    new    Complex(imaginaryPart,    realPart);    	non-compiled	[CE]  unreachable  statement	38	None	replace
158	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  realPart);  [CE]  no  suitable  constructor  found  for  Complex(double,double,double)  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  realPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  realPart);	  return    new    Complex(imaginaryPart,    realPart,    imaginaryPart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,double)	89	None	replace
159	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  DEDENIATOR);  [CE]  cannot  find  symbol  DEDENIATOR  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  DEDENIATOR);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  DEDENIATOR);	  return    new    Complex(imaginaryPart,    realPart,    imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol  DEDENIATOR	89	None	replace
160	[BUG]  [BUGGY]  RealPart  realPart  =  realPart.getINF();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  realPart  =  realPart.getINF();  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  realPart  =  realPart.getINF();	  return    new    Complex(imaginaryPart,    realPart);    RealPart    realPart    =    realPart.getINF();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
161	[BUG]  [BUGGY]  RealPart  realPart  =  imaginaryPart.getINF();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  realPart  =  imaginaryPart.getINF();  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  realPart  =  imaginaryPart.getINF();	  return    new    Complex(imaginaryPart,    realPart);    RealPart    realPart    =    realPart.getINF();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
162	[BUG]  [BUGGY]  realPart  =  realPart.getINF();  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  realPart  =  realPart.getINF();  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	realPart  =  realPart.getINF();	  return    new    Complex(imaginaryPart,    realPart);    RealPart    realPart    =    realPart.getINF();    	non-compiled	[CE]  double  cannot  be  dereferenced	80	None	replace
163	[BUG]  [BUGGY]  Complex  realPart  =  new  Complex(realPart,  imaginaryPart);  [CE]  variable  realPart  is  already  defined  in  method  valueOf(double,double)  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Complex  realPart  =  new  Complex(realPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Complex  realPart  =  new  Complex(realPart,  imaginaryPart);	  return    new    Complex(imaginaryPart,    realPart);    Complex    realPart    =    new    Complex(realPart,    imaginaryPart);    	non-compiled	[CE]  variable  realPart  is  already  defined  in  method  valueOf(double,double)	42	None	replace
164	[BUG]  [BUGGY]  Complex  realPart  =  new  Complex(imaginaryPart,  imaginaryPart);  [CE]  variable  realPart  is  already  defined  in  method  valueOf(double,double)  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Complex  realPart  =  new  Complex(imaginaryPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Complex  realPart  =  new  Complex(imaginaryPart,  imaginaryPart);	  return    new    Complex(imaginaryPart,    realPart);    Complex    realPart    =    new    Complex(realPart,    imaginaryPart);    	non-compiled	[CE]  variable  realPart  is  already  defined  in  method  valueOf(double,double)	42	None	replace
165	[BUG]  [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(denominator))  {  return  NaN;  }  [CE]  cannot  find  symbol  Divisor  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(denominator))  {  return  NaN;  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(realPart)||  Double.isNaN(denominator))  {  return  NaN;  }	  return    new    Complex(imaginaryPart,    imaginaryPart);    if(imaginaryPart!=    null)    {    if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  cannot  find  symbol  Divisor	136	None	replace
166	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  ImaginePart.valueOf(Double.parseDouble(imaginaryPart));  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  ImaginePart.valueOf(Double.parseDouble(imaginaryPart));  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  ImaginePart.valueOf(Double.parseDouble(imaginaryPart));	  RealPart    imaginaryPart    =    ImaginePart.valueOf(Double.valueOf(imaginaryPart));    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
167	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Imagine.valueOf(Double.valueOf(imaginaryPart));  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Imagine.valueOf(Double.valueOf(imaginaryPart));  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Imagine.valueOf(Double.valueOf(imaginaryPart));	  RealPart    imaginaryPart    =    ImaginePart.valueOf(Double.valueOf(imaginaryPart));    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
168	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(ImaginaryPart.valueOf(imaginaryPart));  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(ImaginaryPart.valueOf(imaginaryPart));  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Double.valueOf(ImaginaryPart.valueOf(imaginaryPart));	  RealPart    imaginaryPart    =    ImaginePart.valueOf(Double.valueOf(imaginaryPart));    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
169	[BUG]  [BUGGY]  Negative.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Negative.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Negative.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }	  Negative.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	99	None	replace
170	[BUG]  [BUGGY]  Negative.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN  +  1;  }  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Negative.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN  +  1;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Negative.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN  +  1;  }	  Negative.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	99	None	replace
171	[BUG]  [BUGGY]  Neighbor.isNaN(realPart)||  Neighbor.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(realPart)||  Neighbor.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(realPart)||  Neighbor.isNaN(imaginaryPart))  {  return  NaN;  }	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	27	None	replace
172	[BUG]  [BUGGY]  Neighbor.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  return  NaN;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  return  NaN;  }	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	27	None	replace
173	[BUG]  [BUGGY]  nisipisNaN(imaginaryPart)||  Divisor.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  nisipisNaN(imaginaryPart)||  Divisor.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	nisipisNaN(imaginaryPart)||  Divisor.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }	  if(Divisor.isNaN(denominator)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	3	None	replace
174	[BUG]  [BUGGY]  nisipisNaN(imaginaryPart)||  Divisor.isNaN(denominator))  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  nisipisNaN(imaginaryPart)||  Divisor.isNaN(denominator))  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	nisipisNaN(imaginaryPart)||  Divisor.isNaN(denominator))  {  return  new  Complex(realPart,  imaginaryPart);  }	  if(Divisor.isNaN(denominator)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	3	None	replace
175	[BUG]  [BUGGY]  nisipisNaN(imaginaryPart)||  Double.isNaN(divisor))  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  nisipisNaN(imaginaryPart)||  Double.isNaN(divisor))  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	nisipisNaN(imaginaryPart)||  Double.isNaN(divisor))  {  return  new  Complex(realPart,  imaginaryPart);  }	  if(Divisor.isNaN(denominator)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	3	None	replace
176	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  diminator,  null);  [CE]  cannot  find  symbol  diminator  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  diminator,  null);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  diminator,  null);	  return    new    Complex(realPart,    imaginaryPart,    denominator,    null);    	non-compiled	[CE]  cannot  find  symbol  diminator	58	None	replace
177	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart,  true);  [CE]  no  suitable  method  found  for  valueOf(double,double,boolean)  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(realPart,  imaginaryPart,  true);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  valueOf(realPart,  imaginaryPart,  true);	  return    valueOf(realPart,    imaginaryPart,    false);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(double,double,boolean)	94	None	replace
178	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart,  false,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(realPart,  imaginaryPart,  false,  denominator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  valueOf(realPart,  imaginaryPart,  false,  denominator);	  return    valueOf(realPart,    imaginaryPart,    false);    	non-compiled	[CE]  cannot  find  symbol  denominator	94	None	replace
179	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart,  null,  false);  [CE]  no  suitable  method  found  for  valueOf(double,double,<null>,boolean)  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(realPart,  imaginaryPart,  null,  false);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  valueOf(realPart,  imaginaryPart,  null,  false);	  return    valueOf(realPart,    imaginaryPart,    false);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(double,double,<null>,boolean)	94	None	replace
180	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart,  denominator,  false);  [CE]  cannot  find  symbol  denominator  [FE]                          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(realPart,  imaginaryPart,  denominator,  false);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  valueOf(realPart,  imaginaryPart,  denominator,  false);	  return    valueOf(realPart,    imaginaryPart,    false);    	non-compiled	[CE]  cannot  find  symbol  denominator	94	None	replace
181	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  DEDENIOR);  [CE]  cannot  find  symbol  DEDENIOR  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  DEDENIOR);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  DEDENIOR);	  return    new    Complex(realPart,    imaginaryPart,    diminator);    	non-compiled	[CE]  cannot  find  symbol  DEDENIOR	55	None	replace
182	[BUG]  [BUGGY]  return  new  Complex(valueOf(realPart,  imaginaryPart),  denominator);  [CE]  cannot  find  symbol  denominator  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(valueOf(realPart,  imaginaryPart),  denominator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(valueOf(realPart,  imaginaryPart),  denominator);	  return    new    Complex(valueOf(realPart,    imaginaryPart));    	non-compiled	[CE]  cannot  find  symbol  denominator	93	None	replace
183	[BUG]  [BUGGY]  return  new  Complex(valueOf(realPart,  imaginaryPart,  denominator));  [CE]  cannot  find  symbol  denominator  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(valueOf(realPart,  imaginaryPart,  denominator));  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(valueOf(realPart,  imaginaryPart,  denominator));	  return    new    Complex(valueOf(realPart,    imaginaryPart));    	non-compiled	[CE]  cannot  find  symbol  denominator	93	None	replace
184	[BUG]  [BUGGY]  return  new  Complex(valueOf(realPart,  imaginaryPart,  c));  [CE]  cannot  find  symbol  c  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(valueOf(realPart,  imaginaryPart,  c));  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(valueOf(realPart,  imaginaryPart,  c));	  return    new    Complex(valueOf(realPart,    imaginaryPart));    	non-compiled	[CE]  cannot  find  symbol  c	93	None	replace
185	[BUG]  [BUGGY]  Annotation.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Annotation.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Annotation.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  Annotation.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	132	None	replace
186	[BUG]  [BUGGY]  return  new  Complex(realPart,  realPart,  ZERO);  [CE]  no  suitable  constructor  found  for  Complex(double,double,Complex)  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  realPart,  ZERO);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  realPart,  ZERO);	  return    new    Complex(imaginaryPart,    realPart,    ZERO);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,Complex)	114	None	replace
187	[BUG]  [BUGGY]  return  new  Complex(realPart,  ZERO);  [CE]  no  suitable  constructor  found  for  Complex(double,Complex)  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  ZERO);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  ZERO);	  return    new    Complex(imaginaryPart,    realPart,    ZERO);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,Complex)	114	None	replace
188	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  DEMINED);  [CE]  cannot  find  symbol  DEMINED  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  DEMINED);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  DEMINED);	  return    new    Complex(imaginaryPart,    realPart,    ZERO);    	non-compiled	[CE]  cannot  find  symbol  DEMINED	114	None	replace
189	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }	  if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	121	None	replace
190	[BUG]  [BUGGY]  If(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  If(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	If(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }	  if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  ';'  expected	121	None	replace
191	[BUG]  [BUGGY]  nisipisNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  nisipisNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	nisipisNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }	  if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	121	None	replace
192	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  Diminator.NaN);  [CE]  cannot  find  symbol  Diminator  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  Diminator.NaN);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  Diminator.NaN);	  return    new    Complex(realPart,    imaginaryPart,    isNaN);    	non-compiled	[CE]  cannot  find  symbol  Diminator	31	None	replace
193	[BUG]  [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  new  Complex(realPart,  imaginaryPart);  }	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
194	[BUG]  [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginationPart);  }  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginationPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginationPart);  }	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
195	[BUG]  [BUGGY]  nisipisNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  nisipisNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	nisipisNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	  if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	110	None	replace
196	[BUG]  [BUGGY]  realPart  =  imaginaryPart.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  realPart  =  imaginaryPart.doubleValue();  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	realPart  =  imaginaryPart.doubleValue();	  return    new    Complex(imaginaryPart,    imaginaryPart);    RealPart    imaginaryPart    =    realPart.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	35	None	replace
197	[BUG]  [BUGGY]  Neighbor.isNaN(denominator)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(denominator)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(denominator)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	  Neighbor.isNaN(denominator)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	72	None	replace
198	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	  	non-compiled	[CE]  unreachable  statement	107	None	add
199	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(ImaginaryPart,  imaginaryPart);  }  [CE]  cannot  find  symbol  ImaginaryPart  [FE]      AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(ImaginaryPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(ImaginaryPart,  imaginaryPart);  }	  	non-compiled	[CE]  cannot  find  symbol  ImaginaryPart	107	None	add
200	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart);  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart);  }	  	non-compiled	[CE]  unreachable  statement	107	None	add
201	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  ImaginePart.valueOf(imaginaryPart,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  ImaginePart.valueOf(imaginaryPart,  imaginaryPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  ImaginePart.valueOf(imaginaryPart,  imaginaryPart);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    imaginedPart);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
202	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(realPart,  denominator);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(realPart,  denominator);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Double.valueOf(realPart,  denominator);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    denominator);    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
203	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(denominator,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(denominator,  imaginaryPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Double.valueOf(denominator,  imaginaryPart);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    denominator);    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
204	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  divisor);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  divisor);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  divisor);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    denominator);    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
205	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.valueOf(Double.POSITIVE_INFINITY);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.valueOf(Double.POSITIVE_INFINITY);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart.valueOf(Double.POSITIVE_INFINITY);	  RealPart    imaginaryPart    =    realPart.valueOf(Double.POSITIVE_INFINITY);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
206	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  nthRootOfAbs.valueOf(Double.POSITIVE_INFINITY);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  nthRootOfAbs.valueOf(Double.POSITIVE_INFINITY);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  nthRootOfAbs.valueOf(Double.POSITIVE_INFINITY);	  RealPart    imaginaryPart    =    realPart.valueOf(Double.POSITIVE_INFINITY);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
207	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  this.realPart.valueOf(Double.POSITIVE_INFINITY);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  this.realPart.valueOf(Double.POSITIVE_INFINITY);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  this.realPart.valueOf(Double.POSITIVE_INFINITY);	  RealPart    imaginaryPart    =    realPart.valueOf(Double.POSITIVE_INFINITY);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
208	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  nthRootOfAbs.valueOf(Double.valueOf(realPart));  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  nthRootOfAbs.valueOf(Double.valueOf(realPart));  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  nthRootOfAbs.valueOf(Double.valueOf(realPart));	  RealPart    imaginaryPart    =    realPart.valueOf(Double.valueOf(realPart));    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
209	[BUG]  [BUGGY]  realPart  =  new  Complex(realPart,  imaginaryPart);  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  realPart  =  new  Complex(realPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	realPart  =  new  Complex(realPart,  imaginaryPart);	  realPart    =    new    Complex(imaginaryPart,    imaginaryPart);    	non-compiled	[CE]  incompatible  types	43	None	replace
210	[BUG]  [BUGGY]  realPart  =  new  Complex(imaginaryPart,  imaginaryPart,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  realPart  =  new  Complex(imaginaryPart,  imaginaryPart,  denominator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	realPart  =  new  Complex(imaginaryPart,  imaginaryPart,  denominator);	  realPart    =    new    Complex(imaginaryPart,    imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol  denominator	43	None	replace
211	[BUG]  [BUGGY]  realPart  =  new  Complex(imaginaryPart,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  realPart  =  new  Complex(imaginaryPart,  denominator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	realPart  =  new  Complex(imaginaryPart,  denominator);	  realPart    =    new    Complex(imaginaryPart,    imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol  denominator	43	None	replace
212	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  false,  realPart,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  false,  realPart,  denominator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  false,  realPart,  denominator);	  return    new    Complex(realPart,    imaginaryPart,    false,    realPart);    	non-compiled	[CE]  cannot  find  symbol  denominator	92	None	replace
213	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  true,  realPart);  [CE]  no  suitable  constructor  found  for  Complex(double,double,boolean,double)  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  true,  realPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  true,  realPart);	  return    new    Complex(realPart,    imaginaryPart,    false,    realPart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,boolean,double)	92	None	replace
214	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  false,  imaginaryPart,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  false,  imaginaryPart,  denominator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  false,  imaginaryPart,  denominator);	  return    new    Complex(realPart,    imaginaryPart,    false,    realPart);    	non-compiled	[CE]  cannot  find  symbol  denominator	92	None	replace
215	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(realPart,  RealPart.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(realPart,  RealPart.MAX_VALUE);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Double.valueOf(realPart,  RealPart.MAX_VALUE);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    RealPart.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
216	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.MAX_VALUE,  RealPart.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.MAX_VALUE,  RealPart.MAX_VALUE);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.valueOf(Double.MAX_VALUE,  RealPart.MAX_VALUE);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    RealPart.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
217	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  RealPart.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  RealPart.MIN_VALUE);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  RealPart.MIN_VALUE);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    RealPart.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
218	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart,  null);  [CE]  no  suitable  method  found  for  valueOf(double,double,<null>)  [FE]    StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(realPart,  imaginaryPart,  null);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  valueOf(realPart,  imaginaryPart,  null);	  return    valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(double,double,<null>)	18	None	replace
219	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart,  c);  [CE]  cannot  find  symbol  c  [FE]      StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(realPart,  imaginaryPart,  c);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  valueOf(realPart,  imaginaryPart,  c);	  return    valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol  c	18	None	replace
220	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(realPart,  isNaN);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(realPart,  isNaN);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Complex.createInfinite(realPart,  isNaN);	  RealPart    imaginaryPart    =    Complex.createInfinite(imaginaryPart,    isNaN);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
221	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  isNaN,  denominator);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  isNaN,  denominator);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  isNaN,  denominator);	  RealPart    imaginaryPart    =    Complex.createInfinite(imaginaryPart,    isNaN);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
222	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  divisor);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  divisor);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  divisor);	  RealPart    imaginaryPart    =    Complex.createInfinite(imaginaryPart,    isNaN);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
223	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  c);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  c);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  c);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
224	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart.doubleValue());  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart.doubleValue());	  return    new    Complex(imaginaryPart,    imaginaryPart.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	85	None	replace
225	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  realPart.doubleValue());  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  realPart.doubleValue());	  return    new    Complex(imaginaryPart,    imaginaryPart.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	85	None	replace
226	[BUG]  [BUGGY]  return  new  Complex(implicitePart,  imaginaryPart.doubleValue());  [CE]  cannot  find  symbol  implicitePart  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(implicitePart,  imaginaryPart.doubleValue());  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(implicitePart,  imaginaryPart.doubleValue());	  return    new    Complex(imaginaryPart,    imaginaryPart.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  implicitePart	85	None	replace
227	[BUG]  [BUGGY]  Neighbor  imaginaryPart  =  new  Neighbor(imaginaryPart,  denominator);  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor  imaginaryPart  =  new  Neighbor(imaginaryPart,  denominator);  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor  imaginaryPart  =  new  Neighbor(imaginaryPart,  denominator);  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  return    new    Complex(imaginaryPart,    imaginaryPart);    if(imaginaryPart!=    null)    {    if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
228	[BUG]  [BUGGY]  Neighbor  imaginaryPart  =  new  Neighbor(imaginaryPart,  denominator);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor  imaginaryPart  =  new  Neighbor(imaginaryPart,  denominator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor  imaginaryPart  =  new  Neighbor(imaginaryPart,  denominator);	  return    new    Complex(imaginaryPart,    imaginaryPart);    if(imaginaryPart!=    null)    {    if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
229	[BUG]  [BUGGY]  return  new  Complex(implicitePart,  imaginaryPart,  denominator);  [CE]  cannot  find  symbol  implicitePart  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(implicitePart,  imaginaryPart,  denominator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(implicitePart,  imaginaryPart,  denominator);	  return    new    Complex(implicitePart,    imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol  implicitePart	5	None	replace
230	[BUG]  [BUGGY]  return  new  Complex(implicitePart,  realPart);  [CE]  cannot  find  symbol  implicitePart  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(implicitePart,  realPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(implicitePart,  realPart);	  return    new    Complex(implicitePart,    imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol  implicitePart	5	None	replace
231	[BUG]  [BUGGY]  RealPart  realPart  =  realPart.doubleValue();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  realPart  =  realPart.doubleValue();  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  realPart  =  realPart.doubleValue();	  return    new    Complex(imaginaryPart,    realPart);    RealPart    realPart    =    realPart.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
232	[BUG]  [BUGGY]  realPart  =  realPart.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  realPart  =  realPart.doubleValue();  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	realPart  =  realPart.doubleValue();	  return    new    Complex(imaginaryPart,    realPart);    RealPart    realPart    =    realPart.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	79	None	replace
233	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.valueOf(Double.valueOf(imaginaryPart);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.valueOf(Double.valueOf(imaginaryPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart.valueOf(Double.valueOf(imaginaryPart);	  RealPart    imaginaryPart    =    realPart.valueOf(Double.valueOf(imaginaryPart);    	non-compiled	[CE]  ')'  expected	13	None	replace
234	[BUG]  [BUGGY]  RealPart  realPart  =  this.imaginaryPart.doubleValue();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  realPart  =  this.imaginaryPart.doubleValue();  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  realPart  =  this.imaginaryPart.doubleValue();	  RealPart    realPart    =    imaginaryPart.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
235	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(denominator,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(denominator,  imaginaryPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Complex.createInfinite(denominator,  imaginaryPart);	  RealPart    imaginaryPart    =    Complex.createInfinite(imaginaryPart,    denominator);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
236	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Denominator.createInfinite(imaginaryPart,  denominator);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Denominator.createInfinite(imaginaryPart,  denominator);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Denominator.createInfinite(imaginaryPart,  denominator);	  RealPart    imaginaryPart    =    Complex.createInfinite(imaginaryPart,    denominator);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
237	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(divisor,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(divisor,  imaginaryPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Complex.createInfinite(divisor,  imaginaryPart);	  RealPart    imaginaryPart    =    Complex.createInfinite(imaginaryPart,    denominator);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
238	[BUG]  [BUGGY]  return  valueOf(imaginaryPart,  realPart.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(imaginaryPart,  realPart.doubleValue());  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  valueOf(imaginaryPart,  realPart.doubleValue());	  return    valueOf(realPart,    imaginaryPart.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	22	None	replace
239	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart.doubleValue(),  imaginaryPart.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(realPart,  imaginaryPart.doubleValue(),  imaginaryPart.doubleValue());  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  valueOf(realPart,  imaginaryPart.doubleValue(),  imaginaryPart.doubleValue());	  return    valueOf(realPart,    imaginaryPart.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	22	None	replace
240	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart.doubleValue(),  realPart.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(realPart,  imaginaryPart.doubleValue(),  realPart.doubleValue());  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  valueOf(realPart,  imaginaryPart.doubleValue(),  realPart.doubleValue());	  return    valueOf(realPart,    imaginaryPart.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	22	None	replace
241	[BUG]  [BUGGY]  if(imaginaryPart!=  null)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  imaginaryPart  =  new  Complex(realPart,  imaginaryPart);  }  [CE]  incomparable  types:  double  and  <null>  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(imaginaryPart!=  null)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  imaginaryPart  =  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(imaginaryPart!=  null)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  imaginaryPart  =  new  Complex(realPart,  imaginaryPart);  }	  return    new    Complex(imaginaryPart,    imaginaryPart);    Complex    imaginaryPart    =    new    Complex(realPart,    imaginaryPart);    	non-compiled	[CE]  incomparable  types:  double  and  <null>	36	None	replace
242	[BUG]  [BUGGY]  if(imaginaryPart!=  null)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  imaginaryPart  =  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  incomparable  types:  double  and  <null>  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(imaginaryPart!=  null)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  imaginaryPart  =  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(imaginaryPart!=  null)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  imaginaryPart  =  new  Complex(imaginaryPart,  imaginaryPart);  }	  return    new    Complex(imaginaryPart,    imaginaryPart);    Complex    imaginaryPart    =    new    Complex(realPart,    imaginaryPart);    	non-compiled	[CE]  incomparable  types:  double  and  <null>	36	None	replace
243	[BUG]  [BUGGY]  nisipisNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  nisipisNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	nisipisNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	  if(Double.isNaN(denominator)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	109	None	replace
244	[BUG]  [BUGGY]  nisipisNaN(realPart)||  nisipisNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  nisipisNaN(realPart)||  nisipisNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	nisipisNaN(realPart)||  nisipisNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	  if(Double.isNaN(denominator)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	109	None	replace
245	[BUG]  [BUGGY]  nisipisNaN(realPart)||  nisipisNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginationPart);  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  nisipisNaN(realPart)||  nisipisNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginationPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	nisipisNaN(realPart)||  nisipisNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginationPart);  }	  if(Double.isNaN(denominator)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	109	None	replace
246	[BUG]  [BUGGY]  nisipisNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  nisipisNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	nisipisNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }	  if(Double.isNaN(denominator)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	109	None	replace
247	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  divisor,  false);  [CE]  cannot  find  symbol  divisor  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  divisor,  false);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  divisor,  false);	  return    new    Complex(realPart,    imaginaryPart,    denominator,    false);    	non-compiled	[CE]  cannot  find  symbol  divisor	71	None	replace
248	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  diminator,  false);  [CE]  cannot  find  symbol  diminator  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  diminator,  false);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  diminator,  false);	  return    new    Complex(realPart,    imaginaryPart,    denominator,    false);    	non-compiled	[CE]  cannot  find  symbol  diminator	71	None	replace
249	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  denominator,  true);  [CE]  cannot  find  symbol  denominator  [FE]                          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  denominator,  true);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  denominator,  true);	  return    new    Complex(realPart,    imaginaryPart,    denominator,    false);    	non-compiled	[CE]  cannot  find  symbol  denominator	71	None	replace
250	[BUG]  [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(imaginaryPart,  realPart);  }  [CE]  cannot  find  symbol  Divisor  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(imaginaryPart,  realPart);  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(imaginaryPart,  realPart);  }	  return    new    Complex(imaginaryPart,    realPart);    if(isInfinite)    {    if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(imaginaryPart,    realPart);    }    	non-compiled	[CE]  cannot  find  symbol  Divisor	127	None	replace
251	[BUG]  [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  cannot  find  symbol  Divisor  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	  return    new    Complex(imaginaryPart,    realPart);    if(isInfinite)    {    if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(imaginaryPart,    realPart);    }    	non-compiled	[CE]  cannot  find  symbol  Divisor	127	None	replace
252	[BUG]  [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(imaginaryPart,  null);  }  [CE]  cannot  find  symbol  Divisor  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(imaginaryPart,  null);  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(imaginaryPart,  null);  }	  return    new    Complex(imaginaryPart,    realPart);    if(isInfinite)    {    if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(imaginaryPart,    realPart);    }    	non-compiled	[CE]  cannot  find  symbol  Divisor	127	None	replace
253	[BUG]  [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(imaginaryPart,  denominator);  }  [CE]  cannot  find  symbol  Divisor  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(imaginaryPart,  denominator);  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(imaginaryPart,  denominator);  }	  return    new    Complex(imaginaryPart,    realPart);    if(isInfinite)    {    if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(imaginaryPart,    realPart);    }    	non-compiled	[CE]  cannot  find  symbol  Divisor	127	None	replace
254	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.parseDouble(imaginaryPart);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.parseDouble(imaginaryPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart.parseDouble(imaginaryPart);	  RealPart    imaginaryPart    =    innerPart.parseDouble(imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
255	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  this.imaginaryPart.parseDouble(imaginaryPart);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  this.imaginaryPart.parseDouble(imaginaryPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  this.imaginaryPart.parseDouble(imaginaryPart);	  RealPart    imaginaryPart    =    innerPart.parseDouble(imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
256	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.valueOf(Double.POSITIVE_INFINITY,  realPart);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.valueOf(Double.POSITIVE_INFINITY,  realPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart.valueOf(Double.POSITIVE_INFINITY,  realPart);	  RealPart    imaginaryPart    =    realPart.valueOf(Double.POSITIVE_INFINITY,    imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
257	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  nthRootOfAbs.valueOf(Double.POSITIVE_INFINITY,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  nthRootOfAbs.valueOf(Double.POSITIVE_INFINITY,  imaginaryPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  nthRootOfAbs.valueOf(Double.POSITIVE_INFINITY,  imaginaryPart);	  RealPart    imaginaryPart    =    realPart.valueOf(Double.POSITIVE_INFINITY,    imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
258	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  virtualPart.valueOf(Double.POSITIVE_INFINITY,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  virtualPart.valueOf(Double.POSITIVE_INFINITY,  imaginaryPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  virtualPart.valueOf(Double.POSITIVE_INFINITY,  imaginaryPart);	  RealPart    imaginaryPart    =    realPart.valueOf(Double.POSITIVE_INFINITY,    imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
259	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart);  new  Complex(imaginaryPart,  imaginaryPart);  [CE]  unreachable  statement  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart);  new  Complex(imaginaryPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart);  new  Complex(imaginaryPart,  imaginaryPart);	  return    new    Complex(imaginaryPart,    imaginaryPart);    new    Complex(imaginaryPart,    imaginaryPart);    	non-compiled	[CE]  unreachable  statement	33	None	replace
260	[BUG]  [BUGGY]  if(imaginaryPart  ==  null)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  incomparable  types:  double  and  <null>  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(imaginaryPart  ==  null)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(imaginaryPart  ==  null)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  new  Complex(imaginaryPart,  imaginaryPart);  }	  return    new    Complex(imaginaryPart,    imaginaryPart);    new    Complex(imaginaryPart,    imaginaryPart);    	non-compiled	[CE]  incomparable  types:  double  and  <null>	33	None	replace
261	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  imaginaryPart,  ZERO);  [CE]  no  suitable  constructor  found  for  Complex(double,double,double,Complex)  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  imaginaryPart,  ZERO);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  imaginaryPart,  ZERO);	  return    new    Complex(realPart,    imaginaryPart,    scale,    ZERO);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,double,Complex)	51	None	replace
262	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  imaginaryPart,  diminator,  ZERO);  [CE]  cannot  find  symbol  diminator  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  imaginaryPart,  diminator,  ZERO);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  imaginaryPart,  diminator,  ZERO);	  return    new    Complex(realPart,    imaginaryPart,    scale,    ZERO);    	non-compiled	[CE]  cannot  find  symbol  diminator	51	None	replace
263	[BUG]  [BUGGY]  return(isNaN  ||  isInfinite)?  valueOf(realPart,  imaginaryPart):  null;  [CE]  non-static  variable  isNaN  cannot  be  referenced  from  a  static  context  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return(isNaN  ||  isInfinite)?  valueOf(realPart,  imaginaryPart):  null;  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return(isNaN  ||  isInfinite)?  valueOf(realPart,  imaginaryPart):  null;	  return(isInfinite    ||    isNaN)?    valueOf(realPart,    imaginaryPart):    null;    	non-compiled	[CE]  non-static  variable  isNaN  cannot  be  referenced  from  a  static  context	21	None	replace
264	[BUG]  [BUGGY]  return(isInfinite  ||  imaginaryPart)?  valueOf(realPart,  imaginaryPart):  null;  [CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return(isInfinite  ||  imaginaryPart)?  valueOf(realPart,  imaginaryPart):  null;  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return(isInfinite  ||  imaginaryPart)?  valueOf(realPart,  imaginaryPart):  null;	  return(isInfinite    ||    isNaN)?    valueOf(realPart,    imaginaryPart):    null;    	non-compiled	[CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context	21	None	replace
265	[BUG]  [BUGGY]  return(isNaN  ||  imaginaryPart)?  valueOf(realPart,  imaginaryPart):  null;  [CE]  non-static  variable  isNaN  cannot  be  referenced  from  a  static  context  [FE]                          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return(isNaN  ||  imaginaryPart)?  valueOf(realPart,  imaginaryPart):  null;  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return(isNaN  ||  imaginaryPart)?  valueOf(realPart,  imaginaryPart):  null;	  return(isInfinite    ||    isNaN)?    valueOf(realPart,    imaginaryPart):    null;    	non-compiled	[CE]  non-static  variable  isNaN  cannot  be  referenced  from  a  static  context	21	None	replace
266	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  this.imaginaryPart.getInf();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  this.imaginaryPart.getInf();  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  this.imaginaryPart.getInf();	  RealPart    imaginaryPart    =    imaginaryPart.getInf();    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
267	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  nthRootOfAbs.getInf();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  nthRootOfAbs.getInf();  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  nthRootOfAbs.getInf();	  RealPart    imaginaryPart    =    imaginaryPart.getInf();    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
268	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  BigInteger.valueOf(realPart);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  BigInteger.valueOf(realPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  BigInteger.valueOf(realPart);	  RealPart    imaginaryPart    =    BigInteger.valueOf(imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
269	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  this.imaginaryPart.valueOf(BigInteger.valueOf(imaginaryPart);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  this.imaginaryPart.valueOf(BigInteger.valueOf(imaginaryPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  this.imaginaryPart.valueOf(BigInteger.valueOf(imaginaryPart);	  RealPart    imaginaryPart    =    BigInteger.valueOf(imaginaryPart);    	non-compiled	[CE]  ')'  expected	129	None	replace
270	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  bigInteger.valueOf(imaginaryPart);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  bigInteger.valueOf(imaginaryPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  bigInteger.valueOf(imaginaryPart);	  RealPart    imaginaryPart    =    BigInteger.valueOf(imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
271	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  innerPart.getINF();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  innerPart.getINF();  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  innerPart.getINF();	  RealPart    imaginaryPart    =    imaginaryPart.getINF();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
272	[BUG]  [BUGGY]  NegativeFactory.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  NegativeFactory.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	NegativeFactory.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN;  }	  NegativeFactory.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	82	None	replace
273	[BUG]  [BUGGY]  NegativeFactory.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  NegativeFactory.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	NegativeFactory.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  NegativeFactory.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	82	None	replace
274	[BUG]  [BUGGY]  return  new  Complex(realPart,  realPart);  new  Complex(realPart,  realPart);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  realPart);  new  Complex(realPart,  realPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(realPart,    realPart);    new  Complex(realPart,  realPart);	  	non-compiled	[CE]  unreachable  statement	44	None	add
275	[BUG]  [BUGGY]  return  new  Complex(realPart,  realPart);  RealPart  realPart  =  new  Complex(realPart,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  realPart);  RealPart  realPart  =  new  Complex(realPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(realPart,    realPart);    RealPart  realPart  =  new  Complex(realPart,  imaginaryPart);	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
276	[BUG]  [BUGGY]  return  new  Complex(realPart,  realPart);  Complex  realPart  =  new  Complex(realPart,  imaginaryPart);  [CE]  variable  realPart  is  already  defined  in  method  valueOf(double,double)  [FE]        AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  realPart);  Complex  realPart  =  new  Complex(realPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(realPart,    realPart);    Complex  realPart  =  new  Complex(realPart,  imaginaryPart);	  	non-compiled	[CE]  variable  realPart  is  already  defined  in  method  valueOf(double,double)	44	None	add
277	[BUG]  [BUGGY]  return  new  Complex(realPart,  realPart);  Complex  realPart  =  new  Complex(realPart,  realPart);  [CE]  variable  realPart  is  already  defined  in  method  valueOf(double,double)  [FE]          AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  realPart);  Complex  realPart  =  new  Complex(realPart,  realPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(realPart,    realPart);    Complex  realPart  =  new  Complex(realPart,  realPart);	  	non-compiled	[CE]  variable  realPart  is  already  defined  in  method  valueOf(double,double)	44	None	add
278	[BUG]  [BUGGY]  return  new  Complex(realPart,  realPart);  RealPart  realPart  =  new  Complex(imaginaryPart,  realPart);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  realPart);  RealPart  realPart  =  new  Complex(imaginaryPart,  realPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(realPart,    realPart);    RealPart  realPart  =  new  Complex(imaginaryPart,  realPart);	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
279	[BUG]  [BUGGY]  return  new  Complex(realPart,  realPart,  null);  [CE]  no  suitable  constructor  found  for  Complex(double,double,<null>)  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  realPart,  null);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  realPart,  null);	  return    new    Complex(imaginaryPart,    realPart,    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,<null>)	56	None	replace
280	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  denominator,  null);  [CE]  cannot  find  symbol  denominator  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  denominator,  null);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  realPart,  denominator,  null);	  return    new    Complex(imaginaryPart,    realPart,    null);    	non-compiled	[CE]  cannot  find  symbol  denominator	56	None	replace
281	[BUG]  [BUGGY]  if(imaginaryPart  ==  null)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  new  Complex(realPart,  imaginaryPart);  }  [CE]  incomparable  types:  double  and  <null>  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(imaginaryPart  ==  null)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(imaginaryPart  ==  null)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  new  Complex(realPart,  imaginaryPart);  }	  return    new    Complex(imaginaryPart,    realPart);    new    Complex(realPart,    realPart);    	non-compiled	[CE]  incomparable  types:  double  and  <null>	81	None	replace
282	[BUG]  [BUGGY]  if(Divisor.isNaN(divisor)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  cannot  find  symbol  divisor  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Divisor.isNaN(divisor)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(divisor)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  if(Divisor.isNaN(denominator)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  cannot  find  symbol  divisor	29	None	replace
283	[BUG]  [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	  	non-compiled	[CE]  unreachable  statement	112	None	add
284	[BUG]  [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }	  	non-compiled	[CE]  unreachable  statement	112	None	add
285	[BUG]  [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(ImaginaryPart,  imaginaryPart);  }  [CE]  cannot  find  symbol  ImaginaryPart  [FE]        AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(ImaginaryPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(ImaginaryPart,  imaginaryPart);  }	  	non-compiled	[CE]  cannot  find  symbol  ImaginaryPart	112	None	add
286	[BUG]  [BUGGY]  Negative.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN  +  1;  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Negative.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN  +  1;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Negative.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN  +  1;  }	  Negative.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	98	None	replace
287	[BUG]  [BUGGY]  Negative.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  2;  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Negative.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  2;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Negative.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  2;  }	  Negative.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	98	None	replace
288	[BUG]  [BUGGY]  Negative.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Negative.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Negative.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }	  Negative.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	98	None	replace
289	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  scale,  ZERO);  [CE]  cannot  find  symbol  scale  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  scale,  ZERO);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  realPart,  scale,  ZERO);	  return    new    Complex(imaginaryPart,    realPart,    ZERO);    	non-compiled	[CE]  cannot  find  symbol  scale	114	None	replace
290	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  addend);  [CE]  cannot  find  symbol  addend  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  addend);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  realPart,  addend);	  return    new    Complex(imaginaryPart,    realPart,    ZERO);    	non-compiled	[CE]  cannot  find  symbol  addend	114	None	replace
291	[BUG]  [BUGGY]  if(Double.isNaN(addend)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  cannot  find  symbol  addend  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(addend)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Double.isNaN(addend)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  if(Double.isNaN(denominator)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  cannot  find  symbol  addend	86	None	replace
292	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart,  true);  [CE]  no  suitable  constructor  found  for  Complex(double,double,boolean)  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart,  true);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  imaginaryPart,  true);	  return    new    Complex(imaginaryPart,    realPart,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,boolean)	69	None	replace
293	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  ZERO,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  ZERO,  denominator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  realPart,  ZERO,  denominator);	  return    new    Complex(realPart,    imaginaryPart,    ZERO,    denominator);    	non-compiled	[CE]  cannot  find  symbol  denominator	50	None	replace
294	[BUG]  [BUGGY]  NegativeValue.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  NegativeValue.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	NegativeValue.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	  if(Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	113	None	replace
295	[BUG]  [BUGGY]  Negative.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Negative.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Negative.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	  if(Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	113	None	replace
296	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart,  ZERO);  [CE]  no  suitable  method  found  for  valueOf(double,double,Complex)  [FE]    StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(realPart,  imaginaryPart,  ZERO);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  valueOf(realPart,  imaginaryPart,  ZERO);	  return    valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(double,double,Complex)	18	None	replace
297	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart,  isInfinite);  [CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context  [FE]      StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(realPart,  imaginaryPart,  isInfinite);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  valueOf(realPart,  imaginaryPart,  isInfinite);	  return    valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context	18	None	replace
298	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart);  RealPart  imaginaryPart  =  realPart.getINF();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart);  RealPart  imaginaryPart  =  realPart.getINF();  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart);  RealPart  imaginaryPart  =  realPart.getINF();	  return    new    Complex(imaginaryPart,    imaginaryPart);    RealPart    imaginaryPart    =    realPart.getINF();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
299	[BUG]  [BUGGY]  RealPart  realPart  =  imaginaryPart!=  null?  imaginaryPart.doubleValue()  :  imaginaryPart.doubleValue();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  realPart  =  imaginaryPart!=  null?  imaginaryPart.doubleValue()  :  imaginaryPart.doubleValue();  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  realPart  =  imaginaryPart!=  null?  imaginaryPart.doubleValue()  :  imaginaryPart.doubleValue();	  RealPart    realPart    =    imaginaryPart.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
300	[BUG]  [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart,  ZERO);  [CE]  no  suitable  method  found  for  valueOf(double,double,Complex)  [FE]    StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart,  ZERO);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  Complex.valueOf(realPart,  imaginaryPart,  ZERO);	  return    Complex.valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(double,double,Complex)	20	None	replace
301	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  isNaN,  true);  [CE]  non-static  variable  isNaN  cannot  be  referenced  from  a  static  context  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  isNaN,  true);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  isNaN,  true);	  return    new    Complex(realPart,    imaginaryPart,    true);    	non-compiled	[CE]  non-static  variable  isNaN  cannot  be  referenced  from  a  static  context	68	None	replace
302	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart);  double  imaginaryPart  =  valueOf(realPart,  imaginaryPart);  [CE]  variable  imaginaryPart  is  already  defined  in  method  valueOf(double,double)  [FE]    StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(realPart,  imaginaryPart);  double  imaginaryPart  =  valueOf(realPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    valueOf(realPart,    imaginaryPart);    double  imaginaryPart  =  valueOf(realPart,  imaginaryPart);	  	non-compiled	[CE]  variable  imaginaryPart  is  already  defined  in  method  valueOf(double,double)	17	None	add
303	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart);  if(imaginaryPart!=  null)  {  double  imaginaryPart  =  realPart.doubleValue();  if(imaginaryPart  ==  imaginaryPart)  {  return  valueOf(realPart,  imaginaryPart);  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(realPart,  imaginaryPart);  if(imaginaryPart!=  null)  {  double  imaginaryPart  =  realPart.doubleValue();  if(imaginaryPart  ==  imaginaryPart)  {  return  valueOf(realPart,  imaginaryPart);  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    valueOf(realPart,    imaginaryPart);    if(imaginaryPart!=  null)  {  double  imaginaryPart  =  realPart.doubleValue();  if(imaginaryPart  ==  imaginaryPart)  {  return  valueOf(realPart,  imaginaryPart);  }	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
304	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart);  if(imaginaryPart!=  null)  {  double  imaginaryPart  =  realPart.doubleValue();  if(imaginaryPart  ==  imaginaryPart)  {  return  valueOf(  imaginaryPart,  imaginaryPart);  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(realPart,  imaginaryPart);  if(imaginaryPart!=  null)  {  double  imaginaryPart  =  realPart.doubleValue();  if(imaginaryPart  ==  imaginaryPart)  {  return  valueOf(  imaginaryPart,  imaginaryPart);  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    valueOf(realPart,    imaginaryPart);    if(imaginaryPart!=  null)  {  double  imaginaryPart  =  realPart.doubleValue();  if(imaginaryPart  ==  imaginaryPart)  {  return  valueOf(  imaginaryPart,  imaginaryPart);  }	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
305	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart);  if(imaginaryPart!=  null)  {  double  imaginaryPart  =  realPart.doubleValue();  if(imaginaryPart!=  imaginaryPart)  {  return  valueOf(realPart,  imaginaryPart);  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(realPart,  imaginaryPart);  if(imaginaryPart!=  null)  {  double  imaginaryPart  =  realPart.doubleValue();  if(imaginaryPart!=  imaginaryPart)  {  return  valueOf(realPart,  imaginaryPart);  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    valueOf(realPart,    imaginaryPart);    if(imaginaryPart!=  null)  {  double  imaginaryPart  =  realPart.doubleValue();  if(imaginaryPart!=  imaginaryPart)  {  return  valueOf(realPart,  imaginaryPart);  }	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
306	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  this.realPart.valueOf(Double.NaN);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  this.realPart.valueOf(Double.NaN);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  this.realPart.valueOf(Double.NaN);	  RealPart    imaginaryPart    =    realPart.valueOf(Double.NaN);    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
307	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  ImaginePart.valueOf(implicitePart);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  ImaginePart.valueOf(implicitePart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  ImaginePart.valueOf(implicitePart);	  RealPart    imaginaryPart    =    Double.valueOf(implicitePart);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
308	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Immutable.valueOf(implicitePart);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Immutable.valueOf(implicitePart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Immutable.valueOf(implicitePart);	  RealPart    imaginaryPart    =    Double.valueOf(implicitePart);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
309	[BUG]  [BUGGY]  return  new  Complex(realPart,  realPart);  RealPart  realPart  =  new  Complex(imaginaryPart,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  realPart);  RealPart  realPart  =  new  Complex(imaginaryPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(realPart,    realPart);    RealPart  realPart  =  new  Complex(imaginaryPart,  imaginaryPart);	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
310	[BUG]  [BUGGY]  return  new  Complex(realPart,  realPart);  RealPart  realPart  =  realPart.getINF();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  realPart);  RealPart  realPart  =  realPart.getINF();  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(realPart,    realPart);    RealPart  realPart  =  realPart.getINF();	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
311	[BUG]  [BUGGY]  RealPart  realPart  =  imaginaryPart.valueOf(Double.POSITIVE_INFINITY,  realPart);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  realPart  =  imaginaryPart.valueOf(Double.POSITIVE_INFINITY,  realPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  realPart  =  imaginaryPart.valueOf(Double.POSITIVE_INFINITY,  realPart);	  RealPart    imaginaryPart    =    realPart.valueOf(Double.POSITIVE_INFINITY,    imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
312	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  false,  realPart);  [CE]  no  suitable  constructor  found  for  Complex(double,double,<null>,boolean,double)  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  false,  realPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  null,  false,  realPart);	  return    new    Complex(realPart,    imaginaryPart,    null,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,<null>,boolean,double)	130	None	replace
313	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart);  RealPart  realPart  =  realPart.getINF();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart);  RealPart  realPart  =  realPart.getINF();  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart);  RealPart  realPart  =  realPart.getINF();	  return    new    Complex(imaginaryPart,    realPart);    RealPart    realPart    =    realPart.getINF();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
314	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart);  RealPart  realPart  =  realPart.getINF();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart);  RealPart  realPart  =  realPart.getINF();  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  imaginaryPart);  RealPart  realPart  =  realPart.getINF();	  return    new    Complex(imaginaryPart,    realPart);    RealPart    realPart    =    realPart.getINF();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
315	[BUG]  [BUGGY]  if(Double.isNaN(addend)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  cannot  find  symbol  addend  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(addend)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Double.isNaN(addend)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	  if(Double.isNaN(denominator)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  cannot  find  symbol  addend	109	None	replace
316	[BUG]  [BUGGY]  NegativeFactory.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  NegativeFactory.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	NegativeFactory.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	  if(Double.isNaN(denominator)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	109	None	replace
317	[BUG]  [BUGGY]  Negative.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Negative.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Negative.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	  if(Double.isNaN(denominator)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	109	None	replace
318	[BUG]  [BUGGY]  Negative.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Negative.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Negative.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }	  Negative.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	99	None	replace
319	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.valueOf(Double.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
320	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(ImaginaryPart.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(ImaginaryPart.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Double.valueOf(ImaginaryPart.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
321	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  null,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  null,  denominator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  realPart,  null,  denominator);	  return    new    Complex(realPart,    imaginaryPart,    null,    denominator);    	non-compiled	[CE]  cannot  find  symbol  denominator	57	None	replace
322	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  scale,  null);  [CE]  cannot  find  symbol  scale  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  scale,  null);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  realPart,  scale,  null);	  return    new    Complex(imaginaryPart,    realPart,    null);    	non-compiled	[CE]  cannot  find  symbol  scale	56	None	replace
323	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  RealPart.valueOf(imaginaryPart,  RealPart.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  RealPart.valueOf(imaginaryPart,  RealPart.MAX_VALUE);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  RealPart.valueOf(imaginaryPart,  RealPart.MAX_VALUE);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    RealPart.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
324	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  RealPart.valueOf(realPart,  RealPart.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  RealPart.valueOf(realPart,  RealPart.MAX_VALUE);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  RealPart.valueOf(realPart,  RealPart.MAX_VALUE);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    RealPart.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
325	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  ONE.valueOf(Double.valueOf(imaginaryPart));  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  ONE.valueOf(Double.valueOf(imaginaryPart));  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  ONE.valueOf(Double.valueOf(imaginaryPart));	  RealPart    imaginaryPart    =    ImaginePart.valueOf(Double.valueOf(imaginaryPart));    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
326	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  ImaginePart.valueOf(Double.valueOf(imaginaryPart),  denominator);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  ImaginePart.valueOf(Double.valueOf(imaginaryPart),  denominator);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  ImaginePart.valueOf(Double.valueOf(imaginaryPart),  denominator);	  RealPart    imaginaryPart    =    ImaginePart.valueOf(Double.valueOf(imaginaryPart));    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
327	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginePart.valueOf(Double.valueOf(imaginaryPart));  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginePart.valueOf(Double.valueOf(imaginaryPart));  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginePart.valueOf(Double.valueOf(imaginaryPart));	  RealPart    imaginaryPart    =    ImaginePart.valueOf(Double.valueOf(imaginaryPart));    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
328	[BUG]  [BUGGY]  Neighbor.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }	  Neighbor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	65	None	replace
329	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  addend);  [CE]  cannot  find  symbol  addend  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  addend);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  null,  addend);	  return    new    Complex(realPart,    imaginaryPart,    null,    ZERO);    	non-compiled	[CE]  cannot  find  symbol  addend	139	None	replace
330	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  ONE);  [CE]  no  suitable  constructor  found  for  Complex(double,double,<null>,Complex)  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  ONE);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  null,  ONE);	  return    new    Complex(realPart,    imaginaryPart,    null,    ZERO);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,<null>,Complex)	139	None	replace
331	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  this.realPart.doubleValue();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  this.realPart.doubleValue();  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  this.realPart.doubleValue();	  RealPart    imaginaryPart    =    this.imaginaryPart.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
332	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  DEFINE_DIR);  [CE]  cannot  find  symbol  DEFINE_DIR  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  DEFINE_DIR);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  DEFINE_DIR);	  return    new    Complex(imaginaryPart,    realPart,    denominator);    	non-compiled	[CE]  cannot  find  symbol  DEFINE_DIR	54	None	replace
333	[BUG]  [BUGGY]  Negative.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Negative.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Negative.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	108	None	replace
334	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginedPart.valueOf(Double.valueOf(imaginaryPart,  imaginaryPart);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginedPart.valueOf(Double.valueOf(imaginaryPart,  imaginaryPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginedPart.valueOf(Double.valueOf(imaginaryPart,  imaginaryPart);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    imaginedPart);    	non-compiled	[CE]  ')'  expected	11	None	replace
335	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  ImaginePart.valueOf(imaginaryPart,  Double.POSITIVE_INFINITY);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  ImaginePart.valueOf(imaginaryPart,  Double.POSITIVE_INFINITY);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  ImaginePart.valueOf(imaginaryPart,  Double.POSITIVE_INFINITY);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    imaginedPart);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
336	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  ImaginePart.valueOf(imaginaryPart,  Double.NaN);  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  ImaginePart.valueOf(imaginaryPart,  Double.NaN);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  ImaginePart.valueOf(imaginaryPart,  Double.NaN);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    imaginedPart);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
337	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  ImaginePart.valueOf(imaginaryPart,  Double.NEGATIVE_INFINITY);  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  ImaginePart.valueOf(imaginaryPart,  Double.NEGATIVE_INFINITY);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  ImaginePart.valueOf(imaginaryPart,  Double.NEGATIVE_INFINITY);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    imaginedPart);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
338	[BUG]  [BUGGY]  Real  realPart  =  new  Real(realPart,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Real  realPart  =  new  Real(realPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Real  realPart  =  new  Real(realPart,  imaginaryPart);	  return    new    Complex(imaginaryPart,    realPart);    Complex    realPart    =    new    Complex(imaginaryPart,    realPart);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
339	[BUG]  [BUGGY]  return  new  Complex(valueOf(realPart,  imaginaryPart),  ZERO);  [CE]  no  suitable  constructor  found  for  Complex(Complex,Complex)  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(valueOf(realPart,  imaginaryPart),  ZERO);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(valueOf(realPart,  imaginaryPart),  ZERO);	  return    new    Complex(valueOf(realPart,    imaginaryPart));    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(Complex,Complex)	93	None	replace
340	[BUG]  [BUGGY]  return  new  Complex(valueOf(realPart,  imaginaryPart,  ZERO));  [CE]  no  suitable  method  found  for  valueOf(double,double,Complex)  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(valueOf(realPart,  imaginaryPart,  ZERO));  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(valueOf(realPart,  imaginaryPart,  ZERO));	  return    new    Complex(valueOf(realPart,    imaginaryPart));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(double,double,Complex)	93	None	replace
341	[BUG]  [BUGGY]  return  new  Complex(realPart,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  denominator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  denominator);	  return    new    Complex(imaginaryPart,    realPart);    if(isInfinite)    {    if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  cannot  find  symbol  denominator	124	None	replace
342	[BUG]  [BUGGY]  Negative.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Negative.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Negative.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  new  Complex(realPart,  imaginaryPart);  }	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
343	[BUG]  [BUGGY]  NegativeFactory.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  NegativeFactory.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	NegativeFactory.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
344	[BUG]  [BUGGY]  return  new  Complex(ImaginaryPart.valueOf(realPart),  imaginaryPart.doubleValue());  [CE]  cannot  find  symbol  ImaginaryPart  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(ImaginaryPart.valueOf(realPart),  imaginaryPart.doubleValue());  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(ImaginaryPart.valueOf(realPart),  imaginaryPart.doubleValue());	  return    new    Complex(imaginaryPart,    imaginaryPart.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  ImaginaryPart	85	None	replace
345	[BUG]  [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart);  RealPart  imaginaryPart  =  Complex.valueOf(imaginaryPart);  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart);  RealPart  imaginaryPart  =  Complex.valueOf(imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    Complex.valueOf(realPart,    imaginaryPart);    RealPart  imaginaryPart  =  Complex.valueOf(imaginaryPart);	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
346	[BUG]  [BUGGY]  if(Denominator.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [CE]  cannot  find  symbol  Denominator  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Denominator.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Denominator.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }	  if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  Denominator	121	None	replace
347	[BUG]  [BUGGY]  if(Divisor.isNaN(addend)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  cannot  find  symbol  addend  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Divisor.isNaN(addend)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(addend)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }	  if(Divisor.isNaN(denominator)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  cannot  find  symbol  addend	3	None	replace
348	[BUG]  [BUGGY]  if(Divisor.isNaN(dimension)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  cannot  find  symbol  dimension  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Divisor.isNaN(dimension)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(dimension)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }	  if(Divisor.isNaN(denominator)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  cannot  find  symbol  dimension	3	None	replace
349	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  addend,  ZERO);  [CE]  cannot  find  symbol  addend  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  addend,  ZERO);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  addend,  ZERO);	  return    new    Complex(realPart,    imaginaryPart,    diminator,    ZERO);    	non-compiled	[CE]  cannot  find  symbol  addend	52	None	replace
350	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  factor,  ZERO);  [CE]  cannot  find  symbol  factor  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  factor,  ZERO);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  factor,  ZERO);	  return    new    Complex(realPart,    imaginaryPart,    diminator,    ZERO);    	non-compiled	[CE]  cannot  find  symbol  factor	52	None	replace
351	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart);  if(isInfinite)  {  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart);  if(isInfinite)  {  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart);  if(isInfinite)  {  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  return    new    Complex(imaginaryPart,    imaginaryPart);    if(isInfinite)    {    if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
352	[BUG]  [BUGGY]  NegativeFactory  factory  =  new  NegativeFactory(realPart,  imaginaryPart);  if(isInfinite)  {  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  NegativeFactory  factory  =  new  NegativeFactory(realPart,  imaginaryPart);  if(isInfinite)  {  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	NegativeFactory  factory  =  new  NegativeFactory(realPart,  imaginaryPart);  if(isInfinite)  {  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  return    new    Complex(imaginaryPart,    imaginaryPart);    if(isInfinite)    {    if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
353	[BUG]  [BUGGY]  Neighbor.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	  Neighbor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	111	None	replace
354	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart);  if(isInfinite)  {  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart);  if(isInfinite)  {  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart);  if(isInfinite)  {  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  return    new    Complex(imaginaryPart,    realPart);    if(isInfinite)    {    if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
355	[BUG]  [BUGGY]  if(Divisor.isNaN(denominator)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  cannot  find  symbol  denominator  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Divisor.isNaN(denominator)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(denominator)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  return    new    Complex(imaginaryPart,    realPart);    if(isInfinite)    {    if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  cannot  find  symbol  denominator	126	None	replace
356	[BUG]  [BUGGY]  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  cannot  find  symbol  Divisor  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  return    new    Complex(imaginaryPart,    realPart);    if(isInfinite)    {    if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  cannot  find  symbol  Divisor	126	None	replace
357	[BUG]  [BUGGY]  return  new  Complex(realPart,  denominator,  Denominator.isNaN(imaginaryPart));  [CE]  cannot  find  symbol  denominator  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  denominator,  Denominator.isNaN(imaginaryPart));  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  denominator,  Denominator.isNaN(imaginaryPart));	  return    new    Complex(realPart,    imaginaryPart,    Denominator.isNaN(imaginaryPart));    	non-compiled	[CE]  cannot  find  symbol  denominator	32	None	replace
358	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart);  RealPart  realPart  =  realPart.doubleValue();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart);  RealPart  realPart  =  realPart.doubleValue();  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart);  RealPart  realPart  =  realPart.doubleValue();	  return    new    Complex(imaginaryPart,    realPart);    RealPart    realPart    =    realPart.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
359	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  BigInteger.valueOf(imaginaryPart,  ZERO);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  BigInteger.valueOf(imaginaryPart,  ZERO);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  BigInteger.valueOf(imaginaryPart,  ZERO);	  RealPart    imaginaryPart    =    BigInteger.valueOf(imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
360	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  BigInteger.valueOf(imaginaryPart,  denominator);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  BigInteger.valueOf(imaginaryPart,  denominator);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  BigInteger.valueOf(imaginaryPart,  denominator);	  RealPart    imaginaryPart    =    BigInteger.valueOf(imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
361	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  false,  realPart);  [CE]  no  suitable  constructor  found  for  Complex(double,double,boolean,double)  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  false,  realPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  realPart,  false,  realPart);	  return    new    Complex(realPart,    imaginaryPart,    false,    realPart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,boolean,double)	92	None	replace
362	[BUG]  [BUGGY]  if(imaginaryPart  ==  imaginaryPart)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  new  Complex(realPart,  imaginaryPart);  }  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(imaginaryPart  ==  imaginaryPart)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(imaginaryPart  ==  imaginaryPart)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  new  Complex(realPart,  imaginaryPart);  }	  return    new    Complex(imaginaryPart,    realPart);    new    Complex(realPart,    realPart);    	non-compiled	[CE]  missing  return  statement	81	None	replace
363	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart);  new  Complex(realPart,  imaginaryPart);  [CE]  unreachable  statement  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart);  new  Complex(realPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  imaginaryPart);  new  Complex(realPart,  imaginaryPart);	  return    new    Complex(imaginaryPart,    realPart);    new    Complex(realPart,    realPart);    	non-compiled	[CE]  unreachable  statement	81	None	replace
364	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.parseDouble(Double.NaN);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  realPart.parseDouble(Double.NaN);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.parseDouble(Double.NaN);	  RealPart    imaginaryPart    =    Double.parseDouble(realPart);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
365	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.parseDouble(Double.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  realPart.parseDouble(Double.MAX_VALUE);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.parseDouble(Double.MAX_VALUE);	  RealPart    imaginaryPart    =    Double.parseDouble(realPart);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
366	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.parseDouble(Double.valueOf(realPart));  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  realPart.parseDouble(Double.valueOf(realPart));  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.parseDouble(Double.valueOf(realPart));	  RealPart    imaginaryPart    =    Double.parseDouble(realPart);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
367	[BUG]  [BUGGY]  Real  realPart  =  new  Real(imaginaryPart,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Real  realPart  =  new  Real(imaginaryPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Real  realPart  =  new  Real(imaginaryPart,  imaginaryPart);	  return    new    Complex(imaginaryPart,    realPart);    Complex    realPart    =    new    Complex(realPart,    imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
368	[BUG]  [BUGGY]  Annotation.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Annotation.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Annotation.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }	  Annotation.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	123	None	replace
369	[BUG]  [BUGGY]  Negative.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Negative.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Negative.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }	  if(Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	1	None	replace
370	[BUG]  [BUGGY]  NegativeFactory.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  NegativeFactory.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	NegativeFactory.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }	  if(Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	1	None	replace
371	[BUG]  [BUGGY]  NegativeValue.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  NegativeValue.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	NegativeValue.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }	  if(Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	1	None	replace
372	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  innerPart);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  innerPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  innerPart);	  RealPart    imaginaryPart    =    Complex.createInfinite(imaginaryPart,    realPart);    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
373	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.parseDouble(double);  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.parseDouble(double);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart.parseDouble(double);	  RealPart    imaginaryPart    =    double.parseDouble(imaginaryPart);    	non-compiled	[CE]  '.class'  expected	62	None	replace
374	[BUG]  [BUGGY]  nisipisNaN(imaginaryPart)||  Double.isNaN(addend))  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  nisipisNaN(imaginaryPart)||  Double.isNaN(addend))  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	nisipisNaN(imaginaryPart)||  Double.isNaN(addend))  {  return  new  Complex(realPart,  imaginaryPart);  }	  nisipisNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	2	None	replace
375	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart!=  null?  imaginaryPart.getINF()  :  imaginaryPart;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart!=  null?  imaginaryPart.getINF()  :  imaginaryPart;  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart!=  null?  imaginaryPart.getINF()  :  imaginaryPart;	  RealPart    imaginaryPart    =    imaginaryPart.getINF();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
376	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart);  RealPart  realPart  =  new  Complex(imaginaryPart,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart);  RealPart  realPart  =  new  Complex(imaginaryPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart);  RealPart  realPart  =  new  Complex(imaginaryPart,  imaginaryPart);	  return    new    Complex(imaginaryPart,    realPart);    RealPart    realPart    =    new    Complex(imaginaryPart,    realPart);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
377	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  false,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  false,  denominator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  realPart,  false,  denominator);	  return    new    Complex(realPart,    imaginaryPart,    false,    denominator);    	non-compiled	[CE]  cannot  find  symbol  denominator	70	None	replace
378	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  imaginaryPart,  scale,  ONE);  [CE]  cannot  find  symbol  scale  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  imaginaryPart,  scale,  ONE);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  imaginaryPart,  scale,  ONE);	  return    new    Complex(realPart,    imaginaryPart,    imaginaryPart,    ONE);    	non-compiled	[CE]  cannot  find  symbol  scale	115	None	replace
379	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  addend,  ONE);  [CE]  cannot  find  symbol  addend  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  addend,  ONE);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  addend,  ONE);	  return    new    Complex(realPart,    imaginaryPart,    imaginaryPart,    ONE);    	non-compiled	[CE]  cannot  find  symbol  addend	115	None	replace
380	[BUG]  [BUGGY]  if(Divisor.isNaN(denominator)||  Double.isNaN(denominator))  {  return  NaN;  }  [CE]  cannot  find  symbol  denominator  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Divisor.isNaN(denominator)||  Double.isNaN(denominator))  {  return  NaN;  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(denominator)||  Double.isNaN(denominator))  {  return  NaN;  }	  return    new    Complex(imaginaryPart,    realPart);    if(isInfinite)    {    if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  cannot  find  symbol  denominator	125	None	replace
381	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart.multiply(imaginaryPart));  [CE]  double  cannot  be  dereferenced  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(realPart,  imaginaryPart.multiply(imaginaryPart));  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  valueOf(realPart,  imaginaryPart.multiply(imaginaryPart));	  return    valueOf(realPart,    imaginaryPart.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	22	None	replace
382	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.parseDouble(innerPart);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.parseDouble(innerPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart.parseDouble(innerPart);	  RealPart    imaginaryPart    =    innerPart.parseDouble(imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
383	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  factor.getInFactory();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  factor.getInFactory();  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  factor.getInFactory();	  RealPart    imaginaryPart    =    imaginaryPart.getInFactory();    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
384	[BUG]  [BUGGY]  Neighbor.isNaN(denominator)||  Double.isNaN(realPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(denominator)||  Double.isNaN(realPart))  {  return  NaN;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(denominator)||  Double.isNaN(realPart))  {  return  NaN;  }	  Neighbor.isNaN(imaginaryPart)||    Double.isNaN(denominator))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	74	None	replace
385	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  RealPart.valueOf(Double.valueOf(imaginaryPart,  RealPart.NaN);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  RealPart.valueOf(Double.valueOf(imaginaryPart,  RealPart.NaN);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  RealPart.valueOf(Double.valueOf(imaginaryPart,  RealPart.NaN);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    RealPart.NaN);    	non-compiled	[CE]  ')'  expected	91	None	replace
386	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  RealPart.valueOf(Double.valueOf(imaginaryPart,  RealPart.NaN));  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  RealPart.valueOf(Double.valueOf(imaginaryPart,  RealPart.NaN));  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  RealPart.valueOf(Double.valueOf(imaginaryPart,  RealPart.NaN));	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    RealPart.NaN);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
387	[BUG]  [BUGGY]  Negative.isNaN(realPart)||  Negative.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Negative.isNaN(realPart)||  Negative.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Negative.isNaN(realPart)||  Negative.isNaN(imaginaryPart))  {  return  NaN;  }	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	27	None	replace
388	[BUG]  [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }	  Neighbor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	73	None	replace
389	[BUG]  [BUGGY]  if(Divisor.isNaN(addend)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  cannot  find  symbol  addend  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Divisor.isNaN(addend)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(addend)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  if(Divisor.isNaN(denominator)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  cannot  find  symbol  addend	29	None	replace
390	[BUG]  [BUGGY]  if(Divisor.isNaN(dimension)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  cannot  find  symbol  dimension  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Divisor.isNaN(dimension)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(dimension)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  if(Divisor.isNaN(denominator)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  cannot  find  symbol  dimension	29	None	replace
391	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  Denominator.isNaN(imaginaryPart));  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  Denominator.isNaN(imaginaryPart));  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  Denominator.isNaN(imaginaryPart));	  RealPart    imaginaryPart    =    Complex.createInfinite(imaginaryPart,    isNaN);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
392	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  ZERO);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  ZERO);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  ZERO);	  RealPart    imaginaryPart    =    Complex.createInfinite(imaginaryPart,    isNaN);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
393	[BUG]  [BUGGY]  if(imaginaryPart  ==  realPart)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(imaginaryPart  ==  realPart)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(imaginaryPart  ==  realPart)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  new  Complex(imaginaryPart,  imaginaryPart);  }	  return    new    Complex(imaginaryPart,    imaginaryPart);    new    Complex(imaginaryPart,    imaginaryPart);    	non-compiled	[CE]  missing  return  statement	33	None	replace
394	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart!=  null?  imaginaryPart.getInf()  :  null;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart!=  null?  imaginaryPart.getInf()  :  null;  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart!=  null?  imaginaryPart.getInf()  :  null;	  RealPart    imaginaryPart    =    imaginaryPart.getInf();    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
395	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  innerPart.getInf();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  innerPart.getInf();  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  innerPart.getInf();	  RealPart    imaginaryPart    =    imaginaryPart.getInf();    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
396	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  false,  false);  [CE]  no  suitable  constructor  found  for  Complex(double,double,boolean,boolean)  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  false,  false);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  false,  false);	  return    new    Complex(realPart,    imaginaryPart,    false,    true);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,boolean,boolean)	131	None	replace
397	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Denominator.valueOf(imaginaryPart,  Double.valueOf(imaginaryPart);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Denominator.valueOf(imaginaryPart,  Double.valueOf(imaginaryPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Denominator.valueOf(imaginaryPart,  Double.valueOf(imaginaryPart);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    denominator);    	non-compiled	[CE]  ')'  expected	128	None	replace
398	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Denominator.valueOf(imaginaryPart,  Double.valueOf(imaginaryPart));  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Denominator.valueOf(imaginaryPart,  Double.valueOf(imaginaryPart));  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Denominator.valueOf(imaginaryPart,  Double.valueOf(imaginaryPart));	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    denominator);    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
399	[BUG]  [BUGGY]  NegativeFactory  factory  =  new  NegativeFactory(realPart,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  NegativeFactory  factory  =  new  NegativeFactory(realPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	NegativeFactory  factory  =  new  NegativeFactory(realPart,  imaginaryPart);	  return    new    Complex(imaginaryPart,    imaginaryPart);    if(imaginaryPart!=    null)    {    if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
400	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  new  Complex(realPart,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  new  Complex(realPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  new  Complex(realPart,  imaginaryPart);	  return    new    Complex(imaginaryPart,    imaginaryPart);    Complex    imaginaryPart    =    new    Complex(realPart,    imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
401	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  new  Complex(imaginaryPart,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  new  Complex(imaginaryPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  new  Complex(imaginaryPart,  imaginaryPart);	  return    new    Complex(imaginaryPart,    imaginaryPart);    Complex    imaginaryPart    =    new    Complex(realPart,    imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
402	[BUG]  [BUGGY]  Real  imaginaryPart  =  new  Real(imaginaryPart,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Real  imaginaryPart  =  new  Real(imaginaryPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Real  imaginaryPart  =  new  Real(imaginaryPart,  imaginaryPart);	  return    new    Complex(imaginaryPart,    imaginaryPart);    Complex    imaginaryPart    =    new    Complex(imaginaryPart,    imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
403	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  valueOf.doubleValue();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  valueOf.doubleValue();  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  valueOf.doubleValue();	  RealPart    imaginaryPart    =    imaginaryPart.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
404	[BUG]  [BUGGY]  NegativeFactory  factory  =  new  NegativeFactory(realPart,  imaginaryPart);  if(isInfinite)  {  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  Na  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  NegativeFactory  factory  =  new  NegativeFactory(realPart,  imaginaryPart);  if(isInfinite)  {  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  Na  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	NegativeFactory  factory  =  new  NegativeFactory(realPart,  imaginaryPart);  if(isInfinite)  {  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  Na	  return    new    Complex(imaginaryPart,    imaginaryPart);    if(isInfinite)    {    if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  ';'  expected	134	None	replace
405	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  nthPhi.valueOf(Double.valueOf(imaginaryPart));  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  nthPhi.valueOf(Double.valueOf(imaginaryPart));  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  nthPhi.valueOf(Double.valueOf(imaginaryPart));	  RealPart    imaginaryPart    =    realPart.valueOf(Double.valueOf(imaginaryPart));    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
406	[BUG]  [BUGGY]  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(imaginaryPart,  realPart);  }  [CE]  cannot  find  symbol  Divisor  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(imaginaryPart,  realPart);  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(imaginaryPart,  realPart);  }	  return    new    Complex(imaginaryPart,    realPart);    if(isInfinite)    {    if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(imaginaryPart,    realPart);    }    	non-compiled	[CE]  cannot  find  symbol  Divisor	127	None	replace
407	[BUG]  [BUGGY]  if(Denominator.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  cannot  find  symbol  Denominator  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Denominator.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Denominator.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  cannot  find  symbol  Denominator	28	None	replace
408	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  factor.getInFactor();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  factor.getInFactor();  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  factor.getInFactor();	  RealPart    imaginaryPart    =    realPart.getInFactor();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
409	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  imaginaryPart,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  imaginaryPart,  denominator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  realPart,  imaginaryPart,  denominator);	  return    new    Complex(imaginaryPart,    realPart,    imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol  denominator	89	None	replace
410	[BUG]  [BUGGY]  return  new  Complex(realPart,  realPart,  imaginaryPart);  [CE]  no  suitable  constructor  found  for  Complex(double,double,double)  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  realPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  realPart,  imaginaryPart);	  return    new    Complex(imaginaryPart,    realPart,    imaginaryPart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,double)	89	None	replace
411	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  true);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  true);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  true);	  RealPart    imaginaryPart    =    Complex.createInfinite(realPart);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
412	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  ComplexUtilities.createInfinite(imaginaryPart);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  ComplexUtilities.createInfinite(imaginaryPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  ComplexUtilities.createInfinite(imaginaryPart);	  RealPart    imaginaryPart    =    Complex.createInfinite(realPart);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
413	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  this.imaginaryPart.valueOf(Double.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  this.imaginaryPart.valueOf(Double.MAX_VALUE);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  this.imaginaryPart.valueOf(Double.MAX_VALUE);	  RealPart    imaginaryPart    =    realPart.valueOf(Double.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
414	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart,  false);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart,  false);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  imaginaryPart,  false);	  return    new    Complex(realPart,    imaginaryPart,    denominator,    false);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
415	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  denominator,  false);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  denominator,  false);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  realPart,  denominator,  false);	  return    new    Complex(realPart,    imaginaryPart,    denominator,    false);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
416	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  imaginaryPart,  denominator);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  imaginaryPart,  denominator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  imaginaryPart,  denominator);	  return    new    Complex(realPart,    imaginaryPart,    ZERO,    denominator);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
417	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart,  ZERO,  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart,  ZERO,  denominator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  imaginaryPart,  ZERO,  denominator);	  return    new    Complex(realPart,    imaginaryPart,    ZERO,    denominator);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
418	[BUG]  [BUGGY]  return(isInfinite  ||  realPart.isNaN)?  valueOf(imaginaryPart,  imaginaryPart):  null;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return(isInfinite  ||  realPart.isNaN)?  valueOf(imaginaryPart,  imaginaryPart):  null;  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return(isInfinite  ||  realPart.isNaN)?  valueOf(imaginaryPart,  imaginaryPart):  null;	  return(isInfinite    ||    isNaN)?    valueOf(realPart,    imaginaryPart):    null;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
419	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart!=  null?  imaginaryPart.doubleValue()  :  Double.parseDouble(imaginaryPart);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart!=  null?  imaginaryPart.doubleValue()  :  Double.parseDouble(imaginaryPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart!=  null?  imaginaryPart.doubleValue()  :  Double.parseDouble(imaginaryPart);	  RealPart    imaginaryPart    =    imaginaryPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
420	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart!=  null?  imaginaryPart.doubleValue()  :  realPart.doubleValue();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart!=  null?  imaginaryPart.doubleValue()  :  realPart.doubleValue();  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart!=  null?  imaginaryPart.doubleValue()  :  realPart.doubleValue();	  RealPart    imaginaryPart    =    imaginaryPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
421	[BUG]  [BUGGY]  if(imaginaryPart  ==  imaginaryPart)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  realPart  =  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(imaginaryPart  ==  imaginaryPart)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  realPart  =  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(imaginaryPart  ==  imaginaryPart)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  realPart  =  new  Complex(imaginaryPart,  imaginaryPart);  }	  return    new    Complex(imaginaryPart,    realPart);    Complex    realPart    =    new    Complex(imaginaryPart,    realPart);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
422	[BUG]  [BUGGY]  if(imaginaryPart!=  imaginaryPart)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  realPart  =  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(imaginaryPart!=  imaginaryPart)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  realPart  =  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(imaginaryPart!=  imaginaryPart)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  realPart  =  new  Complex(imaginaryPart,  imaginaryPart);  }	  return    new    Complex(imaginaryPart,    realPart);    Complex    realPart    =    new    Complex(imaginaryPart,    realPart);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
423	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart2.valueOf(Double.POSITIVE_INFINITY,  realPart);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart2.valueOf(Double.POSITIVE_INFINITY,  realPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart2.valueOf(Double.POSITIVE_INFINITY,  realPart);	  RealPart    imaginaryPart    =    realPart.valueOf(Double.POSITIVE_INFINITY,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
424	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  c);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  c);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  c);	  RealPart    imaginaryPart    =    Complex.createInfinite(imaginaryPart,    isNaN);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
425	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  nthPhi.doubleValue();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  nthPhi.doubleValue();  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  nthPhi.doubleValue();	  RealPart    imaginaryPart    =    this.imaginaryPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
426	[BUG]  [BUGGY]  RealPart  realPart  =  imaginaryPart!=  null?  imaginaryPart.doubleValue()  :  Double.parseDouble(imaginaryPart);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  realPart  =  imaginaryPart!=  null?  imaginaryPart.doubleValue()  :  Double.parseDouble(imaginaryPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  realPart  =  imaginaryPart!=  null?  imaginaryPart.doubleValue()  :  Double.parseDouble(imaginaryPart);	  RealPart    realPart    =    imaginaryPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
427	[BUG]  [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart);  if(imaginaryPart!=  null)  {  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  illegal  start  of  type  [FE]    StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart);  if(imaginaryPart!=  null)  {  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    Complex.valueOf(realPart,    imaginaryPart);    if(imaginaryPart!=  null)  {  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  	non-compiled	[CE]  illegal  start  of  type	19	None	add
428	[BUG]  [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart);  if(imaginaryPart!=  null)  {  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  Complex.valueOf(realPart,  imaginaryPart);  }  [CE]  illegal  start  of  type  [FE]      StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart);  if(imaginaryPart!=  null)  {  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  Complex.valueOf(realPart,  imaginaryPart);  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    Complex.valueOf(realPart,    imaginaryPart);    if(imaginaryPart!=  null)  {  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  Complex.valueOf(realPart,  imaginaryPart);  }	  	non-compiled	[CE]  illegal  start  of  type	19	None	add
429	[BUG]  [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart);  if(imaginaryPart!=  null)  {  if(Divisor.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  illegal  start  of  type  [FE]        StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart);  if(imaginaryPart!=  null)  {  if(Divisor.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    Complex.valueOf(realPart,    imaginaryPart);    if(imaginaryPart!=  null)  {  if(Divisor.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  	non-compiled	[CE]  illegal  start  of  type	19	None	add
430	[BUG]  [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart);  if(imaginaryPart!=  null)  {  if(isInfinite)  {  return  Complex.valueOf(realPart,  imaginaryPart);  }  [CE]  illegal  start  of  type  [FE]          StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart);  if(imaginaryPart!=  null)  {  if(isInfinite)  {  return  Complex.valueOf(realPart,  imaginaryPart);  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    Complex.valueOf(realPart,    imaginaryPart);    if(imaginaryPart!=  null)  {  if(isInfinite)  {  return  Complex.valueOf(realPart,  imaginaryPart);  }	  	non-compiled	[CE]  illegal  start  of  type	19	None	add
431	[BUG]  [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(ImaginaryPart,  realPart);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(ImaginaryPart,  realPart);  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(ImaginaryPart,  realPart);  }	  return    new    Complex(imaginaryPart,    realPart);    if(isInfinite)    {    if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(imaginaryPart,    realPart);    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
432	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.parseDouble(Double.MIN_VALUE);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  realPart.parseDouble(Double.MIN_VALUE);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.parseDouble(Double.MIN_VALUE);	  RealPart    imaginaryPart    =    Double.parseDouble(realPart);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
433	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  this.imaginaryPart.valueOf(Double.NaN);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  this.imaginaryPart.valueOf(Double.NaN);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  this.imaginaryPart.valueOf(Double.NaN);	  RealPart    imaginaryPart    =    realPart.valueOf(Double.NaN);    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
434	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart,  this);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart,  this);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  imaginaryPart,  this);	  return    new    Complex(realPart,    imaginaryPart,    this);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
435	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.valueOf(Double.toString(imaginaryPart));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.valueOf(Double.toString(imaginaryPart));  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart.valueOf(Double.toString(imaginaryPart));	  RealPart    imaginaryPart    =    realPart.valueOf(Double.valueOf(realPart);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
436	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  false,  imaginaryPart,  imaginaryPart);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  false,  imaginaryPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  false,  imaginaryPart,  imaginaryPart);	  return    new    Complex(realPart,    imaginaryPart,    false,    realPart);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
437	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  divisor);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  divisor);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  realPart,  divisor);	  return    new    Complex(realPart,    imaginaryPart,    divisor);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
438	[BUG]  [BUGGY]  if(imaginaryPart  ==  imaginaryPart)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(imaginaryPart  ==  imaginaryPart)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(imaginaryPart  ==  imaginaryPart)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	  return    new    Complex(imaginaryPart,    realPart);    Complex    realPart    =    new    Complex(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
439	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  innerPart.getInFactor();  [CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  innerPart.getInFactor();  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  innerPart.getInFactor();	  RealPart    imaginaryPart    =    realPart.getInFactor();    	non-compiled	[CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement	16	None	replace
440	[BUG]  [BUGGY]  Negative.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  -  1;  }  [CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Negative.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  -  1;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Negative.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  -  1;  }	  Negative.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement	98	None	replace
441	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  null,  ZERO);  [CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  null,  ZERO);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  realPart,  null,  ZERO);	  return    new    Complex(realPart,    imaginaryPart,    null,    ZERO);    	non-compiled	[CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement	139	None	replace
442	[BUG]  [BUGGY]  if(Divisor.isNaN(realPart,  imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Divisor.isNaN(realPart,  imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(realPart,  imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  return    new    Complex(imaginaryPart,    realPart);    if(isInfinite)    {    if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement	126	None	replace
443	[BUG]  [BUGGY]  Neighbor.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	  Neighbor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement	73	None	replace
444	[BUG]  [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart);  }  [CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart);  }	  	non-compiled	[CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement	112	None	add
445	[BUG]  [BUGGY]  if(imaginaryPart  ==  null)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  imaginaryPart  =  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(imaginaryPart  ==  null)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  imaginaryPart  =  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(imaginaryPart  ==  null)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  imaginaryPart  =  new  Complex(imaginaryPart,  imaginaryPart);  }	  return    new    Complex(imaginaryPart,    imaginaryPart);    Complex    imaginaryPart    =    new    Complex(realPart,    imaginaryPart);    	non-compiled	[CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement	36	None	replace
446	[BUG]  [BUGGY]  if(imaginaryPart!=  imaginaryPart)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  imaginaryPart  =  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(imaginaryPart!=  imaginaryPart)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  imaginaryPart  =  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(imaginaryPart!=  imaginaryPart)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  imaginaryPart  =  new  Complex(imaginaryPart,  imaginaryPart);  }	  return    new    Complex(imaginaryPart,    imaginaryPart);    Complex    imaginaryPart    =    new    Complex(realPart,    imaginaryPart);    	non-compiled	[CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement	36	None	replace
447	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  this.nthRootOfAbs.doubleValue();  [CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  this.nthRootOfAbs.doubleValue();  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  this.nthRootOfAbs.doubleValue();	  RealPart    imaginaryPart    =    nthRootOfAbs.doubleValue();    	non-compiled	[CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement	24	None	replace
448	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart,  false,  realPart.isInfinite);  [CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(realPart,  imaginaryPart,  false,  realPart.isInfinite);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  valueOf(realPart,  imaginaryPart,  false,  realPart.isInfinite);	  return    valueOf(realPart,    imaginaryPart,    false);    	non-compiled	[CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement	94	None	replace
449	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart,  false,  c);  [CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(realPart,  imaginaryPart,  false,  c);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  valueOf(realPart,  imaginaryPart,  false,  c);	  return    valueOf(realPart,    imaginaryPart,    false);    	non-compiled	[CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement	94	None	replace
450	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.parseDouble(implicitePart);  [CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.parseDouble(implicitePart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart.parseDouble(implicitePart);	  RealPart    imaginaryPart    =    innerPart.parseDouble(imaginaryPart);    	non-compiled	[CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement	105	None	replace
451	[BUG]  [BUGGY]  parent  ==  null  ||!isInfinite  &&  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  parent  ==  null  ||!isInfinite  &&  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	parent  ==  null  ||!isInfinite  &&  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement	4	None	replace
452	[BUG]  [BUGGY]  parent  ==  null  &&  parent.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement  [FE]                          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  parent  ==  null  &&  parent.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	parent  ==  null  &&  parent.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement	4	None	replace
453	[BUG]  [BUGGY]  Negative.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Negative.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Negative.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  Negative.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement	83	None	replace
454	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.getInfinitePart();  [CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.getInfinitePart();  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart.getInfinitePart();	  RealPart    imaginaryPart    =    imaginaryPart.getInf();    	non-compiled	[CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement	138	None	replace
455	[BUG]  [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)?)  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)?)  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)?)  {  return  new  Complex(realPart,  imaginaryPart);  }	  if(Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement	1	None	replace
456	[BUG]  [BUGGY]  return  new  Complex(implicitePart,  imaginaryPart,  realPart);  [CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(implicitePart,  imaginaryPart,  realPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(implicitePart,  imaginaryPart,  realPart);	  return    new    Complex(implicitePart,    imaginaryPart);    	non-compiled	[CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement	5	None	replace
457	[BUG]  [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }	  if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement	121	None	replace
458	[BUG]  [BUGGY]  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }	  if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement	121	None	replace
459	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  BigInteger.valueOf(imaginaryPart,  0.5);  [CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  BigInteger.valueOf(imaginaryPart,  0.5);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  BigInteger.valueOf(imaginaryPart,  0.5);	  RealPart    imaginaryPart    =    BigInteger.valueOf(imaginaryPart);    	non-compiled	[CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement	129	None	replace
460	[BUG]  [BUGGY]  return  new  Complex(implicitRealPart,  realPart,  null);  [CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(implicitRealPart,  realPart,  null);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(implicitRealPart,  realPart,  null);	  return    new    Complex(imaginaryPart,    realPart,    null);    	non-compiled	[CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement	56	None	replace
461	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  this.expReal.parseDouble(imaginaryPart);  [CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  this.expReal.parseDouble(imaginaryPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  this.expReal.parseDouble(imaginaryPart);	  RealPart    imaginaryPart    =    double.parseDouble(imaginaryPart);    	non-compiled	[CE]  Complex  is  not  abstract  and  does  not  override  abstract  method  reciprocal()  in  FieldElement	62	None	replace
462	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart!=  null?  imaginaryPart.getInFactory()  :  imaginaryPart.getInFactory();  [CE]  reached  end  of  file  while  parsing  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart!=  null?  imaginaryPart.getInFactory()  :  imaginaryPart.getInFactory();  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart!=  null?  imaginaryPart.getInFactory()  :  imaginaryPart.getInFactory();	  RealPart    imaginaryPart    =    imaginaryPart.getInFactory();    	non-compiled	[CE]  reached  end  of  file  while  parsing	137	None	replace
463	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart!=  null?  imaginaryPart.getInFactory()  :  realPart.getInFactory();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart!=  null?  imaginaryPart.getInFactory()  :  realPart.getInFactory();  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart!=  null?  imaginaryPart.getInFactory()  :  realPart.getInFactory();	  RealPart    imaginaryPart    =    imaginaryPart.getInFactory();    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
464	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart);  if(imaginaryPart!=  null)  {  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  illegal  start  of  type  [FE]    StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(realPart,  imaginaryPart);  if(imaginaryPart!=  null)  {  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    valueOf(realPart,    imaginaryPart);    if(imaginaryPart!=  null)  {  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  	non-compiled	[CE]  illegal  start  of  type	17	None	add
465	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart);  if(imaginaryPart!=  null)  {  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  illegal  start  of  type  [FE]      StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(realPart,  imaginaryPart);  if(imaginaryPart!=  null)  {  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    valueOf(realPart,    imaginaryPart);    if(imaginaryPart!=  null)  {  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  	non-compiled	[CE]  illegal  start  of  type	17	None	add
466	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart);  return  valueOf(realPart,  imaginaryPart);  [CE]  illegal  start  of  type  [FE]        StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(realPart,  imaginaryPart);  return  valueOf(realPart,  imaginaryPart);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    valueOf(realPart,    imaginaryPart);    return  valueOf(realPart,  imaginaryPart);	  	non-compiled	[CE]  illegal  start  of  type	17	None	add
467	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart);  if(imaginaryPart!=  null)  {  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [CE]  illegal  start  of  type  [FE]          StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(realPart,  imaginaryPart);  if(imaginaryPart!=  null)  {  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    valueOf(realPart,    imaginaryPart);    if(imaginaryPart!=  null)  {  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }	  	non-compiled	[CE]  illegal  start  of  type	17	None	add
468	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart);  if(imaginaryPart!=  null)  {  return  valueOf(realPart,  imaginaryPart);  }  [CE]  illegal  start  of  type  [FE]            StackOverflowError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(realPart,  imaginaryPart);  if(imaginaryPart!=  null)  {  return  valueOf(realPart,  imaginaryPart);  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    valueOf(realPart,    imaginaryPart);    if(imaginaryPart!=  null)  {  return  valueOf(realPart,  imaginaryPart);  }	  	non-compiled	[CE]  illegal  start  of  type	17	None	add
469	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  denominator,  factor);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  denominator,  factor);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  denominator,  factor);	  RealPart    imaginaryPart    =    Complex.createInfinite(imaginaryPart,    denominator);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
470	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(ImaginaryPart.MAX_VALUE));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(ImaginaryPart.MAX_VALUE));  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(ImaginaryPart.MAX_VALUE));	  RealPart    imaginaryPart    =    ImaginePart.valueOf(Double.valueOf(imaginaryPart));    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
471	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(ImaginaryPart.NaN));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(ImaginaryPart.NaN));  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(ImaginaryPart.NaN));	  RealPart    imaginaryPart    =    ImaginePart.valueOf(Double.valueOf(imaginaryPart));    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
472	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	  	non-compiled	[CE]  illegal  start  of  type	107	None	add
473	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart,  Denominator.isNaN(imaginaryPart));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart,  Denominator.isNaN(imaginaryPart));  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  imaginaryPart,  Denominator.isNaN(imaginaryPart));	  return    new    Complex(realPart,    imaginaryPart,    Denominator.isNaN(imaginaryPart));    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
474	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  Denominator.isNaN(imaginaryPart));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  Denominator.isNaN(imaginaryPart));  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  realPart,  Denominator.isNaN(imaginaryPart));	  return    new    Complex(realPart,    imaginaryPart,    Denominator.isNaN(imaginaryPart));    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
475	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.valueOf(Double.valueOf(imaginaryPart));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.valueOf(Double.valueOf(imaginaryPart));  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart.valueOf(Double.valueOf(imaginaryPart));	  RealPart    imaginaryPart    =    realPart.valueOf(Double.valueOf(imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
476	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.POSITIVE_INFINITY,  Double.valueOf(imaginaryPart,  imaginaryPart);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.POSITIVE_INFINITY,  Double.valueOf(imaginaryPart,  imaginaryPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.valueOf(Double.POSITIVE_INFINITY,  Double.valueOf(imaginaryPart,  imaginaryPart);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    realPart);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
477	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart,  scale,  null);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart,  scale,  null);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  imaginaryPart,  scale,  null);	  return    new    Complex(realPart,    imaginaryPart,    scale,    null);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
478	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.NaN,  RealPart.NaN);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.NaN,  RealPart.NaN);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.valueOf(Double.NaN,  RealPart.NaN);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    RealPart.NaN);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
479	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  new  RealPart(Double.valueOf(imaginaryPart,  RealPart.NaN));  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  new  RealPart(Double.valueOf(imaginaryPart,  RealPart.NaN));  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  new  RealPart(Double.valueOf(imaginaryPart,  RealPart.NaN));	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    RealPart.NaN);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
480	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  false);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  false);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  false);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
481	[BUG]  [BUGGY]  realPart  =  new  Complex(imaginaryPart,  imaginaryPart.denominator);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  realPart  =  new  Complex(imaginaryPart,  imaginaryPart.denominator);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	realPart  =  new  Complex(imaginaryPart,  imaginaryPart.denominator);	  realPart    =    new    Complex(imaginaryPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
482	[BUG]  [BUGGY]  return  new  Complex(ImaginaryPart.valueOf(realPart,  imaginaryPart.doubleValue()));  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(ImaginaryPart.valueOf(realPart,  imaginaryPart.doubleValue()));  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(ImaginaryPart.valueOf(realPart,  imaginaryPart.doubleValue()));	  return    new    Complex(imaginaryPart,    imaginaryPart.doubleValue());    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
483	[BUG]  [BUGGY]  return  new  Complex(valueOf(realPart,  imaginaryPart,  imaginaryPart));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(valueOf(realPart,  imaginaryPart,  imaginaryPart));  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(valueOf(realPart,  imaginaryPart,  imaginaryPart));	  return    new    Complex(valueOf(realPart,    imaginaryPart));    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
484	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  Denominator.ZERO);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  Denominator.ZERO);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  Denominator.ZERO);	  RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart,    denominator);    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
485	[BUG]  [BUGGY]  return  valueOf(imaginaryPart,  imaginaryPart.doubleValue());  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  valueOf(imaginaryPart,  imaginaryPart.doubleValue());  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  valueOf(imaginaryPart,  imaginaryPart.doubleValue());	  return    valueOf(realPart,    imaginaryPart.doubleValue());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
486	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  ImagineFunction.createInfinite(imaginaryPart);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  ImagineFunction.createInfinite(imaginaryPart);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  ImagineFunction.createInfinite(imaginaryPart);	  RealPart    imaginaryPart    =    Complex.createInfinite(realPart);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
487	[BUG]  [BUGGY]  NegativeFactory.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  NegativeFactory.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	NegativeFactory.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  NegativeFactory.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
488	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart!=  null?  realPart.valueOf(Double.POSITIVE_INFINITY):  realPart.valueOf(Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart!=  null?  realPart.valueOf(Double.POSITIVE_INFINITY):  realPart.valueOf(Double.POSITIVE_INFINITY);  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart!=  null?  realPart.valueOf(Double.POSITIVE_INFINITY):  realPart.valueOf(Double.POSITIVE_INFINITY);	  RealPart    imaginaryPart    =    realPart.valueOf(Double.POSITIVE_INFINITY);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
489	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart!=  null?  realPart.valueOf(Double.POSITIVE_INFINITY):  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart!=  null?  realPart.valueOf(Double.POSITIVE_INFINITY):  Double.POSITIVE_INFINITY;  [BUGGY]      return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart!=  null?  realPart.valueOf(Double.POSITIVE_INFINITY):  Double.POSITIVE_INFINITY;	  RealPart    imaginaryPart    =    realPart.valueOf(Double.POSITIVE_INFINITY);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
490	[BUG]  [BUGGY]  if(imaginaryPart  ==  imaginaryPart)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  realPart  =  new  Complex(realPart,  imaginaryPart);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(imaginaryPart  ==  imaginaryPart)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  realPart  =  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(imaginaryPart  ==  imaginaryPart)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  realPart  =  new  Complex(realPart,  imaginaryPart);  }	  return    new    Complex(imaginaryPart,    realPart);    Complex    realPart    =    new    Complex(realPart,    realPart);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
491	[BUG]  [BUGGY]  if(imaginaryPart!=  imaginaryPart)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  realPart  =  new  Complex(realPart,  imaginaryPart);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(imaginaryPart!=  imaginaryPart)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  realPart  =  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(imaginaryPart!=  imaginaryPart)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  realPart  =  new  Complex(realPart,  imaginaryPart);  }	  return    new    Complex(imaginaryPart,    realPart);    Complex    realPart    =    new    Complex(realPart,    realPart);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
492	[BUG]  [BUGGY]  if(imaginaryPart  ==  imaginaryPart)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  Real  realPart  =  new  Complex(realPart,  imaginaryPart);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  if(imaginaryPart  ==  imaginaryPart)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  Real  realPart  =  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(imaginaryPart  ==  imaginaryPart)  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  else  {  Real  realPart  =  new  Complex(realPart,  imaginaryPart);  }	  return    new    Complex(imaginaryPart,    realPart);    Complex    realPart    =    new    Complex(realPart,    realPart);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
493	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  false,  realPart.isInfinite);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  false,  realPart.isInfinite);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  null,  false,  realPart.isInfinite);	  return    new    Complex(realPart,    imaginaryPart,    null,    false);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
494	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  false,  realPart.isNaN);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }      [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  false,  realPart.isNaN);  [BUGGY]      }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  null,  false,  realPart.isNaN);	  return    new    Complex(realPart,    imaginaryPart,    null,    false);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
