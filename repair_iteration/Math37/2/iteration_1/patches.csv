bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  missing  return  statement  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }	      if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  missing  return  statement	18	None	replace
2	[BUG]  [BUGGY]  nisipisNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  nisipisNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	nisipisNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }	      if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	18	None	replace
3	[BUG]  [BUGGY]  if(Divisor.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  cannot  find  symbol  denominator  [FE]                  AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  if(Divisor.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }	      if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  cannot  find  symbol  denominator	18	None	replace
4	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  missing  return  statement  [FE]                    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }	      if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  missing  return  statement	18	None	replace
5	[BUG]  [BUGGY]  return  new  Complex(implicitePart,  imaginaryPart);  [CE]  cannot  find  symbol  implicitePart  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(implicitePart,  imaginaryPart);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(implicitePart,  imaginaryPart);	  return    new    Complex(imaginaryPart,    imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol  implicitePart	21	None	replace
6	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  denominator);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  denominator);  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  denominator);	      RealPart    imaginaryPart    =    Complex.createInfinite(imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
7	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(realPart);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(realPart);  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Complex.createInfinite(realPart);	      RealPart    imaginaryPart    =    Complex.createInfinite(imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
8	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  isNaN);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  isNaN);  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  isNaN);	      RealPart    imaginaryPart    =    Complex.createInfinite(imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
9	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  realPart);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  realPart);  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  realPart);	      RealPart    imaginaryPart    =    Double.valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
10	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  imaginaryPart);  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  imaginaryPart);	      RealPart    imaginaryPart    =    Double.valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
11	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  imaginedPart);  [CE]  cannot  find  symbol  [FE]                    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  imaginedPart);  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  imaginedPart);	      RealPart    imaginaryPart    =    Double.valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
12	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(realPart));  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(realPart));  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(realPart));	      RealPart    imaginaryPart    =    Double.valueOf(realPart);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
13	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(imaginaryPart);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(imaginaryPart);  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(imaginaryPart);	      RealPart    imaginaryPart    =    Double.valueOf(realPart);    	non-compiled	[CE]  ')'  expected	12	None	replace
14	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(imaginaryPart));  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(imaginaryPart));  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(imaginaryPart));	      RealPart    imaginaryPart    =    Double.valueOf(realPart);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
15	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.getINF();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.getINF();  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart.getINF();	      RealPart    imaginaryPart    =    realPart.getINF();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
16	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.getInFactor();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  realPart.getInFactor();  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.getInFactor();	      RealPart    imaginaryPart    =    realPart.getINF();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
17	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  valueOf(realPart,  imaginaryPart);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	add	return  valueOf(realPart,  imaginaryPart);	      	compilable	  [FE]  StackOverflowError  	5	4	replace
18	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart);  [FE]  StackOverflowError  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  valueOf(realPart,  imaginaryPart);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  valueOf(realPart,  imaginaryPart);	      	compilable	  [FE]  StackOverflowError  	5	4	replace
19	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]                AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	add	return  Complex.valueOf(realPart,  imaginaryPart);	      	compilable	  [FE]  StackOverflowError  	5	4	replace
20	[BUG]  [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart);  [FE]  StackOverflowError  [FE]                AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  Complex.valueOf(realPart,  imaginaryPart);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  Complex.valueOf(realPart,  imaginaryPart);	      	compilable	  [FE]  StackOverflowError  	5	4	replace
21	[BUG]  [BUGGY]  return(isInfinite  ||  isNaN)?  valueOf(realPart,  imaginaryPart):  null;  [CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context  [FE]                  AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return(isInfinite  ||  isNaN)?  valueOf(realPart,  imaginaryPart):  null;  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return(isInfinite  ||  isNaN)?  valueOf(realPart,  imaginaryPart):  null;	      	non-compiled	[CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context	5	None	replace
22	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  valueOf(realPart,  imaginaryPart.doubleValue());  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  valueOf(realPart,  imaginaryPart.doubleValue());	      	non-compiled	[CE]  double  cannot  be  dereferenced	5	None	replace
23	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.doubleValue();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.doubleValue();  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart.doubleValue();	      RealPart    imaginaryPart    =    realPart.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
24	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  nthRootOfAbs.doubleValue();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  nthRootOfAbs.doubleValue();  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  nthRootOfAbs.doubleValue();	      RealPart    imaginaryPart    =    realPart.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
25	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  this.imaginaryPart.doubleValue();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  this.imaginaryPart.doubleValue();  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  this.imaginaryPart.doubleValue();	      RealPart    imaginaryPart    =    realPart.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
26	[BUG]  [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  missing  return  statement  [FE]        AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	      if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  missing  return  statement	15	None	replace
27	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  missing  return  statement  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	      if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  missing  return  statement	15	None	replace
28	[BUG]  [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  cannot  find  symbol  Divisor  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	      if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  cannot  find  symbol  Divisor	15	None	replace
29	[BUG]  [BUGGY]  if(Divisor.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  cannot  find  symbol  denominator  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  if(Divisor.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	      if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  cannot  find  symbol  denominator	15	None	replace
30	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  divisor);  [CE]  cannot  find  symbol  divisor  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  divisor);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  divisor);	  return    new    Complex(realPart,    imaginaryPart,    isInfinite);    	non-compiled	[CE]  cannot  find  symbol  divisor	14	None	replace
31	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  isNaN);  [CE]  non-static  variable  isNaN  cannot  be  referenced  from  a  static  context  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  isNaN);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  isNaN);	  return    new    Complex(realPart,    imaginaryPart,    isInfinite);    	non-compiled	[CE]  non-static  variable  isNaN  cannot  be  referenced  from  a  static  context	14	None	replace
32	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  Denominator.isNaN(imaginaryPart));  [CE]  cannot  find  symbol  Denominator  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  Denominator.isNaN(imaginaryPart));  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  Denominator.isNaN(imaginaryPart));	  return    new    Complex(realPart,    imaginaryPart,    isInfinite);    	non-compiled	[CE]  cannot  find  symbol  Denominator	14	None	replace
33	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart);  new  Complex(imaginaryPart,  imaginaryPart);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart);  new  Complex(imaginaryPart,  imaginaryPart);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(imaginaryPart,    imaginaryPart);    new  Complex(imaginaryPart,  imaginaryPart);	  	non-compiled	[CE]  unreachable  statement	20	None	add
34	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart);  Complex  imaginaryPart  =  new  Complex(imaginaryPart,  imaginaryPart);  [CE]  variable  imaginaryPart  is  already  defined  in  method  valueOf(double,double)  [FE]      AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart);  Complex  imaginaryPart  =  new  Complex(imaginaryPart,  imaginaryPart);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(imaginaryPart,    imaginaryPart);    Complex  imaginaryPart  =  new  Complex(imaginaryPart,  imaginaryPart);	  	non-compiled	[CE]  variable  imaginaryPart  is  already  defined  in  method  valueOf(double,double)	20	None	add
35	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart);  RealPart  imaginaryPart  =  realPart.doubleValue();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart);  RealPart  imaginaryPart  =  realPart.doubleValue();  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(imaginaryPart,    imaginaryPart);    RealPart  imaginaryPart  =  realPart.doubleValue();	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
36	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart);  Complex  imaginaryPart  =  new  Complex(realPart,  imaginaryPart);  [CE]  variable  imaginaryPart  is  already  defined  in  method  valueOf(double,double)  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart);  Complex  imaginaryPart  =  new  Complex(realPart,  imaginaryPart);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(imaginaryPart,    imaginaryPart);    Complex  imaginaryPart  =  new  Complex(realPart,  imaginaryPart);	  	non-compiled	[CE]  variable  imaginaryPart  is  already  defined  in  method  valueOf(double,double)	20	None	add
37	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart);  RealPart  imaginaryPart  =  realPart.getINF();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart);  RealPart  imaginaryPart  =  realPart.getINF();  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(imaginaryPart,    imaginaryPart);    RealPart  imaginaryPart  =  realPart.getINF();	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
38	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart);  new  Complex(imaginaryPart,  realPart);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  realPart);  new  Complex(imaginaryPart,  realPart);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(imaginaryPart,    realPart);    new  Complex(imaginaryPart,  realPart);	  	non-compiled	[CE]  unreachable  statement	1	None	add
39	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart);  Complex  realPart  =  new  Complex(imaginaryPart,  realPart);  [CE]  variable  realPart  is  already  defined  in  method  valueOf(double,double)  [FE]      AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  realPart);  Complex  realPart  =  new  Complex(imaginaryPart,  realPart);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(imaginaryPart,    realPart);    Complex  realPart  =  new  Complex(imaginaryPart,  realPart);	  	non-compiled	[CE]  variable  realPart  is  already  defined  in  method  valueOf(double,double)	1	None	add
40	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart);  RealPart  realPart  =  new  Complex(imaginaryPart,  realPart);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  realPart);  RealPart  realPart  =  new  Complex(imaginaryPart,  realPart);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(imaginaryPart,    realPart);    RealPart  realPart  =  new  Complex(imaginaryPart,  realPart);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
41	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart);  Complex  realPart  =  new  Complex(realPart,  realPart);  [CE]  variable  realPart  is  already  defined  in  method  valueOf(double,double)  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  realPart);  Complex  realPart  =  new  Complex(realPart,  realPart);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(imaginaryPart,    realPart);    Complex  realPart  =  new  Complex(realPart,  realPart);	  	non-compiled	[CE]  variable  realPart  is  already  defined  in  method  valueOf(double,double)	1	None	add
42	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart);  Complex  realPart  =  new  Complex(realPart,  imaginaryPart);  [CE]  variable  realPart  is  already  defined  in  method  valueOf(double,double)  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  realPart);  Complex  realPart  =  new  Complex(realPart,  imaginaryPart);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(imaginaryPart,    realPart);    Complex  realPart  =  new  Complex(realPart,  imaginaryPart);	  	non-compiled	[CE]  variable  realPart  is  already  defined  in  method  valueOf(double,double)	1	None	add
43	[BUG]  [BUGGY]  realPart  =  new  Complex(imaginaryPart,  imaginaryPart);  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  realPart  =  new  Complex(imaginaryPart,  imaginaryPart);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	realPart  =  new  Complex(imaginaryPart,  imaginaryPart);	  return    new    Complex(imaginaryPart,    realPart);    	non-compiled	[CE]  incompatible  types	2	None	replace
44	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(realPart,  realPart);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	add	return  new  Complex(realPart,  realPart);	  return    new    Complex(imaginaryPart,    realPart);    	compilable	  [FE]  AssertionError  	2	4	replace
45	[BUG]  [BUGGY]  return  new  Complex(realPart,  realPart);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(realPart,  realPart);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  realPart);	  return    new    Complex(imaginaryPart,    realPart);    	compilable	  [FE]  AssertionError  	2	4	replace
46	[BUG]  [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	      if(isInfinite)    {    if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	16	None	replace
47	[BUG]  [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	      if(isInfinite)    {    if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	16	None	replace
48	[BUG]  [BUGGY]  Annotation.isNaN(denominator)||  Double.isNaN(denominator))  {  return  NaN;  }  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  Annotation.isNaN(denominator)||  Double.isNaN(denominator))  {  return  NaN;  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Annotation.isNaN(denominator)||  Double.isNaN(denominator))  {  return  NaN;  }	      if(isInfinite)    {    if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	16	None	replace
49	[BUG]  [BUGGY]  Annotation.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  Annotation.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Annotation.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	      if(isInfinite)    {    if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	16	None	replace
50	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  ZERO,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]        AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  ZERO,  denominator);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  ZERO,  denominator);	  return    new    Complex(realPart,    imaginaryPart,    ZERO);    	non-compiled	[CE]  cannot  find  symbol  denominator	13	None	replace
51	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  scale,  ZERO);  [CE]  cannot  find  symbol  scale  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  scale,  ZERO);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  scale,  ZERO);	  return    new    Complex(realPart,    imaginaryPart,    ZERO);    	non-compiled	[CE]  cannot  find  symbol  scale	13	None	replace
52	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  diminator,  ZERO);  [CE]  cannot  find  symbol  diminator  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  diminator,  ZERO);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  diminator,  ZERO);	  return    new    Complex(realPart,    imaginaryPart,    ZERO);    	non-compiled	[CE]  cannot  find  symbol  diminator	13	None	replace
53	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart,  denominator);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  imaginaryPart,  denominator);	  return    new    Complex(realPart,    imaginaryPart,    denominator);    	non-compiled	[CE]  cannot  find  symbol  denominator	3	None	replace
54	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  denominator);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  realPart,  denominator);	  return    new    Complex(realPart,    imaginaryPart,    denominator);    	non-compiled	[CE]  cannot  find  symbol  denominator	3	None	replace
55	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  diminator);  [CE]  cannot  find  symbol  diminator  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  diminator);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  diminator);	  return    new    Complex(realPart,    imaginaryPart,    denominator);    	non-compiled	[CE]  cannot  find  symbol  diminator	3	None	replace
56	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  null);  [CE]  no  suitable  constructor  found  for  Complex(double,double,<null>)  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  null);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  realPart,  null);	  return    new    Complex(realPart,    imaginaryPart,    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,<null>)	22	None	replace
57	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  denominator);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  null,  denominator);	  return    new    Complex(realPart,    imaginaryPart,    null);    	non-compiled	[CE]  cannot  find  symbol  denominator	22	None	replace
58	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  denominator,  null);  [CE]  cannot  find  symbol  denominator  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  denominator,  null);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  denominator,  null);	  return    new    Complex(realPart,    imaginaryPart,    null);    	non-compiled	[CE]  cannot  find  symbol  denominator	22	None	replace
59	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  divisor,  null);  [CE]  cannot  find  symbol  divisor  [FE]                AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  divisor,  null);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  divisor,  null);	  return    new    Complex(realPart,    imaginaryPart,    null);    	non-compiled	[CE]  cannot  find  symbol  divisor	22	None	replace
60	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.parseDouble(realPart);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  Double.parseDouble(realPart);  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Double.parseDouble(realPart);	      RealPart    imaginaryPart    =    Double.parseDouble(imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
61	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.parseDouble(imaginaryPart);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  realPart.parseDouble(imaginaryPart);  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.parseDouble(imaginaryPart);	      RealPart    imaginaryPart    =    Double.parseDouble(imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
62	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  double.parseDouble(imaginaryPart);  [CE]  class  expected  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  double.parseDouble(imaginaryPart);  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  double.parseDouble(imaginaryPart);	      RealPart    imaginaryPart    =    Double.parseDouble(imaginaryPart);    	non-compiled	[CE]  class  expected	6	None	replace
63	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(implicitePart);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(implicitePart);  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Double.valueOf(implicitePart);	      RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
64	[BUG]  [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }	      if(isInfinite)    {    if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	19	None	replace
65	[BUG]  [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }	      if(isInfinite)    {    if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	19	None	replace
66	[BUG]  [BUGGY]  Annotation.isNaN(denominator)||  Double.isNaN(denominator))  {  return  NaN  +  1;  }  [CE]  not  a  statement  [FE]                    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  Annotation.isNaN(denominator)||  Double.isNaN(denominator))  {  return  NaN  +  1;  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Annotation.isNaN(denominator)||  Double.isNaN(denominator))  {  return  NaN  +  1;  }	      if(isInfinite)    {    if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	19	None	replace
67	[BUG]  [BUGGY]  Annotation.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [CE]  not  a  statement  [FE]                      AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  Annotation.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Annotation.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }	      if(isInfinite)    {    if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	19	None	replace
68	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  true);  [CE]  no  suitable  constructor  found  for  Complex(double,double,boolean)  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  true);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  true);	  return    new    Complex(realPart,    imaginaryPart,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,boolean)	4	None	replace
69	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  false);  [CE]  no  suitable  constructor  found  for  Complex(double,double,boolean)  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  false);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  realPart,  false);	  return    new    Complex(realPart,    imaginaryPart,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,boolean)	4	None	replace
70	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  false,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]                AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  false,  denominator);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  false,  denominator);	  return    new    Complex(realPart,    imaginaryPart,    false);    	non-compiled	[CE]  cannot  find  symbol  denominator	4	None	replace
71	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  denominator,  false);  [CE]  cannot  find  symbol  denominator  [FE]                  AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  denominator,  false);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  denominator,  false);	  return    new    Complex(realPart,    imaginaryPart,    false);    	non-compiled	[CE]  cannot  find  symbol  denominator	4	None	replace
72	[BUG]  [BUGGY]  Neighbor.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  Neighbor.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	      if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	17	None	replace
73	[BUG]  [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	      if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	17	None	replace
74	[BUG]  [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	      if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	17	None	replace
75	[BUG]  [BUGGY]  Neighbor.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  Neighbor.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }	      if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	17	None	replace
76	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(realPart);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(realPart);  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.valueOf(Double.valueOf(realPart);	      RealPart    imaginaryPart    =    Double.valueOf(realPart);    	non-compiled	[CE]  ')'  expected	12	None	replace
77	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.POSITIVE_INFINITY);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.POSITIVE_INFINITY);  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.valueOf(Double.POSITIVE_INFINITY);	      RealPart    imaginaryPart    =    Double.valueOf(realPart);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
78	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.MAX_VALUE);  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.valueOf(Double.MAX_VALUE);	      RealPart    imaginaryPart    =    Double.valueOf(realPart);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
79	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart);  RealPart  realPart  =  realPart.doubleValue();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  realPart);  RealPart  realPart  =  realPart.doubleValue();  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(imaginaryPart,    realPart);    RealPart  realPart  =  realPart.doubleValue();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
80	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart);  RealPart  realPart  =  realPart.getINF();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  realPart);  RealPart  realPart  =  realPart.getINF();  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(imaginaryPart,    realPart);    RealPart  realPart  =  realPart.getINF();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
81	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart);  new  Complex(realPart,  realPart);  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  realPart);  new  Complex(realPart,  realPart);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(imaginaryPart,    realPart);    new  Complex(realPart,  realPart);	  	non-compiled	[CE]  unreachable  statement	1	None	add
82	[BUG]  [BUGGY]  NegativeFactory.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  NegativeFactory.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	NegativeFactory.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	      if(isInfinite)    {    if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	16	None	replace
83	[BUG]  [BUGGY]  Negative.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  Negative.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Negative.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	      if(isInfinite)    {    if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	16	None	replace
84	[BUG]  [BUGGY]  RealPart  realPart  =  imaginaryPart.doubleValue();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  realPart  =  imaginaryPart.doubleValue();  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  realPart  =  imaginaryPart.doubleValue();	      RealPart    imaginaryPart    =    realPart.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
85	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart.doubleValue());  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  imaginaryPart.doubleValue());	  return    new    Complex(imaginaryPart,    imaginaryPart);    	non-compiled	[CE]  double  cannot  be  dereferenced	21	None	replace
86	[BUG]  [BUGGY]  if(Double.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  cannot  find  symbol  denominator  [FE]        AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Double.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	      if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  cannot  find  symbol  denominator	15	None	replace
87	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  scale,  null);  [CE]  cannot  find  symbol  scale  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  scale,  null);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  scale,  null);	  return    new    Complex(realPart,    imaginaryPart,    null);    	non-compiled	[CE]  cannot  find  symbol  scale	22	None	replace
88	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  this);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  this);	  return    new    Complex(realPart,    imaginaryPart,    null);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	22	None	replace
89	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  imaginaryPart);  [CE]  no  suitable  constructor  found  for  Complex(double,double,double)  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  imaginaryPart);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  realPart,  imaginaryPart);	  return    new    Complex(imaginaryPart,    realPart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,double)	2	None	replace
90	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  RealPart.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  RealPart.MAX_VALUE);  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  RealPart.MAX_VALUE);	      RealPart    imaginaryPart    =    Double.valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
91	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  RealPart.NaN);  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  RealPart.NaN);  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  RealPart.NaN);	      RealPart    imaginaryPart    =    Double.valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
92	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  false,  realPart);  [CE]  no  suitable  constructor  found  for  Complex(double,double,boolean,double)  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  false,  realPart);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  false,  realPart);	  return    new    Complex(realPart,    imaginaryPart,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,boolean,double)	4	None	replace
93	[BUG]  [BUGGY]  return  new  Complex(valueOf(realPart,  imaginaryPart));  [CE]  no  suitable  constructor  found  for  Complex(Complex)  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(valueOf(realPart,  imaginaryPart));  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(valueOf(realPart,  imaginaryPart));	      	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(Complex)	5	None	replace
94	[BUG]  [BUGGY]  return  valueOf(realPart,  imaginaryPart,  false);  [CE]  no  suitable  method  found  for  valueOf(double,double,boolean)  [FE]                AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  valueOf(realPart,  imaginaryPart,  false);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  valueOf(realPart,  imaginaryPart,  false);	      	non-compiled	[CE]  no  suitable  method  found  for  valueOf(double,double,boolean)	5	None	replace
95	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.getInf();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  realPart.getInf();  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.getInf();	      RealPart    imaginaryPart    =    realPart.getINF();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
96	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart);  RealPart  imaginaryPart  =  realPart.evaluate(imaginaryPart);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart);  RealPart  imaginaryPart  =  realPart.evaluate(imaginaryPart);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(imaginaryPart,    imaginaryPart);    RealPart  imaginaryPart  =  realPart.evaluate(imaginaryPart);	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
97	[BUG]  [BUGGY]  NegativeFactory.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  NegativeFactory.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	NegativeFactory.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }	      if(isInfinite)    {    if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	19	None	replace
98	[BUG]  [BUGGY]  Negative.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  Negative.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Negative.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }	      if(isInfinite)    {    if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	19	None	replace
99	[BUG]  [BUGGY]  Negative.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [CE]  not  a  statement  [FE]                    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  Negative.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Negative.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }	      if(isInfinite)    {    if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	19	None	replace
100	[BUG]  [BUGGY]  NegativeFactory.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [CE]  not  a  statement  [FE]                      AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  NegativeFactory.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	NegativeFactory.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }	      if(isInfinite)    {    if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	19	None	replace
101	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  ImaginePart.valueOf(Double.valueOf(imaginaryPart));  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  ImaginePart.valueOf(Double.valueOf(imaginaryPart));  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  ImaginePart.valueOf(Double.valueOf(imaginaryPart));	      RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
102	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  valueOf);  [CE]  cannot  find  symbol  valueOf  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  valueOf);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  valueOf);	  return    new    Complex(realPart,    imaginaryPart,    isInfinite);    	non-compiled	[CE]  cannot  find  symbol  valueOf	14	None	replace
103	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  addend);  [CE]  cannot  find  symbol  addend  [FE]        AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  addend);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  addend);	  return    new    Complex(realPart,    imaginaryPart,    ZERO);    	non-compiled	[CE]  cannot  find  symbol  addend	13	None	replace
104	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  ONE);  [CE]  no  suitable  constructor  found  for  Complex(double,double,Complex)  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  ONE);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  ONE);	  return    new    Complex(realPart,    imaginaryPart,    ZERO);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,Complex)	13	None	replace
105	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  innerPart.parseDouble(imaginaryPart);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  innerPart.parseDouble(imaginaryPart);  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  innerPart.parseDouble(imaginaryPart);	      RealPart    imaginaryPart    =    Double.parseDouble(imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
106	[BUG]  [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  cannot  find  symbol  Divisor  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(realPart,  imaginaryPart);  }	      if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  cannot  find  symbol  Divisor	18	None	replace
107	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	add	if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	      if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	compilable	  [FE]  AssertionError  	17	4	replace
108	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	      if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	compilable	  [FE]  AssertionError  	17	4	replace
109	[BUG]  [BUGGY]  if(Double.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  cannot  find  symbol  denominator  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Double.isNaN(denominator)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	      if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  cannot  find  symbol  denominator	17	None	replace
110	[BUG]  [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  cannot  find  symbol  Divisor  [FE]                AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	      if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  cannot  find  symbol  Divisor	17	None	replace
111	[BUG]  [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	      if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	17	None	replace
112	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	add	if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	      if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	compilable	  [FE]  AssertionError  	17	4	replace
113	[BUG]  [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	      if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	compilable	  [FE]  AssertionError  	17	4	replace
114	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  ZERO);  [CE]  no  suitable  constructor  found  for  Complex(double,double,Complex)  [FE]        AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  realPart,  ZERO);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(imaginaryPart,  realPart,  ZERO);	  return    new    Complex(realPart,    imaginaryPart,    ZERO);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,Complex)	13	None	replace
115	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  imaginaryPart,  ONE);  [CE]  no  suitable  constructor  found  for  Complex(double,double,double,Complex)  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  imaginaryPart,  ONE);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  imaginaryPart,  ONE);	  return    new    Complex(realPart,    imaginaryPart,    ZERO);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,double,Complex)	13	None	replace
116	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.POSITIVE_INFINITY,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.POSITIVE_INFINITY,  imaginaryPart);  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.valueOf(Double.POSITIVE_INFINITY,  imaginaryPart);	      RealPart    imaginaryPart    =    Double.valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
117	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  imaginaryPart);  [CE]  no  suitable  constructor  found  for  Complex(double,double,double)  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  imaginaryPart);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  imaginaryPart);	  return    new    Complex(realPart,    imaginaryPart,    isInfinite);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,double)	14	None	replace
118	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  realPart);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  realPart);  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Complex.createInfinite(imaginaryPart,  realPart);	      RealPart    imaginaryPart    =    Complex.createInfinite(imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
119	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  Double.POSITIVE_INFINITY);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  Double.POSITIVE_INFINITY);  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  Double.POSITIVE_INFINITY);	      RealPart    imaginaryPart    =    Double.valueOf(realPart);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
120	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.NaN);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  realPart.valueOf(Double.NaN);  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  realPart.valueOf(Double.NaN);	      RealPart    imaginaryPart    =    Double.valueOf(realPart);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
121	[BUG]  [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [CE]  cannot  find  symbol  Divisor  [FE]                AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }	      if(isInfinite)    {    if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  Divisor	19	None	replace
122	[BUG]  [BUGGY]  Annotation.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  Annotation.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Annotation.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }	      if(isInfinite)    {    if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	19	None	replace
123	[BUG]  [BUGGY]  Annotation.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [CE]  not  a  statement  [FE]                    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  Annotation.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Annotation.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN  +  1;  }	      if(isInfinite)    {    if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN    +    1;    }    	non-compiled	[CE]  not  a  statement	19	None	replace
124	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart);  if(isInfinite)  {  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  realPart);  if(isInfinite)  {  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(imaginaryPart,    realPart);    if(isInfinite)  {  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
125	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart);  if(isInfinite)  {  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  realPart);  if(isInfinite)  {  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(imaginaryPart,    realPart);    if(isInfinite)  {  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
126	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart);  if(isInfinite)  {  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  realPart);  if(isInfinite)  {  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(imaginaryPart,    realPart);    if(isInfinite)  {  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
127	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  realPart);  if(isInfinite)  {  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(imaginaryPart,  realPart);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  realPart);  if(isInfinite)  {  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(imaginaryPart,  realPart);  }  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(imaginaryPart,    realPart);    if(isInfinite)  {  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  new  Complex(imaginaryPart,  realPart);  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
128	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  denominator);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  denominator);  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  denominator);	      RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
129	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  BigInteger.valueOf(imaginaryPart);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  BigInteger.valueOf(imaginaryPart);  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  BigInteger.valueOf(imaginaryPart);	      RealPart    imaginaryPart    =    Double.valueOf(imaginaryPart);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
130	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  false);  [CE]  no  suitable  constructor  found  for  Complex(double,double,<null>,boolean)  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  false);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  null,  false);	  return    new    Complex(realPart,    imaginaryPart,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,<null>,boolean)	4	None	replace
131	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  false,  true);  [CE]  no  suitable  constructor  found  for  Complex(double,double,boolean,boolean)  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  false,  true);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  false,  true);	  return    new    Complex(realPart,    imaginaryPart,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,boolean,boolean)	4	None	replace
132	[BUG]  [BUGGY]  Annotation.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  Annotation.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	Annotation.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	      if(isInfinite)    {    if(Divisor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	16	None	replace
133	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart);  if(isInfinite)  {  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart);  if(isInfinite)  {  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(imaginaryPart,    imaginaryPart);    if(isInfinite)  {  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
134	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart);  if(isInfinite)  {  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart);  if(isInfinite)  {  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(imaginaryPart,    imaginaryPart);    if(isInfinite)  {  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
135	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart);  if(imaginaryPart!=  null)  {  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart);  if(imaginaryPart!=  null)  {  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(imaginaryPart,    imaginaryPart);    if(imaginaryPart!=  null)  {  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
136	[BUG]  [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart);  if(imaginaryPart!=  null)  {  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(imaginaryPart,  imaginaryPart);  if(imaginaryPart!=  null)  {  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return    new    Complex(imaginaryPart,    imaginaryPart);    if(imaginaryPart!=  null)  {  if(Divisor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
137	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.getInFactory();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.getInFactory();  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart.getInFactory();	      RealPart    imaginaryPart    =    realPart.getINF();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
138	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.getInf();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.getInf();  [BUGGY]    return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	RealPart  imaginaryPart  =  imaginaryPart.getInf();	      RealPart    imaginaryPart    =    realPart.getINF();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
139	[BUG]  [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  ZERO);  [CE]  no  suitable  constructor  found  for  Complex(double,double,<null>,Complex)  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }    [BUGGY]  return  new  Complex(realPart,  imaginaryPart,  null,  ZERO);  [BUGGY]    }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1182	1182	4	replace	return  new  Complex(realPart,  imaginaryPart,  null,  ZERO);	  return    new    Complex(realPart,    imaginaryPart,    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  Complex(double,double,<null>,Complex)	22	None	replace
