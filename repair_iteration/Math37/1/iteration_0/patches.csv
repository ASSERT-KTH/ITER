bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(isInfinite  ||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  [CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context  [FE]    AssertionError  [CONTEXT]  public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  [BUGGY]  if(isInfinite  ||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(isInfinite  ||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {	if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  	non-compiled	[CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context	1	None	replace
2	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  [BUGGY]    [BUGGY]  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	  	if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
3	[BUG]  [BUGGY]    RealPart  imaginaryPart  =  realPart.doubleValue();  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  [BUGGY]    RealPart  imaginaryPart  =  realPart.doubleValue();  [BUGGY]  if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	    RealPart  imaginaryPart  =  realPart.doubleValue();		non-compiled	[CE]  cannot  find  symbol	2	None	add
4	[BUG]  [BUGGY]    RealPart  realPart  =(realPart  ==  null)?  null  :  realPart.doubleValue();  [CE]  cannot  find  symbol  [FE]      AssertionError  [CONTEXT]  public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  [BUGGY]    RealPart  realPart  =(realPart  ==  null)?  null  :  realPart.doubleValue();  [BUGGY]  if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	    RealPart  realPart  =(realPart  ==  null)?  null  :  realPart.doubleValue();		non-compiled	[CE]  cannot  find  symbol	2	None	add
5	[BUG]  [BUGGY]    RealPart  realPart  =  Double.valueOf(realPart,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]        AssertionError  [CONTEXT]  public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  [BUGGY]    RealPart  realPart  =  Double.valueOf(realPart,  imaginaryPart);  [BUGGY]  if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	    RealPart  realPart  =  Double.valueOf(realPart,  imaginaryPart);		non-compiled	[CE]  cannot  find  symbol	2	None	add
6	[BUG]  [BUGGY]    RealPart  realPart  =  Double.valueOf(realPart);  [CE]  cannot  find  symbol  [FE]          AssertionError  [CONTEXT]  public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  [BUGGY]    RealPart  realPart  =  Double.valueOf(realPart);  [BUGGY]  if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	    RealPart  realPart  =  Double.valueOf(realPart);		non-compiled	[CE]  cannot  find  symbol	2	None	add
7	[BUG]  [BUGGY]    RealPart  realPart  =(realPart  ==  null)?  null  :  realPart.getINF();  [CE]  cannot  find  symbol  [FE]            AssertionError  [CONTEXT]  public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  [BUGGY]    RealPart  realPart  =(realPart  ==  null)?  null  :  realPart.getINF();  [BUGGY]  if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	    RealPart  realPart  =(realPart  ==  null)?  null  :  realPart.getINF();		non-compiled	[CE]  cannot  find  symbol	2	None	add
8	[BUG]  [BUGGY]    RealPart  realPart  =  realPart.doubleValue();  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  [BUGGY]    RealPart  realPart  =  realPart.doubleValue();  [BUGGY]  if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	    RealPart  realPart  =  realPart.doubleValue();		non-compiled	[CE]  cannot  find  symbol	2	None	add
9	[BUG]  [BUGGY]    RealPart  realPart  =  imaginaryPart.doubleValue();  [CE]  cannot  find  symbol  [FE]      AssertionError  [CONTEXT]  public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  [BUGGY]    RealPart  realPart  =  imaginaryPart.doubleValue();  [BUGGY]  if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	    RealPart  realPart  =  imaginaryPart.doubleValue();		non-compiled	[CE]  cannot  find  symbol	2	None	add
10	[BUG]  [BUGGY]    RealPart  realPart  =  getDenominator().valueOf(realPart);  [CE]  cannot  find  symbol  [FE]        AssertionError  [CONTEXT]  public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  [BUGGY]    RealPart  realPart  =  getDenominator().valueOf(realPart);  [BUGGY]  if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	    RealPart  realPart  =  getDenominator().valueOf(realPart);		non-compiled	[CE]  cannot  find  symbol	2	None	add
11	[BUG]  [BUGGY]    RealPart  realPart  =  getDenominator().valueOf(realPart,  imaginaryPart);  [CE]  cannot  find  symbol  [FE]          AssertionError  [CONTEXT]  public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  [BUGGY]    RealPart  realPart  =  getDenominator().valueOf(realPart,  imaginaryPart);  [BUGGY]  if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	    RealPart  realPart  =  getDenominator().valueOf(realPart,  imaginaryPart);		non-compiled	[CE]  cannot  find  symbol	2	None	add
12	[BUG]  [BUGGY]    RealPart  realPart  =  getDenominator(realPart);  [CE]  cannot  find  symbol  [FE]            AssertionError  [CONTEXT]  public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  [BUGGY]    RealPart  realPart  =  getDenominator(realPart);  [BUGGY]  if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	    RealPart  realPart  =  getDenominator(realPart);		non-compiled	[CE]  cannot  find  symbol	2	None	add
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  [BUGGY]  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  [BUGGY]  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	add	if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {	if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  	compilable	  [FE]  AssertionError  	1	4	replace
14	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  [BUGGY]  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  [BUGGY]  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {	if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  	compilable	  [FE]  AssertionError  	1	4	replace
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	add	if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  	compilable	  [FE]  AssertionError  	1	4	replace
16	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	if  (Double.isNaN(realPart)  ||  Double.isNaN(imaginaryPart))  {  	compilable	  [FE]  AssertionError  	1	4	replace
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  [BUGGY]    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]  if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	add	    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }		compilable	  [FE]  AssertionError  	2	4	add
18	[BUG]  [BUGGY]    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  [BUGGY]    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]  if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }		compilable	  [FE]  AssertionError  	2	4	add
19	[BUG]  [BUGGY]    if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  cannot  find  symbol  Divisor  [FE]      AssertionError  [CONTEXT]  public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  [BUGGY]    if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]  if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	    if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }		non-compiled	[CE]  cannot  find  symbol  Divisor	2	None	add
20	[BUG]  [BUGGY]    if(Divisor.isInfinite(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  cannot  find  symbol  Divisor  [FE]        AssertionError  [CONTEXT]  public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  [BUGGY]    if(Divisor.isInfinite(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]  if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	    if(Divisor.isInfinite(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }		non-compiled	[CE]  cannot  find  symbol  Divisor	2	None	add
21	[BUG]  [BUGGY]    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  unreachable  statement  [FE]          AssertionError  [CONTEXT]  public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  [BUGGY]    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]  if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }		non-compiled	[CE]  unreachable  statement	2	None	add
22	[BUG]  [BUGGY]    if(Divisor.isNaN(realPart)||  Difference.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  cannot  find  symbol  Divisor  [FE]            AssertionError  [CONTEXT]  public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {  [BUGGY]    if(Divisor.isNaN(realPart)||  Difference.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]  if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	    if(Divisor.isNaN(realPart)||  Difference.isNaN(imaginaryPart))  {  return  NaN;  }		non-compiled	[CE]  cannot  find  symbol  Divisor	2	None	add
