projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java1178if(Double.isNaN(realPart)||Double.isNaN(imaginaryPart)){
projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java1178if(isInfinite||Double.isNaN(realPart)||Double.isNaN(imaginaryPart)){
projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java1178
projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java1178RealPartimaginaryPart=realPart.doubleValue();
projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java1178RealPartrealPart=(realPart==null)?null:realPart.doubleValue();
projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java1178RealPartrealPart=Double.valueOf(realPart,imaginaryPart);
projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java1178RealPartrealPart=Double.valueOf(realPart);
projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java1178RealPartrealPart=(realPart==null)?null:realPart.getINF();
projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java1178RealPartrealPart=realPart.doubleValue();
projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java1178RealPartrealPart=imaginaryPart.doubleValue();
projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java1178RealPartrealPart=getDenominator().valueOf(realPart);
projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java1178RealPartrealPart=getDenominator().valueOf(realPart,imaginaryPart);
projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java1178RealPartrealPart=getDenominator(realPart);
projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java1178if(Double.isNaN(realPart)||Double.isInfinite(imaginaryPart)){
projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java1178if(Double.isNaN(realPart)||Double.isNaN(imaginaryPart)||Double.isNaN(imaginaryPart)){
projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java1178if(Double.isNaN(realPart)||Double.isNaN(imaginaryPart)){returnNaN;}
projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java1178if(Divisor.isNaN(realPart)||Double.isNaN(imaginaryPart)){returnNaN;}
projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java1178if(Divisor.isInfinite(realPart)||Double.isNaN(imaginaryPart)){returnNaN;}
projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java1178if(Double.isNaN(realPart)||Double.isNaN(imaginaryPart)){returnNaN;}else{returnnewComplex(realPart,imaginaryPart);}
projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java1178if(Divisor.isNaN(realPart)||Difference.isNaN(imaginaryPart)){returnNaN;}
