bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  RealPart  realPart  =(realPart  ==  null)?  null  :  imaginaryPart.doubleValue();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  realPart  =(realPart  ==  null)?  null  :  imaginaryPart.doubleValue();  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =(realPart  ==  null)?  null  :  imaginaryPart.doubleValue();	      RealPart    realPart    =(realPart    ==    null)?    null    :    realPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  RealPart  realPart  =(realPart!=  null)?  null  :  imaginaryPart.doubleValue();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  realPart  =(realPart!=  null)?  null  :  imaginaryPart.doubleValue();  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =(realPart!=  null)?  null  :  imaginaryPart.doubleValue();	      RealPart    realPart    =(realPart    ==    null)?    null    :    realPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  RealPart  realPart  =  Double.valueOf(imaginaryPart);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  realPart  =  Double.valueOf(imaginaryPart);  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  Double.valueOf(imaginaryPart);	      RealPart    realPart    =    Double.valueOf(realPart);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
4	[BUG]  [BUGGY]  RealPart  realPart  =  Double.valueOf(ImaginaryPart.NaN);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  realPart  =  Double.valueOf(ImaginaryPart.NaN);  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  Double.valueOf(ImaginaryPart.NaN);	      RealPart    realPart    =    Double.valueOf(realPart);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
5	[BUG]  [BUGGY]  RealPart  realPart  =  getDenominator().valueOf(imaginaryPart,  realPart);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  realPart  =  getDenominator().valueOf(imaginaryPart,  realPart);  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  getDenominator().valueOf(imaginaryPart,  realPart);	      RealPart    realPart    =    getDenominator().valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
6	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  getDenominator().valueOf(realPart,  imaginaryPart);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  imaginaryPart  =  getDenominator().valueOf(realPart,  imaginaryPart);  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  getDenominator().valueOf(realPart,  imaginaryPart);	      RealPart    realPart    =    getDenominator().valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
7	[BUG]  [BUGGY]  RealPart  realPart  =  getDenominator().valueOf(imaginaryPart,  imaginaryPart);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  realPart  =  getDenominator().valueOf(imaginaryPart,  imaginaryPart);  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  getDenominator().valueOf(imaginaryPart,  imaginaryPart);	      RealPart    realPart    =    getDenominator().valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
8	[BUG]  [BUGGY]  RealPart  realPart  =(realPart  ==  null)?  null  :  imaginaryPart.getINF();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  realPart  =(realPart  ==  null)?  null  :  imaginaryPart.getINF();  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =(realPart  ==  null)?  null  :  imaginaryPart.getINF();	      RealPart    realPart    =(realPart    ==    null)?    null    :    realPart.getINF();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
9	[BUG]  [BUGGY]  RealPart  realPart  =(realPart  ==  null)?  null  :  imaginaryPart.getInF();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  realPart  =(realPart  ==  null)?  null  :  imaginaryPart.getInF();  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =(realPart  ==  null)?  null  :  imaginaryPart.getInF();	      RealPart    realPart    =(realPart    ==    null)?    null    :    realPart.getINF();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
10	[BUG]  [BUGGY]  RealPart  realPart  =(realPart!=  null)?  null  :  imaginaryPart.getINF();  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  realPart  =(realPart!=  null)?  null  :  imaginaryPart.getINF();  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =(realPart!=  null)?  null  :  imaginaryPart.getINF();	      RealPart    realPart    =(realPart    ==    null)?    null    :    realPart.getINF();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
11	[BUG]  [BUGGY]  Double.isNaN(imaginaryPart))  {  return  NaN;  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  Double.isNaN(imaginaryPart))  {  return  NaN;  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Double.isNaN(imaginaryPart))  {  return  NaN;	      	non-compiled	[CE]  ';'  expected	2	None	replace
12	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.getINF();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  imaginaryPart  =  realPart.getINF();  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  realPart.getINF();	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  realPart  =  realPart.doubleValue();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  realPart  =  realPart.doubleValue();  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	realPart  =  realPart.doubleValue();	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
14	[BUG]  [BUGGY]  if(Denominator.isInfinite(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(Denominator.isInfinite(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Denominator.isInfinite(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	      if(Divisor.isInfinite(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
15	[BUG]  [BUGGY]  if(isInfinite  ||  Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  [CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(isInfinite  ||  Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(isInfinite  ||  Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart))    {    	non-compiled	[CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context	14	None	replace
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(Double.isNaN(realPart)&&  Double.isInfinite(imaginaryPart))  {  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	add	if(Double.isNaN(realPart)&&  Double.isInfinite(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart))    {    	compilable	  [FE]  AssertionError  	14	4	replace
17	[BUG]  [BUGGY]  if(Double.isNaN(realPart)&&  Double.isInfinite(imaginaryPart))  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(Double.isNaN(realPart)&&  Double.isInfinite(imaginaryPart))  {  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)&&  Double.isInfinite(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart))    {    	compilable	  [FE]  AssertionError  	14	4	replace
18	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]      if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	add	        if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  	compilable	  [FE]  AssertionError  	17	4	add
19	[BUG]  [BUGGY]      if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]      if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	        if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  	compilable	  [FE]  AssertionError  	17	4	add
20	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	add	if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	compilable	  [FE]  AssertionError  	16	4	replace
21	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	compilable	  [FE]  AssertionError  	16	4	replace
22	[BUG]  [BUGGY]  if(isInfinite  ||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context  [FE]      AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(isInfinite  ||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(isInfinite  ||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context	16	None	replace
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	add	if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	compilable	  [FE]  AssertionError  	16	4	replace
24	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	compilable	  [FE]  AssertionError  	16	4	replace
25	[BUG]  [BUGGY]  RealPart  realPart  =  Double.valueOf(imaginaryPart,  realPart);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  realPart  =  Double.valueOf(imaginaryPart,  realPart);  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  Double.valueOf(imaginaryPart,  realPart);	      RealPart    realPart    =    Double.valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
26	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(realPart,  imaginaryPart);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(realPart,  imaginaryPart);  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  Double.valueOf(realPart,  imaginaryPart);	      RealPart    realPart    =    Double.valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  RealPart  realPart  =  imaginaryPart.valueOf(Double.valueOf(realPart,  imaginaryPart);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  realPart  =  imaginaryPart.valueOf(Double.valueOf(realPart,  imaginaryPart);  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  imaginaryPart.valueOf(Double.valueOf(realPart,  imaginaryPart);	      RealPart    realPart    =    Double.valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  ')'  expected	5	None	replace
28	[BUG]  [BUGGY]  Neighbor.isNaN(realPart)||  Neighbor.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  Neighbor.isNaN(realPart)||  Neighbor.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Neighbor.isNaN(realPart)||  Neighbor.isNaN(imaginaryPart))  {  return  NaN;  }	      if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	18	None	replace
29	[BUG]  [BUGGY]  Context.checkState(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  Context.checkState(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Context.checkState(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	      if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  ';'  expected	18	None	replace
30	[BUG]  [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	      if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	18	None	replace
31	[BUG]  [BUGGY]  Neighbor  realPart  =  Double.valueOf(realPart,  imaginaryPart);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  Neighbor  realPart  =  Double.valueOf(realPart,  imaginaryPart);  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Neighbor  realPart  =  Double.valueOf(realPart,  imaginaryPart);	      if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
32	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart))    {    if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
33	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  if(Double.isNaN(realPart)||  Double.isUnfinite(imaginaryPart))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  if(Double.isNaN(realPart)||  Double.isUnfinite(imaginaryPart))  {  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart))    {    if(Double.isNaN(realPart)||  Double.isUnfinite(imaginaryPart))  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
34	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  if(Double.isNaN(realPart)||  Double.isLong(imaginaryPart))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  if(Double.isNaN(realPart)||  Double.isLong(imaginaryPart))  {  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart))    {    if(Double.isNaN(realPart)||  Double.isLong(imaginaryPart))  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
35	[BUG]  [BUGGY]  if(isNaN  ||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  [CE]  non-static  variable  isNaN  cannot  be  referenced  from  a  static  context  [FE]        AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(isNaN  ||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(isNaN  ||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {	  if(isInfinite    ||    Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  non-static  variable  isNaN  cannot  be  referenced  from  a  static  context	1	None	replace
36	[BUG]  [BUGGY]  if(denominator  ||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  [CE]  cannot  find  symbol  denominator  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(denominator  ||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(denominator  ||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {	  if(isInfinite    ||    Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  cannot  find  symbol  denominator	1	None	replace
37	[BUG]  [BUGGY]  if(isInfinite  ||  Double.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  [CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(isInfinite  ||  Double.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(isInfinite  ||  Double.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {	  if(isInfinite    ||    Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context	1	None	replace
38	[BUG]  [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }	      if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	21	None	replace
39	[BUG]  [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Neighbor.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }	      if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	21	None	replace
40	[BUG]  [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(  imaginaryPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(  imaginaryPart,  imaginaryPart);  }  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(  imaginaryPart,  imaginaryPart);  }	      if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	21	None	replace
41	[BUG]  [BUGGY]  if(Denominator.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(Denominator.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Denominator.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	      if(Divisor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
42	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
43	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
44	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  If(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  If(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    If(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  	non-compiled	[CE]  ';'  expected	15	None	add
45	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.doubleValue();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.doubleValue();  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  imaginaryPart.doubleValue();	      RealPart    realPart    =    imaginaryPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
46	[BUG]  [BUGGY]  RealPart  realPart  =  imaginaryPart!=  null?  imaginaryPart.doubleValue()  :  Double.doubleValue();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  realPart  =  imaginaryPart!=  null?  imaginaryPart.doubleValue()  :  Double.doubleValue();  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  imaginaryPart!=  null?  imaginaryPart.doubleValue()  :  Double.doubleValue();	      RealPart    realPart    =    imaginaryPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
47	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  nthRootOfAbs.doubleValue();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  imaginaryPart  =  nthRootOfAbs.doubleValue();  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  nthRootOfAbs.doubleValue();	      RealPart    imaginaryPart    =    realPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
48	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  this.realPart.doubleValue();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  imaginaryPart  =  this.realPart.doubleValue();  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  this.realPart.doubleValue();	      RealPart    imaginaryPart    =    realPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
49	[BUG]  [BUGGY]  RealPart  realPart  =  getDenominator().valueOf(imaginaryPart);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  realPart  =  getDenominator().valueOf(imaginaryPart);  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  getDenominator().valueOf(imaginaryPart);	      RealPart    realPart    =    getDenominator().valueOf(realPart);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
50	[BUG]  [BUGGY]  if(Denominator.isNaN(realPart)||  Difference.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(Denominator.isNaN(realPart)||  Difference.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Denominator.isNaN(realPart)||  Difference.isNaN(imaginaryPart))  {  return  NaN;  }	      if(Divisor.isNaN(realPart)||    Difference.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
51	[BUG]  [BUGGY]  RealPart  realPart  =  nthRootOfAbs.doubleValue();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  realPart  =  nthRootOfAbs.doubleValue();  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  nthRootOfAbs.doubleValue();	      RealPart    realPart    =    realPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
52	[BUG]  [BUGGY]  RealPart  realPart  =  getDenominator(imaginaryPart);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  realPart  =  getDenominator(imaginaryPart);  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  getDenominator(imaginaryPart);	      RealPart    realPart    =    getDenominator(realPart);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
53	[BUG]  [BUGGY]  RealPart  realPart  =  getDenominator(realPart,  imaginaryPart);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  realPart  =  getDenominator(realPart,  imaginaryPart);  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  getDenominator(realPart,  imaginaryPart);	      RealPart    realPart    =    getDenominator(realPart);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
54	[BUG]  [BUGGY]  Negative.isNaN(realPart)||  Negative.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  Negative.isNaN(realPart)||  Negative.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Negative.isNaN(realPart)||  Negative.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }	      if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	21	None	replace
55	[BUG]  [BUGGY]  Negative.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  Negative.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Negative.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }	      if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	21	None	replace
56	[BUG]  [BUGGY]      if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  If(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]      if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  If(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	        if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    If(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  	non-compiled	[CE]  ';'  expected	17	None	add
57	[BUG]  [BUGGY]  RealPart  realPart  =  Complex.valueOf(realPart);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  realPart  =  Complex.valueOf(realPart);  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  Complex.valueOf(realPart);	      RealPart    realPart    =    Double.valueOf(realPart);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
58	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  if(Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  if(Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart))    {    if(Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
59	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  If(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  If(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart))    {    If(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {	  	non-compiled	[CE]  ';'  expected	13	None	add
60	[BUG]  [BUGGY]  RealPart  realPart  =  this.realPart.doubleValue();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  realPart  =  this.realPart.doubleValue();  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  this.realPart.doubleValue();	      RealPart    realPart    =    realPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
61	[BUG]  [BUGGY]  if(Denominator.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [CE]  cannot  find  symbol  Denominator  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(Denominator.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Denominator.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  cannot  find  symbol  Denominator	16	None	replace
62	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  if(Double.isNaN(realPart)||  Double.isNaN(ImaginaryPart)||  Double.isNaN(imaginaryPart))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  if(Double.isNaN(realPart)||  Double.isNaN(ImaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    if(Double.isNaN(realPart)||  Double.isNaN(ImaginaryPart)||  Double.isNaN(imaginaryPart))  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
63	[BUG]  [BUGGY]  RealPart  realPart  =  imaginaryPart!=  null?  imaginaryPart.doubleValue()  :  Double.NaN;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  realPart  =  imaginaryPart!=  null?  imaginaryPart.doubleValue()  :  Double.NaN;  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  imaginaryPart!=  null?  imaginaryPart.doubleValue()  :  Double.NaN;	      RealPart    realPart    =    imaginaryPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
64	[BUG]  [BUGGY]  RealPart  realPart  =  imaginaryPart.valueOf(Double.POSITIVE_INFINITY,  realPart);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  realPart  =  imaginaryPart.valueOf(Double.POSITIVE_INFINITY,  realPart);  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  imaginaryPart.valueOf(Double.POSITIVE_INFINITY,  realPart);	      RealPart    realPart    =    Double.valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
65	[BUG]  [BUGGY]  Negative.isNaN(realPart)||  Negative.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  Negative.isNaN(realPart)||  Negative.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Negative.isNaN(realPart)||  Negative.isNaN(imaginaryPart))  {  return  NaN;  }	      if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	18	None	replace
66	[BUG]  [BUGGY]  Fragment.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  Fragment.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Fragment.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	      if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	18	None	replace
67	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart!=  null?  imaginaryPart.doubleValue()  :  realPart.doubleValue();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart!=  null?  imaginaryPart.doubleValue()  :  realPart.doubleValue();  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  imaginaryPart!=  null?  imaginaryPart.doubleValue()  :  realPart.doubleValue();	      RealPart    imaginaryPart    =    realPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
68	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart!=  null?  imaginaryPart.doubleValue()  :  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart!=  null?  imaginaryPart.doubleValue()  :  Double.POSITIVE_INFINITY;  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  imaginaryPart!=  null?  imaginaryPart.doubleValue()  :  Double.POSITIVE_INFINITY;	      RealPart    imaginaryPart    =    realPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
69	[BUG]  [BUGGY]  RealPart  realPart  =(realPart  ==  null)?  null  :  imaginaryPart.getInf();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  realPart  =(realPart  ==  null)?  null  :  imaginaryPart.getInf();  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =(realPart  ==  null)?  null  :  imaginaryPart.getInf();	      RealPart    realPart    =(realPart    ==    null)?    null    :    realPart.getINF();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
70	[BUG]  [BUGGY]  RealPart  realPart  =  getDenominator(ImaginaryPart.NaN);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  realPart  =  getDenominator(ImaginaryPart.NaN);  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  getDenominator(ImaginaryPart.NaN);	      RealPart    realPart    =    getDenominator(realPart);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
71	[BUG]  [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Neighbor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }	      if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	21	None	replace
72	[BUG]  [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Neighbor.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(imaginaryPart,  imaginaryPart);  }	      if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	21	None	replace
73	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	add	if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	compilable	  [FE]  AssertionError  	16	4	replace
74	[BUG]  [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	compilable	  [FE]  AssertionError  	16	4	replace
75	[BUG]  [BUGGY]  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart);  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart);	      	non-compiled	[CE]  not  a  statement	2	None	replace
76	[BUG]  [BUGGY]  double  nthPhi  =  Math.abs(imaginaryPart.doubleValue());  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  double  nthPhi  =  Math.abs(imaginaryPart.doubleValue());  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	double  nthPhi  =  Math.abs(imaginaryPart.doubleValue());	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
77	[BUG]  [BUGGY]  if(isInfinite  ||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context  [FE]        AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(isInfinite  ||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(isInfinite  ||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  if(isInfinite    ||    Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context	1	None	replace
78	[BUG]  [BUGGY]  if(isInfinite  ||  Double.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  [CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context  [FE]          AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  if(isInfinite  ||  Double.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  [BUGGY]    Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(isInfinite  ||  Double.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {	  if(isInfinite    ||    Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context	1	None	replace
79	[BUG]  [BUGGY]  RealPart  realPart  =  Double.valueOf(imaginaryPart,  imaginaryPart);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  realPart  =  Double.valueOf(imaginaryPart,  imaginaryPart);  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  Double.valueOf(imaginaryPart,  imaginaryPart);	      RealPart    realPart    =    Double.valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
80	[BUG]  [BUGGY]  RealPart  realPart  =  Double.valueOf(imaginaryPart,  Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  realPart  =  Double.valueOf(imaginaryPart,  Double.POSITIVE_INFINITY);  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  Double.valueOf(imaginaryPart,  Double.POSITIVE_INFINITY);	      RealPart    realPart    =    Double.valueOf(realPart);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
81	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]      if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	add	        if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  	compilable	  [FE]  AssertionError  	17	4	add
82	[BUG]  [BUGGY]      if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]      if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	        if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  	compilable	  [FE]  AssertionError  	17	4	add
83	[BUG]  [BUGGY]  MutableValue.isNaN(realPart)||  MutableValue.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  MutableValue.isNaN(realPart)||  MutableValue.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	MutableValue.isNaN(realPart)||  MutableValue.isNaN(imaginaryPart))  {  return  NaN;  }	      if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	18	None	replace
84	[BUG]  [BUGGY]  RealPart  realPart  =  getDenominator().valueOf(ImaginaryPart.NaN);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {    [BUGGY]  RealPart  realPart  =  getDenominator().valueOf(ImaginaryPart.NaN);  [BUGGY]    if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  getDenominator().valueOf(ImaginaryPart.NaN);	      RealPart    realPart    =    getDenominator().valueOf(realPart);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
