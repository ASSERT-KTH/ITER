bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Negative.isNaN(realPart)&&  Negative.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Negative.isNaN(realPart)&&  Negative.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Negative.isNaN(realPart)&&  Negative.isNaN(imaginaryPart))  {  return  NaN;  }	  Negative.isNaN(realPart)||    Negative.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	65	None	replace
2	[BUG]  [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  [CE]  cannot  find  symbol  Divisor  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {	  if(isNaN    ||    Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  cannot  find  symbol  Divisor	35	None	replace
3	[BUG]  [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [CE]  cannot  find  symbol  Divisor  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Divisor.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  cannot  find  symbol  Divisor	42	None	replace
4	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isUnfinite(imaginaryPart))  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(realPart)||  Double.isUnfinite(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)||  Double.isUnfinite(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart))    {    if(Double.isNaN(realPart)||    Double.isUnfinite(imaginaryPart))    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
5	[BUG]  [BUGGY]  if(isInfinite  ||  Double.isNaN(realPart)||  Double.isUnfinite(imaginaryPart))  {  [CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(isInfinite  ||  Double.isNaN(realPart)||  Double.isUnfinite(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(isInfinite  ||  Double.isNaN(realPart)||  Double.isUnfinite(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart))    {    if(Double.isNaN(realPart)||    Double.isUnfinite(imaginaryPart))    {    	non-compiled	[CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context	33	None	replace
6	[BUG]  [BUGGY]  RealPart  realPart  =  getDenominator().valueOf(realPart,  imaginaryPart)+  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  getDenominator().valueOf(realPart,  imaginaryPart)+  1;  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  getDenominator().valueOf(realPart,  imaginaryPart)+  1;	  RealPart    realPart    =    getDenominator().valueOf(imaginaryPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
7	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  this.imaginaryPart.doubleValue();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  imaginaryPart  =  this.imaginaryPart.doubleValue();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  this.imaginaryPart.doubleValue();	  RealPart    imaginaryPart    =    imaginaryPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
8	[BUG]  [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(ImaginaryPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(ImaginaryPart,  imaginaryPart);  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(ImaginaryPart,  imaginaryPart);  }	  Neighbor.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	72	None	replace
9	[BUG]  [BUGGY]  if(isNaN  ||  Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  [CE]  non-static  variable  isNaN  cannot  be  referenced  from  a  static  context  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(isNaN  ||  Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(isNaN  ||  Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {	  if(isInfinite    ||    Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart))    {    	non-compiled	[CE]  non-static  variable  isNaN  cannot  be  referenced  from  a  static  context	15	None	replace
10	[BUG]  [BUGGY]  if(denominator  ||  Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  [CE]  cannot  find  symbol  denominator  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(denominator  ||  Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(denominator  ||  Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {	  if(isInfinite    ||    Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart))    {    	non-compiled	[CE]  cannot  find  symbol  denominator	15	None	replace
11	[BUG]  [BUGGY]  NegativeDenominator.isNaN(realPart)||  Difference.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  NegativeDenominator.isNaN(realPart)||  Difference.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	NegativeDenominator.isNaN(realPart)||  Difference.isNaN(imaginaryPart))  {  return  NaN;  }	  if(Denominator.isNaN(realPart)||    Difference.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	50	None	replace
12	[BUG]  [BUGGY]  Neighbor.isNaN(realPart)||  Difference.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Neighbor.isNaN(realPart)||  Difference.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Neighbor.isNaN(realPart)||  Difference.isNaN(imaginaryPart))  {  return  NaN;  }	  if(Denominator.isNaN(realPart)||    Difference.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	50	None	replace
13	[BUG]  [BUGGY]  Negative.isNaN(realPart)||  Difference.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Negative.isNaN(realPart)||  Difference.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Negative.isNaN(realPart)||  Difference.isNaN(imaginaryPart))  {  return  NaN;  }	  if(Denominator.isNaN(realPart)||    Difference.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	50	None	replace
14	[BUG]  [BUGGY]  NegativeToken.isNaN(realPart)||  Difference.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  NegativeToken.isNaN(realPart)||  Difference.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	NegativeToken.isNaN(realPart)||  Difference.isNaN(imaginaryPart))  {  return  NaN;  }	  if(Denominator.isNaN(realPart)||    Difference.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	50	None	replace
15	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isInfinite(imaginaryPart))    {    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
16	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isInfinite(imaginaryPart))    {    if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
17	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isLong(imaginaryPart))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isLong(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isInfinite(imaginaryPart))    {    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isLong(imaginaryPart))  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
18	[BUG]  [BUGGY]  RealPart  realPart  =  Double.valueOf(realPart,  Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  Double.valueOf(realPart,  Double.POSITIVE_INFINITY);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  Double.valueOf(realPart,  Double.POSITIVE_INFINITY);	  RealPart    realPart    =    Double.valueOf(imaginaryPart,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
19	[BUG]  [BUGGY]  RealPart  realPart  =  Double.valueOf(realPart,  double.POSITIVE_INFINITY);  [CE]  class  expected  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  Double.valueOf(realPart,  double.POSITIVE_INFINITY);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  Double.valueOf(realPart,  double.POSITIVE_INFINITY);	  RealPart    realPart    =    Double.valueOf(imaginaryPart,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  class  expected	80	None	replace
20	[BUG]  [BUGGY]  Context.checkState(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  return  NaN;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Context.checkState(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Context.checkState(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  return  NaN;  }	  Context.checkState(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  ';'  expected	29	None	replace
21	[BUG]  [BUGGY]  Context.checkState(Double.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN;  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Context.checkState(Double.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Context.checkState(Double.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN;  }	  Context.checkState(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  ';'  expected	29	None	replace
22	[BUG]  [BUGGY]  RealPart  realPart  =  imaginaryPart  ==  null?  imaginaryPart.doubleValue()  :  Double.NaN;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  imaginaryPart  ==  null?  imaginaryPart.doubleValue()  :  Double.NaN;  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  imaginaryPart  ==  null?  imaginaryPart.doubleValue()  :  Double.NaN;	  RealPart    realPart    =    imaginaryPart!=    null?    imaginaryPart.doubleValue()    :    Double.NaN;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
23	[BUG]  [BUGGY]  RealPart  realPart  =  Complex.valueOf(realPart,  imaginaryPart);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  Complex.valueOf(realPart,  imaginaryPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  Complex.valueOf(realPart,  imaginaryPart);	  RealPart    realPart    =    Complex.valueOf(realPart);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
24	[BUG]  [BUGGY]  RealPart  realPart  =  Complex.valueOf(imaginaryPart);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  Complex.valueOf(imaginaryPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  Complex.valueOf(imaginaryPart);	  RealPart    realPart    =    Complex.valueOf(realPart);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
25	[BUG]  [BUGGY]  RealPart  realPart  =  Complex.valueOf(imaginaryPart,  imaginaryPart);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  Complex.valueOf(imaginaryPart,  imaginaryPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  Complex.valueOf(imaginaryPart,  imaginaryPart);	  RealPart    realPart    =    Complex.valueOf(realPart);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
26	[BUG]  [BUGGY]  double  nthPhi  =  Math.abs(imaginaryPart.doubleValue()  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  double  nthPhi  =  Math.abs(imaginaryPart.doubleValue()  +  1);  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	double  nthPhi  =  Math.abs(imaginaryPart.doubleValue()  +  1);	  double    nthPhi    =    Math.abs(imaginaryPart.doubleValue());    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
27	[BUG]  [BUGGY]  double  nthPhi  =  Math.abs(realPart.doubleValue());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  double  nthPhi  =  Math.abs(realPart.doubleValue());  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	double  nthPhi  =  Math.abs(realPart.doubleValue());	  double    nthPhi    =    Math.abs(imaginaryPart.doubleValue());    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
28	[BUG]  [BUGGY]  double  nthPhi  =  Math.abs(imaginaryPart.doubleValue()  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  double  nthPhi  =  Math.abs(imaginaryPart.doubleValue()  -  1);  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	double  nthPhi  =  Math.abs(imaginaryPart.doubleValue()  -  1);	  double    nthPhi    =    Math.abs(imaginaryPart.doubleValue());    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
29	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  this.realPart.doubleValue()  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  imaginaryPart  =  this.realPart.doubleValue()  +  1;  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  this.realPart.doubleValue()  +  1;	  RealPart    imaginaryPart    =    this.realPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
30	[BUG]  [BUGGY]  if(isNaN  ||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [CE]  non-static  variable  isNaN  cannot  be  referenced  from  a  static  context  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(isNaN  ||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(isNaN  ||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  if(isInfinite    ||    Double.isNaN(imaginaryPart)||    Double.isNaN(realPart))    {    	non-compiled	[CE]  non-static  variable  isNaN  cannot  be  referenced  from  a  static  context	37	None	replace
31	[BUG]  [BUGGY]  Double.isNaN(realPart))  {  return  NaN;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Double.isNaN(realPart))  {  return  NaN;  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Double.isNaN(realPart))  {  return  NaN;	  Double.isNaN(imaginaryPart))    {    return    NaN;    	non-compiled	[CE]  ';'  expected	11	None	replace
32	[BUG]  [BUGGY]  RealPart.isNaN(imaginaryPart))  {  return  NaN;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart.isNaN(imaginaryPart))  {  return  NaN;  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart.isNaN(imaginaryPart))  {  return  NaN;	  Double.isNaN(imaginaryPart))    {    return    NaN;    	non-compiled	[CE]  ';'  expected	11	None	replace
33	[BUG]  [BUGGY]  Double.isNaN(realPart))  {  return  NaN;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Double.isNaN(realPart))  {  return  NaN;  }  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Double.isNaN(realPart))  {  return  NaN;  }	  Double.isNaN(imaginaryPart))    {    return    NaN;    	non-compiled	[CE]  ';'  expected	11	None	replace
34	[BUG]  [BUGGY]  Double.parseDouble(imaginaryPart))  {  return  NaN;  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Double.parseDouble(imaginaryPart))  {  return  NaN;  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Double.parseDouble(imaginaryPart))  {  return  NaN;	  Double.isNaN(imaginaryPart))    {    return    NaN;    	non-compiled	[CE]  ';'  expected	11	None	replace
35	[BUG]  [BUGGY]  if(Double.isNaN(realPart)&&  Double.isInfinite(imaginaryPart))  {  if(Double.isNaN(realPart)&&  Double.isInfinite(imaginaryPart))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(realPart)&&  Double.isInfinite(imaginaryPart))  {  if(Double.isNaN(realPart)&&  Double.isInfinite(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)&&    Double.isInfinite(imaginaryPart))    {    if(Double.isNaN(realPart)&&  Double.isInfinite(imaginaryPart))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
36	[BUG]  [BUGGY]  if(Double.isNaN(realPart)&&  Double.isInfinite(imaginaryPart))  {  If(Double.isNaN(realPart)&&  Double.isInfinite(imaginaryPart))  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(realPart)&&  Double.isInfinite(imaginaryPart))  {  If(Double.isNaN(realPart)&&  Double.isInfinite(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)&&    Double.isInfinite(imaginaryPart))    {    If(Double.isNaN(realPart)&&  Double.isInfinite(imaginaryPart))  {	  	non-compiled	[CE]  ';'  expected	16	None	add
37	[BUG]  [BUGGY]  if(Double.isNaN(realPart)&&  Double.isInfinite(imaginaryPart))  {  if(Double.isNaN(realPart)&&  Double.isUndefined(imaginaryPart))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(realPart)&&  Double.isInfinite(imaginaryPart))  {  if(Double.isNaN(realPart)&&  Double.isUndefined(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)&&    Double.isInfinite(imaginaryPart))    {    if(Double.isNaN(realPart)&&  Double.isUndefined(imaginaryPart))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
38	[BUG]  [BUGGY]  if(Double.isNaN(realPart)&&  Double.isInfinite(imaginaryPart))  {  if(Double.isNaN(realPart)&&  Double.isLong(imaginaryPart))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(realPart)&&  Double.isInfinite(imaginaryPart))  {  if(Double.isNaN(realPart)&&  Double.isLong(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)&&    Double.isInfinite(imaginaryPart))    {    if(Double.isNaN(realPart)&&  Double.isLong(imaginaryPart))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
39	[BUG]  [BUGGY]  MutableValue.isNaN(imaginaryPart)||  MutableValue.isNaN(realPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  MutableValue.isNaN(imaginaryPart)||  MutableValue.isNaN(realPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	MutableValue.isNaN(imaginaryPart)||  MutableValue.isNaN(realPart))  {  return  NaN;  }	  MutableValue.isNaN(realPart)||    MutableValue.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	83	None	replace
40	[BUG]  [BUGGY]  MutableValue.isNaN(realPart)&&  MutableValue.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  MutableValue.isNaN(realPart)&&  MutableValue.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	MutableValue.isNaN(realPart)&&  MutableValue.isNaN(imaginaryPart))  {  return  NaN;  }	  MutableValue.isNaN(realPart)||    MutableValue.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	83	None	replace
41	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  getDenominator().valueOf(imaginaryPart,  realPart);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  imaginaryPart  =  getDenominator().valueOf(imaginaryPart,  realPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  getDenominator().valueOf(imaginaryPart,  realPart);	  RealPart    imaginaryPart    =    getDenominator().valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
42	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  getDenominator().valueOf(realPart,  imaginaryPart)+  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  imaginaryPart  =  getDenominator().valueOf(realPart,  imaginaryPart)+  1;  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  getDenominator().valueOf(realPart,  imaginaryPart)+  1;	  RealPart    imaginaryPart    =    getDenominator().valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
43	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  getDenominator().valueOf(realPart,  realPart);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  imaginaryPart  =  getDenominator().valueOf(realPart,  realPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  getDenominator().valueOf(realPart,  realPart);	  RealPart    imaginaryPart    =    getDenominator().valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
44	[BUG]  [BUGGY]  RealPart  realPart  =  imaginaryPart  ==  null?  imaginaryPart.doubleValue()  :  Double.doubleValue();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  imaginaryPart  ==  null?  imaginaryPart.doubleValue()  :  Double.doubleValue();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  imaginaryPart  ==  null?  imaginaryPart.doubleValue()  :  Double.doubleValue();	  RealPart    realPart    =    imaginaryPart!=    null?    imaginaryPart.doubleValue()    :    Double.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
45	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  nthRootOfAbs.doubleValue()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  imaginaryPart  =  nthRootOfAbs.doubleValue()  +  1;  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  nthRootOfAbs.doubleValue()  +  1;	  RealPart    imaginaryPart    =    nthRootOfAbs.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
46	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isLong(imaginaryPart))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(realPart)||  Double.isLong(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)||  Double.isLong(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart))    {    if(Double.isNaN(realPart)||    Double.isLong(imaginaryPart))    {    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
47	[BUG]  [BUGGY]  if(isInfinite  ||  Double.isNaN(realPart)||  Double.isLong(imaginaryPart))  {  [CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(isInfinite  ||  Double.isNaN(realPart)||  Double.isLong(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(isInfinite  ||  Double.isNaN(realPart)||  Double.isLong(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart))    {    if(Double.isNaN(realPart)||    Double.isLong(imaginaryPart))    {    	non-compiled	[CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context	34	None	replace
48	[BUG]  [BUGGY]  RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.getINF();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.getINF();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.getINF();	  RealPart    realPart    =(realPart    ==    null)?    null    :    imaginaryPart.getINF();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
49	[BUG]  [BUGGY]  RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.getInF();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.getInF();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.getInF();	  RealPart    realPart    =(realPart    ==    null)?    null    :    imaginaryPart.getINF();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
50	[BUG]  [BUGGY]  RealPart  realPart  =  imaginaryPart.valueOf(Double.valueOf(realPart,  imaginaryPart));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  imaginaryPart.valueOf(Double.valueOf(realPart,  imaginaryPart));  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  imaginaryPart.valueOf(Double.valueOf(realPart,  imaginaryPart));	  RealPart    realPart    =    imaginaryPart.valueOf(Double.valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
51	[BUG]  [BUGGY]  RealPart  realPart  =  imaginaryPart.valueOf(Double.parseDouble(realPart,  imaginaryPart));  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  imaginaryPart.valueOf(Double.parseDouble(realPart,  imaginaryPart));  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  imaginaryPart.valueOf(Double.parseDouble(realPart,  imaginaryPart));	  RealPart    realPart    =    imaginaryPart.valueOf(Double.valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
52	[BUG]  [BUGGY]  RealPart  realPart  =  imaginaryPart.valueOf(Double.MAX_VALUE,  imaginaryPart);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  imaginaryPart.valueOf(Double.MAX_VALUE,  imaginaryPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  imaginaryPart.valueOf(Double.MAX_VALUE,  imaginaryPart);	  RealPart    realPart    =    imaginaryPart.valueOf(Double.valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
53	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
54	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  If(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  If(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    If(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  	non-compiled	[CE]  ';'  expected	20	None	add
55	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]          if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	add	                if(Double.isNaN(realPart)||        Double.isNaN(imaginaryPart))        {        return        NaN;        }        if(Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  	compilable	  [FE]  AssertionError  	81	4	add
56	[BUG]  [BUGGY]          if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]          if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	                if(Double.isNaN(realPart)||        Double.isNaN(imaginaryPart))        {        return        NaN;        }        if(Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  	compilable	  [FE]  AssertionError  	81	4	add
57	[BUG]  [BUGGY]          if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]          if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	                if(Double.isNaN(realPart)||        Double.isNaN(imaginaryPart))        {        return        NaN;        }        if(Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.	  	non-compiled	[CE]  <identifier>  expected	81	None	add
58	[BUG]  [BUGGY]          if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if  [CE]  '('  expected  [FE]        AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]          if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	                if(Double.isNaN(realPart)||        Double.isNaN(imaginaryPart))        {        return        NaN;        }        if(Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if	  	non-compiled	[CE]  '('  expected	81	None	add
59	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(ImaginaryPart)||  Double.isNaN(imaginaryPart))  {  [CE]  cannot  find  symbol  ImaginaryPart  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(ImaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)||  Double.isNaN(ImaginaryPart)||  Double.isNaN(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    if(Double.isNaN(realPart)||    Double.isNaN(ImaginaryPart)||    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  cannot  find  symbol  ImaginaryPart	62	None	replace
60	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	add	if(Double.isNaN(imaginaryPart)||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    if(Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	compilable	  [FE]  AssertionError  	43	4	replace
61	[BUG]  [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(imaginaryPart)||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    if(Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	compilable	  [FE]  AssertionError  	43	4	replace
62	[BUG]  [BUGGY]  NegativeDenominator.isInfinite(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  NegativeDenominator.isInfinite(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	NegativeDenominator.isInfinite(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  if(Denominator.isInfinite(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	14	None	replace
63	[BUG]  [BUGGY]  NeighborDenominator.isInfinite(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  NeighborDenominator.isInfinite(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	NeighborDenominator.isInfinite(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  if(Denominator.isInfinite(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	14	None	replace
64	[BUG]  [BUGGY]  Context.checkState(Denominator.isInfinite(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Context.checkState(Denominator.isInfinite(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Context.checkState(Denominator.isInfinite(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  if(Denominator.isInfinite(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
65	[BUG]  [BUGGY]  RealPart  realPart  =  getDenominator(imaginaryPart,  denominator);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  getDenominator(imaginaryPart,  denominator);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  getDenominator(imaginaryPart,  denominator);	  RealPart    realPart    =    getDenominator(imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
66	[BUG]  [BUGGY]  Neighbor.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Neighbor.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Neighbor.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  Neighbor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	30	None	replace
67	[BUG]  [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Neighbor.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  return  NaN;  }	  Neighbor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	30	None	replace
68	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  realPart);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  realPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  realPart);	  RealPart    imaginaryPart    =    Double.valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
69	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(realPart,  imaginaryPart)+  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(realPart,  imaginaryPart)+  1;  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  Double.valueOf(realPart,  imaginaryPart)+  1;	  RealPart    imaginaryPart    =    Double.valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
70	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(realPart,  imaginaryPart).doubleValue();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(realPart,  imaginaryPart).doubleValue();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  Double.valueOf(realPart,  imaginaryPart).doubleValue();	  RealPart    imaginaryPart    =    Double.valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
71	[BUG]  [BUGGY]  RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.doubleValue();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.doubleValue();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.doubleValue();	  RealPart    realPart    =(realPart!=    null)?    null    :    imaginaryPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
72	[BUG]  [BUGGY]  RealPart  realPart  =(imaginaryPart!=  null)?  null  :  imaginaryPart.doubleValue();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =(imaginaryPart!=  null)?  null  :  imaginaryPart.doubleValue();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =(imaginaryPart!=  null)?  null  :  imaginaryPart.doubleValue();	  RealPart    realPart    =(realPart!=    null)?    null    :    imaginaryPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
73	[BUG]  [BUGGY]  NegativeDenominator.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  NegativeDenominator.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	NegativeDenominator.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  if(Denominator.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	41	None	replace
74	[BUG]  [BUGGY]  NegativeValue.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  NegativeValue.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	NegativeValue.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  if(Denominator.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	41	None	replace
75	[BUG]  [BUGGY]  Negative.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Negative.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Negative.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  if(Denominator.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	41	None	replace
76	[BUG]  [BUGGY]  RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.getInf();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.getInf();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.getInf();	  RealPart    realPart    =(realPart    ==    null)?    null    :    imaginaryPart.getInF();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
77	[BUG]  [BUGGY]  RealPart  realPart  =  Double.valueOf(ImaginaryPart.NaN,  imaginaryPart);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  Double.valueOf(ImaginaryPart.NaN,  imaginaryPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  Double.valueOf(ImaginaryPart.NaN,  imaginaryPart);	  RealPart    realPart    =    Double.valueOf(ImaginaryPart.NaN);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
78	[BUG]  [BUGGY]  if(Denominator.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  [CE]  cannot  find  symbol  Denominator  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Denominator.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Denominator.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {	  if(denominator    ||    Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  cannot  find  symbol  Denominator	36	None	replace
79	[BUG]  [BUGGY]  RealPart  realPart  =  getDenominator(realPart,  imaginaryPart,  denominator);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  getDenominator(realPart,  imaginaryPart,  denominator);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  getDenominator(realPart,  imaginaryPart,  denominator);	  RealPart    realPart    =    getDenominator(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
80	[BUG]  [BUGGY]  RealPart  realPart  =  getDenominator(imaginaryPart,  realPart);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  getDenominator(imaginaryPart,  realPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  getDenominator(imaginaryPart,  realPart);	  RealPart    realPart    =    getDenominator(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
81	[BUG]  [BUGGY]  RealPart  realPart  =  getDenominator(realPart,  imaginaryPart,  divisor);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  getDenominator(realPart,  imaginaryPart,  divisor);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  getDenominator(realPart,  imaginaryPart,  divisor);	  RealPart    realPart    =    getDenominator(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
82	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isLong(imaginaryPart))  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isLong(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isLong(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isInfinite(imaginaryPart))    {    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
83	[BUG]  [BUGGY]  if(Denominator.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  [CE]  cannot  find  symbol  Denominator  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Denominator.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Denominator.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {	  if(Denominator.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  cannot  find  symbol  Denominator	61	None	replace
84	[BUG]  [BUGGY]  if(Denominator.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(denominatorPart))  {  [CE]  cannot  find  symbol  Denominator  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Denominator.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(denominatorPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Denominator.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(denominatorPart))  {	  if(Denominator.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  cannot  find  symbol  Denominator	61	None	replace
85	[BUG]  [BUGGY]  if(Denominator.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(divisor))  {  [CE]  cannot  find  symbol  Denominator  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Denominator.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(divisor))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Denominator.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(divisor))  {	  if(Denominator.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  cannot  find  symbol  Denominator	61	None	replace
86	[BUG]  [BUGGY]  RealPart  realPart  =(imaginaryPart!=  null)?  null  :  imaginaryPart.getInf();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =(imaginaryPart!=  null)?  null  :  imaginaryPart.getInf();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =(imaginaryPart!=  null)?  null  :  imaginaryPart.getInf();	  RealPart    realPart    =(realPart    ==    null)?    null    :    imaginaryPart.getInf();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
87	[BUG]  [BUGGY]  If(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  If(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	If(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart))    {    If(Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart))    {    	non-compiled	[CE]  ';'  expected	59	None	replace
88	[BUG]  [BUGGY]  If(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  If(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	If(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart))    {    If(Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart))    {    	non-compiled	[CE]  ';'  expected	59	None	replace
89	[BUG]  [BUGGY]  Petrus.isNaN(realPart)||  Petrus.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Petrus.isNaN(realPart)||  Petrus.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Petrus.isNaN(realPart)||  Petrus.isNaN(imaginaryPart))  {  return  NaN;  }	          if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    If(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	56	None	replace
90	[BUG]  [BUGGY]  if(isInfinite  ||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  [CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(isInfinite  ||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(isInfinite  ||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(denominator))  {	  if(isInfinite    ||    Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context	22	None	replace
91	[BUG]  [BUGGY]  if(isInfinite  ||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(divisor))  {  [CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(isInfinite  ||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(divisor))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(isInfinite  ||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(divisor))  {	  if(isInfinite    ||    Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context	22	None	replace
92	[BUG]  [BUGGY]  if(denominator  ||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [CE]  cannot  find  symbol  denominator  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(denominator  ||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(denominator  ||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  if(isInfinite    ||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  cannot  find  symbol  denominator	77	None	replace
93	[BUG]  [BUGGY]  if(realPart  ||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(realPart  ||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(realPart  ||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  if(isInfinite    ||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	77	None	replace
94	[BUG]  [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Neighbor.isNaN(realPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Neighbor.isNaN(imaginaryPart)||  Neighbor.isNaN(realPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Neighbor.isNaN(imaginaryPart)||  Neighbor.isNaN(realPart))  {  return  NaN;  }	  Neighbor.isNaN(realPart)||    Neighbor.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	28	None	replace
95	[BUG]  [BUGGY]  Neighbor.isNaN(realPart)&&  Neighbor.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Neighbor.isNaN(realPart)&&  Neighbor.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Neighbor.isNaN(realPart)&&  Neighbor.isNaN(imaginaryPart))  {  return  NaN;  }	  Neighbor.isNaN(realPart)||    Neighbor.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	28	None	replace
96	[BUG]  [BUGGY]  RealPart  realPart  =  getDenominator().valueOf(ImaginaryPart.NaN,  imaginaryPart);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  getDenominator().valueOf(ImaginaryPart.NaN,  imaginaryPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  getDenominator().valueOf(ImaginaryPart.NaN,  imaginaryPart);	  RealPart    realPart    =    getDenominator().valueOf(ImaginaryPart.NaN);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
97	[BUG]  [BUGGY]  RealPart  realPart  =(imaginaryPart!=  null)?  null  :  imaginaryPart.getINF();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =(imaginaryPart!=  null)?  null  :  imaginaryPart.getINF();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =(imaginaryPart!=  null)?  null  :  imaginaryPart.getINF();	  RealPart    realPart    =(realPart!=    null)?    null    :    imaginaryPart.getINF();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
98	[BUG]  [BUGGY]  RealPart  realPart  =  getDenominator().valueOf(realPart,  denominator);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  getDenominator().valueOf(realPart,  denominator);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  getDenominator().valueOf(realPart,  denominator);	  RealPart    realPart    =    getDenominator().valueOf(imaginaryPart,    realPart);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
99	[BUG]  [BUGGY]  RealPart  realPart  =  getDivisor().valueOf(realPart,  imaginaryPart);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  getDivisor().valueOf(realPart,  imaginaryPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  getDivisor().valueOf(realPart,  imaginaryPart);	  RealPart    realPart    =    getDenominator().valueOf(imaginaryPart,    realPart);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
100	[BUG]  [BUGGY]  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart);  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Double.isNaN(realPart)||  Double.isNaN(imaginaryPart);	  Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart);    	non-compiled	[CE]  not  a  statement	75	None	replace
101	[BUG]  [BUGGY]  Double.isNaN(imaginaryPart)||  Double.isNaN(realPart);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Double.isNaN(imaginaryPart)||  Double.isNaN(realPart);  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Double.isNaN(imaginaryPart)||  Double.isNaN(realPart);	  Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart);    	non-compiled	[CE]  not  a  statement	75	None	replace
102	[BUG]  [BUGGY]  Double.isNaN(realPart)&&  Double.isNaN(imaginaryPart);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Double.isNaN(realPart)&&  Double.isNaN(imaginaryPart);  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Double.isNaN(realPart)&&  Double.isNaN(imaginaryPart);	  Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart);    	non-compiled	[CE]  not  a  statement	75	None	replace
103	[BUG]  [BUGGY]  RealPart.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart);  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart);	  Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart);    	non-compiled	[CE]  not  a  statement	75	None	replace
104	[BUG]  [BUGGY]  RealPart  realPart  =  getDenominator(ImaginaryPart.NaN,  imaginaryPart);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  getDenominator(ImaginaryPart.NaN,  imaginaryPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  getDenominator(ImaginaryPart.NaN,  imaginaryPart);	  RealPart    realPart    =    getDenominator(ImaginaryPart.NaN);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
105	[BUG]  [BUGGY]  RealPart  realPart  =  getDenominator(imaginaryPart,  imaginaryPart);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  getDenominator(imaginaryPart,  imaginaryPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  getDenominator(imaginaryPart,  imaginaryPart);	  RealPart    realPart    =    getDenominator(ImaginaryPart.NaN);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
106	[BUG]  [BUGGY]  if(isInfinite  ||  Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(isInfinite  ||  Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(isInfinite  ||  Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context	21	None	replace
107	[BUG]  [BUGGY]  if(Denominator.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [CE]  cannot  find  symbol  Denominator  [FE]      AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Denominator.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Denominator.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  cannot  find  symbol  Denominator	21	None	replace
108	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart  ==  null?  imaginaryPart.doubleValue()  :  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart  ==  null?  imaginaryPart.doubleValue()  :  Double.POSITIVE_INFINITY;  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  imaginaryPart  ==  null?  imaginaryPart.doubleValue()  :  Double.POSITIVE_INFINITY;	  RealPart    imaginaryPart    =    imaginaryPart!=    null?    imaginaryPart.doubleValue()    :    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
109	[BUG]  [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
110	[BUG]  [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
111	[BUG]  [BUGGY]  Fragment.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Fragment.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Fragment.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  Fragment.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	66	None	replace
112	[BUG]  [BUGGY]  Fragment.isInfinite(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Fragment.isInfinite(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Fragment.isInfinite(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  Fragment.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	66	None	replace
113	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart!=  null?  imaginaryPart.doubleValue()  :  imaginaryPart.doubleValue();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  imaginaryPart  =  realPart!=  null?  imaginaryPart.doubleValue()  :  imaginaryPart.doubleValue();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  realPart!=  null?  imaginaryPart.doubleValue()  :  imaginaryPart.doubleValue();	  RealPart    imaginaryPart    =    imaginaryPart!=    null?    imaginaryPart.doubleValue()    :    realPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
114	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart!=  null?  realPart.doubleValue()  :  imaginaryPart.doubleValue();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart!=  null?  realPart.doubleValue()  :  imaginaryPart.doubleValue();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  imaginaryPart!=  null?  realPart.doubleValue()  :  imaginaryPart.doubleValue();	  RealPart    imaginaryPart    =    imaginaryPart!=    null?    imaginaryPart.doubleValue()    :    realPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
115	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart  ==  null?  imaginaryPart.doubleValue()  :  realPart.doubleValue();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart  ==  null?  imaginaryPart.doubleValue()  :  realPart.doubleValue();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  imaginaryPart  ==  null?  imaginaryPart.doubleValue()  :  realPart.doubleValue();	  RealPart    imaginaryPart    =    imaginaryPart!=    null?    imaginaryPart.doubleValue()    :    realPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
116	[BUG]  [BUGGY]  RealPart  realPart  =  this.realPart.doubleValue()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  this.realPart.doubleValue()  +  1;  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  this.realPart.doubleValue()  +  1;	  RealPart    realPart    =    this.realPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
117	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.getINF();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.getINF();  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  imaginaryPart.getINF();	  RealPart    imaginaryPart    =    realPart.getINF();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
118	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.getDivisor();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  imaginaryPart  =  realPart.getDivisor();  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  realPart.getDivisor();	  RealPart    imaginaryPart    =    realPart.getINF();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
119	[BUG]  [BUGGY]  If(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  If(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	If(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    If(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  ';'  expected	44	None	replace
120	[BUG]  [BUGGY]  RealPart  realPart  =  nthRootOfAbs.doubleValue()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  nthRootOfAbs.doubleValue()  +  1;  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  nthRootOfAbs.doubleValue()  +  1;	  RealPart    realPart    =    nthRootOfAbs.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
121	[BUG]  [BUGGY]  realPart  =  imaginaryPart.doubleValue();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  realPart  =  imaginaryPart.doubleValue();  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	realPart  =  imaginaryPart.doubleValue();	  realPart    =    realPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
122	[BUG]  [BUGGY]  realPart  =  nthRootOfAbs.doubleValue();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  realPart  =  nthRootOfAbs.doubleValue();  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	realPart  =  nthRootOfAbs.doubleValue();	  realPart    =    realPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
123	[BUG]  [BUGGY]  if(Denominator.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  [CE]  cannot  find  symbol  Denominator  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Denominator.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Denominator.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {	  if(Double.isNaN(realPart)&&    Double.isInfinite(imaginaryPart))    {    	non-compiled	[CE]  cannot  find  symbol  Denominator	17	None	replace
124	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	add	if(Double.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {	  if(Double.isNaN(realPart)&&    Double.isInfinite(imaginaryPart))    {    	compilable	  [FE]  AssertionError  	17	4	replace
125	[BUG]  [BUGGY]  if(Double.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {	  if(Double.isNaN(realPart)&&    Double.isInfinite(imaginaryPart))    {    	compilable	  [FE]  AssertionError  	17	4	replace
126	[BUG]  [BUGGY]  RealPart  realPart  =  realPart.valueOf(Double.POSITIVE_INFINITY,  imaginaryPart);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  realPart.valueOf(Double.POSITIVE_INFINITY,  imaginaryPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  realPart.valueOf(Double.POSITIVE_INFINITY,  imaginaryPart);	  RealPart    realPart    =    imaginaryPart.valueOf(Double.POSITIVE_INFINITY,    realPart);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
127	[BUG]  [BUGGY]  RealPart  realPart  =  this.realPart.valueOf(Double.POSITIVE_INFINITY,  imaginaryPart);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  this.realPart.valueOf(Double.POSITIVE_INFINITY,  imaginaryPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  this.realPart.valueOf(Double.POSITIVE_INFINITY,  imaginaryPart);	  RealPart    realPart    =    imaginaryPart.valueOf(Double.POSITIVE_INFINITY,    realPart);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
128	[BUG]  [BUGGY]  RealPart  realPart  =  nthRootOfAbs.valueOf(Double.POSITIVE_INFINITY,  realPart);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  nthRootOfAbs.valueOf(Double.POSITIVE_INFINITY,  realPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  nthRootOfAbs.valueOf(Double.POSITIVE_INFINITY,  realPart);	  RealPart    realPart    =    imaginaryPart.valueOf(Double.POSITIVE_INFINITY,    realPart);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
129	[BUG]  [BUGGY]  Neighbor  realPart  =  Double.valueOf(imaginaryPart,  realPart);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Neighbor  realPart  =  Double.valueOf(imaginaryPart,  realPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Neighbor  realPart  =  Double.valueOf(imaginaryPart,  realPart);	  Neighbor    realPart    =    Double.valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
130	[BUG]  [BUGGY]  Neighbor  realPart  =  Double.valueOf(realPart,  imaginaryPart)+  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Neighbor  realPart  =  Double.valueOf(realPart,  imaginaryPart)+  1;  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Neighbor  realPart  =  Double.valueOf(realPart,  imaginaryPart)+  1;	  Neighbor    realPart    =    Double.valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
131	[BUG]  [BUGGY]  Neighbor  realPart  =  Double.valueOf(realPart,  imaginaryPart).doubleValue();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Neighbor  realPart  =  Double.valueOf(realPart,  imaginaryPart).doubleValue();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Neighbor  realPart  =  Double.valueOf(realPart,  imaginaryPart).doubleValue();	  Neighbor    realPart    =    Double.valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
132	[BUG]  [BUGGY]  RealPart  realPart  =  Double.valueOf(realPart,  imaginedPart);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  Double.valueOf(realPart,  imaginedPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  Double.valueOf(realPart,  imaginedPart);	  RealPart    realPart    =    Double.valueOf(imaginaryPart,    realPart);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
133	[BUG]  [BUGGY]  if(isNaN  ||  Double.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  [CE]  non-static  variable  isNaN  cannot  be  referenced  from  a  static  context  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(isNaN  ||  Double.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(isNaN  ||  Double.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {	  if(isInfinite    ||    Double.isNaN(realPart)&&    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  non-static  variable  isNaN  cannot  be  referenced  from  a  static  context	78	None	replace
134	[BUG]  [BUGGY]  if(denominator  ||  Double.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  [CE]  cannot  find  symbol  denominator  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(denominator  ||  Double.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(denominator  ||  Double.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {	  if(isInfinite    ||    Double.isNaN(realPart)&&    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  cannot  find  symbol  denominator	78	None	replace
135	[BUG]  [BUGGY]  if(isInfinite  ||  Double.isNaN(imaginaryPart)&&  Double.isNaN(realPart))  {  [CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(isInfinite  ||  Double.isNaN(imaginaryPart)&&  Double.isNaN(realPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(isInfinite  ||  Double.isNaN(imaginaryPart)&&  Double.isNaN(realPart))  {	  if(isInfinite    ||    Double.isNaN(realPart)&&    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context	78	None	replace
136	[BUG]  [BUGGY]  RealPart  realPart  =  Double.parseDouble(realPart);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  Double.parseDouble(realPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  Double.parseDouble(realPart);	  RealPart    realPart    =    Double.valueOf(imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
137	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]          if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	add	                if(Double.isNaN(realPart)||        Double.isNaN(imaginaryPart))        {        return        NaN;        }        if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  	compilable	  [FE]  AssertionError  	18	4	add
138	[BUG]  [BUGGY]          if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]          if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	                if(Double.isNaN(realPart)||        Double.isNaN(imaginaryPart))        {        return        NaN;        }        if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  	compilable	  [FE]  AssertionError  	18	4	add
139	[BUG]  [BUGGY]          if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]          if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	                if(Double.isNaN(realPart)||        Double.isNaN(imaginaryPart))        {        return        NaN;        }        if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.	  	non-compiled	[CE]  <identifier>  expected	18	None	add
140	[BUG]  [BUGGY]          if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if  [CE]  '('  expected  [FE]        AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]          if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	                if(Double.isNaN(realPart)||        Double.isNaN(imaginaryPart))        {        return        NaN;        }        if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if	  	non-compiled	[CE]  '('  expected	18	None	add
141	[BUG]  [BUGGY]  RealPart  realPart  =  Double.valueOf(imaginaryPart,  c);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  Double.valueOf(imaginaryPart,  c);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  Double.valueOf(imaginaryPart,  c);	  RealPart    realPart    =    Double.valueOf(imaginaryPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
142	[BUG]  [BUGGY]  RealPart  realPart  =  getDenominator(imaginaryPart,  factor);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  getDenominator(imaginaryPart,  factor);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  getDenominator(imaginaryPart,  factor);	  RealPart    realPart    =    getDenominator(imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
143	[BUG]  [BUGGY]  Negative.isNaN(realPart)&&  Negative.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Negative.isNaN(realPart)&&  Negative.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Negative.isNaN(realPart)&&  Negative.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }	  Negative.isNaN(realPart)||    Negative.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	54	None	replace
144	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	add	if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    if(Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	compilable	  [FE]  AssertionError  	43	4	replace
145	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    if(Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	compilable	  [FE]  AssertionError  	43	4	replace
146	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  valueOf.doubleValue();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  imaginaryPart  =  valueOf.doubleValue();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  valueOf.doubleValue();	  RealPart    imaginaryPart    =    imaginaryPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
147	[BUG]  [BUGGY]  RealPart  realPart  =  Complex.valueOf(realPart,  Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  Complex.valueOf(realPart,  Double.POSITIVE_INFINITY);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  Complex.valueOf(realPart,  Double.POSITIVE_INFINITY);	  RealPart    realPart    =    Double.valueOf(imaginaryPart,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
148	[BUG]  [BUGGY]  RealPart  realPart  =  new  Complex(Double.valueOf(realPart,  Double.POSITIVE_INFINITY));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  new  Complex(Double.valueOf(realPart,  Double.POSITIVE_INFINITY));  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  new  Complex(Double.valueOf(realPart,  Double.POSITIVE_INFINITY));	  RealPart    realPart    =    Double.valueOf(imaginaryPart,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
149	[BUG]  [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  if(Double.isNaN(ImaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  if(Double.isNaN(ImaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    if(Double.isNaN(ImaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
150	[BUG]  [BUGGY]          if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]          if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	                if(Double.isNaN(realPart)||        Double.isNaN(imaginaryPart))        {        return        NaN;        }        if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
151	[BUG]  [BUGGY]  if(realPart  ||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(realPart  ||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(realPart  ||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {	  if(isInfinite    ||    Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	15	None	replace
152	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  realPart.getImaginaryPart();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  imaginaryPart  =  realPart.getImaginaryPart();  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  realPart.getImaginaryPart();	  RealPart    imaginaryPart    =    realPart.getINF();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
153	[BUG]  [BUGGY]  RealPart  realPart  =  Double.valueOf(imaginaryPart,  ZERO);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  Double.valueOf(imaginaryPart,  ZERO);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  Double.valueOf(imaginaryPart,  ZERO);	  RealPart    realPart    =    Double.valueOf(imaginaryPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
154	[BUG]  [BUGGY]  RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.getN();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.getN();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.getN();	  RealPart    realPart    =(realPart    ==    null)?    null    :    imaginaryPart.getInF();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
155	[BUG]  [BUGGY]  realPart  = "imaginary "  +  imaginaryPart.doubleValue();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  realPart  = "imaginary "  +  imaginaryPart.doubleValue();  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	realPart  = "imaginary "  +  imaginaryPart.doubleValue();	  realPart    =    realPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
156	[BUG]  [BUGGY]  double  imaginaryPart  =  realPart.doubleValue();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  double  imaginaryPart  =  realPart.doubleValue();  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	double  imaginaryPart  =  realPart.doubleValue();	  Double.isNaN(imaginaryPart))    {    return    NaN;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
157	[BUG]  [BUGGY]          if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]          if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	                if(Double.isNaN(realPart)||        Double.isNaN(imaginaryPart))        {        return        NaN;        }        if(Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
158	[BUG]  [BUGGY]  if(isNaN  ||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [CE]  non-static  variable  isNaN  cannot  be  referenced  from  a  static  context  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(isNaN  ||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(isNaN  ||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  if(isInfinite    ||    Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  non-static  variable  isNaN  cannot  be  referenced  from  a  static  context	22	None	replace
159	[BUG]  [BUGGY]  if(denominator  ||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [CE]  cannot  find  symbol  denominator  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(denominator  ||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(denominator  ||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  if(isInfinite    ||    Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  cannot  find  symbol  denominator	22	None	replace
160	[BUG]  [BUGGY]  MutableDenominator.isNaN(realPart)||  Difference.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  MutableDenominator.isNaN(realPart)||  Difference.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	MutableDenominator.isNaN(realPart)||  Difference.isNaN(imaginaryPart))  {  return  NaN;  }	  if(Denominator.isNaN(realPart)||    Difference.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	50	None	replace
161	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  getDenominator().valueOf(realPart,  imaginaryPart).doubleValue();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  imaginaryPart  =  getDenominator().valueOf(realPart,  imaginaryPart).doubleValue();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  getDenominator().valueOf(realPart,  imaginaryPart).doubleValue();	  RealPart    imaginaryPart    =    getDenominator().valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
162	[BUG]  [BUGGY]  RealPart  realPart  =  new  Complex(Double.valueOf(realPart),  imaginaryPart);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  new  Complex(Double.valueOf(realPart),  imaginaryPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  new  Complex(Double.valueOf(realPart),  imaginaryPart);	  RealPart    realPart    =    Double.valueOf(ImaginaryPart.NaN);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
163	[BUG]  [BUGGY]  Neighbor.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(  imaginaryPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Neighbor.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(  imaginaryPart,  imaginaryPart);  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Neighbor.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(  imaginaryPart,  imaginaryPart);  }	  Neighbor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(    imaginaryPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	40	None	replace
164	[BUG]  [BUGGY]  Double.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Double.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart);  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Double.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart);	  Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart);    	non-compiled	[CE]  not  a  statement	75	None	replace
165	[BUG]  [BUGGY]  MutableDenominator.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  MutableDenominator.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	MutableDenominator.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  if(Denominator.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	41	None	replace
166	[BUG]  [BUGGY]  RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.getDenominator();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.getDenominator();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.getDenominator();	  RealPart    realPart    =(realPart    ==    null)?    null    :    imaginaryPart.getInf();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
167	[BUG]  [BUGGY]  RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.getDivisor();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.getDivisor();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.getDivisor();	  RealPart    realPart    =(realPart    ==    null)?    null    :    imaginaryPart.getInf();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
168	[BUG]  [BUGGY]  RealPart  realPart  =  getDenominator(ImaginaryPart.ONE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  getDenominator(ImaginaryPart.ONE);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  getDenominator(ImaginaryPart.ONE);	  RealPart    realPart    =    getDenominator(ImaginaryPart.NaN);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
169	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  if(Double.isNaN(realPart)||  Double.isInfinite(ImaginaryPart)||  Double.isNaN(imaginaryPart))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  if(Double.isNaN(realPart)||  Double.isInfinite(ImaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    if(Double.isNaN(realPart)||  Double.isInfinite(ImaginaryPart)||  Double.isNaN(imaginaryPart))  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
170	[BUG]  [BUGGY]  if(isInfinite  ||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  [CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(isInfinite  ||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(isInfinite  ||  Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isInfinite(imaginaryPart))    {    	non-compiled	[CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context	24	None	replace
171	[BUG]  [BUGGY]  if(Denominator.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  [CE]  cannot  find  symbol  Denominator  [FE]      AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Denominator.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Denominator.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isInfinite(imaginaryPart))    {    	non-compiled	[CE]  cannot  find  symbol  Denominator	24	None	replace
172	[BUG]  [BUGGY]  if(Node.isNaN(realPart)||  Node.isNaN(imaginaryPart)||  Node.isNaN(imaginaryPart))  {  [CE]  cannot  find  symbol  Node  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Node.isNaN(realPart)||  Node.isNaN(imaginaryPart)||  Node.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Node.isNaN(realPart)||  Node.isNaN(imaginaryPart)||  Node.isNaN(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  cannot  find  symbol  Node	42	None	replace
173	[BUG]  [BUGGY]  Neighbor  realPart  =  new  Neighbor(imaginaryPart,  Double.valueOf(realPart);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Neighbor  realPart  =  new  Neighbor(imaginaryPart,  Double.valueOf(realPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Neighbor  realPart  =  new  Neighbor(imaginaryPart,  Double.valueOf(realPart);	  Neighbor    realPart    =    Double.valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  ')'  expected	31	None	replace
174	[BUG]  [BUGGY]  RealPart  realPart  =  new  Complex(realPart,  imaginaryPart);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  new  Complex(realPart,  imaginaryPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  new  Complex(realPart,  imaginaryPart);	  RealPart    realPart    =    Double.valueOf(imaginaryPart,    realPart);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
175	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  if(Double.isNaN(realPart)||  Double.isNaN(ImaginaryPart)||  Double.isInfinite(imaginaryPart))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  if(Double.isNaN(realPart)||  Double.isNaN(ImaginaryPart)||  Double.isInfinite(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isInfinite(imaginaryPart))    {    if(Double.isNaN(realPart)||  Double.isNaN(ImaginaryPart)||  Double.isInfinite(imaginaryPart))  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
176	[BUG]  [BUGGY]  Neighbor.isNaN(realPart,  imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Neighbor.isNaN(realPart,  imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Neighbor.isNaN(realPart,  imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  Neighbor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	30	None	replace
177	[BUG]  [BUGGY]  RealPart  realPart  =  this.expRealPart.valueOf(Double.POSITIVE_INFINITY,  realPart);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  this.expRealPart.valueOf(Double.POSITIVE_INFINITY,  realPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  this.expRealPart.valueOf(Double.POSITIVE_INFINITY,  realPart);	  RealPart    realPart    =    imaginaryPart.valueOf(Double.POSITIVE_INFINITY,    realPart);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
178	[BUG]  [BUGGY]  RealPart  realPart  =  nthPhi.doubleValue();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  nthPhi.doubleValue();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  nthPhi.doubleValue();	  RealPart    realPart    =    nthRootOfAbs.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
179	[BUG]  [BUGGY]  Negative.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Negative.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Negative.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }	  Negative.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	55	None	replace
180	[BUG]  [BUGGY]  if(Denominator.isNaN(realPart)&&  Double.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  [CE]  cannot  find  symbol  Denominator  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Denominator.isNaN(realPart)&&  Double.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Denominator.isNaN(realPart)&&  Double.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {	  if(Denominator.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  cannot  find  symbol  Denominator	61	None	replace
181	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(realPart)&&  Double.isInfinite(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	add	if(Double.isNaN(realPart)&&  Double.isInfinite(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	compilable	  [FE]  AssertionError  	21	4	replace
182	[BUG]  [BUGGY]  if(Double.isNaN(realPart)&&  Double.isInfinite(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(realPart)&&  Double.isInfinite(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)&&  Double.isInfinite(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	compilable	  [FE]  AssertionError  	21	4	replace
183	[BUG]  [BUGGY]  if(Node.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  [CE]  cannot  find  symbol  Node  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Node.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Node.isNaN(realPart)||  Double.isInfinite(imaginaryPart))  {	  if(Double.isNaN(realPart)&&    Double.isInfinite(imaginaryPart))    {    	non-compiled	[CE]  cannot  find  symbol  Node	17	None	replace
184	[BUG]  [BUGGY]  Context.checkState(Double.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Context.checkState(Double.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Context.checkState(Double.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  Context.checkState(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  ';'  expected	29	None	replace
185	[BUG]  [BUGGY]  Context.checkState(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  ==  return  NaN;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Context.checkState(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  ==  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Context.checkState(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  ==  return  NaN;  }	  Context.checkState(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
186	[BUG]  [BUGGY]  Neighbor.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Neighbor.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Neighbor.isNaN(realPart)&&  Double.isNaN(imaginaryPart))  {  return  NaN;  }  else  {  return  new  Complex(realPart,  imaginaryPart);  }	  Neighbor.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    else    {    return    new    Complex(realPart,    imaginaryPart);    }    	non-compiled	[CE]  not  a  statement	38	None	replace
187	[BUG]  [BUGGY]  RealPart  realPart  =  getDenominator(realPart,  imaginaryPart,  ZERO);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  getDenominator(realPart,  imaginaryPart,  ZERO);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  getDenominator(realPart,  imaginaryPart,  ZERO);	  RealPart    realPart    =    getDenominator(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
188	[BUG]  [BUGGY]  if(isNaN  ||  Double.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  [CE]  non-static  variable  isNaN  cannot  be  referenced  from  a  static  context  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(isNaN  ||  Double.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(isNaN  ||  Double.isNaN(imaginaryPart)||  Double.isNaN(realPart))  {	  if(isNaN    ||    Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  non-static  variable  isNaN  cannot  be  referenced  from  a  static  context	35	None	replace
189	[BUG]  [BUGGY]  RealPart  realPart  =  Complex.valueOf(realPart)+  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  Complex.valueOf(realPart)+  1;  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  Complex.valueOf(realPart)+  1;	  RealPart    realPart    =    Complex.valueOf(realPart);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
190	[BUG]  [BUGGY]  RealPart  realPart  =(imaginaryPart!=  null)?  null  :  imaginaryPart.getInF();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =(imaginaryPart!=  null)?  null  :  imaginaryPart.getInF();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =(imaginaryPart!=  null)?  null  :  imaginaryPart.getInF();	  RealPart    realPart    =(realPart!=    null)?    null    :    imaginaryPart.getINF();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
191	[BUG]  [BUGGY]  Neighbor.isNaN(realPart,  imaginaryPart)||  Neighbor.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Neighbor.isNaN(realPart,  imaginaryPart)||  Neighbor.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Neighbor.isNaN(realPart,  imaginaryPart)||  Neighbor.isNaN(imaginaryPart))  {  return  NaN;  }	  Neighbor.isNaN(realPart)||    Neighbor.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	28	None	replace
192	[BUG]  [BUGGY]  MutableValue.isNaN(realPart,  imaginaryPart)||  MutableValue.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  MutableValue.isNaN(realPart,  imaginaryPart)||  MutableValue.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	MutableValue.isNaN(realPart,  imaginaryPart)||  MutableValue.isNaN(imaginaryPart))  {  return  NaN;  }	  MutableValue.isNaN(realPart)||    MutableValue.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	83	None	replace
193	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isLong(imaginaryPart))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isLong(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isLong(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart))    {    if(Double.isNaN(realPart)||    Double.isLong(imaginaryPart))    {    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
194	[BUG]  [BUGGY]  MutableDenominator.isInfinite(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  MutableDenominator.isInfinite(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	MutableDenominator.isInfinite(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  if(Denominator.isInfinite(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	14	None	replace
195	[BUG]  [BUGGY]  Negative.isInfinite(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Negative.isInfinite(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Negative.isInfinite(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  if(Denominator.isInfinite(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	14	None	replace
196	[BUG]  [BUGGY]  Fragment.isNaN(realPart,  imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Fragment.isNaN(realPart,  imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Fragment.isNaN(realPart,  imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  Fragment.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	66	None	replace
197	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	add	if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isInfinite(imaginaryPart))    {    	compilable	  [FE]  AssertionError  	24	4	replace
198	[BUG]  [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isInfinite(imaginaryPart))    {    	compilable	  [FE]  AssertionError  	24	4	replace
199	[BUG]  [BUGGY]  RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.getInP();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.getInP();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.getInP();	  RealPart    realPart    =(realPart    ==    null)?    null    :    imaginaryPart.getInF();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
200	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	add	if(Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {	  if(Double.isNaN(realPart)&&    Double.isInfinite(imaginaryPart))    {    	compilable	  [FE]  AssertionError  	17	4	replace
201	[BUG]  [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart))  {	  if(Double.isNaN(realPart)&&    Double.isInfinite(imaginaryPart))    {    	compilable	  [FE]  AssertionError  	17	4	replace
202	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	add	if(Double.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {	  if(Double.isNaN(realPart)&&    Double.isInfinite(imaginaryPart))    {    	compilable	  [FE]  AssertionError  	17	4	replace
203	[BUG]  [BUGGY]  if(Double.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {	  if(Double.isNaN(realPart)&&    Double.isInfinite(imaginaryPart))    {    	compilable	  [FE]  AssertionError  	17	4	replace
204	[BUG]  [BUGGY]  if(isInfinite  ||  Double.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  [CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(isInfinite  ||  Double.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(isInfinite  ||  Double.isNaN(imaginaryPart)&&  Double.isNaN(imaginaryPart))  {	  if(isInfinite    ||    Double.isNaN(realPart)&&    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  non-static  variable  isInfinite  cannot  be  referenced  from  a  static  context	78	None	replace
205	[BUG]  [BUGGY]  if(Double.isNaN(realPart)&&  Double.isInfinite(imaginaryPart))  {  if(Double.isNaN(imaginaryPart)&&  Double.isInfinite(imaginaryPart))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(realPart)&&  Double.isInfinite(imaginaryPart))  {  if(Double.isNaN(imaginaryPart)&&  Double.isInfinite(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)&&    Double.isInfinite(imaginaryPart))    {    if(Double.isNaN(imaginaryPart)&&  Double.isInfinite(imaginaryPart))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
206	[BUG]  [BUGGY]  RealPart  realPart  =  getDenominator(ImaginaryPart.NaN)+  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  getDenominator(ImaginaryPart.NaN)+  1;  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  getDenominator(ImaginaryPart.NaN)+  1;	  RealPart    realPart    =    getDenominator(ImaginaryPart.NaN);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
207	[BUG]  [BUGGY]  RealPart  realPart  =  getDenominator(ImaginaryPart.NaN)-  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  getDenominator(ImaginaryPart.NaN)-  1;  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  getDenominator(ImaginaryPart.NaN)-  1;	  RealPart    realPart    =    getDenominator(ImaginaryPart.NaN);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
208	[BUG]  [BUGGY]  realPart  -=  realPart.doubleValue();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  realPart  -=  realPart.doubleValue();  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	realPart  -=  realPart.doubleValue();	  realPart    =    realPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
209	[BUG]  [BUGGY]  RealPart  realPart  =  getDenominator().valueOf(realPart,  imaginedPart);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  getDenominator().valueOf(realPart,  imaginedPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  getDenominator().valueOf(realPart,  imaginedPart);	  RealPart    realPart    =    getDenominator().valueOf(imaginaryPart,    realPart);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
210	[BUG]  [BUGGY]  RealPart  realPart  =  this.realPart.doubleValue()  -(this.imaginaryPart  *  imaginaryPart.doubleValue());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  this.realPart.doubleValue()  -(this.imaginaryPart  *  imaginaryPart.doubleValue());  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  this.realPart.doubleValue()  -(this.imaginaryPart  *  imaginaryPart.doubleValue());	  RealPart    realPart    =    this.realPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
211	[BUG]  [BUGGY]  Neighbor  realPart  =  Double.valueOf(imaginaryPart,  imaginaryPart);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Neighbor  realPart  =  Double.valueOf(imaginaryPart,  imaginaryPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Neighbor  realPart  =  Double.valueOf(imaginaryPart,  imaginaryPart);	  Neighbor    realPart    =    Double.valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
212	[BUG]  [BUGGY]  if(imaginaryPart  ==  null)  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(imaginaryPart  ==  null)  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(imaginaryPart  ==  null)  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  Double.isNaN(imaginaryPart))    {    return    NaN;    	non-compiled	[CE]  ';'  expected	11	None	replace
213	[BUG]  [BUGGY]  if(imaginaryPart!=  null)  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(imaginaryPart!=  null)  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(imaginaryPart!=  null)  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  Double.isNaN(imaginaryPart))    {    return    NaN;    	non-compiled	[CE]  ';'  expected	11	None	replace
214	[BUG]  [BUGGY]  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  if(Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(realPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  if(Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    if(Double.isNaN(imaginaryPart)||  Double.isInfinite(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
215	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  getDenominator().valueOf(imaginaryPart,  imaginaryPart);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  imaginaryPart  =  getDenominator().valueOf(imaginaryPart,  imaginaryPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  getDenominator().valueOf(imaginaryPart,  imaginaryPart);	  RealPart    realPart    =    getDenominator().valueOf(imaginaryPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
216	[BUG]  [BUGGY]  RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.getX();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.getX();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.getX();	  RealPart    realPart    =(realPart    ==    null)?    null    :    imaginaryPart.getINF();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
217	[BUG]  [BUGGY]  RealPart  realPart  =  imaginaryPart.valueOf(Double.POSITIVE_INFINITY,  imaginaryPart);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  imaginaryPart.valueOf(Double.POSITIVE_INFINITY,  imaginaryPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  imaginaryPart.valueOf(Double.POSITIVE_INFINITY,  imaginaryPart);	  RealPart    realPart    =    imaginaryPart.valueOf(Double.POSITIVE_INFINITY,    realPart);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
218	[BUG]  [BUGGY]  RealPart  realPart  =  getDenominator(realPart,  imaginaryPart,  c);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  getDenominator(realPart,  imaginaryPart,  c);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  getDenominator(realPart,  imaginaryPart,  c);	  RealPart    realPart    =    getDenominator(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
219	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart!=  null?  imaginaryPart.doubleValue()  :  imaginaryPart.doubleValue();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart!=  null?  imaginaryPart.doubleValue()  :  imaginaryPart.doubleValue();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  imaginaryPart!=  null?  imaginaryPart.doubleValue()  :  imaginaryPart.doubleValue();	  RealPart    imaginaryPart    =    imaginaryPart!=    null?    imaginaryPart.doubleValue()    :    realPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
220	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	add	if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart))    {    if(Double.isNaN(imaginaryPart)||    Double.isInfinite(imaginaryPart))    {    	compilable	  [FE]  AssertionError  	58	4	replace
221	[BUG]  [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  if(Double.isNaN(realPart)||    Double.isInfinite(imaginaryPart))    {    if(Double.isNaN(imaginaryPart)||    Double.isInfinite(imaginaryPart))    {    	compilable	  [FE]  AssertionError  	58	4	replace
222	[BUG]  [BUGGY]  if(Denominator.isNaN(realPart)&&  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [CE]  cannot  find  symbol  Denominator  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  if(Denominator.isNaN(realPart)&&  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	if(Denominator.isNaN(realPart)&&  Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {	  if(Denominator.isNaN(realPart)||    Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    	non-compiled	[CE]  cannot  find  symbol  Denominator	61	None	replace
223	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  imaginaryPart);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  imaginaryPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  Double.valueOf(imaginaryPart,  imaginaryPart);	  RealPart    realPart    =    Double.valueOf(imaginaryPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
224	[BUG]  [BUGGY]  double  nthPhi  =  Math.abs(imaginaryPart.doubleValue()  *  imaginaryPart.doubleValue());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  double  nthPhi  =  Math.abs(imaginaryPart.doubleValue()  *  imaginaryPart.doubleValue());  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	double  nthPhi  =  Math.abs(imaginaryPart.doubleValue()  *  imaginaryPart.doubleValue());	  double    nthPhi    =    Math.abs(imaginaryPart.doubleValue());    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
225	[BUG]  [BUGGY]  double  nthPhi  =  Math.abs(imaginaryPart.doubleValue()  +  2);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  double  nthPhi  =  Math.abs(imaginaryPart.doubleValue()  +  2);  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	double  nthPhi  =  Math.abs(imaginaryPart.doubleValue()  +  2);	  double    nthPhi    =    Math.abs(imaginaryPart.doubleValue());    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
226	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]          if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	add	                if(Double.isNaN(realPart)||        Double.isNaN(imaginaryPart))        {        return        NaN;        }        if(Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  	compilable	  [FE]  AssertionError  	81	4	add
227	[BUG]  [BUGGY]          if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]          if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	                if(Double.isNaN(realPart)||        Double.isNaN(imaginaryPart))        {        return        NaN;        }        if(Double.isNaN(imaginaryPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    if(Double.isNaN(imaginaryPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  if(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  	compilable	  [FE]  AssertionError  	81	4	add
228	[BUG]  [BUGGY]  RealPart  realPart  =  imaginaryPart.valueOf(Double.MIN_VALUE,  imaginaryPart);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  imaginaryPart.valueOf(Double.MIN_VALUE,  imaginaryPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  imaginaryPart.valueOf(Double.MIN_VALUE,  imaginaryPart);	  RealPart    realPart    =    imaginaryPart.valueOf(Double.valueOf(realPart,    imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
229	[BUG]  [BUGGY]  RealPart  realPart  =  Double.parseDouble(imaginaryPart);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  Double.parseDouble(imaginaryPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  Double.parseDouble(imaginaryPart);	  RealPart    realPart    =    Double.valueOf(imaginaryPart);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
230	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  this.nthRootOfAbs.doubleValue();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  imaginaryPart  =  this.nthRootOfAbs.doubleValue();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  this.nthRootOfAbs.doubleValue();	  RealPart    imaginaryPart    =    nthRootOfAbs.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
231	[BUG]  [BUGGY]  Context.checkState(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Context.checkState(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Context.checkState(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart)  ||  Double.isNaN(imaginaryPart))  {  return  NaN;  }	  Context.checkState(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  ';'  expected	29	None	replace
232	[BUG]  [BUGGY]  Context.checkState(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  <  return  NaN;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Context.checkState(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  <  return  NaN;  }  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Context.checkState(Double.isNaN(realPart)||  Double.isNaN(imaginaryPart))  <  return  NaN;  }	  Context.checkState(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
233	[BUG]  [BUGGY]  RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.getReal();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.getReal();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =(imaginaryPart  ==  null)?  null  :  imaginaryPart.getReal();	  RealPart    realPart    =(realPart    ==    null)?    null    :    imaginaryPart.getInf();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
234	[BUG]  [BUGGY]  RealPart  realPart  =  Double.valueOf(imaginaryPart,  Double.POSITIVE_INFINITY).doubleValue();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  Double.valueOf(imaginaryPart,  Double.POSITIVE_INFINITY).doubleValue();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  Double.valueOf(imaginaryPart,  Double.POSITIVE_INFINITY).doubleValue();	  RealPart    realPart    =    Double.valueOf(imaginaryPart,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
235	[BUG]  [BUGGY]  RealPart  realPart  =  Double.valueOf(imaginaryPart,  Double.POSITIVE_INFINITY)+  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  Double.valueOf(imaginaryPart,  Double.POSITIVE_INFINITY)+  1;  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  Double.valueOf(imaginaryPart,  Double.POSITIVE_INFINITY)+  1;	  RealPart    realPart    =    Double.valueOf(imaginaryPart,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
236	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.doubleValue()  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.doubleValue()  +  1;  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  imaginaryPart.doubleValue()  +  1;	  RealPart    imaginaryPart    =    imaginaryPart.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
237	[BUG]  [BUGGY]  RealPart  realPart  =  this.nthRootOfAbs.doubleValue();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  realPart  =  this.nthRootOfAbs.doubleValue();  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  realPart  =  this.nthRootOfAbs.doubleValue();	  RealPart    realPart    =    nthRootOfAbs.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
238	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.getInFactory();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.getInFactory();  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  imaginaryPart.getInFactory();	  RealPart    imaginaryPart    =    realPart.getINF();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
239	[BUG]  [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.getInf();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  RealPart  imaginaryPart  =  imaginaryPart.getInf();  [BUGGY]      Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	RealPart  imaginaryPart  =  imaginaryPart.getInf();	  RealPart    imaginaryPart    =    realPart.getINF();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
240	[BUG]  [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart))  {  return  NaN;	          if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    If(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	56	None	replace
241	[BUG]  [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart);  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      public  static  Complex  valueOf(double  realPart,  double  imaginaryPart)  {      [BUGGY]  Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart);  [BUGGY]      if  (Double.isNaN(realPart)  ||    Double.isNaN(imaginaryPart))  {  Double.isNaN(imaginaryPart))  {  return  NaN;  }  return  new  Complex(realPart,  imaginaryPart);  }  [CLASS]  Complex  [METHOD]  valueOf  [RETURN_TYPE]  Complex  double  realPart  double  imaginaryPart  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math37/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1178	1179	4	replace	Neighbor.isNaN(realPart)||  Double.isNaN(imaginaryPart);	          if(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    If(Double.isNaN(realPart)||    Double.isNaN(imaginaryPart))    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	56	None	replace
