bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  [BUGGY]    stopTime  =  System.currentTimeMillis();  [BUGGY]  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	181	181	1	add	    stopTime  =  System.currentTimeMillis();		compilable	  [FE]  AssertionFailedError  	6	1	add
2	[BUG]  [BUGGY]    stopTime  =  System.currentTimeMillis();  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  [BUGGY]    stopTime  =  System.currentTimeMillis();  [BUGGY]  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	181	181	1	replace	    stopTime  =  System.currentTimeMillis();		compilable	  [FE]  AssertionFailedError  	6	1	add
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  [BUGGY]    stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_STOPPED;  [BUGGY]  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	181	181	1	add	    stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_STOPPED;		compilable	  [FE]  AssertionFailedError  	6	1	add
4	[BUG]  [BUGGY]    stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_STOPPED;  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  [BUGGY]    stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_STOPPED;  [BUGGY]  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	181	181	1	replace	    stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_STOPPED;		compilable	  [FE]  AssertionFailedError  	6	1	add
5	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  [BUGGY]    stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  [BUGGY]  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	181	181	1	add	    stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;		compilable	  [FE]  IllegalStateException  	6	2	add
6	[BUG]  [BUGGY]    stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  [FE]  IllegalStateException  [FE]        AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  [BUGGY]    stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  [BUGGY]  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	181	181	1	replace	    stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;		compilable	  [FE]  IllegalStateException  	6	2	add
7	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  [BUGGY]    if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	181	181	1	add	    if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }		compilable	  [FE]  IllegalStateException  	6	2	add
8	[BUG]  [BUGGY]    if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [FE]  IllegalStateException  [FE]          AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  [BUGGY]    if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  [BUGGY]  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	181	181	1	replace	    if(this.runningState!=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }		compilable	  [FE]  IllegalStateException  	6	2	add
9	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  [BUGGY]    this.runningState  =  STATE_STOPPED;  [BUGGY]  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	181	181	1	add	    this.runningState  =  STATE_STOPPED;		compilable	  [FE]  IllegalStateException  	6	2	add
10	[BUG]  [BUGGY]    this.runningState  =  STATE_STOPPED;  [FE]  IllegalStateException  [FE]            AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  [BUGGY]    this.runningState  =  STATE_STOPPED;  [BUGGY]  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	181	181	1	replace	    this.runningState  =  STATE_STOPPED;		compilable	  [FE]  IllegalStateException  	6	2	add
11	[BUG]  [BUGGY]  this.splitState  =  System.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  [BUGGY]  this.splitState  =  System.currentTimeMillis();  [BUGGY]    [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	181	181	1	replace	this.splitState  =  System.currentTimeMillis();	}  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
12	[BUG]  [BUGGY]  this.startTime  =  System.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  [BUGGY]  this.startTime  =  System.currentTimeMillis();  [BUGGY]    [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	181	181	1	replace	this.startTime  =  System.currentTimeMillis();	}  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  [BUGGY]    stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SPLIT;  [BUGGY]  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	181	181	1	add	    stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SPLIT;		compilable	  [FE]  AssertionFailedError  	6	1	add
14	[BUG]  [BUGGY]    stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SPLIT;  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  [BUGGY]    stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SPLIT;  [BUGGY]  }  [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	181	181	1	replace	    stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SPLIT;		compilable	  [FE]  AssertionFailedError  	6	1	add
15	[BUG]  [BUGGY]  long  splitState  =  System.currentTimeMillis();  stopTime  =  System.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  void  suspend()  {  if(this.runningState  !=  STATE_RUNNING)  {  throw  new  IllegalStateException( "Stopwatch  must  be  running  to  suspend.   ");  }  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  [BUGGY]  long  splitState  =  System.currentTimeMillis();  stopTime  =  System.currentTimeMillis();  [BUGGY]    [CLASS]  StopWatch  [METHOD]  suspend  [RETURN_TYPE]  void  [VARIABLES]  int  STATE_RUNNING  STATE_SPLIT  STATE_STOPPED  STATE_SUSPENDED  STATE_UNSPLIT  STATE_UNSTARTED  runningState  splitState  long  startTime  stopTime  boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	181	181	1	replace	long  splitState  =  System.currentTimeMillis();  stopTime  =  System.currentTimeMillis();	}  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
