bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] stopTime = System.currentTimeMillis(); [FE] AssertionFailedError [CONTEXT] public void suspend() { if(this.runningState != STATE_RUNNING) { throw new IllegalStateException("Stopwatch must be running to suspend. "); } [BUGGY] stopTime = System.currentTimeMillis(); [BUGGY] this.runningState = STATE_SUSPENDED; } [CLASS] StopWatch [METHOD] suspend [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void suspend() { if(this.runningState != STATE_RUNNING) { throw new IllegalStateException("Stopwatch must be running to suspend. "); } [BUGGY] [BUGGY] stopTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } [CLASS] StopWatch [METHOD] suspend [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	179	179	1	add	
3	[BUG] [BUGGY] this.runningState = STATE_SUSPENDED; [FE] AssertionFailedError [CONTEXT] public void suspend() { if(this.runningState != STATE_RUNNING) { throw new IllegalStateException("Stopwatch must be running to suspend. "); } stopTime = System.currentTimeMillis(); [BUGGY] this.runningState = STATE_SUSPENDED; [BUGGY] } [CLASS] StopWatch [METHOD] suspend [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	180	180	1	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void suspend() { if(this.runningState != STATE_RUNNING) { throw new IllegalStateException("Stopwatch must be running to suspend. "); } stopTime = System.currentTimeMillis(); [BUGGY] [BUGGY] this.runningState = STATE_SUSPENDED; } [CLASS] StopWatch [METHOD] suspend [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	180	180	1	add	
5	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] public void suspend() { if(this.runningState != STATE_RUNNING) { throw new IllegalStateException("Stopwatch must be running to suspend. "); } stopTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; [BUGGY] } [BUGGY]  [CLASS] StopWatch [METHOD] suspend [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	181	181	1	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void suspend() { if(this.runningState != STATE_RUNNING) { throw new IllegalStateException("Stopwatch must be running to suspend. "); } stopTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; [BUGGY] [BUGGY] } [CLASS] StopWatch [METHOD] suspend [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.7071067811865475	181	181	1	add	
7	[BUG] [BUGGY] if(this.runningState != STATE_RUNNING) { [FE] AssertionFailedError [CONTEXT] public void suspend() { [BUGGY] if(this.runningState != STATE_RUNNING) { [BUGGY] throw new IllegalStateException("Stopwatch must be running to suspend. "); } stopTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } [CLASS] StopWatch [METHOD] suspend [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void suspend() { [BUGGY] [BUGGY] if(this.runningState != STATE_RUNNING) { throw new IllegalStateException("Stopwatch must be running to suspend. "); } stopTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } [CLASS] StopWatch [METHOD] suspend [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5773502691896258	176	176	1	add	
9	[BUG] [BUGGY] return this.stopTime - this.startTime; [FE] AssertionFailedError [CONTEXT] public long getTime() { if(this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED) { [BUGGY] return this.stopTime - this.startTime; [BUGGY] } else if(this.runningState == STATE_UNSTARTED) { return 0; } else if(this.runningState == STATE_RUNNING) { return System.currentTimeMillis() - this.startTime; } throw new RuntimeException("Illegal running state has occured. "); } [CLASS] StopWatch [METHOD] getTime [RETURN_TYPE] long  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5	210	210	1	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public long getTime() { if(this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED) { [BUGGY] [BUGGY] return this.stopTime - this.startTime; } else if(this.runningState == STATE_UNSTARTED) { return 0; } else if(this.runningState == STATE_RUNNING) { return System.currentTimeMillis() - this.startTime; } throw new RuntimeException("Illegal running state has occured. "); } [CLASS] StopWatch [METHOD] getTime [RETURN_TYPE] long  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.5	210	210	1	add	
11	[BUG] [BUGGY] if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) { [FE] AssertionFailedError [CONTEXT] public void stop() { [BUGGY] if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) { [BUGGY] throw new IllegalStateException("Stopwatch is not running. "); } stopTime = System.currentTimeMillis(); this.runningState = STATE_STOPPED; } [CLASS] StopWatch [METHOD] stop [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4472135954999579	115	115	1	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void stop() { [BUGGY] [BUGGY] if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) { throw new IllegalStateException("Stopwatch is not running. "); } stopTime = System.currentTimeMillis(); this.runningState = STATE_STOPPED; } [CLASS] StopWatch [METHOD] stop [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4472135954999579	115	115	1	add	
13	[BUG] [BUGGY] stopTime = System.currentTimeMillis(); [FE] AssertionFailedError [CONTEXT] public void stop() { if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) { throw new IllegalStateException("Stopwatch is not running. "); } [BUGGY] stopTime = System.currentTimeMillis(); [BUGGY] this.runningState = STATE_STOPPED; } [CLASS] StopWatch [METHOD] stop [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4472135954999579	118	118	1	replace	
14	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void stop() { if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) { throw new IllegalStateException("Stopwatch is not running. "); } [BUGGY] [BUGGY] stopTime = System.currentTimeMillis(); this.runningState = STATE_STOPPED; } [CLASS] StopWatch [METHOD] stop [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4472135954999579	118	118	1	add	
15	[BUG] [BUGGY] this.runningState = STATE_STOPPED; [FE] AssertionFailedError [CONTEXT] public void stop() { if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) { throw new IllegalStateException("Stopwatch is not running. "); } stopTime = System.currentTimeMillis(); [BUGGY] this.runningState = STATE_STOPPED; [BUGGY] } [CLASS] StopWatch [METHOD] stop [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4472135954999579	119	119	1	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void stop() { if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) { throw new IllegalStateException("Stopwatch is not running. "); } stopTime = System.currentTimeMillis(); [BUGGY] [BUGGY] this.runningState = STATE_STOPPED; } [CLASS] StopWatch [METHOD] stop [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4472135954999579	119	119	1	add	
17	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] public void stop() { if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) { throw new IllegalStateException("Stopwatch is not running. "); } stopTime = System.currentTimeMillis(); this.runningState = STATE_STOPPED; [BUGGY] } [BUGGY]  [CLASS] StopWatch [METHOD] stop [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4472135954999579	120	120	1	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void stop() { if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) { throw new IllegalStateException("Stopwatch is not running. "); } stopTime = System.currentTimeMillis(); this.runningState = STATE_STOPPED; [BUGGY] [BUGGY] } [CLASS] StopWatch [METHOD] stop [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4472135954999579	120	120	1	add	
19	[BUG] [BUGGY] if(this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED) { [FE] AssertionFailedError [CONTEXT] public long getTime() { [BUGGY] if(this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED) { [BUGGY] return this.stopTime - this.startTime; } else if(this.runningState == STATE_UNSTARTED) { return 0; } else if(this.runningState == STATE_RUNNING) { return System.currentTimeMillis() - this.startTime; } throw new RuntimeException("Illegal running state has occured. "); } [CLASS] StopWatch [METHOD] getTime [RETURN_TYPE] long  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4472135954999579	209	209	1	replace	
20	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public long getTime() { [BUGGY] [BUGGY] if(this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED) { return this.stopTime - this.startTime; } else if(this.runningState == STATE_UNSTARTED) { return 0; } else if(this.runningState == STATE_RUNNING) { return System.currentTimeMillis() - this.startTime; } throw new RuntimeException("Illegal running state has occured. "); } [CLASS] StopWatch [METHOD] getTime [RETURN_TYPE] long  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4472135954999579	209	209	1	add	
21	[BUG] [BUGGY] super(); [FE] AssertionFailedError [CONTEXT] public StopWatch() { [BUGGY] super(); [BUGGY] } [CLASS] StopWatch [METHOD] <init> [RETURN_TYPE] StopWatch()  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4082482904638631	85	85	1	replace	
22	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public StopWatch() { [BUGGY] [BUGGY] super(); } [CLASS] StopWatch [METHOD] <init> [RETURN_TYPE] StopWatch()  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4082482904638631	85	85	1	add	
23	[BUG] [BUGGY] private int runningState = STATE_UNSTARTED; [FE] AssertionFailedError [CONTEXT] [BUGGY] private int runningState = STATE_UNSTARTED; [BUGGY]  [CLASS] StopWatch  [VARIABLES] 	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4082482904638631	65	65	1	replace	
24	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] [BUGGY] [BUGGY] private int runningState = STATE_UNSTARTED; [CLASS] StopWatch  [VARIABLES] 	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4082482904638631	65	65	1	add	
25	[BUG] [BUGGY] private int splitState = STATE_UNSPLIT; [FE] AssertionFailedError [CONTEXT] [BUGGY] private int splitState = STATE_UNSPLIT; [BUGGY]  [CLASS] StopWatch  [VARIABLES] 	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4082482904638631	70	70	1	replace	
26	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] [BUGGY] [BUGGY] private int splitState = STATE_UNSPLIT; [CLASS] StopWatch  [VARIABLES] 	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4082482904638631	70	70	1	add	
27	[BUG] [BUGGY] private long startTime = -1; [FE] AssertionFailedError [CONTEXT] [BUGGY] private long startTime = -1; [BUGGY]  [CLASS] StopWatch  [VARIABLES] 	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4082482904638631	75	75	1	replace	
28	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] [BUGGY] [BUGGY] private long startTime = -1; [CLASS] StopWatch  [VARIABLES] 	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4082482904638631	75	75	1	add	
29	[BUG] [BUGGY] private long stopTime = -1; [FE] AssertionFailedError [CONTEXT] [BUGGY] private long stopTime = -1; [BUGGY]  [CLASS] StopWatch  [VARIABLES] 	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4082482904638631	79	79	1	replace	
30	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] [BUGGY] [BUGGY] private long stopTime = -1; [CLASS] StopWatch  [VARIABLES] 	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4082482904638631	79	79	1	add	
31	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] public StopWatch() { super(); [BUGGY] } [BUGGY]  [CLASS] StopWatch [METHOD] <init> [RETURN_TYPE] StopWatch()  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4082482904638631	86	86	1	replace	
32	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public StopWatch() { super(); [BUGGY] [BUGGY] } [CLASS] StopWatch [METHOD] <init> [RETURN_TYPE] StopWatch()  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4082482904638631	86	86	1	add	
33	[BUG] [BUGGY] if(this.runningState == STATE_STOPPED) { [FE] AssertionFailedError [CONTEXT] public void start() { [BUGGY] if(this.runningState == STATE_STOPPED) { [BUGGY] throw new IllegalStateException("Stopwatch must be reset before being restarted. "); } if(this.runningState != STATE_UNSTARTED) { throw new IllegalStateException("Stopwatch already started. "); } stopTime = -1; startTime = System.currentTimeMillis(); this.runningState = STATE_RUNNING; } [CLASS] StopWatch [METHOD] start [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4082482904638631	96	96	1	replace	
34	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void start() { [BUGGY] [BUGGY] if(this.runningState == STATE_STOPPED) { throw new IllegalStateException("Stopwatch must be reset before being restarted. "); } if(this.runningState != STATE_UNSTARTED) { throw new IllegalStateException("Stopwatch already started. "); } stopTime = -1; startTime = System.currentTimeMillis(); this.runningState = STATE_RUNNING; } [CLASS] StopWatch [METHOD] start [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4082482904638631	96	96	1	add	
35	[BUG] [BUGGY] if(this.runningState != STATE_UNSTARTED) { [FE] AssertionFailedError [CONTEXT] public void start() { if(this.runningState == STATE_STOPPED) { throw new IllegalStateException("Stopwatch must be reset before being restarted. "); } [BUGGY] if(this.runningState != STATE_UNSTARTED) { [BUGGY] throw new IllegalStateException("Stopwatch already started. "); } stopTime = -1; startTime = System.currentTimeMillis(); this.runningState = STATE_RUNNING; } [CLASS] StopWatch [METHOD] start [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4082482904638631	99	99	1	replace	
36	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void start() { if(this.runningState == STATE_STOPPED) { throw new IllegalStateException("Stopwatch must be reset before being restarted. "); } [BUGGY] [BUGGY] if(this.runningState != STATE_UNSTARTED) { throw new IllegalStateException("Stopwatch already started. "); } stopTime = -1; startTime = System.currentTimeMillis(); this.runningState = STATE_RUNNING; } [CLASS] StopWatch [METHOD] start [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4082482904638631	99	99	1	add	
37	[BUG] [BUGGY] stopTime = -1; [FE] AssertionFailedError [CONTEXT] public void start() { if(this.runningState == STATE_STOPPED) { throw new IllegalStateException("Stopwatch must be reset before being restarted. "); } if(this.runningState != STATE_UNSTARTED) { throw new IllegalStateException("Stopwatch already started. "); } [BUGGY] stopTime = -1; [BUGGY] startTime = System.currentTimeMillis(); this.runningState = STATE_RUNNING; } [CLASS] StopWatch [METHOD] start [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4082482904638631	102	102	1	replace	
38	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void start() { if(this.runningState == STATE_STOPPED) { throw new IllegalStateException("Stopwatch must be reset before being restarted. "); } if(this.runningState != STATE_UNSTARTED) { throw new IllegalStateException("Stopwatch already started. "); } [BUGGY] [BUGGY] stopTime = -1; startTime = System.currentTimeMillis(); this.runningState = STATE_RUNNING; } [CLASS] StopWatch [METHOD] start [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4082482904638631	102	102	1	add	
39	[BUG] [BUGGY] startTime = System.currentTimeMillis(); [FE] AssertionFailedError [CONTEXT] public void start() { if(this.runningState == STATE_STOPPED) { throw new IllegalStateException("Stopwatch must be reset before being restarted. "); } if(this.runningState != STATE_UNSTARTED) { throw new IllegalStateException("Stopwatch already started. "); } stopTime = -1; [BUGGY] startTime = System.currentTimeMillis(); [BUGGY] this.runningState = STATE_RUNNING; } [CLASS] StopWatch [METHOD] start [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4082482904638631	103	103	1	replace	
40	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void start() { if(this.runningState == STATE_STOPPED) { throw new IllegalStateException("Stopwatch must be reset before being restarted. "); } if(this.runningState != STATE_UNSTARTED) { throw new IllegalStateException("Stopwatch already started. "); } stopTime = -1; [BUGGY] [BUGGY] startTime = System.currentTimeMillis(); this.runningState = STATE_RUNNING; } [CLASS] StopWatch [METHOD] start [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4082482904638631	103	103	1	add	
41	[BUG] [BUGGY] this.runningState = STATE_RUNNING; [FE] AssertionFailedError [CONTEXT] public void start() { if(this.runningState == STATE_STOPPED) { throw new IllegalStateException("Stopwatch must be reset before being restarted. "); } if(this.runningState != STATE_UNSTARTED) { throw new IllegalStateException("Stopwatch already started. "); } stopTime = -1; startTime = System.currentTimeMillis(); [BUGGY] this.runningState = STATE_RUNNING; [BUGGY] } [CLASS] StopWatch [METHOD] start [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4082482904638631	104	104	1	replace	
42	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void start() { if(this.runningState == STATE_STOPPED) { throw new IllegalStateException("Stopwatch must be reset before being restarted. "); } if(this.runningState != STATE_UNSTARTED) { throw new IllegalStateException("Stopwatch already started. "); } stopTime = -1; startTime = System.currentTimeMillis(); [BUGGY] [BUGGY] this.runningState = STATE_RUNNING; } [CLASS] StopWatch [METHOD] start [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4082482904638631	104	104	1	add	
43	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] public void start() { if(this.runningState == STATE_STOPPED) { throw new IllegalStateException("Stopwatch must be reset before being restarted. "); } if(this.runningState != STATE_UNSTARTED) { throw new IllegalStateException("Stopwatch already started. "); } stopTime = -1; startTime = System.currentTimeMillis(); this.runningState = STATE_RUNNING; [BUGGY] } [BUGGY]  [CLASS] StopWatch [METHOD] start [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4082482904638631	105	105	1	replace	
44	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void start() { if(this.runningState == STATE_STOPPED) { throw new IllegalStateException("Stopwatch must be reset before being restarted. "); } if(this.runningState != STATE_UNSTARTED) { throw new IllegalStateException("Stopwatch already started. "); } stopTime = -1; startTime = System.currentTimeMillis(); this.runningState = STATE_RUNNING; [BUGGY] [BUGGY] } [CLASS] StopWatch [METHOD] start [RETURN_TYPE] void  [VARIABLES] int STATE_RUNNING STATE_SPLIT STATE_STOPPED STATE_SUSPENDED STATE_UNSPLIT STATE_UNSTARTED runningState splitState long startTime stopTime boolean  	projects/Lang55/src/java/org/apache/commons/lang/time/StopWatch.java	0.4082482904638631	105	105	1	add	
