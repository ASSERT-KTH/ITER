bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	14	None	replace
2	[BUG]  [BUGGY]  return!excludeField.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  excluder);  [CE]  cannot  find  symbol  excludeField  [FE]            ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excludeField.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  excluder);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excludeField.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  excluder);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  excludeField	14	None	replace
3	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	14	None	replace
4	[BUG]  [BUGGY]  return!exclude.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  excluder);  [CE]  cannot  find  symbol  exclude  [FE]                ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!exclude.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  excluder);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!exclude.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  excluder);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  exclude	14	None	replace
5	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(serialize,  excluder);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(serialize,  excluder);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(serialize,  excluder);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
6	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	4	None	replace
7	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  exception);  [CE]  cannot  find  symbol  exception  [FE]                ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  exception);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  exception);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  cannot  find  symbol  exception	4	None	replace
8	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialized)&&!excluder.excludeField(f,  excluder);  [CE]  cannot  find  symbol  serialized  [FE]                  ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialized)&&!excluder.excludeField(f,  excluder);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialized)&&!excluder.excludeField(f,  excluder);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  cannot  find  symbol  serialized	4	None	replace
9	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	4	None	replace
10	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  offset);  [CE]  cannot  find  symbol  offset  [FE]          ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  offset);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  offset);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    deserialized);    	non-compiled	[CE]  cannot  find  symbol  offset	2	None	replace
11	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excluded);  [CE]  cannot  find  symbol  excluded  [FE]                ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excluded);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excluded);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    deserialized);    	non-compiled	[CE]  cannot  find  symbol  excluded	5	None	replace
12	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  exception);  [CE]  cannot  find  symbol  exception  [FE]                  ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  exception);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  exception);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    deserialized);    	non-compiled	[CE]  cannot  find  symbol  exception	5	None	replace
13	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&|!excluder.excludeField(f,  excluder);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&|!excluder.excludeField(f,  excluder);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&|!excluder.excludeField(f,  excluder);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    deserialized);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
14	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialized);  [CE]  cannot  find  symbol  deserialized  [FE]                  ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialized);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialized);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  deserialized	6	None	replace
15	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialize);  [CE]  cannot  find  symbol  deserialize  [FE]                    ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialize);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  deserialize	6	None	replace
16	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  name);  [CE]  cannot  find  symbol  name  [FE]                      ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  name);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  name);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  name	6	None	replace
17	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)||!excluder.excludeField(f,  excluder);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)||!excluder.excludeField(f,  excluder);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)||!excluder.excludeField(f,  excluder);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	6	None	replace
18	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  deserialized);  [CE]  cannot  find  symbol  deserialized  [FE]                          ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  deserialized);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  deserialized);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  deserialized	6	None	replace
19	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	6	None	replace
20	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  excluded);  [CE]  cannot  find  symbol  excluded  [FE]        ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  excluded);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  excluded);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  excluded	1	None	replace
21	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    null);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	7	None	replace
22	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  null,  excluder);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  null,  excluder);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  null,  excluder);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    null);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	7	None	replace
23	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  null);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  null);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  null);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    null);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	7	None	replace
24	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  deserialized);  [CE]  cannot  find  symbol  deserialized  [FE]                          ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  deserialized);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  deserialized);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    null);    	non-compiled	[CE]  cannot  find  symbol  deserialized	7	None	replace
25	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluded);  [CE]  cannot  find  symbol  excluded  [FE]                            ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluded);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluded);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    null);    	non-compiled	[CE]  cannot  find  symbol  excluded	7	None	replace
26	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialize,  excluder);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialize,  excluder);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialize,  excluder);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	10	None	replace
27	[BUG]  [BUGGY]  return!excluder.excludeField(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  deserialize);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeField(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  deserialize);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  deserialize);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	10	None	replace
28	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialize);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialize);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialize);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	10	None	replace
29	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  deserialize);  [CE]  cannot  find  symbol  deserialize  [FE]                ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  deserialize);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  deserialize);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  cannot  find  symbol  deserialize	10	None	replace
30	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize,  excluder)&&!excluder.excludeField(f,  deserialize);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeField(f.getType(),  serialize,  excluder)&&!excluder.excludeField(f,  deserialize);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize,  excluder)&&!excluder.excludeField(f,  deserialize);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	10	None	replace
31	[BUG]  [BUGGY]  return!excluder.excludeField(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeField(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	9	None	replace
32	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialized);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialized);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialized);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	9	None	replace
33	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluder);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluder);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluder);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	9	None	replace
34	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	9	None	replace
35	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  name);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  name);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  name);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	9	None	replace
36	[BUG]  [BUGGY]  if(serialize  ||  excluder  ==  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                      ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  if(serialize  ||  excluder  ==  null)  {  return  false;  }  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize  ||  excluder  ==  null)  {  return  false;  }	      	non-compiled	[CE]  missing  return  statement	8	None	replace
37	[BUG]  [BUGGY]  if(serialize  ||  excluder!=  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                        ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  if(serialize  ||  excluder!=  null)  {  return  false;  }  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize  ||  excluder!=  null)  {  return  false;  }	      	non-compiled	[CE]  missing  return  statement	8	None	replace
38	[BUG]  [BUGGY]  if(serialize  ||  excluder  ==  null)  {  return  true;  }  [CE]  missing  return  statement  [FE]                          ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  if(serialize  ||  excluder  ==  null)  {  return  true;  }  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize  ||  excluder  ==  null)  {  return  true;  }	      	non-compiled	[CE]  missing  return  statement	8	None	replace
39	[BUG]  [BUGGY]  for(Field  f  :  excluder.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  for(Field  f  :  excluder.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  true;  }  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	for(Field  f  :  excluder.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  true;  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
40	[BUG]  [BUGGY]  Field  f  =  excluder.getField(f.getName());  [CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)  [FE]                              ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  Field  f  =  excluder.getField(f.getName());  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	Field  f  =  excluder.getField(f.getName());	      	non-compiled	[CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)	8	None	replace
41	[BUG]  [BUGGY]  for(Field  f  :  excluder.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  for(Field  f  :  excluder.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  false;  }  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	for(Field  f  :  excluder.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
42	[BUG]  [BUGGY]  if(serialize  ||  excluder  ==  null)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  if(serialize  ||  excluder  ==  null)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize  ||  excluder  ==  null)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
43	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
44	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  deserialized);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  deserialized);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  deserialized);	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
45	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
46	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  deserialize);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  deserialize);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  deserialize);	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
47	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  null);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  null);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  null);	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
48	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.excludeField(f,  serialize);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.excludeField(f,  serialize);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.excludeField(f,  serialize);	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
49	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  delegate);  [CE]  cannot  find  symbol  delegate  [FE]                  ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  delegate);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  delegate);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  delegate	6	None	replace
50	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialization);  [CE]  cannot  find  symbol  deserialization  [FE]                    ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialization);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialization);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  deserialization	6	None	replace
51	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excludedr);  [CE]  cannot  find  symbol  excludedr  [FE]          ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excludedr);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excludedr);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    deserialized);    	non-compiled	[CE]  cannot  find  symbol  excludedr	2	None	replace
52	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    deserialized);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	2	None	replace
53	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  }  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  }  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  }	  	non-compiled	[CE]  ')'  expected	12	None	add
54	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  }  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  }  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  }	  	non-compiled	[CE]  ')'  expected	12	None	add
55	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.excludeField(f,  serialize);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.excludeField(f,  serialize);  }  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.excludeField(f,  serialize);  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
56	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||  ||!excluder.excludeField(f,  serialize);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||  ||!excluder.excludeField(f,  serialize);  }  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||  ||!excluder.excludeField(f,  serialize);  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
57	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);  }  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);  }  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);  }	  	non-compiled	[CE]  ')'  expected	12	None	add
58	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excludedr);  [CE]  cannot  find  symbol  excludedr  [FE]                ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excludedr);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excludedr);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    deserialized);    	non-compiled	[CE]  cannot  find  symbol  excludedr	5	None	replace
59	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  delegate);  [CE]  cannot  find  symbol  delegate  [FE]    ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  delegate);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  delegate);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    	non-compiled	[CE]  cannot  find  symbol  delegate	13	None	replace
60	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  exclusionr);  [CE]  cannot  find  symbol  exclusionr  [FE]        ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  exclusionr);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  exclusionr);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  exclusionr	1	None	replace
61	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)||!excluder.excludeField(f,  null);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)||!excluder.excludeField(f,  null);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)||!excluder.excludeField(f,  null);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    null);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	7	None	replace
62	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	14	None	replace
63	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	14	None	replace
64	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  excluder);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  excluder);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  excluder);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	14	None	replace
65	[BUG]  [BUGGY]  if(excluder  ==  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                      ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  if(excluder  ==  null)  {  return  false;  }  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder  ==  null)  {  return  false;  }	      	non-compiled	[CE]  missing  return  statement	8	None	replace
66	[BUG]  [BUGGY]  if(excluder!=  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                        ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  if(excluder!=  null)  {  return  false;  }  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder!=  null)  {  return  false;  }	      	non-compiled	[CE]  missing  return  statement	8	None	replace
67	[BUG]  [BUGGY]  if(excluder  ==  null)  {  return  true;  }  [CE]  missing  return  statement  [FE]                          ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  if(excluder  ==  null)  {  return  true;  }  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder  ==  null)  {  return  true;  }	      	non-compiled	[CE]  missing  return  statement	8	None	replace
68	[BUG]  [BUGGY]  if(serialize  ||  excluder  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]                            ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  if(serialize  ||  excluder  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize  ||  excluder  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  missing  return  statement	8	None	replace
69	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer);  [CE]  cannot  find  symbol  deserializer  [FE]                  ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  deserializer	6	None	replace
70	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  }  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  }  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  }	  	non-compiled	[CE]  unreachable  statement	12	None	add
71	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  }  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  }  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(serialize)  {  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  }	  	non-compiled	[CE]  ')'  expected	12	None	add
72	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);	  	non-compiled	[CE]  ')'  expected	12	None	add
73	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  }  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  }  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  }	  	non-compiled	[CE]  ')'  expected	12	None	add
74	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  deserialize);  }  [CE]  cannot  find  symbol  deserialize  [FE]            ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  deserialize);  }  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  deserialize);  }	  	non-compiled	[CE]  cannot  find  symbol  deserialize	12	None	add
75	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  Class  <?>  f  =  f.getRawClass();  if(f!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  Class  <?>  f  =  f.getRawClass();  if(f!=  null)  {  return  false;  }  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(serialize)  {  Class  <?>  f  =  f.getRawClass();  if(f!=  null)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
76	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  Class  <?>  f  =  f.getClass();  if(f!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  Class  <?>  f  =  f.getClass();  if(f!=  null)  {  return  false;  }  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(serialize)  {  Class  <?>  f  =  f.getClass();  if(f!=  null)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
77	[BUG]  [BUGGY]  if(serialize  ||  excluder  ==  null)  {  for(Field  f  :  f.getDeclaredFields())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  if(serialize  ||  excluder  ==  null)  {  for(Field  f  :  f.getDeclaredFields())  {  return  true;  }  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize  ||  excluder  ==  null)  {  for(Field  f  :  f.getDeclaredFields())  {  return  true;  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
78	[BUG]  [BUGGY]  if(serialize  ||  excluder  ==  null)  {  for(Field  f  :  f.getDeclaredFields())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  if(serialize  ||  excluder  ==  null)  {  for(Field  f  :  f.getDeclaredFields())  {  return  false;  }  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize  ||  excluder  ==  null)  {  for(Field  f  :  f.getDeclaredFields())  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
79	[BUG]  [BUGGY]  if(serialize  ||  excluder  ==  null)  {  for(Field  f  :  f.getAnnotations())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  if(serialize  ||  excluder  ==  null)  {  for(Field  f  :  f.getAnnotations())  {  return  true;  }  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize  ||  excluder  ==  null)  {  for(Field  f  :  f.getAnnotations())  {  return  true;  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
80	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  excludedr);  [CE]  cannot  find  symbol  excludedr  [FE]          ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  excludedr);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  excludedr);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  excludedr	14	None	replace
81	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialization);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialization);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialization);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	9	None	replace
82	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {    [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer);  [BUGGY]    }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	9	None	replace
