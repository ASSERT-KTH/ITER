bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  excluded);  [CE]  cannot  find  symbol  excluded  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  excluded);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  excluded);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.includeField(f,    excludedr);    	non-compiled	[CE]  cannot  find  symbol  excluded	80	None	replace
2	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  deserialized);  [CE]  cannot  find  symbol  deserialized  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  deserialized);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  deserialized);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.includeField(f,    excludedr);    	non-compiled	[CE]  cannot  find  symbol  deserialized	80	None	replace
3	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  null);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  null);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.includeField(f,    excludedr);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
4	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  exception);  [CE]  cannot  find  symbol  exception  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  exception);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  exception);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.includeField(f,    excludedr);    	non-compiled	[CE]  cannot  find  symbol  exception	80	None	replace
5	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  exception);  [CE]  cannot  find  symbol  exception  [FE]            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  exception);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  exception);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    excluded);    	non-compiled	[CE]  cannot  find  symbol  exception	20	None	replace
6	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  this);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  this);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    excluded);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	20	None	replace
7	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  offset);  [CE]  cannot  find  symbol  offset  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  offset);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  offset);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    excluded);    	non-compiled	[CE]  cannot  find  symbol  offset	20	None	replace
8	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialization,  excluder);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialization,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialization,  excluder);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserialization);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	81	None	replace
9	[BUG]  [BUGGY]  return!excluder.excludeField(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialization);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialization);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialization);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserialization);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	81	None	replace
10	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluder,  deserialization);  [CE]  cannot  find  symbol  deserialization  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluder,  deserialization);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluder,  deserialization);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserialization);    	non-compiled	[CE]  cannot  find  symbol  deserialization	81	None	replace
11	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialization,  null);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialization,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialization,  null);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserialization);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	81	None	replace
12	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialization,  name);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialization,  name);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialization,  name);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserialization);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	81	None	replace
13	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  deserialized);  [CE]  cannot  find  symbol  deserialized  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  deserialized);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  deserialized);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    excluder,    null);    	non-compiled	[CE]  cannot  find  symbol  deserialized	23	None	replace
14	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  excluded);  [CE]  cannot  find  symbol  excluded  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  excluded);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  excluded);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    excluder,    null);    	non-compiled	[CE]  cannot  find  symbol  excluded	23	None	replace
15	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  name);  [CE]  cannot  find  symbol  name  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  name);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  name);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    excluder,    null);    	non-compiled	[CE]  cannot  find  symbol  name	23	None	replace
16	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  deserialize);  [CE]  cannot  find  symbol  deserialize  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  deserialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  deserialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    excluder,    null);    	non-compiled	[CE]  cannot  find  symbol  deserialize	23	None	replace
17	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  null,  deserialized);  [CE]  cannot  find  symbol  deserialized  [FE]                                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  null,  deserialized);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  null,  deserialized);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    excluder,    null);    	non-compiled	[CE]  cannot  find  symbol  deserialized	23	None	replace
18	[BUG]  [BUGGY]  if(excluder  ==  null  ||!serialize)  {  return  false;  }  [CE]  missing  return  statement  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder  ==  null  ||!serialize)  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder  ==  null  ||!serialize)  {  return  false;  }	  if(excluder    ==    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	65	None	replace
19	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  excluder);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  excluder);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    delegate);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	49	None	replace
20	[BUG]  [BUGGY]  if(excluder  ==  null  ||  f.equals(serialize))  {  return  true;  }  [CE]  missing  return  statement  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder  ==  null  ||  f.equals(serialize))  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder  ==  null  ||  f.equals(serialize))  {  return  true;  }	  if(excluder    ==    null)    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	67	None	replace
21	[BUG]  [BUGGY]  if(excluder  ==  null  ||  excluder.equals(serialize))  {  return  true;  }  [CE]  missing  return  statement  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder  ==  null  ||  excluder.equals(serialize))  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder  ==  null  ||  excluder.equals(serialize))  {  return  true;  }	  if(excluder    ==    null)    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	67	None	replace
22	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder);	  return!excluder.excludeClass(f,    f.getType(),    serialize)||!excluder.excludeField(f,    null);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	61	None	replace
23	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null);	  return!excluder.excludeClass(f,    f.getType(),    serialize)||!excluder.excludeField(f,    null);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	61	None	replace
24	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  serialize,  f.getType())||!excluder.excludeField(f,  null);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  serialize,  f.getType())||!excluder.excludeField(f,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  serialize,  f.getType())||!excluder.excludeField(f,  null);	  return!excluder.excludeClass(f,    f.getType(),    serialize)||!excluder.excludeField(f,    null);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	61	None	replace
25	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize,  excluder)&&!excluder.excludeField(f,  null);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize,  excluder)&&!excluder.excludeField(f,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize,  excluder)&&!excluder.excludeField(f,  null);	  return!excluder.excludeClass(f,    f.getType(),    serialize)||!excluder.excludeField(f,    null);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	61	None	replace
26	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)||!excluder.excludeField(f,  null,  excluder);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)||!excluder.excludeField(f,  null,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)||!excluder.excludeField(f,  null,  excluder);	  return!excluder.excludeClass(f,    f.getType(),    serialize)||!excluder.excludeField(f,    null);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	61	None	replace
27	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize,  excluder)||!excluder.excludeField(f,  null);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize,  excluder)||!excluder.excludeField(f,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize,  excluder)||!excluder.excludeField(f,  null);	  return!excluder.excludeClass(f,    f.getType(),    serialize)||!excluder.excludeField(f,    null);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	61	None	replace
28	[BUG]  [BUGGY]  if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  }  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  }	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    	non-compiled	[CE]  missing  return  statement	72	None	replace
29	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    	non-compiled	[CE]  ')'  expected	72	None	replace
30	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    	non-compiled	[CE]  ')'  expected	72	None	replace
31	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    	non-compiled	[CE]  ')'  expected	72	None	replace
32	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  Class  <?>  f  =  f.getRawClass();  if(f!=  null)  {  return  false;  }  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  Class  <?>  f  =  f.getRawClass();  if(f!=  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  Class  <?>  f  =  f.getRawClass();  if(f!=  null)  {  return  false;  }	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(serialize)    {    Class    <?>    f    =    f.getRawClass();    if(f!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	75	None	replace
33	[BUG]  [BUGGY]  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  null);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  null);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    null);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
34	[BUG]  [BUGGY]  ||!excluder.excludeField(f.getType(),  serialize)||!excluder.excludeField(f,  null);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  ||!excluder.excludeField(f.getType(),  serialize)||!excluder.excludeField(f,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	||!excluder.excludeField(f.getType(),  serialize)||!excluder.excludeField(f,  null);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    null);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
35	[BUG]  [BUGGY]  if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    null);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
36	[BUG]  [BUGGY]  if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.exclu  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.exclu  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.exclu	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    null);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
37	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    }    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	53	None	replace
38	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  deserialized);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  deserialized);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  deserialized);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(e,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	63	None	replace
39	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  excluder);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  excluder);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(e,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	63	None	replace
40	[BUG]  [BUGGY]  return!excluder.excludeClass(e,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder);  [CE]  cannot  find  symbol  e  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(e,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(e,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(e,    excluder);    	non-compiled	[CE]  cannot  find  symbol  e	63	None	replace
41	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  name);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  name);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  name);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(e,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	63	None	replace
42	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  excluded);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  excluded);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  excluded);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(e,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	63	None	replace
43	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  serialize,  f.getType())&&!excluder.includeField(e,  excluder);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  serialize,  f.getType())&&!excluder.includeField(e,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  serialize,  f.getType())&&!excluder.includeField(e,  excluder);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(e,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	63	None	replace
44	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  null);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  null);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(e,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	63	None	replace
45	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  expression);  [CE]  cannot  find  symbol  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  expression);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  expression);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserializer);    	non-compiled	[CE]  cannot  find  symbol  expression	69	None	replace
46	[BUG]  [BUGGY]  if(f  ==  null  ||  excluder!=  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(f  ==  null  ||  excluder!=  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(f  ==  null  ||  excluder!=  null)  {  return  false;  }	  if(serialize    ||    excluder!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	37	None	replace
47	[BUG]  [BUGGY]  if(serialize  &&  excluder!=  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(serialize  &&  excluder!=  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize  &&  excluder!=  null)  {  return  false;  }	  if(serialize    ||    excluder!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	37	None	replace
48	[BUG]  [BUGGY]  if(excluder  ||  serialize!=  null)  {  return  false;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder  ||  serialize!=  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder  ||  serialize!=  null)  {  return  false;  }	  if(serialize    ||    excluder!=    null)    {    return    false;    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	37	None	replace
49	[BUG]  [BUGGY]  for(Field  f  :  f.getDeclaredFields())  {  return  false;  }  [CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  for(Field  f  :  f.getDeclaredFields())  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	for(Field  f  :  f.getDeclaredFields())  {  return  false;  }	  if(serialize    ||    excluder    ==    null)    {    for(Field    f    :    f.getDeclaredFields())    {    return    false;    }    	non-compiled	[CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)	78	None	replace
50	[BUG]  [BUGGY]  for(Field  f  :  excluder.getDeclaredFields())  {  return  false;  }  [CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  for(Field  f  :  excluder.getDeclaredFields())  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	for(Field  f  :  excluder.getDeclaredFields())  {  return  false;  }	  if(serialize    ||    excluder    ==    null)    {    for(Field    f    :    f.getDeclaredFields())    {    return    false;    }    	non-compiled	[CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)	78	None	replace
51	[BUG]  [BUGGY]  For(Field  f  :  excluder.getDeclaredFields())  {  return  false;  }  [CE]  ')'  expected  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  For(Field  f  :  excluder.getDeclaredFields())  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	For(Field  f  :  excluder.getDeclaredFields())  {  return  false;  }	  if(serialize    ||    excluder    ==    null)    {    for(Field    f    :    f.getDeclaredFields())    {    return    false;    }    	non-compiled	[CE]  ')'  expected	78	None	replace
52	[BUG]  [BUGGY]  For(Field  f  :  f.getDeclaredFields())  {  return  false;  }  [CE]  ')'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  For(Field  f  :  f.getDeclaredFields())  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	For(Field  f  :  f.getDeclaredFields())  {  return  false;  }	  if(serialize    ||    excluder    ==    null)    {    for(Field    f    :    f.getDeclaredFields())    {    return    false;    }    	non-compiled	[CE]  ')'  expected	78	None	replace
53	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&|!excluder.excludeField(f,  serialize);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&|!excluder.excludeField(f,  serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&|!excluder.excludeField(f,  serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(serialize)    {    return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    deserialize);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
54	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.exclu  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.exclu  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.exclu	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(serialize)    {    return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    deserialize);    }    	non-compiled	[CE]  ';'  expected	74	None	replace
55	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	52	None	replace
56	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.excludeField(f);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.excludeField(f);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  serialize)&&!excluder.excludeField(f);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	52	None	replace
57	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(excluder,  f);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(excluder,  f);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(excluder,  f);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	52	None	replace
58	[BUG]  [BUGGY]  return!excluder.excludeField(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  deserialize,  excluder);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  deserialize,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  deserialize,  excluder);	  return!excluder.excludeField(f,    f.getType(),    serialize)&&!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	27	None	replace
59	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize,  f.getType())&&!excluder.excludeField(f,  deserialize);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize,  f.getType())&&!excluder.excludeField(f,  deserialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize,  f.getType())&&!excluder.excludeField(f,  deserialize);	  return!excluder.excludeField(f,    f.getType(),    serialize)&&!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	27	None	replace
60	[BUG]  [BUGGY]  return!excluder.excludeField(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialize);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialize);	  return!excluder.excludeField(f,    f.getType(),    serialize)&&!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	27	None	replace
61	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize,  f)&&!excluder.excludeField(f,  deserialize);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize,  f)&&!excluder.excludeField(f,  deserialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize,  f)&&!excluder.excludeField(f,  deserialize);	  return!excluder.excludeField(f,    f.getType(),    serialize)&&!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	27	None	replace
62	[BUG]  [BUGGY]  return!excluder.excludeField(f,  f.getType(),  serialize,  excluder)&&!excluder.excludeField(f,  deserialize);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  f.getType(),  serialize,  excluder)&&!excluder.excludeField(f,  deserialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  f.getType(),  serialize,  excluder)&&!excluder.excludeField(f,  deserialize);	  return!excluder.excludeField(f,    f.getType(),    serialize)&&!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	27	None	replace
63	[BUG]  [BUGGY]  return!excluder.excludeField(f,  f.getType(),  serialize,  excluder)&&!excluder.excludeField(f,  deserialize,  excluder);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  f.getType(),  serialize,  excluder)&&!excluder.excludeField(f,  deserialize,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  f.getType(),  serialize,  excluder)&&!excluder.excludeField(f,  deserialize,  excluder);	  return!excluder.excludeField(f,    f.getType(),    serialize)&&!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	27	None	replace
64	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(serialize,  excluder);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(serialize,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(serialize,  excluder);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.includeField(serialize,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	5	None	replace
65	[BUG]  [BUGGY]  return!excludeField.excludeClass(f.getType(),  serialize)&&!excluder.includeField(serialize,  excluder);  [CE]  cannot  find  symbol  excludeField  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excludeField.excludeClass(f.getType(),  serialize)&&!excluder.includeField(serialize,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excludeField.excludeClass(f.getType(),  serialize)&&!excluder.includeField(serialize,  excluder);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.includeField(serialize,    excluder);    	non-compiled	[CE]  cannot  find  symbol  excludeField	5	None	replace
66	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.includeField(serialize,  excluder);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.includeField(serialize,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  serialize)&&!excluder.includeField(serialize,  excluder);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.includeField(serialize,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	5	None	replace
67	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(serialize,  excludedr);  [CE]  cannot  find  symbol  excludedr  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(serialize,  excludedr);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(serialize,  excludedr);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.includeField(serialize,    excluder);    	non-compiled	[CE]  cannot  find  symbol  excludedr	5	None	replace
68	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  excluder);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  excluder);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    excluder,    deserialized);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	18	None	replace
69	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  excluded);  [CE]  cannot  find  symbol  excluded  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  excluded);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  excluded);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    excluder,    deserialized);    	non-compiled	[CE]  cannot  find  symbol  excluded	18	None	replace
70	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  exception);  [CE]  cannot  find  symbol  exception  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  exception);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  exception);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    excluder,    deserialized);    	non-compiled	[CE]  cannot  find  symbol  exception	18	None	replace
71	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  offset);  [CE]  cannot  find  symbol  offset  [FE]                                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  offset);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  offset);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    excluder,    deserialized);    	non-compiled	[CE]  cannot  find  symbol  offset	18	None	replace
72	[BUG]  [BUGGY]  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
73	[BUG]  [BUGGY]  ||!excluder.excludeField(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  ||!excluder.excludeField(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	||!excluder.excludeField(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
74	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
75	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  excluder,  name);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  excluder,  name);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  excluder,  name);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(excluder,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	64	None	replace
76	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  excluder,  deserialized);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  excluder,  deserialized);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  excluder,  deserialized);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(excluder,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	64	None	replace
77	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  serialize,  f)&&!excluder.includeField(excluder,  excluder);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  serialize,  f)&&!excluder.includeField(excluder,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  serialize,  f)&&!excluder.includeField(excluder,  excluder);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(excluder,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	64	None	replace
78	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize,  excluder)&&!excluder.includeField(excluder,  excluder,  name);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize,  excluder)&&!excluder.includeField(excluder,  excluder,  name);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize,  excluder)&&!excluder.includeField(excluder,  excluder,  name);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(excluder,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	64	None	replace
79	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  serialize,  f.getType())&&!excluder.includeField(excluder,  excluder);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  serialize,  f.getType())&&!excluder.includeField(excluder,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  serialize,  f.getType())&&!excluder.includeField(excluder,  excluder);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(excluder,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	64	None	replace
80	[BUG]  [BUGGY]  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  deserialized);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  deserialized);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  deserialized);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    deserialized);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
81	[BUG]  [BUGGY]  ||!excluder.excludeField(f.getType(),  serialize)||!excluder.excludeField(f,  deserialized);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  ||!excluder.excludeField(f.getType(),  serialize)||!excluder.excludeField(f,  deserialized);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	||!excluder.excludeField(f.getType(),  serialize)||!excluder.excludeField(f,  deserialized);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    deserialized);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
82	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    }    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	73	None	replace
83	[BUG]  [BUGGY]  return!exclude.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder);  [CE]  cannot  find  symbol  exclude  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!exclude.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!exclude.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder);	  return!exclude.excludeClass(f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  exclude	4	None	replace
84	[BUG]  [BUGGY]  return!excludeFactory.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  excluder);  [CE]  cannot  find  symbol  excludeFactory  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excludeFactory.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excludeFactory.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  excluder);	  return!exclude.excludeClass(f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  excludeFactory	4	None	replace
85	[BUG]  [BUGGY]  return!exclude.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  excluded);  [CE]  cannot  find  symbol  exclude  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!exclude.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  excluded);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!exclude.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  excluded);	  return!exclude.excludeClass(f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  exclude	4	None	replace
86	[BUG]  [BUGGY]  return!exclude.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  null);  [CE]  cannot  find  symbol  exclude  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!exclude.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!exclude.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  null);	  return!exclude.excludeClass(f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  exclude	4	None	replace
87	[BUG]  [BUGGY]  return!exclude.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  excludedr);  [CE]  cannot  find  symbol  exclude  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!exclude.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  excludedr);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!exclude.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  excludedr);	  return!exclude.excludeClass(f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  exclude	4	None	replace
88	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  delegate);  [CE]  cannot  find  symbol  delegate  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  delegate);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  delegate);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    exception);    	non-compiled	[CE]  cannot  find  symbol  delegate	12	None	replace
89	[BUG]  [BUGGY]  if(excluder  ==  null  ||  f.equals(serialize))  {  return  false;  }  [CE]  missing  return  statement  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder  ==  null  ||  f.equals(serialize))  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder  ==  null  ||  f.equals(serialize))  {  return  false;  }	  if(excluder!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	66	None	replace
90	[BUG]  [BUGGY]  if(excluder  ==  null  ||  excluder.equals(serialize))  {  return  false;  }  [CE]  missing  return  statement  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder  ==  null  ||  excluder.equals(serialize))  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder  ==  null  ||  excluder.equals(serialize))  {  return  false;  }	  if(excluder!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	66	None	replace
91	[BUG]  [BUGGY]  Field  f  =  excluder.getField(f.getName(),  serialize);  [CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  Field  f  =  excluder.getField(f.getName(),  serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	Field  f  =  excluder.getField(f.getName(),  serialize);	  Field    f    =    excluder.getField(f.getName());    	non-compiled	[CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)	40	None	replace
92	[BUG]  [BUGGY]  Field  f  =  excluder.getField(serialize,  excluder.getName());  [CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)  [FE]                                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  Field  f  =  excluder.getField(serialize,  excluder.getName());  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	Field  f  =  excluder.getField(serialize,  excluder.getName());	  Field    f    =    excluder.getField(f.getName());    	non-compiled	[CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)	40	None	replace
93	[BUG]  [BUGGY]  Field  f  =  excluder.getField(this.serialize,  excluder.getName());  [CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)  [FE]                                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  Field  f  =  excluder.getField(this.serialize,  excluder.getName());  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	Field  f  =  excluder.getField(this.serialize,  excluder.getName());	  Field    f    =    excluder.getField(f.getName());    	non-compiled	[CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)	40	None	replace
94	[BUG]  [BUGGY]  Field  f  =  excluder.getField(serialize,  f.getName());  [CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)  [FE]                                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  Field  f  =  excluder.getField(serialize,  f.getName());  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	Field  f  =  excluder.getField(serialize,  f.getName());	  Field    f    =    excluder.getField(f.getName());    	non-compiled	[CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)	40	None	replace
95	[BUG]  [BUGGY]  Field  f  =  excluder.getField(f.getType());  [CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)  [FE]                                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  Field  f  =  excluder.getField(f.getType());  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	Field  f  =  excluder.getField(f.getType());	  Field    f    =    excluder.getField(f.getName());    	non-compiled	[CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)	40	None	replace
96	[BUG]  [BUGGY]  Field  f  =  excluder.getField(f,  serialize);  [CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)  [FE]                                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  Field  f  =  excluder.getField(f,  serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	Field  f  =  excluder.getField(f,  serialize);	  Field    f    =    excluder.getField(f.getName());    	non-compiled	[CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)	40	None	replace
97	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder,  deserialized);  [CE]  cannot  find  symbol  deserialized  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder,  deserialized);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder,  deserialized);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    null,    excluder);    	non-compiled	[CE]  cannot  find  symbol  deserialized	22	None	replace
98	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder,  name);  [CE]  cannot  find  symbol  name  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder,  name);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder,  name);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    null,    excluder);    	non-compiled	[CE]  cannot  find  symbol  name	22	None	replace
99	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder,  excluder);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder,  excluder);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    null,    excluder);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	22	None	replace
100	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder,  deserialize);  [CE]  cannot  find  symbol  deserialize  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder,  deserialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder,  deserialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    null,    excluder);    	non-compiled	[CE]  cannot  find  symbol  deserialize	22	None	replace
101	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder,  excluded);  [CE]  cannot  find  symbol  excluded  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder,  excluded);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder,  excluded);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    null,    excluder);    	non-compiled	[CE]  cannot  find  symbol  excluded	22	None	replace
102	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  null,  excluder,  deserialized);  [CE]  cannot  find  symbol  deserialized  [FE]                                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  null,  excluder,  deserialized);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  null,  excluder,  deserialized);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    null,    excluder);    	non-compiled	[CE]  cannot  find  symbol  deserialized	22	None	replace
103	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder,  exclusionr);  [CE]  cannot  find  symbol  exclusionr  [FE]                                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder,  exclusionr);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder,  exclusionr);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    null,    excluder);    	non-compiled	[CE]  cannot  find  symbol  exclusionr	22	None	replace
104	[BUG]  [BUGGY]  if(serialize  ||  excluder!=  null)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(serialize  ||  excluder!=  null)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize  ||  excluder!=  null)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    String    name    =    f.getName();    if(name.length()    ==    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
105	[BUG]  [BUGGY]  if(excluder  ||  serialize  ==  null)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder  ||  serialize  ==  null)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder  ||  serialize  ==  null)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    String    name    =    f.getName();    if(name.length()    ==    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
106	[BUG]  [BUGGY]  if(serialize  ||  excluder  ==  null)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(serialize  ||  excluder  ==  null)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize  ||  excluder  ==  null)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  false;  }	  if(serialize    ||    excluder    ==    null)    {    String    name    =    f.getName();    if(name.length()    ==    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
107	[BUG]  [BUGGY]  ||  excluder  ==  null)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  ||  excluder  ==  null)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	||  excluder  ==  null)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    String    name    =    f.getName();    if(name.length()    ==    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
108	[BUG]  [BUGGY]  if(excluder  ||  serialize)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder  ||  serialize)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder  ||  serialize)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    String    name    =    f.getName();    if(name.length()    ==    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
109	[BUG]  [BUGGY]  if(serialize)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(serialize)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    String    name    =    f.getName();    if(name.length()    ==    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
110	[BUG]  [BUGGY]  if(serialize  ||  excluder!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(serialize  ||  excluder!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize  ||  excluder!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(serialize    ||    excluder    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  missing  return  statement	68	None	replace
111	[BUG]  [BUGGY]  if(excluder  ||  serialize  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder  ||  serialize  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder  ||  serialize  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(serialize    ||    excluder    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	68	None	replace
112	[BUG]  [BUGGY]  if(f  ==  null  ||  serialize  ||  excluder  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]                                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(f  ==  null  ||  serialize  ||  excluder  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(f  ==  null  ||  serialize  ||  excluder  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(serialize    ||    excluder    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  missing  return  statement	68	None	replace
113	[BUG]  [BUGGY]  if(f  ==  null  ||  excluder  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]                                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(f  ==  null  ||  excluder  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(f  ==  null  ||  excluder  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(serialize    ||    excluder    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  missing  return  statement	68	None	replace
114	[BUG]  [BUGGY]  ||  excluder  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  ||  excluder  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	||  excluder  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(serialize    ||    excluder    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
115	[BUG]  [BUGGY]  return!excluder.excludeField(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialized);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialized);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialized);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserialized);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	32	None	replace
116	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialized,  excluder);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialized,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialized,  excluder);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserialized);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	32	None	replace
117	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialized,  name);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialized,  name);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialized,  name);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserialized);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	32	None	replace
118	[BUG]  [BUGGY]  For(Field  f  :  excluder.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  true;  }  [CE]  ')'  expected  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  For(Field  f  :  excluder.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	For(Field  f  :  excluder.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  true;  }	  for(Field    f    :    excluder.getFields())    {    if(serialize    ||    f.isSubtype(serialize))    {    return    true;    }    	non-compiled	[CE]  ')'  expected	39	None	replace
119	[BUG]  [BUGGY]  For(Field  f  :  excluder.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  false;  }  [CE]  ')'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  For(Field  f  :  excluder.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	For(Field  f  :  excluder.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  false;  }	  for(Field    f    :    excluder.getFields())    {    if(serialize    ||    f.isSubtype(serialize))    {    return    true;    }    	non-compiled	[CE]  ')'  expected	39	None	replace
120	[BUG]  [BUGGY]  return!excluder.excludeField(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    null);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	34	None	replace
121	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  deserialized);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  deserialized);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  deserialized);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    null);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	34	None	replace
122	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluder,  null);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluder,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluder,  null);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    null);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	34	None	replace
123	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  excluded);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  excluded);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  excluded);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    null);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	34	None	replace
124	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  exception);  [CE]  cannot  find  symbol  exception  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  exception);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  exception);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    null,    excluded);    	non-compiled	[CE]  cannot  find  symbol  exception	25	None	replace
125	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  offset);  [CE]  cannot  find  symbol  offset  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  offset);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  offset);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    null,    excluded);    	non-compiled	[CE]  cannot  find  symbol  offset	25	None	replace
126	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  exclusionr);  [CE]  cannot  find  symbol  exclusionr  [FE]                                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  exclusionr);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  exclusionr);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    null,    excluded);    	non-compiled	[CE]  cannot  find  symbol  exclusionr	25	None	replace
127	[BUG]  [BUGGY]  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    Serialize);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
128	[BUG]  [BUGGY]  ||!excluder.excludeField(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  ||!excluder.excludeField(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	||!excluder.excludeField(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    Serialize);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
129	[BUG]  [BUGGY]  ||!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.excludeField(f,  serialize);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  ||!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.excludeField(f,  serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	||!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.excludeField(f,  serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||    =    excluder.excludeField(f,    serialize);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
130	[BUG]  [BUGGY]  ||!excluder.excludeField(f.getType(),  serialize)||  =  excluder.excludeField(f,  serialize);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  ||!excluder.excludeField(f.getType(),  serialize)||  =  excluder.excludeField(f,  serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	||!excluder.excludeField(f.getType(),  serialize)||  =  excluder.excludeField(f,  serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||    =    excluder.excludeField(f,    serialize);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
131	[BUG]  [BUGGY]  if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.excludeField  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.excludeField  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.excludeField	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||    =    excluder.excludeField(f,    serialize);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
132	[BUG]  [BUGGY]  if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.exclude  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.exclude  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.exclude	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||    =    excluder.excludeField(f,    serialize);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
133	[BUG]  [BUGGY]  if(f  ==  null  ||  excluder  ==  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(f  ==  null  ||  excluder  ==  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(f  ==  null  ||  excluder  ==  null)  {  return  false;  }	  if(serialize    ||    excluder    ==    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	36	None	replace
134	[BUG]  [BUGGY]  if(excluder  ||  serialize  ==  null)  {  return  false;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder  ||  serialize  ==  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder  ||  serialize  ==  null)  {  return  false;  }	  if(serialize    ||    excluder    ==    null)    {    return    false;    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	36	None	replace
135	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialized);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialized);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialized);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	9	None	replace
136	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  name);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  name);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  name);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	9	None	replace
137	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  serialize,  f)&&!excluder.excludeField(f,  excluder);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  serialize,  f)&&!excluder.excludeField(f,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  serialize,  f)&&!excluder.excludeField(f,  excluder);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	9	None	replace
138	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialize);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialize);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	9	None	replace
139	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  delegate);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  delegate);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  delegate);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	9	None	replace
140	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialize,  excluder);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialize,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialize,  excluder);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserialize);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	28	None	replace
141	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluder,  deserialize);  [CE]  cannot  find  symbol  deserialize  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluder,  deserialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluder,  deserialize);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserialize);    	non-compiled	[CE]  cannot  find  symbol  deserialize	28	None	replace
142	[BUG]  [BUGGY]  for(Field  f  :  excluded.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  for(Field  f  :  excluded.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	for(Field  f  :  excluded.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  false;  }	  for(Field    f    :    excluder.getFields())    {    if(serialize    ||    f.isSubtype(serialize))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
143	[BUG]  [BUGGY]  for(Field  f  :  excludedr.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  for(Field  f  :  excludedr.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	for(Field  f  :  excludedr.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  false;  }	  for(Field    f    :    excluder.getFields())    {    if(serialize    ||    f.isSubtype(serialize))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
144	[BUG]  [BUGGY]  for(Field  f  :  excluder.getFields())  {  if(serialize  &&  f.isSubtype(serialize))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  for(Field  f  :  excluder.getFields())  {  if(serialize  &&  f.isSubtype(serialize))  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	for(Field  f  :  excluder.getFields())  {  if(serialize  &&  f.isSubtype(serialize))  {  return  false;  }	  for(Field    f    :    excluder.getFields())    {    if(serialize    ||    f.isSubtype(serialize))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
145	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  Class  <?>  f  =  f.getClass();  if(f!=  null)  {  return  false;  }  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  Class  <?>  f  =  f.getClass();  if(f!=  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  Class  <?>  f  =  f.getClass();  if(f!=  null)  {  return  false;  }	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(serialize)    {    Class    <?>    f    =    f.getClass();    if(f!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	76	None	replace
146	[BUG]  [BUGGY]  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  deserialize);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  deserialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  deserialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
147	[BUG]  [BUGGY]  ||!excluder.excludeField(f.getType(),  serialize)||!excluder.excludeField(f,  deserialize);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  ||!excluder.excludeField(f.getType(),  serialize)||!excluder.excludeField(f,  deserialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	||!excluder.excludeField(f.getType(),  serialize)||!excluder.excludeField(f,  deserialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
148	[BUG]  [BUGGY]  if(serialize  &&  excluder  ==  null)  {  return  true;  }  [CE]  missing  return  statement  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(serialize  &&  excluder  ==  null)  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize  &&  excluder  ==  null)  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	38	None	replace
149	[BUG]  [BUGGY]  if(f  ==  null  ||  excluder  ==  null)  {  return  true;  }  [CE]  missing  return  statement  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(f  ==  null  ||  excluder  ==  null)  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(f  ==  null  ||  excluder  ==  null)  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	38	None	replace
150	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  null);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  null);	  return!excluder.excludeField(f,    serialize)&&!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	29	None	replace
151	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluded);  [CE]  cannot  find  symbol  excluded  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluded);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluded);	  return!excluder.excludeField(f,    serialize)&&!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  cannot  find  symbol  excluded	29	None	replace
152	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  exception);  [CE]  cannot  find  symbol  exception  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  exception);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  exception);	  return!excluder.excludeField(f,    serialize)&&!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  cannot  find  symbol  exception	29	None	replace
153	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  e);  [CE]  cannot  find  symbol  e  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  e);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  e);	  return!excluder.excludeField(f,    serialize)&&!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  cannot  find  symbol  e	29	None	replace
154	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  enum);  [CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  enum);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  enum);	  return!excluder.excludeField(f,    serialize)&&!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier	29	None	replace
155	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder,  deserialized);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder,  deserialized);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder,  deserialized);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	1	None	replace
156	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder,  name);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder,  name);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder,  name);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	1	None	replace
157	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder,  null);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder,  null);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	1	None	replace
158	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize,  excluder)&&!excluder.includeField(f,  excluder,  deserialized);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize,  excluder)&&!excluder.includeField(f,  excluder,  deserialized);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize,  excluder)&&!excluder.includeField(f,  excluder,  deserialized);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	1	None	replace
159	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  serialize,  f)&&!excluder.includeField(f,  excluder);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  serialize,  f)&&!excluder.includeField(f,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  serialize,  f)&&!excluder.includeField(f,  excluder);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	1	None	replace
160	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder,  excluded);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder,  excluded);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder,  excluded);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	1	None	replace
161	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder,  excluder);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder,  excluder);	  return!excluder.excludeClass(f,    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	3	None	replace
162	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder,  deserialized);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder,  deserialized);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder,  deserialized);	  return!excluder.excludeClass(f,    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	3	None	replace
163	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder,  excluded);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder,  excluded);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder,  excluded);	  return!excluder.excludeClass(f,    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	3	None	replace
164	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder,  null);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder,  null);	  return!excluder.excludeClass(f,    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	3	None	replace
165	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  if(!excluder.excludeClass(f.getType(),  serialize)||  [CE]  ')'  expected  [FE]          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  if(!excluder.excludeClass(f.getType(),  serialize)||  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  if(!excluder.excludeClass(f.getType(),  serialize)||	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(serialize)    {    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    }    	non-compiled	[CE]  ')'  expected	71	None	replace
166	[BUG]  [BUGGY]  for(Field  f  :  f.getAnnotations())  {  return  true;  }  [CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  for(Field  f  :  f.getAnnotations())  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	for(Field  f  :  f.getAnnotations())  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    for(Field    f    :    f.getAnnotations())    {    return    true;    }    	non-compiled	[CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)	79	None	replace
167	[BUG]  [BUGGY]  for(Field  f  :  excluder.getAnnotations())  {  return  true;  }  [CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  for(Field  f  :  excluder.getAnnotations())  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	for(Field  f  :  excluder.getAnnotations())  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    for(Field    f    :    f.getAnnotations())    {    return    true;    }    	non-compiled	[CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)	79	None	replace
168	[BUG]  [BUGGY]  For(Field  f  :  f.getAnnotations())  {  return  true;  }  [CE]  ')'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  For(Field  f  :  f.getAnnotations())  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	For(Field  f  :  f.getAnnotations())  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    for(Field    f    :    f.getAnnotations())    {    return    true;    }    	non-compiled	[CE]  ')'  expected	79	None	replace
169	[BUG]  [BUGGY]  For(Field  f  :  excluder.getAnnotations())  {  return  true;  }  [CE]  ')'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  For(Field  f  :  excluder.getAnnotations())  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	For(Field  f  :  excluder.getAnnotations())  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    for(Field    f    :    f.getAnnotations())    {    return    true;    }    	non-compiled	[CE]  ')'  expected	79	None	replace
170	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  null);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  null);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    null,    deserialized);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	24	None	replace
171	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  value);  [CE]  cannot  find  symbol  value  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  value);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  value);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    null,    deserialized);    	non-compiled	[CE]  cannot  find  symbol  value	24	None	replace
172	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialize,  excluder,  name);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialize,  excluder,  name);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialize,  excluder,  name);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    deserialize,    excluder);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	26	None	replace
173	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialize,  excluder,  excluder);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialize,  excluder,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialize,  excluder,  excluder);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    deserialize,    excluder);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	26	None	replace
174	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialize,  excluder,  null);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialize,  excluder,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialize,  excluder,  null);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    deserialize,    excluder);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	26	None	replace
175	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  null);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  null);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    null);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	6	None	replace
176	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.excludeField(f,  null);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.excludeField(f,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  serialize)&&!excluder.excludeField(f,  null);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    null);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	6	None	replace
177	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize,  excluder)&&!excluder.excludeField(f,  deserialize,  excluder);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize,  excluder)&&!excluder.excludeField(f,  deserialize,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize,  excluder)&&!excluder.excludeField(f,  deserialize,  excluder);	  return!excluder.excludeField(f.getType(),    serialize,    excluder)&&!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	30	None	replace
178	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize,  excluder,  name)&&!excluder.excludeField(f,  deserialize);  [CE]  cannot  find  symbol  name  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize,  excluder,  name)&&!excluder.excludeField(f,  deserialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize,  excluder,  name)&&!excluder.excludeField(f,  deserialize);	  return!excluder.excludeField(f.getType(),    serialize,    excluder)&&!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  cannot  find  symbol  name	30	None	replace
179	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize,  excluder)&&!excluder.excludeField(f,  deserialize);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize,  excluder)&&!excluder.excludeField(f,  deserialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize,  excluder)&&!excluder.excludeField(f,  deserialize);	  return!excluder.excludeField(f.getType(),    serialize,    excluder)&&!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	30	None	replace
180	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize,  excluder)&&!excluder.excludeField(f,  deserialize,  excluded);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize,  excluder)&&!excluder.excludeField(f,  deserialize,  excluded);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize,  excluder)&&!excluder.excludeField(f,  deserialize,  excluded);	  return!excluder.excludeField(f.getType(),    serialize,    excluder)&&!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	30	None	replace
181	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer,  name);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer,  name);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer,  name);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserializer);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	82	None	replace
182	[BUG]  [BUGGY]  return!excluder.excludeField(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserializer);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	82	None	replace
183	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluder,  deserializer);  [CE]  cannot  find  symbol  deserializer  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluder,  deserializer);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluder,  deserializer);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserializer);    	non-compiled	[CE]  cannot  find  symbol  deserializer	82	None	replace
184	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer,  fieldNamingStrategy);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer,  fieldNamingStrategy);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer,  fieldNamingStrategy);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserializer);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	82	None	replace
185	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer,  property);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer,  property);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer,  property);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserializer);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	82	None	replace
186	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer,  valueType);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer,  valueType);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer,  valueType);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserializer);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	82	None	replace
187	[BUG]  [BUGGY]  return!excluder.excludeField(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  name);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  name);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  name);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    name);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	35	None	replace
188	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  name,  deserialized);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  name,  deserialized);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  name,  deserialized);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    name);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	35	None	replace
189	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  name,  deserialize);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  name,  deserialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  name,  deserialize);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    name);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	35	None	replace
190	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluder,  name);  [CE]  cannot  find  symbol  name  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluder,  name);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluder,  name);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    name);    	non-compiled	[CE]  cannot  find  symbol  name	35	None	replace
191	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  name,  null);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  name,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  name,  null);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    name);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	35	None	replace
192	[BUG]  [BUGGY]  return!excludeField.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder);  [CE]  cannot  find  symbol  excludeField  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excludeField.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excludeField.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder);	  return!excludeField.excludeClass(f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  excludeField	2	None	replace
193	[BUG]  [BUGGY]  return!excludeField.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder);  [CE]  cannot  find  symbol  excludeField  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excludeField.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excludeField.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder);	  return!excludeField.excludeClass(f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  excludeField	2	None	replace
194	[BUG]  [BUGGY]  return!excludeField.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  excludedr);  [CE]  cannot  find  symbol  excludeField  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excludeField.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  excludedr);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excludeField.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  excludedr);	  return!excludeField.excludeClass(f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  excludeField	2	None	replace
195	[BUG]  [BUGGY]  return!excludeField.excludeClass(f.getType(),  serialize)&&!excluder.encludeField(f,  excluder);  [CE]  cannot  find  symbol  excludeField  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excludeField.excludeClass(f.getType(),  serialize)&&!excluder.encludeField(f,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excludeField.excludeClass(f.getType(),  serialize)&&!excluder.encludeField(f,  excluder);	  return!excludeField.excludeClass(f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  excludeField	2	None	replace
196	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excludeField.includeField(f,  excluder);  [CE]  cannot  find  symbol  excludeField  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excludeField.includeField(f,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excludeField.includeField(f,  excluder);	  return!excludeField.excludeClass(f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  excludeField	2	None	replace
197	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  inclusion);  [CE]  cannot  find  symbol  inclusion  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  inclusion);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  inclusion);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserialization);    	non-compiled	[CE]  cannot  find  symbol  inclusion	50	None	replace
198	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  Serialize);  [CE]  cannot  find  symbol  Serialize  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  Serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  Serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    Serialize);    }    	non-compiled	[CE]  cannot  find  symbol  Serialize	57	None	replace
199	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);  [CE]  cannot  find  symbol  Serialize  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    Serialize);    }    	non-compiled	[CE]  cannot  find  symbol  Serialize	57	None	replace
200	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    Serialize);    }    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	57	None	replace
201	[BUG]  [BUGGY]  if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);  }  [CE]  cannot  find  symbol  Serialize  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);  }	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    Serialize);    }    	non-compiled	[CE]  cannot  find  symbol  Serialize	57	None	replace
202	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  name);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  name);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  name);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	62	None	replace
203	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  serialize,  f.getType())&&!excluder.includeField(excluder);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  serialize,  f.getType())&&!excluder.includeField(excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  serialize,  f.getType())&&!excluder.includeField(excluder);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	62	None	replace
204	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  deserialized);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  deserialized);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  deserialized);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	62	None	replace
205	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  constructor);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  constructor);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  constructor);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	62	None	replace
206	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize,  excluder)&&!excluder.includeField(excluder,  name);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize,  excluder)&&!excluder.includeField(excluder,  name);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize,  excluder)&&!excluder.includeField(excluder,  name);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	62	None	replace
207	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  serialize,  f)&&!excluder.includeField(excluder);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  serialize,  f)&&!excluder.includeField(excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  serialize,  f)&&!excluder.includeField(excluder);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	62	None	replace
208	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  fieldNamingStrategy);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  fieldNamingStrategy);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  fieldNamingStrategy);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	62	None	replace
209	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize,  excluder)&&!excluder.excludeField(f,  excluder,  deserialized);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize,  excluder)&&!excluder.excludeField(f,  excluder,  deserialized);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize,  excluder)&&!excluder.excludeField(f,  excluder,  deserialized);	  return!excluder.excludeClass(f,    f.getType(),    serialize)||!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	17	None	replace
210	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  deserialized);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  deserialized);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  deserialized);	  return!excluder.excludeClass(f,    f.getType(),    serialize)||!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	17	None	replace
211	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize,  excluder)||!excluder.excludeField(f,  excluder,  deserialized);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize,  excluder)||!excluder.excludeField(f,  excluder,  deserialized);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize,  excluder)||!excluder.excludeField(f,  excluder,  deserialized);	  return!excluder.excludeClass(f,    f.getType(),    serialize)||!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	17	None	replace
212	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  deserialize)&&!excluder.excludeField(f,  excluder);  [CE]  cannot  find  symbol  deserialize  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  deserialize)&&!excluder.excludeField(f,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  deserialize)&&!excluder.excludeField(f,  excluder);	  return!excluder.excludeClass(f.getType(),    serialized)&&!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  deserialize	8	None	replace
213	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  value)&&!excluder.excludeField(f,  excluder);  [CE]  cannot  find  symbol  value  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  value)&&!excluder.excludeField(f,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  value)&&!excluder.excludeField(f,  excluder);	  return!excluder.excludeClass(f.getType(),    serialized)&&!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  value	8	None	replace
214	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  type)&&!excluder.excludeField(f,  excluder);  [CE]  cannot  find  symbol  type  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  type)&&!excluder.excludeField(f,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  type)&&!excluder.excludeField(f,  excluder);	  return!excluder.excludeClass(f.getType(),    serialized)&&!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  type	8	None	replace
215	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluder,  excluder);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluder,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluder,  excluder);	  return!excluder.excludeField(f,    serialize)&&!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	33	None	replace
216	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluder,  deserialized);  [CE]  cannot  find  symbol  deserialized  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluder,  deserialized);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluder,  deserialized);	  return!excluder.excludeField(f,    serialize)&&!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  deserialized	33	None	replace
217	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluder,  excluded);  [CE]  cannot  find  symbol  excluded  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluder,  excluded);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excluder,  excluded);	  return!excluder.excludeField(f,    serialize)&&!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  excluded	33	None	replace
218	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.excludeField(f,  excluder,  null);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.excludeField(f,  excluder,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  serialize)&&!excluder.excludeField(f,  excluder,  null);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    null);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	19	None	replace
219	[BUG]  [BUGGY]  for(Field  f  :  f.getDeclaredFields())  {  return  true;  }  [CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  for(Field  f  :  f.getDeclaredFields())  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	for(Field  f  :  f.getDeclaredFields())  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    for(Field    f    :    f.getDeclaredFields())    {    return    true;    }    	non-compiled	[CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)	77	None	replace
220	[BUG]  [BUGGY]  for(Field  f  :  excluder.getDeclaredFields())  {  return  true;  }  [CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  for(Field  f  :  excluder.getDeclaredFields())  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	for(Field  f  :  excluder.getDeclaredFields())  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    for(Field    f    :    f.getDeclaredFields())    {    return    true;    }    	non-compiled	[CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)	77	None	replace
221	[BUG]  [BUGGY]  For(Field  f  :  f.getDeclaredFields())  {  return  true;  }  [CE]  ')'  expected  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  For(Field  f  :  f.getDeclaredFields())  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	For(Field  f  :  f.getDeclaredFields())  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    for(Field    f    :    f.getDeclaredFields())    {    return    true;    }    	non-compiled	[CE]  ')'  expected	77	None	replace
222	[BUG]  [BUGGY]  For(Field  f  :  excluder.getDeclaredFields())  {  return  true;  }  [CE]  ')'  expected  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  For(Field  f  :  excluder.getDeclaredFields())  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	For(Field  f  :  excluder.getDeclaredFields())  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    for(Field    f    :    f.getDeclaredFields())    {    return    true;    }    	non-compiled	[CE]  ')'  expected	77	None	replace
223	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize,  f)&&!excluder.excludeField(f,  excluder);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize,  f)&&!excluder.excludeField(f,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize,  f)&&!excluder.excludeField(f,  excluder);	  return!excluder.excludeField(f,    f.getType(),    serialize)&&!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	31	None	replace
224	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  [CE]  ')'  expected  [FE]          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    serialize);    }    	non-compiled	[CE]  ')'  expected	54	None	replace
225	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder,  deserialize);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder,  deserialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder,  deserialize);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	1	None	replace
226	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder,  delegate);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder,  delegate);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder,  delegate);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	1	None	replace
227	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder,  exclusionr);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder,  exclusionr);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder,  exclusionr);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	1	None	replace
228	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  excludedr);  [CE]  cannot  find  symbol  excludedr  [FE]            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  excludedr);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  excludedr);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    exclusionr);    	non-compiled	[CE]  cannot  find  symbol  excludedr	60	None	replace
229	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    null);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
230	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    null);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
231	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  null);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  null);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    null);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
232	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.exclude  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.exclude  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.exclude	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    null);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
233	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  exceptions);  [CE]  cannot  find  symbol  exceptions  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  exceptions);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  exceptions);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    null,    deserialized);    	non-compiled	[CE]  cannot  find  symbol  exceptions	24	None	replace
234	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	add	return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)||    =    excluder.excludeField(f,    serialize);    }    	compilable	  [FE]  ComparisonFailure  	55	1	replace
235	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  serialize);  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)||    =    excluder.excludeField(f,    serialize);    }    	compilable	  [FE]  ComparisonFailure  	55	1	replace
236	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)||!excluder.excludeField(f,  serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	add	return!excluder.excludeField(f,  serialize)||!excluder.excludeField(f,  serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)||    =    excluder.excludeField(f,    serialize);    }    	compilable	  [FE]  ComparisonFailure  	55	1	replace
237	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)||!excluder.excludeField(f,  serialize);  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)||!excluder.excludeField(f,  serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)||!excluder.excludeField(f,  serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)||    =    excluder.excludeField(f,    serialize);    }    	compilable	  [FE]  ComparisonFailure  	55	1	replace
238	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.excludeField(f,  serialize);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.excludeField(f,  serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  serialize)&&!excluder.excludeField(f,  serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)||    =    excluder.excludeField(f,    serialize);    }    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	55	None	replace
239	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  serialize)||!excluder.excludeField(f,  serialize);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  serialize)||!excluder.excludeField(f,  serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  serialize)||!excluder.excludeField(f,  serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)||    =    excluder.excludeField(f,    serialize);    }    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	55	None	replace
240	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  Serialize.class)&&!excluder.excludeField(f,  excluder);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  Serialize.class)&&!excluder.excludeField(f,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  Serialize.class)&&!excluder.excludeField(f,  excluder);	  return!excluder.excludeClass(f.getType(),    serialized)&&!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
241	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(escaped,  excluder);  [CE]  cannot  find  symbol  escaped  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(escaped,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(escaped,  excluder);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.includeField(serialize,    excluder);    	non-compiled	[CE]  cannot  find  symbol  escaped	5	None	replace
242	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.encludeField(serialize,  excluder);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.encludeField(serialize,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.encludeField(serialize,  excluder);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.includeField(serialize,    excluder);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
243	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(excluder,  serialize);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(excluder,  serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(excluder,  serialize);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.includeField(serialize,    excluder);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
244	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  null);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  null);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    excluder,    null);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	23	None	replace
245	[BUG]  [BUGGY]  return!exclude.excludeClass(f.getType(),  serialize)&&!excluder.encludeField(f,  excluder);  [CE]  cannot  find  symbol  exclude  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!exclude.excludeClass(f.getType(),  serialize)&&!excluder.encludeField(f,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!exclude.excludeClass(f.getType(),  serialize)&&!excluder.encludeField(f,  excluder);	  return!exclude.excludeClass(f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  exclude	4	None	replace
246	[BUG]  [BUGGY]  return!exclude.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder);  [CE]  cannot  find  symbol  exclude  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!exclude.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!exclude.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder);	  return!exclude.excludeClass(f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  exclude	4	None	replace
247	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
248	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
249	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
250	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.excludeField(f,  serialize);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.excludeField(f,  serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.excludeField(f,  serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||    =    excluder.excludeField(f,    serialize);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
251	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&  =  excluder.excludeField(f,  serialize);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&  =  excluder.excludeField(f,  serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&  =  excluder.excludeField(f,  serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||    =    excluder.excludeField(f,    serialize);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
252	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&  =  excluder.excludeField(f,  serialize);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&  =  excluder.excludeField(f,  serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&  =  excluder.excludeField(f,  serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||    =    excluder.excludeField(f,    serialize);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
253	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&  =  excluder.excludeField(f,  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&  =  excluder.excludeField(f,  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&  =  excluder.excludeField(f,	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||    =    excluder.excludeField(f,    serialize);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
254	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&  =  excluder.excludeField  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&  =  excluder.excludeField  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&  =  excluder.excludeField	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||    =    excluder.excludeField(f,    serialize);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
255	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  dese  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  dese  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  dese	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
256	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  dese  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  dese  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  dese	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
257	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  des  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  des  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  des	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
258	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  excludedRaw);  [CE]  cannot  find  symbol  excludedRaw  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  excludedRaw);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  excludedRaw);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserializer);    	non-compiled	[CE]  cannot  find  symbol  excludedRaw	69	None	replace
259	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  deserialize);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  deserialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  deserialize);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(e,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	63	None	replace
260	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  exclusionr);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  exclusionr);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  exclusionr);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(e,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	63	None	replace
261	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  delegate);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  delegate);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  delegate);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(e,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	63	None	replace
262	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  scope);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  scope);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  scope);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(e,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	63	None	replace
263	[BUG]  [BUGGY]  if(serialize  &&  excluder  ==  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(serialize  &&  excluder  ==  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize  &&  excluder  ==  null)  {  return  false;  }	  if(serialize    ||    excluder    ==    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	36	None	replace
264	[BUG]  [BUGGY]  if(f  ||  serialize  ==  null)  {  return  false;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(f  ||  serialize  ==  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(f  ||  serialize  ==  null)  {  return  false;  }	  if(serialize    ||    excluder    ==    null)    {    return    false;    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	36	None	replace
265	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	add	return!excluder.excludeField(f,  serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(serialize)    {    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    }    	compilable	  [FE]  ComparisonFailure  	71	1	replace
266	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize);  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(serialize)    {    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    }    	compilable	  [FE]  ComparisonFailure  	71	1	replace
267	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  exclusions);  [CE]  cannot  find  symbol  exclusions  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  exclusions);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  exclusions);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    null);    	non-compiled	[CE]  cannot  find  symbol  exclusions	19	None	replace
268	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excludedr);  [CE]  cannot  find  symbol  excludedr  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excludedr);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  excludedr);	  return!excluder.excludeField(f,    serialize)&&!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  cannot  find  symbol  excludedr	29	None	replace
269	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  Serialize);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  Serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  Serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    Serialize);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
270	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    Serialize);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
271	[BUG]  [BUGGY]  if(excluder)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  }  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  }	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    	non-compiled	[CE]  incompatible  types	72	None	replace
272	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    	non-compiled	[CE]  ')'  expected	72	None	replace
273	[BUG]  [BUGGY]  if(excluder)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.exclu  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.exclu  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.exclu	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    	non-compiled	[CE]  ')'  expected	72	None	replace
274	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize,  excluder)&&!excluder.excludeField(f,  excluder,  deserialization);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize,  excluder)&&!excluder.excludeField(f,  excluder,  deserialization);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize,  excluder)&&!excluder.excludeField(f,  excluder,  deserialization);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserialization);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	81	None	replace
275	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  deserialize);  [CE]  cannot  find  symbol  deserialize  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  deserialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  deserialize);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.includeField(f,    excludedr);    	non-compiled	[CE]  cannot  find  symbol  deserialize	80	None	replace
276	[BUG]  [BUGGY]  Field  f  =  excluder.getField(f.getLocalName());  [CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  Field  f  =  excluder.getField(f.getLocalName());  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	Field  f  =  excluder.getField(f.getLocalName());	  Field    f    =    excluder.getField(f.getName());    	non-compiled	[CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)	40	None	replace
277	[BUG]  [BUGGY]  Field  f  =  excluder.getField(f.toString());  [CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)  [FE]                                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  Field  f  =  excluder.getField(f.toString());  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	Field  f  =  excluder.getField(f.toString());	  Field    f    =    excluder.getField(f.getName());    	non-compiled	[CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)	40	None	replace
278	[BUG]  [BUGGY]  for(Field  f  :  excluder.getFields())  {  if(serialize  &&  f.isSubtype(serialize))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  for(Field  f  :  excluder.getFields())  {  if(serialize  &&  f.isSubtype(serialize))  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	for(Field  f  :  excluder.getFields())  {  if(serialize  &&  f.isSubtype(serialize))  {  return  true;  }	  for(Field    f    :    excluder.getFields())    {    if(serialize    ||    f.isSubtype(serialize))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
279	[BUG]  [BUGGY]  for(Field  f  :  excludedr.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  for(Field  f  :  excludedr.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	for(Field  f  :  excludedr.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  true;  }	  for(Field    f    :    excluder.getFields())    {    if(serialize    ||    f.isSubtype(serialize))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
280	[BUG]  [BUGGY]  if(excluder  ==  null  ||  excluder!=  null)  {  return  true;  }  [CE]  missing  return  statement  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder  ==  null  ||  excluder!=  null)  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder  ==  null  ||  excluder!=  null)  {  return  true;  }	  if(excluder    ==    null)    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	67	None	replace
281	[BUG]  [BUGGY]  if(excluder  ==  null  ||  excluder.equals(f))  {  return  true;  }  [CE]  missing  return  statement  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder  ==  null  ||  excluder.equals(f))  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder  ==  null  ||  excluder.equals(f))  {  return  true;  }	  if(excluder    ==    null)    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	67	None	replace
282	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  deserialize);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  deserialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  deserialize);	  return!excluder.excludeClass(f,    f.getType(),    serialize)||!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	17	None	replace
283	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialization);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialization);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialization);	  return!excluder.excludeClass(f,    f.getType(),    serialize)||!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	17	None	replace
284	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize,  excluder)&&!excluder.excludeField(f,  excluder,  deserialized);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize,  excluder)&&!excluder.excludeField(f,  excluder,  deserialized);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize,  excluder)&&!excluder.excludeField(f,  excluder,  deserialized);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserialized);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	32	None	replace
285	[BUG]  [BUGGY]  if(excluder)  {  if(serialize  ||  excluder  ==  null)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder)  {  if(serialize  ||  excluder  ==  null)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder)  {  if(serialize  ||  excluder  ==  null)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    String    name    =    f.getName();    if(name.length()    ==    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
286	[BUG]  [BUGGY]  if(serialize  &&  excluder  ==  null)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(serialize  &&  excluder  ==  null)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize  &&  excluder  ==  null)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    String    name    =    f.getName();    if(name.length()    ==    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
287	[BUG]  [BUGGY]  if(excluder!=  null)  {  return  true;  }  [CE]  missing  return  statement  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder!=  null)  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder!=  null)  {  return  true;  }	  if(excluder    ==    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	65	None	replace
288	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  factory);  [CE]  cannot  find  symbol  factory  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  factory);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  factory);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    name);    	non-compiled	[CE]  cannot  find  symbol  factory	16	None	replace
289	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  constructor);  [CE]  cannot  find  symbol  constructor  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  constructor);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  constructor);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    name);    	non-compiled	[CE]  cannot  find  symbol  constructor	16	None	replace
290	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  deserialize);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  deserialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  deserialize);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	62	None	replace
291	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder,  deserialize);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder,  deserialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder,  deserialize);	  return!excluder.excludeClass(f,    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	3	None	replace
292	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder,  name);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder,  name);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder,  name);	  return!excluder.excludeClass(f,    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	3	None	replace
293	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialize,  excluder,  excluded);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialize,  excluder,  excluded);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialize,  excluder,  excluded);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    deserialize,    excluder);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	26	None	replace
294	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialize,  excluder,  exclusionr);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialize,  excluder,  exclusionr);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialize,  excluder,  exclusionr);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    deserialize,    excluder);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	26	None	replace
295	[BUG]  [BUGGY]  if(excluder  ||  serialize  ==  null)  {  return  true;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder  ||  serialize  ==  null)  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder  ||  serialize  ==  null)  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    return    true;    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	38	None	replace
296	[BUG]  [BUGGY]  if(f  ||  serialize  ==  null)  {  return  true;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(f  ||  serialize  ==  null)  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(f  ||  serialize  ==  null)  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    return    true;    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	38	None	replace
297	[BUG]  [BUGGY]  if(f  ||  serialize  ==  excluder)  {  return  true;  }  [CE]  incomparable  types:  boolean  and  Excluder  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(f  ||  serialize  ==  excluder)  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(f  ||  serialize  ==  excluder)  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    return    true;    }    	non-compiled	[CE]  incomparable  types:  boolean  and  Excluder	38	None	replace
298	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  Serialize);  [CE]  cannot  find  symbol  Serialize  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  Serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)&&!excluder.excludeField(f,  Serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    Serialize);    }    	non-compiled	[CE]  cannot  find  symbol  Serialize	57	None	replace
299	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize)||!excluder.excludeField(f,  Serialize);  [CE]  cannot  find  symbol  Serialize  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize)||!excluder.excludeField(f,  Serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize)||!excluder.excludeField(f,  Serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    Serialize);    }    	non-compiled	[CE]  cannot  find  symbol  Serialize	57	None	replace
300	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  deserialize);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  deserialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  deserialize);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    null);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	34	None	replace
301	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  name);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  name);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  name);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    null);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	34	None	replace
302	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  serialize,  f)||!excluder.excludeField(f,  null);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  serialize,  f)||!excluder.excludeField(f,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  serialize,  f)||!excluder.excludeField(f,  null);	  return!excluder.excludeClass(f,    f.getType(),    serialize)||!excluder.excludeField(f,    null);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	61	None	replace
303	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluded);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluded);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluded);	  return!excluder.excludeClass(f,    f.getType(),    serialize)||!excluder.excludeField(f,    null);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	61	None	replace
304	[BUG]  [BUGGY]  if(serialize  &&  excluder  ==  null)  {  for(Field  f  :  f.getAnnotations())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(serialize  &&  excluder  ==  null)  {  for(Field  f  :  f.getAnnotations())  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize  &&  excluder  ==  null)  {  for(Field  f  :  f.getAnnotations())  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    for(Field    f    :    f.getAnnotations())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
305	[BUG]  [BUGGY]  if(serialize  ||  excluder  ==  null)  {  for(Field  f  :  f.getAnnotations())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(serialize  ||  excluder  ==  null)  {  for(Field  f  :  f.getAnnotations())  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize  ||  excluder  ==  null)  {  for(Field  f  :  f.getAnnotations())  {  return  false;  }	  if(serialize    ||    excluder    ==    null)    {    for(Field    f    :    f.getAnnotations())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
306	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.excludeField(f,  excluder);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.excludeField(f,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  serialize)&&!excluder.excludeField(f,  excluder);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    delegate);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	59	None	replace
307	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  exclusionr);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  exclusionr);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  exclusionr);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	9	None	replace
308	[BUG]  [BUGGY]  if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  return!excluder.excludeClass(f.getType()  [CE]  ')'  expected  [FE]        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  return!excluder.excludeClass(f.getType()  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  return!excluder.excludeClass(f.getType()	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(serialize)    {    return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    }    	non-compiled	[CE]  ')'  expected	70	None	replace
309	[BUG]  [BUGGY]  if(f.equals(serialize)||  excluder!=  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(f.equals(serialize)||  excluder!=  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(f.equals(serialize)||  excluder!=  null)  {  return  false;  }	  if(serialize    ||    excluder!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	37	None	replace
310	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  name,  excluder);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  name,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  name,  excluder);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    name);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	35	None	replace
311	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  name,  excluded);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  name,  excluded);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  name,  excluded);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    name);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	35	None	replace
312	[BUG]  [BUGGY]  if(serialize  &&  excluder  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(serialize  &&  excluder  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize  &&  excluder  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(serialize    ||    excluder    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  missing  return  statement	68	None	replace
313	[BUG]  [BUGGY]  if(f  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(f  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(f  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(serialize    ||    excluder    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  missing  return  statement	68	None	replace
314	[BUG]  [BUGGY]  if(serialize  &&  excluder  ==  null)  {  for(Field  f  :  f.getDeclaredFields())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(serialize  &&  excluder  ==  null)  {  for(Field  f  :  f.getDeclaredFields())  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize  &&  excluder  ==  null)  {  for(Field  f  :  f.getDeclaredFields())  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    for(Field    f    :    f.getDeclaredFields())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
315	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder,  deserialization);  [CE]  cannot  find  symbol  deserialization  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder,  deserialization);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder,  deserialization);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    null,    excluder);    	non-compiled	[CE]  cannot  find  symbol  deserialization	21	None	replace
316	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  deserialize);  [CE]  cannot  find  symbol  deserialize  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  deserialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  deserialize);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    null,    excluded);    	non-compiled	[CE]  cannot  find  symbol  deserialize	25	None	replace
317	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize,  excluder)&&!excluder.excludeField(f,  excluder,  deserializer);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize,  excluder)&&!excluder.excludeField(f,  excluder,  deserializer);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize,  excluder)&&!excluder.excludeField(f,  excluder,  deserializer);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserializer);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	82	None	replace
318	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder,  delegate);  [CE]  cannot  find  symbol  delegate  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder,  delegate);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder,  delegate);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    null,    excluder);    	non-compiled	[CE]  cannot  find  symbol  delegate	22	None	replace
319	[BUG]  [BUGGY]  if(serialize  &&  excluder  ==  null)  {  for(Field  f  :  f.getDeclaredFields())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(serialize  &&  excluder  ==  null)  {  for(Field  f  :  f.getDeclaredFields())  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize  &&  excluder  ==  null)  {  for(Field  f  :  f.getDeclaredFields())  {  return  false;  }	  if(serialize    ||    excluder    ==    null)    {    for(Field    f    :    f.getDeclaredFields())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
320	[BUG]  [BUGGY]  if(serialize  ||  excluder!=  null)  {  for(Field  f  :  f.getDeclaredFields())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(serialize  ||  excluder!=  null)  {  for(Field  f  :  f.getDeclaredFields())  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize  ||  excluder!=  null)  {  for(Field  f  :  f.getDeclaredFields())  {  return  false;  }	  if(serialize    ||    excluder    ==    null)    {    for(Field    f    :    f.getDeclaredFields())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
321	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  excluder,  deserialize);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  excluder,  deserialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  excluder,  deserialize);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(excluder,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	64	None	replace
322	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  excluder,  null);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  excluder,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  excluder,  null);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(excluder,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	64	None	replace
323	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  excluder,  delegate);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  excluder,  delegate);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  excluder,  delegate);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(excluder,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	64	None	replace
324	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.excludeField(f,  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.excludeField(f,  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.excludeField(f,	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||    =    excluder.excludeField(f,    serialize);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
325	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  excludedR);  [CE]  cannot  find  symbol  excludedR  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  excludedR);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(f,  excludedR);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.includeField(f,    excludedr);    	non-compiled	[CE]  cannot  find  symbol  excludedR	80	None	replace
326	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize,  excluder)&&!excluder.excludeField(f,  excluder,  name);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize,  excluder)&&!excluder.excludeField(f,  excluder,  name);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize,  excluder)&&!excluder.excludeField(f,  excluder,  name);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    name);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	35	None	replace
327	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  delegate);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  delegate);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  delegate);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    name);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	35	None	replace
328	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  factory,  name);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  factory,  name);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  factory,  name);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    name);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	35	None	replace
329	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  constructor);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  constructor);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  constructor);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    name);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	35	None	replace
330	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  if(serialize)  {  Class  <?>  f  =  f.getClass();  if(f!=  null)  {  return  false;  }  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  if(serialize)  {  Class  <?>  f  =  f.getClass();  if(f!=  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  if(serialize)  {  Class  <?>  f  =  f.getClass();  if(f!=  null)  {  return  false;  }	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(serialize)    {    Class    <?>    f    =    f.getClass();    if(f!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	76	None	replace
331	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  if(serialize)  {  Class  <?>  f  =  f.getClass();  if(f!=  null)  {  return  false  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  if(serialize)  {  Class  <?>  f  =  f.getClass();  if(f!=  null)  {  return  false  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  if(serialize)  {  Class  <?>  f  =  f.getClass();  if(f!=  null)  {  return  false	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(serialize)    {    Class    <?>    f    =    f.getClass();    if(f!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	76	None	replace
332	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  excluder,  deserialization);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  excluder,  deserialization);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  excluder,  deserialization);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(excluder,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	64	None	replace
333	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  excluder,  exclusionr);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  excluder,  exclusionr);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(excluder,  excluder,  exclusionr);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(excluder,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	64	None	replace
334	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)&&  [CE]  ')'  expected  [FE]          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)&&  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)&&	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    serialize);    }    	non-compiled	[CE]  ')'  expected	54	None	replace
335	[BUG]  [BUGGY]  if(excluder!=  null)  {  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  }  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder!=  null)  {  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder!=  null)  {  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  }	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    serialize);    }    	non-compiled	[CE]  missing  return  statement	54	None	replace
336	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  exporter);  [CE]  cannot  find  symbol  exporter  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  exporter);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  exporter);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserialization);    	non-compiled	[CE]  cannot  find  symbol  exporter	50	None	replace
337	[BUG]  [BUGGY]  for(Field  f  :  f.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  for(Field  f  :  f.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	for(Field  f  :  f.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  true;  }	  for(Field    f    :    excluder.getFields())    {    if(serialize    ||    f.isSubtype(serialize))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
338	[BUG]  [BUGGY]  for(Field  f  :  f.getDeclaredFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  for(Field  f  :  f.getDeclaredFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	for(Field  f  :  f.getDeclaredFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  true;  }	  for(Field    f    :    excluder.getFields())    {    if(serialize    ||    f.isSubtype(serialize))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
339	[BUG]  [BUGGY]  for(Field  f  :  f.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  for(Field  f  :  f.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	for(Field  f  :  f.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  false;  }	  for(Field    f    :    excluder.getFields())    {    if(serialize    ||    f.isSubtype(serialize))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
340	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  expr);  [CE]  cannot  find  symbol  expr  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  expr);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  expr);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserializer);    	non-compiled	[CE]  cannot  find  symbol  expr	69	None	replace
341	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialized,  deserialized);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialized,  deserialized);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialized,  deserialized);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserialized);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	32	None	replace
342	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer);	  return!excluder.excludeClass(f,    f.getType(),    serialize)||!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	17	None	replace
343	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  factory);  [CE]  cannot  find  symbol  factory  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  factory);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  excluder,  factory);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    excluder,    deserialized);    	non-compiled	[CE]  cannot  find  symbol  factory	18	None	replace
344	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  null,  deserialized);  [CE]  cannot  find  symbol  deserialized  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  null,  deserialized);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  null,  deserialized);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    excluder,    deserialized);    	non-compiled	[CE]  cannot  find  symbol  deserialized	18	None	replace
345	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  nu  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  nu  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  nu	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    null);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
346	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    null);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
347	[BUG]  [BUGGY]  if(serialize  ||  excluder!=  null)  {  return  true;  }  [CE]  missing  return  statement  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(serialize  ||  excluder!=  null)  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize  ||  excluder!=  null)  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	38	None	replace
348	[BUG]  [BUGGY]  if(serialize  ||  excluder  ==  null)return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(serialize  ||  excluder  ==  null)return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize  ||  excluder  ==  null)return  false;  }	  if(serialize    ||    excluder    ==    null)    {    return    true;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
349	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    Serialize);    }    	non-compiled	[CE]  ')'  expected	57	None	replace
350	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    Serialize);    }    	non-compiled	[CE]  ')'  expected	57	None	replace
351	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.exclu  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.exclu  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  Serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.exclu	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    Serialize);    }    	non-compiled	[CE]  ')'  expected	57	None	replace
352	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  this.serialize);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  this.serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  this.serialize);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserialize);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	15	None	replace
353	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  des  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  des  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  des	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
354	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  dese  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  dese  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  dese	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    deserialize);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
355	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.exclu  [CE]  ')'  expected  [FE]          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.exclu  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.exclu	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(serialize)    {    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    }    	non-compiled	[CE]  ')'  expected	71	None	replace
356	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(serialize)  {  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(serialize)    {    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    }    	non-compiled	[CE]  ')'  expected	71	None	replace
357	[BUG]  [BUGGY]  Field  f  =  excludedr.getField(f.getName(),  serialize);  [CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  Field  f  =  excludedr.getField(f.getName(),  serialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	Field  f  =  excludedr.getField(f.getName(),  serialize);	  Field    f    =    excluder.getField(f.getName());    	non-compiled	[CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)	40	None	replace
358	[BUG]  [BUGGY]  Field  f  =  excluder.getField(f.getSerialize());  [CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)  [FE]                                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  Field  f  =  excluder.getField(f.getSerialize());  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	Field  f  =  excluder.getField(f.getSerialize());	  Field    f    =    excluder.getField(f.getName());    	non-compiled	[CE]  variable  f  is  already  defined  in  method  excludeField(Field,boolean,Excluder)	40	None	replace
359	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  exclusionr);  [CE]  cannot  find  symbol  exclusionr  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  exclusionr);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  exclusionr);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    null);    	non-compiled	[CE]  cannot  find  symbol  exclusionr	19	None	replace
360	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  deserialization);  [CE]  cannot  find  symbol  deserialization  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  deserialization);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  deserialization);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    null);    	non-compiled	[CE]  cannot  find  symbol  deserialization	19	None	replace
361	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  offset);  [CE]  cannot  find  symbol  offset  [FE]                                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  offset);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  offset);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    null);    	non-compiled	[CE]  cannot  find  symbol  offset	19	None	replace
362	[BUG]  [BUGGY]  Pentru(Field  f  :  f.getDeclaredFields())  {  return  false;  }  [CE]  ')'  expected  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  Pentru(Field  f  :  f.getDeclaredFields())  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	Pentru(Field  f  :  f.getDeclaredFields())  {  return  false;  }	  if(serialize    ||    excluder    ==    null)    {    for(Field    f    :    f.getDeclaredFields())    {    return    false;    }    	non-compiled	[CE]  ')'  expected	78	None	replace
363	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  null,  deserialized);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  null,  deserialized);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.excludeField(f,  null,  deserialized);	  return!excluder.excludeClass(f,    f.getType(),    serialize)||!excluder.excludeField(f,    null);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	61	None	replace
364	[BUG]  [BUGGY]  if(excluder!=  null  ||  excluder.equals(serialize))  {  return  false;  }  [CE]  missing  return  statement  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder!=  null  ||  excluder.equals(serialize))  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder!=  null  ||  excluder.equals(serialize))  {  return  false;  }	  if(excluder!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	66	None	replace
365	[BUG]  [BUGGY]  if(excluder!=  null  &&  excluder.equals(serialize)||  excluder.equals(serialize))  {  return  false;  }  [CE]  missing  return  statement  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder!=  null  &&  excluder.equals(serialize)||  excluder.equals(serialize))  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder!=  null  &&  excluder.equals(serialize)||  excluder.equals(serialize))  {  return  false;  }	  if(excluder!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	66	None	replace
366	[BUG]  [BUGGY]  if(excluder!=  null  &&  excluder.equals(serialize))  {  return  false;  }  [CE]  missing  return  statement  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder!=  null  &&  excluder.equals(serialize))  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder!=  null  &&  excluder.equals(serialize))  {  return  false;  }	  if(excluder!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	66	None	replace
367	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  $anonymous1);  [CE]  cannot  find  symbol  $anonymous1  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  $anonymous1);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  $anonymous1);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    null,    deserialized);    	non-compiled	[CE]  cannot  find  symbol  $anonymous1	24	None	replace
368	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  exporter);  [CE]  cannot  find  symbol  exporter  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  exporter);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  exporter);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    null,    deserialized);    	non-compiled	[CE]  cannot  find  symbol  exporter	24	None	replace
369	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialization);  [CE]  cannot  find  symbol  deserialization  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialization);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialization);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    offset);    	non-compiled	[CE]  cannot  find  symbol  deserialization	10	None	replace
370	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder,  deserializer);  [CE]  cannot  find  symbol  deserializer  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder,  deserializer);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  excluder,  deserializer);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    null,    excluder);    	non-compiled	[CE]  cannot  find  symbol  deserializer	22	None	replace
371	[BUG]  [BUGGY]  if(serialize  ||  excluder!=  null)  {  for(Field  f  :  f.getAnnotations())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(serialize  ||  excluder!=  null)  {  for(Field  f  :  f.getAnnotations())  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize  ||  excluder!=  null)  {  for(Field  f  :  f.getAnnotations())  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    for(Field    f    :    f.getAnnotations())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
372	[BUG]  [BUGGY]  Pentru(Field  f  :  f.getAnnotations())  {  return  true;  }  [CE]  ')'  expected  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  Pentru(Field  f  :  f.getAnnotations())  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	Pentru(Field  f  :  f.getAnnotations())  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    for(Field    f    :    f.getAnnotations())    {    return    true;    }    	non-compiled	[CE]  ')'  expected	79	None	replace
373	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  deserialization);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  deserialization);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  deserialization);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(e,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	63	None	replace
374	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  deserializer);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  deserializer);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(e,  excluder,  deserializer);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(e,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	63	None	replace
375	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize,  excluder)&&!excluder.excludeField(f,  excluder);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize,  excluder)&&!excluder.excludeField(f,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize,  excluder)&&!excluder.excludeField(f,  excluder);	  return!excluder.excludeField(f,    f.getType(),    serialize)&&!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	31	None	replace
376	[BUG]  [BUGGY]  if(excluder  ==  null  ||  excluder!=  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder  ==  null  ||  excluder!=  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder  ==  null  ||  excluder!=  null)  {  return  false;  }	  if(excluder    ==    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	65	None	replace
377	[BUG]  [BUGGY]  if(excluder  ==  null  ||  excluder.serialize)  {  return  false;  }  [CE]  cannot  find  symbol  serialize  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder  ==  null  ||  excluder.serialize)  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder  ==  null  ||  excluder.serialize)  {  return  false;  }	  if(excluder    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  serialize	65	None	replace
378	[BUG]  [BUGGY]  if(excluder  ==  null  ||  excluder.isConstructor())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder  ==  null  ||  excluder.isConstructor())  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder  ==  null  ||  excluder.isConstructor())  {  return  false;  }	  if(excluder    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
379	[BUG]  [BUGGY]  if(excluder  ==  null  ||  excluder.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder  ==  null  ||  excluder.isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder  ==  null  ||  excluder.isUnknownType())  {  return  false;  }	  if(excluder    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
380	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize,  excluder)&&!excluder.excludeField(f,  excluder,  null);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize,  excluder)&&!excluder.excludeField(f,  excluder,  null);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize,  excluder)&&!excluder.excludeField(f,  excluder,  null);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    null);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	34	None	replace
381	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  deserialization);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  deserialization);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  deserialization);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    null);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	34	None	replace
382	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  exclusionr);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  exclusionr);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  null,  exclusionr);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    null);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	34	None	replace
383	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserializer,  excluder);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserializer,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserializer,  excluder);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserializer);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	82	None	replace
384	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer,  deserializer);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer,  deserializer);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer,  deserializer);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserializer);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	82	None	replace
385	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer,  constructor);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer,  constructor);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserializer,  constructor);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserializer);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	82	None	replace
386	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserializer,  deserializer);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserializer,  deserializer);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserializer,  deserializer);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserializer);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	82	None	replace
387	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialization,  excluder);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialization,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialization,  excluder);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserialization);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	81	None	replace
388	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialization,  excluded);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialization,  excluded);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  excluder,  deserialization,  excluded);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserialization);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	81	None	replace
389	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||  ||  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||  ||  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||  ||	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)||    ||!excluder.excludeField(f,    serialize);    }    	non-compiled	[CE]  ')'  expected	56	None	replace
390	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)||    ||!excluder.excludeField(f,    serialize);    }    	non-compiled	[CE]  ')'  expected	56	None	replace
391	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  if(serialize)  {  Class  <?>  f  =  f.getRawClass();  if(f!=  null)  {  return  false;  }  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  if(serialize)  {  Class  <?>  f  =  f.getRawClass();  if(f!=  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  if(serialize)  {  Class  <?>  f  =  f.getRawClass();  if(f!=  null)  {  return  false;  }	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(serialize)    {    Class    <?>    f    =    f.getRawClass();    if(f!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	75	None	replace
392	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  if(serialize)  {  Class  <?>  f  =  f.getRawClass();  if(f  }  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  if(serialize)  {  Class  <?>  f  =  f.getRawClass();  if(f  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  if(serialize)  {  Class  <?>  f  =  f.getRawClass();  if(f  }	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(serialize)    {    Class    <?>    f    =    f.getRawClass();    if(f!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	75	None	replace
393	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  if(serialize)  {  Class  <?>  f  =  f.getRawClass();  if(f!=  null)  {  return  false  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  if(serialize)  {  Class  <?>  f  =  f.getRawClass();  if(f!=  null)  {  return  false  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  if(serialize)  {  Class  <?>  f  =  f.getRawClass();  if(f!=  null)  {  return  false	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(serialize)    {    Class    <?>    f    =    f.getRawClass();    if(f!=    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	75	None	replace
394	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.exclude  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.exclude  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.exclude	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)||    =    excluder.excludeField(f,    serialize);    }    	non-compiled	[CE]  ')'  expected	55	None	replace
395	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.excludeField(f,  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.excludeField(f,  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.excludeField(f,	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)||    =    excluder.excludeField(f,    serialize);    }    	non-compiled	[CE]  ')'  expected	55	None	replace
396	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.exclu  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.exclu  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.exclu	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)||    =    excluder.excludeField(f,    serialize);    }    	non-compiled	[CE]  ')'  expected	55	None	replace
397	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||  =  excluder.	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)||    =    excluder.excludeField(f,    serialize);    }    	non-compiled	[CE]  ')'  expected	55	None	replace
398	[BUG]  [BUGGY]  for(Field  f  :  f.getDeclaredFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  for(Field  f  :  f.getDeclaredFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	for(Field  f  :  f.getDeclaredFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  false;  }	  for(Field    f    :    excluder.getFields())    {    if(serialize    ||    f.isSubtype(serialize))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
399	[BUG]  [BUGGY]  For(Field  f  :  f.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  false;  }  [CE]  ')'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  For(Field  f  :  f.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  false;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	For(Field  f  :  f.getFields())  {  if(serialize  ||  f.isSubtype(serialize))  {  return  false;  }	  for(Field    f    :    excluder.getFields())    {    if(serialize    ||    f.isSubtype(serialize))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	41	None	replace
400	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  deserialization);  [CE]  cannot  find  symbol  deserialization  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  deserialization);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  deserialization);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    null,    excluded);    	non-compiled	[CE]  cannot  find  symbol  deserialization	25	None	replace
401	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  deserializer);  [CE]  cannot  find  symbol  deserializer  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  deserializer);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  null,  deserializer);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.excludeField(f,    null,    excluded);    	non-compiled	[CE]  cannot  find  symbol  deserializer	25	None	replace
402	[BUG]  [BUGGY]  if(f  ==  null  ||  serialize  ==  excluder)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incomparable  types:  boolean  and  Excluder  [FE]                                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(f  ==  null  ||  serialize  ==  excluder)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(f  ==  null  ||  serialize  ==  excluder)  {  throw  new  IllegalArgumentException( " ");  }	  if(serialize    ||    excluder    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  incomparable  types:  boolean  and  Excluder	68	None	replace
403	[BUG]  [BUGGY]  if(excluder  ==  null  ||  serialize  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]                                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder  ==  null  ||  serialize  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder  ==  null  ||  serialize  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(serialize    ||    excluder    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	68	None	replace
404	[BUG]  [BUGGY]  if(excluder  ==  null  ||  serialize  ==  excluder)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incomparable  types:  boolean  and  Excluder  [FE]                                    ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder  ==  null  ||  serialize  ==  excluder)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder  ==  null  ||  serialize  ==  excluder)  {  throw  new  IllegalArgumentException( " ");  }	  if(serialize    ||    excluder    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  incomparable  types:  boolean  and  Excluder	68	None	replace
405	[BUG]  [BUGGY]  if(serialize  ||  excluder  ==  null)return  true;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(serialize  ||  excluder  ==  null)return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize  ||  excluder  ==  null)return  true;  }	  if(serialize    ||    excluder    ==    null)    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
406	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    Serialize);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
407	[BUG]  [BUGGY]  if(excluder  ==  null)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder  ==  null)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder  ==  null)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    String    name    =    f.getName();    if(name.length()    ==    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
408	[BUG]  [BUGGY]  if(excluder  ==  null  ||  serialize)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder  ==  null  ||  serialize)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder  ==  null  ||  serialize)  {  String  name  =  f.getName();  if(name.length()  ==  0)  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    String    name    =    f.getName();    if(name.length()    ==    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
409	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialized)&&!excluder.includeField(serialize,  excluder);  [CE]  cannot  find  symbol  serialized  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialized)&&!excluder.includeField(serialize,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialized)&&!excluder.includeField(serialize,  excluder);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.includeField(serialize,    excluder);    	non-compiled	[CE]  cannot  find  symbol  serialized	5	None	replace
410	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(serialize,  excluder,  excluder);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(serialize,  excluder,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.includeField(serialize,  excluder,  excluder);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.includeField(serialize,    excluder);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
411	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serializer)&&!excluder.includeField(serialize,  excluder);  [CE]  cannot  find  symbol  serializer  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serializer)&&!excluder.includeField(serialize,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serializer)&&!excluder.includeField(serialize,  excluder);	  return!excluder.excludeClass(f.getType(),    serialize)&&!excluder.includeField(serialize,    excluder);    	non-compiled	[CE]  cannot  find  symbol  serializer	5	None	replace
412	[BUG]  [BUGGY]  if(serialize  ||  excluder!=  null)  {  for(Field  f  :  f.getDeclaredFields())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(serialize  ||  excluder!=  null)  {  for(Field  f  :  f.getDeclaredFields())  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(serialize  ||  excluder!=  null)  {  for(Field  f  :  f.getDeclaredFields())  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    for(Field    f    :    f.getDeclaredFields())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
413	[BUG]  [BUGGY]  Pentru(Field  f  :  f.getDeclaredFields())  {  return  true;  }  [CE]  ')'  expected  [FE]                            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  Pentru(Field  f  :  f.getDeclaredFields())  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	Pentru(Field  f  :  f.getDeclaredFields())  {  return  true;  }	  if(serialize    ||    excluder    ==    null)    {    for(Field    f    :    f.getDeclaredFields())    {    return    true;    }    	non-compiled	[CE]  ')'  expected	77	None	replace
414	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder,  deserialization);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder,  deserialization);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder,  deserialization);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	1	None	replace
415	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder,  deserializer);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder,  deserializer);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  f.getType(),  serialize)&&!excluder.includeField(f,  excluder,  deserializer);	  return!excluder.excludeClass(f,    f.getType(),    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	1	None	replace
416	[BUG]  [BUGGY]  if(excluder!=  null)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  }  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder!=  null)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder!=  null)  {  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  }	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    }    	non-compiled	[CE]  missing  return  statement	53	None	replace
417	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.exclu  [CE]  ')'  expected  [FE]          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.exclu  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.exclu	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    }    	non-compiled	[CE]  ')'  expected	53	None	replace
418	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.exclude  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.exclude  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  serialize);  if(excluder!=  null)  {  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.exclude	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(excluder!=    null)    {    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    }    	non-compiled	[CE]  ')'  expected	53	None	replace
419	[BUG]  [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder,  deserialization);  [CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder,  deserialization);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f,  serialize)&&!excluder.includeField(f,  excluder,  deserialization);	  return!excluder.excludeClass(f,    serialize)&&!excluder.includeField(f,    excluder);    	non-compiled	[CE]  method  excludeClass  in  class  Excluder  cannot  be  applied  to  given  types;	3	None	replace
420	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  if(!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    	non-compiled	[CE]  ')'  expected	72	None	replace
421	[BUG]  [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  if(!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    	non-compiled	[CE]  ')'  expected	72	None	replace
422	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serializer)&&!excluder.excludeField(f,  excluder);  [CE]  cannot  find  symbol  serializer  [FE]                      ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serializer)&&!excluder.excludeField(f,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serializer)&&!excluder.excludeField(f,  excluder);	  return!excluder.excludeClass(f.getType(),    serialized)&&!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  serializer	8	None	replace
423	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  deserialized)&&!excluder.excludeField(f,  excluder);  [CE]  cannot  find  symbol  deserialized  [FE]                        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  deserialized)&&!excluder.excludeField(f,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  deserialized)&&!excluder.excludeField(f,  excluder);	  return!excluder.excludeClass(f.getType(),    serialized)&&!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  cannot  find  symbol  deserialized	8	None	replace
424	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  this)&&!excluder.excludeField(f,  excluder);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                          ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  this)&&!excluder.excludeField(f,  excluder);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  this)&&!excluder.excludeField(f,  excluder);	  return!excluder.excludeClass(f.getType(),    serialized)&&!excluder.excludeField(f,    excluder);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	8	None	replace
425	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&|!excluder.excludeField(f,  deserialize);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&|!excluder.excludeField(f,  deserialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&|!excluder.excludeField(f,  deserialize);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(serialize)    {    return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    deserialize);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
426	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  factory);  [CE]  cannot  find  symbol  factory  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  factory);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)||!excluder.excludeField(f,  factory);	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    if(serialize)    {    return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    deserialize);    }    	non-compiled	[CE]  cannot  find  symbol  factory	74	None	replace
427	[BUG]  [BUGGY]  if(excluder  ==  null  ||  excluder.serialize)  {  return  true;  }  [CE]  cannot  find  symbol  serialize  [FE]                              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  if(excluder  ==  null  ||  excluder.serialize)  {  return  true;  }  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	if(excluder  ==  null  ||  excluder.serialize)  {  return  true;  }	  if(excluder    ==    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  serialize	67	None	replace
428	[BUG]  [BUGGY]  return!excluder.excludeField(f,  serialize,  excluder)&&!excluder.excludeField(f,  excluder,  deserialize);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f,  serialize,  excluder)&&!excluder.excludeField(f,  excluder,  deserialize);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f,  serialize,  excluder)&&!excluder.excludeField(f,  excluder,  deserialize);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    excluder,    deserialize);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	28	None	replace
429	[BUG]  [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f,  serialize);  ||!excluder.excludeClass(f.getType(),  serialize)&&!excluder.excludeField(f	  return!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    ||!excluder.excludeClass(f.getType(),    serialize)||!excluder.excludeField(f,    serialize);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
430	[BUG]  [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialize,  excluder,  exception);  [CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      static  boolean  excludeField(Field  f,  boolean  serialize,  Excluder  excluder)  {      [BUGGY]  return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialize,  excluder,  exception);  [BUGGY]      }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  excludeField  [RETURN_TYPE]  boolean  Field  f  boolean  serialize  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  ObjectConstructor  constructor  String  $anonymous0  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	67	67	1	replace	return!excluder.excludeField(f.getType(),  serialize)&&!excluder.excludeField(f,  deserialize,  excluder,  exception);	  return!excluder.excludeField(f.getType(),    serialize)&&!excluder.excludeField(f,    deserialize,    excluder);    	non-compiled	[CE]  method  excludeField  in  class  Excluder  cannot  be  applied  to  given  types;	26	None	replace
