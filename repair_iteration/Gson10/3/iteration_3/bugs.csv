bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy.getInstance();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy.getInstance();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  fieldNamingPolicy.getInstance();	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.getInstance();    }    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
2	[BUG]  [BUGGY]  this.constructorConstructor  =  FieldNamingStrategy.getInstance();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  FieldNamingStrategy.getInstance();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  FieldNamingStrategy.getInstance();	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.getInstance();    }    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
3	[BUG]  [BUGGY]  this.constructorConstructor  =  fieldNamingStrategy.getInstance();  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  fieldNamingStrategy.getInstance();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  fieldNamingStrategy.getInstance();	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.getInstance();    }    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	77	None	replace
4	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  null;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  null;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  null;	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy,    excluder;    	non-compiled	[CE]  ';'  expected	61	None	replace
5	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy,  excluder;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy,  excluder;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy,  excluder;	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy,    excluder;    	non-compiled	[CE]  ';'  expected	61	None	replace
6	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  name;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  name;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  name;	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy,    excluder;    	non-compiled	[CE]  ';'  expected	61	None	replace
7	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy,  name;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy,  name;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy,  name;	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy,    excluder;    	non-compiled	[CE]  ';'  expected	61	None	replace
8	[BUG]  [BUGGY]  this.constructorConstructor  =  FieldNamingStrategy.createInstance(fieldNamingPolicy);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  FieldNamingStrategy.createInstance(fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  FieldNamingStrategy.createInstance(fieldNamingPolicy);	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.createInstance(fieldNamingPolicy);    }    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
9	[BUG]  [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy.createInstance(constructorConstructor);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy.createInstance(constructorConstructor);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  fieldNamingPolicy.createInstance(constructorConstructor);	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.createInstance(fieldNamingPolicy);    }    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
10	[BUG]  [BUGGY]  this.constructorConstructor  =  ConstructorNamingStrategy.createInstance(fieldNamingPolicy);  [CE]  cannot  find  symbol  ConstructorNamingStrategy  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  ConstructorNamingStrategy.createInstance(fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  ConstructorNamingStrategy.createInstance(fieldNamingPolicy);	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.createInstance(fieldNamingPolicy);    }    	non-compiled	[CE]  cannot  find  symbol  ConstructorNamingStrategy	102	None	replace
11	[BUG]  [BUGGY]  this.constructorConstructor  =  ConstructorConstructor.createInstance(fieldNamingPolicy);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  ConstructorConstructor.createInstance(fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  ConstructorConstructor.createInstance(fieldNamingPolicy);	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.createInstance(fieldNamingPolicy);    }    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
12	[BUG]  [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  name);  [CE]  cannot  find  symbol  name  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  name);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructorConstructor,  fieldNamingPolicy,  name);	  super(constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  name	54	None	replace
13	[BUG]  [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  null);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  null);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructorConstructor,  fieldNamingPolicy,  null);	  super(constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	54	None	replace
14	[BUG]  [BUGGY]  super(constructor,  fieldNamingPolicy,  excluder);  [CE]  cannot  find  symbol  constructor  [FE]                                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(constructor,  fieldNamingPolicy,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructor,  fieldNamingPolicy,  excluder);	  super(constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  constructor	54	None	replace
15	[BUG]  [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excluded);  [CE]  cannot  find  symbol  excluded  [FE]                                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excluded);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructorConstructor,  fieldNamingPolicy,  excluded);	  super(constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  excluded	54	None	replace
16	[BUG]  [BUGGY]  super(constructorConstructor,  fieldNamingStrategy,  excluder);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(constructorConstructor,  fieldNamingStrategy,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructorConstructor,  fieldNamingStrategy,  excluder);	  super(constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	54	None	replace
17	[BUG]  [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy.newInstance();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy.newInstance();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  fieldNamingPolicy.newInstance();	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.newInstance();    }    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
18	[BUG]  [BUGGY]  this.constructorConstructor  =  FieldNamingStrategy.newInstance();  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  FieldNamingStrategy.newInstance();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  FieldNamingStrategy.newInstance();	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.newInstance();    }    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
19	[BUG]  [BUGGY]  constructorConstructor  =  FieldNamingStrategy.newInstance();  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  constructorConstructor  =  FieldNamingStrategy.newInstance();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	constructorConstructor  =  FieldNamingStrategy.newInstance();	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.newInstance();    }    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
20	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
21	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
22	[BUG]  [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
23	[BUG]  [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
24	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
25	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
26	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  name,  null);  [CE]  cannot  find  symbol  name  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  name,  null);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  excluder,  name,  null);	  this(constructorConstructor,    fieldNamingPolicy,    excluder,    null);    	non-compiled	[CE]  cannot  find  symbol  name	2	None	replace
27	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  null,  name);  [CE]  cannot  find  symbol  name  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  null,  name);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  excluder,  null,  name);	  this(constructorConstructor,    fieldNamingPolicy,    excluder,    null);    	non-compiled	[CE]  cannot  find  symbol  name	2	None	replace
28	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  name,  excluder,  null);  [CE]  cannot  find  symbol  name  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  name,  excluder,  null);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  name,  excluder,  null);	  this(constructorConstructor,    fieldNamingPolicy,    excluder,    null);    	non-compiled	[CE]  cannot  find  symbol  name	2	None	replace
29	[BUG]  [BUGGY]  this(constructorConstructor,  excluder,  fieldNamingPolicy,  null);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  excluder,  fieldNamingPolicy,  null);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  excluder,  fieldNamingPolicy,  null);	  this(constructorConstructor,    fieldNamingPolicy,    excluder,    null);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	2	None	replace
30	[BUG]  [BUGGY]  this(constructorConstructor,  null,  fieldNamingPolicy,  excluder,  null);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  null,  fieldNamingPolicy,  excluder,  null);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  null,  fieldNamingPolicy,  excluder,  null);	  this(constructorConstructor,    fieldNamingPolicy,    excluder,    null);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	2	None	replace
31	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  description,  null);  [CE]  cannot  find  symbol  description  [FE]                                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  description,  null);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  excluder,  description,  null);	  this(constructorConstructor,    fieldNamingPolicy,    excluder,    null);    	non-compiled	[CE]  cannot  find  symbol  description	2	None	replace
32	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
33	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  exclude  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  exclude  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  exclude	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
34	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
35	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  false,  name);  [CE]  cannot  find  symbol  name  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  false,  name);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  excluder,  false,  name);	  this(constructorConstructor,    fieldNamingPolicy,    excluder,    false);    	non-compiled	[CE]  cannot  find  symbol  name	4	None	replace
36	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  null,  false);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  null,  false);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  excluder,  null,  false);	  this(constructorConstructor,    fieldNamingPolicy,    excluder,    false);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	4	None	replace
37	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  null,  null);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  null,  null);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  excluder,  null,  null);	  this(constructorConstructor,    fieldNamingPolicy,    excluder,    false);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	4	None	replace
38	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  name,  false);  [CE]  cannot  find  symbol  name  [FE]                                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  name,  false);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  excluder,  name,  false);	  this(constructorConstructor,    fieldNamingPolicy,    excluder,    false);    	non-compiled	[CE]  cannot  find  symbol  name	4	None	replace
39	[BUG]  [BUGGY]  this(constructorConstructor,  excluder,  fieldNamingPolicy,  false);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  excluder,  fieldNamingPolicy,  false);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  excluder,  fieldNamingPolicy,  false);	  this(constructorConstructor,    fieldNamingPolicy,    excluder,    false);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	4	None	replace
40	[BUG]  [BUGGY]  super(constructor,  fieldNamingPolicy);  [CE]  cannot  find  symbol  constructor  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(constructor,  fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructor,  fieldNamingPolicy);	  super(constructorConstructor);    	non-compiled	[CE]  cannot  find  symbol  constructor	74	None	replace
41	[BUG]  [BUGGY]  super(compilerConstructor,  fieldNamingPolicy);  [CE]  cannot  find  symbol  compilerConstructor  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(compilerConstructor,  fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(compilerConstructor,  fieldNamingPolicy);	  super(constructorConstructor);    	non-compiled	[CE]  cannot  find  symbol  compilerConstructor	74	None	replace
42	[BUG]  [BUGGY]  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
43	[BUG]  [BUGGY]  ||  constructorConstructor  >=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  >=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  >=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
44	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  FieldNamingPolicy;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  FieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  FieldNamingPolicy;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
45	[BUG]  [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructor;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructor;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructor;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
46	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
47	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
48	[BUG]  [BUGGY]  this.constructorConstructor  =  FieldNamingStrategy.getInstance(fieldNamingPolicy);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  FieldNamingStrategy.getInstance(fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  FieldNamingStrategy.getInstance(fieldNamingPolicy);	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.getInstance(fieldNamingPolicy);    }    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
49	[BUG]  [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy.getInstance(constructorConstructor);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy.getInstance(constructorConstructor);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  fieldNamingPolicy.getInstance(constructorConstructor);	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.getInstance(fieldNamingPolicy);    }    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
50	[BUG]  [BUGGY]  this.constructorConstructor  =  ConstructorNamingStrategy.getInstance(fieldNamingPolicy);  [CE]  cannot  find  symbol  ConstructorNamingStrategy  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  ConstructorNamingStrategy.getInstance(fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  ConstructorNamingStrategy.getInstance(fieldNamingPolicy);	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.getInstance(fieldNamingPolicy);    }    	non-compiled	[CE]  cannot  find  symbol  ConstructorNamingStrategy	79	None	replace
51	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy  instanceof  Boolean?(Boolean)fieldNamingPolicy  :  Boolean.FALSE;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy  instanceof  Boolean?(Boolean)fieldNamingPolicy  :  Boolean.FALSE;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy  instanceof  Boolean?(Boolean)fieldNamingPolicy  :  Boolean.FALSE;	  this.constructorConstructor    =    constructorConstructor,    fieldNamingStrategy;    	non-compiled	[CE]  ';'  expected	60	None	replace
52	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy  instanceof  Boolean?(Boolean)null  :  Boolean.FALSE;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy  instanceof  Boolean?(Boolean)null  :  Boolean.FALSE;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy  instanceof  Boolean?(Boolean)null  :  Boolean.FALSE;	  this.constructorConstructor    =    constructorConstructor,    fieldNamingStrategy;    	non-compiled	[CE]  ';'  expected	60	None	replace
53	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy  =  FieldNamingStrategy.getInstance(fieldNamingPolicy);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy  =  FieldNamingStrategy.getInstance(fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy  =  FieldNamingStrategy.getInstance(fieldNamingPolicy);	  this.constructorConstructor    =    constructorConstructor,    fieldNamingStrategy;    	non-compiled	[CE]  ';'  expected	60	None	replace
54	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy  instanceof  Boolean?(Boolean)false  :  Boolean.FALSE;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy  instanceof  Boolean?(Boolean)false  :  Boolean.FALSE;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy  instanceof  Boolean?(Boolean)false  :  Boolean.FALSE;	  this.constructorConstructor    =    constructorConstructor,    fieldNamingStrategy;    	non-compiled	[CE]  ';'  expected	60	None	replace
55	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  String.valueOf(this.name);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  String.valueOf(this.name);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  String.valueOf(this.name);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    String.valueOf(this.name);    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
56	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  String.valueOf(this.name);  }  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  String.valueOf(this.name);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  String.valueOf(this.name);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    String.valueOf(this.name);    }    	non-compiled	[CE]  'else'  without  'if'	108	None	replace
57	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  String.valueOf(this.name);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  String.valueOf(this.name);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  String.valueOf(this.name);	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    String.valueOf(this.name);    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
58	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
59	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(excluder  ==  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  variable  fieldNamingPolicy  might  already  have  been  assigned  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(excluder  ==  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  if(excluder  ==  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  this.constructorConstructor    =    constructorConstructor;    if(excluder!=    null)    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    }    	non-compiled	[CE]  variable  fieldNamingPolicy  might  already  have  been  assigned	110	None	replace
60	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(fieldNamingPolicy!=  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  variable  fieldNamingPolicy  might  already  have  been  assigned  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(fieldNamingPolicy!=  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  if(fieldNamingPolicy!=  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  this.constructorConstructor    =    constructorConstructor;    if(excluder!=    null)    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    }    	non-compiled	[CE]  variable  fieldNamingPolicy  might  already  have  been  assigned	110	None	replace
61	[BUG]  [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excluder,  name);  [CE]  cannot  find  symbol  name  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excluder,  name);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructorConstructor,  fieldNamingPolicy,  excluder,  name);	  super(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol  name	53	None	replace
62	[BUG]  [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  name,  excluder);  [CE]  cannot  find  symbol  name  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  name,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructorConstructor,  fieldNamingPolicy,  name,  excluder);	  super(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol  name	53	None	replace
63	[BUG]  [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excluder,  null);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excluder,  null);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructorConstructor,  fieldNamingPolicy,  excluder,  null);	  super(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	53	None	replace
64	[BUG]  [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  null,  excluder);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  null,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructorConstructor,  fieldNamingPolicy,  null,  excluder);	  super(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	53	None	replace
65	[BUG]  [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excluder,  description);  [CE]  cannot  find  symbol  description  [FE]                                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excluder,  description);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructorConstructor,  fieldNamingPolicy,  excluder,  description);	  super(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol  description	53	None	replace
66	[BUG]  [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excluder,  this.serialized);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excluder,  this.serialized);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructorConstructor,  fieldNamingPolicy,  excluder,  this.serialized);	  super(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	53	None	replace
67	[BUG]  [BUGGY]  this.constructorConstructor  =  new  HashMap  <  String,ObjectConstructor>();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  new  HashMap  <  String,ObjectConstructor>();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  new  HashMap  <  String,ObjectConstructor>();	  this.constructorConstructor    =    constructorConstructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
68	[BUG]  [BUGGY]  this.bindingFields  =  Collections.emptyMap();  [CE]  cannot  find  symbol  bindingFields  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.bindingFields  =  Collections.emptyMap();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.bindingFields  =  Collections.emptyMap();	  this.constructorConstructor    =    constructorConstructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  cannot  find  symbol  bindingFields	34	None	replace
69	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy,  exception);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy,  exception);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy,  exception);	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy,    exception);    	non-compiled	[CE]  ';'  expected	46	None	replace
70	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  name);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  name);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  name);	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy,    exception);    	non-compiled	[CE]  ';'  expected	46	None	replace
71	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  excluded);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  excluded);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  excluded);	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy,    exception);    	non-compiled	[CE]  ';'  expected	46	None	replace
72	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excluder));  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excluder));  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excluder));  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    excluder));    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
73	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    excluder));    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
74	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  exclude  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  exclude  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  exclude	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    excluder));    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
75	[BUG]  [BUGGY]  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNaming    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
76	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
77	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
78	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
79	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
80	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(excluder  ==  null)  {  this.constructorConstructor  =  excluder;  }  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(excluder  ==  null)  {  this.constructorConstructor  =  excluder;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  if(excluder  ==  null)  {  this.constructorConstructor  =  excluder;  }	  this.constructorConstructor    =    constructorConstructor;    if(excluder!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    	non-compiled	[CE]  incompatible  types	96	None	replace
81	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.constructorConstructor  =  excluder;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.constructorConstructor  =  excluder;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.constructorConstructor  =  excluder;  }	  this.constructorConstructor    =    constructorConstructor;    if(excluder!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
82	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }	  this.constructorConstructor    =    constructorConstructor;    if(excluder!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
83	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }	  this.constructorConstructor    =    constructorConstructor;    if(excluder!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
84	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }	  this.constructorConstructor    =    constructorConstructor;    if(excluder!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    	non-compiled	[CE]  incompatible  types	96	None	replace
85	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  incompatible  types	86	None	replace
86	[BUG]  [BUGGY]  this(constructorConstructor,  excluder,  name,  fieldNamingStrategy);  [CE]  cannot  find  symbol  name  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  excluder,  name,  fieldNamingStrategy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  excluder,  name,  fieldNamingStrategy);	  this(constructorConstructor,    fieldNamingStrategy,    name,    excluder);    	non-compiled	[CE]  cannot  find  symbol  name	5	None	replace
87	[BUG]  [BUGGY]  this(constructorConstructor,  name,  fieldNamingPolicy,  excluder);  [CE]  cannot  find  symbol  name  [FE]                              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  name,  fieldNamingPolicy,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  name,  fieldNamingPolicy,  excluder);	  this(constructorConstructor,    fieldNamingStrategy,    name,    excluder);    	non-compiled	[CE]  cannot  find  symbol  name	5	None	replace
88	[BUG]  [BUGGY]  this(constructor,  fieldNamingPolicy,  name,  excluder);  [CE]  cannot  find  symbol  constructor  [FE]                                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructor,  fieldNamingPolicy,  name,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructor,  fieldNamingPolicy,  name,  excluder);	  this(constructorConstructor,    fieldNamingStrategy,    name,    excluder);    	non-compiled	[CE]  cannot  find  symbol  constructor	5	None	replace
89	[BUG]  [BUGGY]  this.bindingFields  =  new  LinkedHashMap  <  String,ObjectConstructor>();  [CE]  cannot  find  symbol  bindingFields  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.bindingFields  =  new  LinkedHashMap  <  String,ObjectConstructor>();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.bindingFields  =  new  LinkedHashMap  <  String,ObjectConstructor>();	  this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    	non-compiled	[CE]  cannot  find  symbol  bindingFields	31	None	replace
90	[BUG]  [BUGGY]  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>(fieldNamingPolicy);  [CE]  cannot  find  symbol  bindingFields  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>(fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>(fieldNamingPolicy);	  this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    	non-compiled	[CE]  cannot  find  symbol  bindingFields	31	None	replace
91	[BUG]  [BUGGY]  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>(name);  [CE]  cannot  find  symbol  bindingFields  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>(name);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>(name);	  this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    	non-compiled	[CE]  cannot  find  symbol  bindingFields	31	None	replace
92	[BUG]  [BUGGY]  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>(constructorConstructor);  [CE]  cannot  find  symbol  bindingFields  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>(constructorConstructor);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>(constructorConstructor);	  this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    	non-compiled	[CE]  cannot  find  symbol  bindingFields	31	None	replace
93	[BUG]  [BUGGY]  this.bindFields  =  new  HashMap  <  String,ObjectConstructor>();  [CE]  cannot  find  symbol  bindFields  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.bindFields  =  new  HashMap  <  String,ObjectConstructor>();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.bindFields  =  new  HashMap  <  String,ObjectConstructor>();	  this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    	non-compiled	[CE]  cannot  find  symbol  bindFields	31	None	replace
94	[BUG]  [BUGGY]  this.bindingFields  =  new  TreeMap  <  String,ObjectConstructor>();  [CE]  cannot  find  symbol  bindingFields  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.bindingFields  =  new  TreeMap  <  String,ObjectConstructor>();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.bindingFields  =  new  TreeMap  <  String,ObjectConstructor>();	  this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    	non-compiled	[CE]  cannot  find  symbol  bindingFields	31	None	replace
95	[BUG]  [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy?  constructorConstructor  :  fieldNamingStrategy;  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy?  constructorConstructor  :  fieldNamingStrategy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  fieldNamingPolicy?  constructorConstructor  :  fieldNamingStrategy;	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    fieldNamingStrategy;    	non-compiled	[CE]  incompatible  types	37	None	replace
96	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingStrategy  :  fieldNamingPolicy;  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingStrategy  :  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  fieldNamingStrategy  :  fieldNamingPolicy;	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    fieldNamingStrategy;    	non-compiled	[CE]  incompatible  types	37	None	replace
97	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy  :  fieldNamingStrategy;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy  :  fieldNamingStrategy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy  :  fieldNamingStrategy;	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    fieldNamingStrategy;    	non-compiled	[CE]  ';'  expected	37	None	replace
98	[BUG]  [BUGGY]  this.fieldNamingPolicy  =  constructorConstructor,  fieldNamingPolicy;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingPolicy  =  constructorConstructor,  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingPolicy  =  constructorConstructor,  fieldNamingPolicy;	  this.fieldNamingPolicy    =    constructorConstructor;    	non-compiled	[CE]  ';'  expected	50	None	replace
99	[BUG]  [BUGGY]  this.fieldNamingPolicy  =  constructorConstructor.getFieldNamingPolicy();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingPolicy  =  constructorConstructor.getFieldNamingPolicy();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingPolicy  =  constructorConstructor.getFieldNamingPolicy();	  this.fieldNamingPolicy    =    constructorConstructor;    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
100	[BUG]  [BUGGY]  this.fieldNamingPolicy  =  constructorConstructor,  fieldNamingPolicy);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingPolicy  =  constructorConstructor,  fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingPolicy  =  constructorConstructor,  fieldNamingPolicy);	  this.fieldNamingPolicy    =    constructorConstructor;    	non-compiled	[CE]  ';'  expected	50	None	replace
101	[BUG]  [BUGGY]  this.fieldNamingPolicy  =  constructorConstructor.getFunctionNamingPolicy();  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingPolicy  =  constructorConstructor.getFunctionNamingPolicy();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingPolicy  =  constructorConstructor.getFunctionNamingPolicy();	  this.fieldNamingPolicy    =    constructorConstructor;    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
102	[BUG]  [BUGGY]  this.fieldNamingPolicy  =  FieldNamingStrategy.newFieldNamingPolicy();  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingPolicy  =  FieldNamingStrategy.newFieldNamingPolicy();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingPolicy  =  FieldNamingStrategy.newFieldNamingPolicy();	  this.fieldNamingPolicy    =    constructorConstructor;    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
103	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder);  }	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
104	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldN  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldN  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldN	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
105	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
106	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
107	[BUG]  [BUGGY]  This.constructorConstructor  =  fieldNamingPolicy;  [CE]  cannot  find  symbol  This  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This.constructorConstructor  =  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This.constructorConstructor  =  fieldNamingPolicy;	  This.constructorConstructor    =    constructorConstructor;    	non-compiled	[CE]  cannot  find  symbol  This	15	None	replace
108	[BUG]  [BUGGY]  This.constructorConstructor  =  constructor;  [CE]  cannot  find  symbol  This  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This.constructorConstructor  =  constructor;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This.constructorConstructor  =  constructor;	  This.constructorConstructor    =    constructorConstructor;    	non-compiled	[CE]  cannot  find  symbol  This	15	None	replace
109	[BUG]  [BUGGY]  This.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy;	  This.constructorConstructor    =    constructorConstructor;    	non-compiled	[CE]  ';'  expected	15	None	replace
110	[BUG]  [BUGGY]  This.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy);	  This.constructorConstructor    =    constructorConstructor;    	non-compiled	[CE]  ';'  expected	15	None	replace
111	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNaming  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNaming  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNaming	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy);    }    	non-compiled	[CE]  ')'  expected	84	None	replace
112	[BUG]  [BUGGY]  this.fieldNamingStrategy  =  fieldNamingPolicy?  constructorConstructor  :  null;  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingStrategy  =  fieldNamingPolicy?  constructorConstructor  :  null;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingStrategy  =  fieldNamingPolicy?  constructorConstructor  :  null;	  this.fieldNamingStrategy    =    constructorConstructor;    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	14	None	replace
113	[BUG]  [BUGGY]  this.fieldNamingStrategy  =  FieldNamingStrategy.getInstance();  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingStrategy  =  FieldNamingStrategy.getInstance();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingStrategy  =  FieldNamingStrategy.getInstance();	  this.fieldNamingStrategy    =    constructorConstructor;    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	14	None	replace
114	[BUG]  [BUGGY]  this.fieldNamingStrategy  =  FieldNamingStrategy.getInstance(fieldNamingPolicy);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingStrategy  =  FieldNamingStrategy.getInstance(fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingStrategy  =  FieldNamingStrategy.getInstance(fieldNamingPolicy);	  this.fieldNamingStrategy    =    constructorConstructor;    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	14	None	replace
115	[BUG]  [BUGGY]  this(constructorConstructor,  excluder,  fieldNamingStrategy);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  excluder,  fieldNamingStrategy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  excluder,  fieldNamingStrategy);	  this(constructorConstructor,    fieldNamingStrategy,    excluder);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	71	None	replace
116	[BUG]  [BUGGY]  this(compilerConstructor,  fieldNamingPolicy,  excluder);  [CE]  cannot  find  symbol  compilerConstructor  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(compilerConstructor,  fieldNamingPolicy,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(compilerConstructor,  fieldNamingPolicy,  excluder);	  this(constructorConstructor,    fieldNamingStrategy,    excluder);    	non-compiled	[CE]  cannot  find  symbol  compilerConstructor	71	None	replace
117	[BUG]  [BUGGY]  this(constructor,  fieldNamingPolicy,  excluder);  [CE]  cannot  find  symbol  constructor  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructor,  fieldNamingPolicy,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructor,  fieldNamingPolicy,  excluder);	  this(constructorConstructor,    fieldNamingStrategy,    excluder);    	non-compiled	[CE]  cannot  find  symbol  constructor	71	None	replace
118	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  deserialized);  [CE]  cannot  find  symbol  deserialized  [FE]                              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  deserialized);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  excluder,  deserialized);	  this(constructorConstructor,    fieldNamingPolicy,    name,    excluder);    	non-compiled	[CE]  cannot  find  symbol  deserialized	6	None	replace
119	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  description);  [CE]  cannot  find  symbol  description  [FE]                                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  description);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  excluder,  description);	  this(constructorConstructor,    fieldNamingPolicy,    name,    excluder);    	non-compiled	[CE]  cannot  find  symbol  description	6	None	replace
120	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  scope);  [CE]  cannot  find  symbol  scope  [FE]                                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  scope);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  excluder,  scope);	  this(constructorConstructor,    fieldNamingPolicy,    name,    excluder);    	non-compiled	[CE]  cannot  find  symbol  scope	6	None	replace
121	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  name);  [CE]  cannot  find  symbol  name  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  name);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  name);	  this(constructorConstructor,    fieldNamingPolicy,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol  name	113	None	replace
122	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  fieldNamingPolicy);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  excluder,  fieldNamingPolicy);	  this(constructorConstructor,    fieldNamingPolicy,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	113	None	replace
123	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  deserialized);  [CE]  cannot  find  symbol  deserialized  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  deserialized);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  deserialized);	  this(constructorConstructor,    fieldNamingPolicy,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol  deserialized	113	None	replace
124	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  description);  [CE]  cannot  find  symbol  description  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  description);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  description);	  this(constructorConstructor,    fieldNamingPolicy,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol  description	113	None	replace
125	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy  instanceof  FieldNamingStrategy)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy  instanceof  FieldNamingStrategy)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy  instanceof  FieldNamingStrategy)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  this.constructorConstructor    =    constructorConstructor;    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    }    	non-compiled	[CE]  'else'  without  'if'	109	None	replace
126	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy!=  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy!=  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy!=  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  this.constructorConstructor    =    constructorConstructor;    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    }    	non-compiled	[CE]  'else'  without  'if'	109	None	replace
127	[BUG]  [BUGGY]  this.constructorConstructor  =  constructor;  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructor;  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructor;  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  this.constructorConstructor    =    constructorConstructor;    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    }    	non-compiled	[CE]  'else'  without  'if'	109	None	replace
128	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  constructor));  }  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  constructor));  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  constructor));  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy));    }    	non-compiled	[CE]  incompatible  types	115	None	replace
129	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  constructorConstructor));  }  [CE]  incompatible  types  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  constructorConstructor));  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  constructorConstructor));  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy));    }    	non-compiled	[CE]  incompatible  types	115	None	replace
130	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  constructor  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  constructor  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  constructor	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy));    }    	non-compiled	[CE]  ')'  expected	115	None	replace
131	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy));  }  [CE]  incompatible  types  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy));  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy));  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy));    }    	non-compiled	[CE]  incompatible  types	115	None	replace
132	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  constructorName));  }  [CE]  incompatible  types  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  constructorName));  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  constructorName));  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy));    }    	non-compiled	[CE]  incompatible  types	115	None	replace
133	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }	  ||    constructorConstructor!=    null)    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
134	[BUG]  [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy!=  null)  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }	  ||    constructorConstructor!=    null)    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
135	[BUG]  [BUGGY]  ||  fieldNamingPolicy  ==  null)  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy  ==  null)  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy  ==  null)  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }	  ||    constructorConstructor!=    null)    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
136	[BUG]  [BUGGY]  &&  constructorConstructor!=  null)  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  &&  constructorConstructor!=  null)  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	&&  constructorConstructor!=  null)  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }	  ||    constructorConstructor!=    null)    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
137	[BUG]  [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy!=  null)  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();	  ||    constructorConstructor!=    null)    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
138	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();	  ||    constructorConstructor!=    null)    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
139	[BUG]  [BUGGY]  This(constructorConstructor,  fieldNamingPolicy,  excluder,  name);  [CE]  cannot  find  symbol  name  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This(constructorConstructor,  fieldNamingPolicy,  excluder,  name);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This(constructorConstructor,  fieldNamingPolicy,  excluder,  name);	  This(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol  name	73	None	replace
140	[BUG]  [BUGGY]  This(excluder,  fieldNamingPolicy,  constructorConstructor);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This(excluder,  fieldNamingPolicy,  constructorConstructor);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This(excluder,  fieldNamingPolicy,  constructorConstructor);	  This(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
141	[BUG]  [BUGGY]  This(compilerConstructor,  fieldNamingPolicy,  excluder);  [CE]  cannot  find  symbol  compilerConstructor  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This(compilerConstructor,  fieldNamingPolicy,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This(compilerConstructor,  fieldNamingPolicy,  excluder);	  This(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol  compilerConstructor	73	None	replace
142	[BUG]  [BUGGY]  This(constructorConstructor,  fieldNamingPolicy,  excluder,  null);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This(constructorConstructor,  fieldNamingPolicy,  excluder,  null);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This(constructorConstructor,  fieldNamingPolicy,  excluder,  null);	  This(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
143	[BUG]  [BUGGY]  This(constructorConstructor,  fieldNamingPolicy,  excluder,  deserialized);  [CE]  cannot  find  symbol  deserialized  [FE]                              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This(constructorConstructor,  fieldNamingPolicy,  excluder,  deserialized);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This(constructorConstructor,  fieldNamingPolicy,  excluder,  deserialized);	  This(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol  deserialized	73	None	replace
144	[BUG]  [BUGGY]  This(fieldNamingPolicy,  constructorConstructor,  excluder);  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This(fieldNamingPolicy,  constructorConstructor,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This(fieldNamingPolicy,  constructorConstructor,  excluder);	  This(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
145	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.excluder    =    excluder;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
146	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excluder));  }  [CE]  incompatible  types  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excluder));  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excluder));  }	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    excluder));    }    	non-compiled	[CE]  incompatible  types	91	None	replace
147	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    excluder));    }    	non-compiled	[CE]  ')'  expected	91	None	replace
148	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excluded));  }  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excluded));  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excluded));  }	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    excluder));    }    	non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	91	None	replace
149	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excludedr));  }  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excludedr));  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excludedr));  }	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    excluder));    }    	non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	91	None	replace
150	[BUG]  [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy  +  constructorConstructor;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy  +  constructorConstructor;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  fieldNamingPolicy  +  constructorConstructor;	  this.constructorConstructor    =    constructorConstructor    +    fieldNamingPolicy;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	82	None	replace
151	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor  +  fieldNamingPolicy,  name;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor  +  fieldNamingPolicy,  name;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor  +  fieldNamingPolicy,  name;	  this.constructorConstructor    =    constructorConstructor    +    fieldNamingPolicy;    	non-compiled	[CE]  ';'  expected	82	None	replace
152	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor  +  fieldNamingPolicy,  excluder;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor  +  fieldNamingPolicy,  excluder;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor  +  fieldNamingPolicy,  excluder;	  this.constructorConstructor    =    constructorConstructor    +    fieldNamingPolicy;    	non-compiled	[CE]  ';'  expected	82	None	replace
153	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor  +  name;  [CE]  cannot  find  symbol  name  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor  +  name;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor  +  name;	  this.constructorConstructor    =    constructorConstructor    +    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol  name	82	None	replace
154	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor  +  fieldNamingPolicy,  excluder);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor  +  fieldNamingPolicy,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor  +  fieldNamingPolicy,  excluder);	  this.constructorConstructor    =    constructorConstructor    +    fieldNamingPolicy;    	non-compiled	[CE]  ';'  expected	82	None	replace
155	[BUG]  [BUGGY]  ConstructorConstructor  constructorConstructor  =  constructorConstructor;  [CE]  variable  constructorConstructor  is  already  defined  in  constructor  ReflectiveTypeAdapterFactory(ConstructorConstructor,FieldNamingStrategy,Excluder)  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ConstructorConstructor  constructorConstructor  =  constructorConstructor;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	ConstructorConstructor  constructorConstructor  =  constructorConstructor;	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy)    	non-compiled	[CE]  variable  constructorConstructor  is  already  defined  in  constructor  ReflectiveTypeAdapterFactory(ConstructorConstructor,FieldNamingStrategy,Excluder)	116	None	replace
156	[BUG]  [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
157	[BUG]  [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
158	[BUG]  [BUGGY]  this.constructorConstructor  =  new  ObjectConstructor(constructorConstructor,  fieldNamingPolicy,  excluder);  [CE]  ObjectConstructor  is  abstract;  cannot  be  instantiated  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  new  ObjectConstructor(constructorConstructor,  fieldNamingPolicy,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  new  ObjectConstructor(constructorConstructor,  fieldNamingPolicy,  excluder);	  this.constructorConstructor    =    new    ObjectConstructor(constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  ObjectConstructor  is  abstract;  cannot  be  instantiated	59	None	replace
159	[BUG]  [BUGGY]  this.constructorConstructor  =  new  ObjectConstructor(compilerConstructor,  fieldNamingPolicy);  [CE]  cannot  find  symbol  compilerConstructor  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  new  ObjectConstructor(compilerConstructor,  fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  new  ObjectConstructor(compilerConstructor,  fieldNamingPolicy);	  this.constructorConstructor    =    new    ObjectConstructor(constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  compilerConstructor	59	None	replace
160	[BUG]  [BUGGY]  this.constructorConstructor  =  new  ObjectConstructor(fieldNamingPolicy,  constructor);  [CE]  cannot  find  symbol  constructor  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  new  ObjectConstructor(fieldNamingPolicy,  constructor);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  new  ObjectConstructor(fieldNamingPolicy,  constructor);	  this.constructorConstructor    =    new    ObjectConstructor(constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  constructor	59	None	replace
161	[BUG]  [BUGGY]  this.constructorConstructor  =  new  ObjectConstructor(fieldNamingPolicy,  constructorConstructor);  [CE]  ObjectConstructor  is  abstract;  cannot  be  instantiated  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  new  ObjectConstructor(fieldNamingPolicy,  constructorConstructor);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  new  ObjectConstructor(fieldNamingPolicy,  constructorConstructor);	  this.constructorConstructor    =    new    ObjectConstructor(constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  ObjectConstructor  is  abstract;  cannot  be  instantiated	59	None	replace
162	[BUG]  [BUGGY]  this.constructorConstructor  =  new  ObjectConstructor(constructorConstructor,  fieldNamingPolicy,  excluded);  [CE]  cannot  find  symbol  excluded  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  new  ObjectConstructor(constructorConstructor,  fieldNamingPolicy,  excluded);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  new  ObjectConstructor(constructorConstructor,  fieldNamingPolicy,  excluded);	  this.constructorConstructor    =    new    ObjectConstructor(constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  excluded	59	None	replace
163	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  null,  excluder);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  null,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  null,  excluder);	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy,    null);    	non-compiled	[CE]  ';'  expected	48	None	replace
164	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy,  null);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy,  null);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy,  null);	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy,    null);    	non-compiled	[CE]  ';'  expected	48	None	replace
165	[BUG]  [BUGGY]  this(constructorConstructor,  excluder,  fieldNamingPolicy,  excluder,  null);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  excluder,  fieldNamingPolicy,  excluder,  null);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  excluder,  fieldNamingPolicy,  excluder,  null);	  this(constructorConstructor,    fieldNamingPolicy,    fieldNamingPolicy,    excluder,    null);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	114	None	replace
166	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  name,  null);  [CE]  cannot  find  symbol  name  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  name,  null);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  name,  null);	  this(constructorConstructor,    fieldNamingPolicy,    fieldNamingPolicy,    excluder,    null);    	non-compiled	[CE]  cannot  find  symbol  name	114	None	replace
167	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  fieldNamingPolicy,  null);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  fieldNamingPolicy,  null);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  excluder,  fieldNamingPolicy,  null);	  this(constructorConstructor,    fieldNamingPolicy,    fieldNamingPolicy,    excluder,    null);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	114	None	replace
168	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  null,  excluder,  null);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  null,  excluder,  null);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  null,  excluder,  null);	  this(constructorConstructor,    fieldNamingPolicy,    fieldNamingPolicy,    excluder,    null);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	114	None	replace
169	[BUG]  [BUGGY]  this.constructorConstructor  =  new  ConstructorConstructor(constructorConstructor,  fieldNamingPolicy,  excluder);  [CE]  constructor  ConstructorConstructor  in  class  ConstructorConstructor  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  new  ConstructorConstructor(constructorConstructor,  fieldNamingPolicy,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  new  ConstructorConstructor(constructorConstructor,  fieldNamingPolicy,  excluder);	  this.constructorConstructor    =    new    ConstructorConstructor(constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  constructor  ConstructorConstructor  in  class  ConstructorConstructor  cannot  be  applied  to  given  types;	57	None	replace
170	[BUG]  [BUGGY]  this.constructorConstructor  =  new  ConstructorConstructor(fieldNamingPolicy,  constructor);  [CE]  cannot  find  symbol  constructor  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  new  ConstructorConstructor(fieldNamingPolicy,  constructor);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  new  ConstructorConstructor(fieldNamingPolicy,  constructor);	  this.constructorConstructor    =    new    ConstructorConstructor(constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  constructor	57	None	replace
171	[BUG]  [BUGGY]  this.constructorConstructor  =  new  ConstructorConstructor(compilerConstructor,  fieldNamingPolicy,  excluder);  [CE]  cannot  find  symbol  compilerConstructor  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  new  ConstructorConstructor(compilerConstructor,  fieldNamingPolicy,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  new  ConstructorConstructor(compilerConstructor,  fieldNamingPolicy,  excluder);	  this.constructorConstructor    =    new    ConstructorConstructor(constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  compilerConstructor	57	None	replace
172	[BUG]  [BUGGY]  this.constructorConstructor  =  new  ConstructorConstructor(constructorConstructor,  fieldNamingPolicy,  name);  [CE]  cannot  find  symbol  name  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  new  ConstructorConstructor(constructorConstructor,  fieldNamingPolicy,  name);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  new  ConstructorConstructor(constructorConstructor,  fieldNamingPolicy,  name);	  this.constructorConstructor    =    new    ConstructorConstructor(constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  name	57	None	replace
173	[BUG]  [BUGGY]  super(constructor,  fieldNamingPolicy);  this.fieldNamingPolicy  =  fieldNamingPolicy;  [CE]  cannot  find  symbol  constructor  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(constructor,  fieldNamingPolicy);  this.fieldNamingPolicy  =  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructor,  fieldNamingPolicy);  this.fieldNamingPolicy  =  fieldNamingPolicy;	  super(constructor);    this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol  constructor	52	None	replace
174	[BUG]  [BUGGY]  null  =  constructorConstructor;  this.fieldNamingPolicy  =  fieldNamingPolicy;  [CE]  unexpected  type  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  null  =  constructorConstructor;  this.fieldNamingPolicy  =  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	null  =  constructorConstructor;  this.fieldNamingPolicy  =  fieldNamingPolicy;	  super(constructor);    this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  unexpected  type	52	None	replace
175	[BUG]  [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    description;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
176	[BUG]  [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    description;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
177	[BUG]  [BUGGY]  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    description;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
178	[BUG]  [BUGGY]  this.bindingFields  =  new  HashMap  <  Object,ObjectConstructor>();  [CE]  cannot  find  symbol  bindingFields  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.bindingFields  =  new  HashMap  <  Object,ObjectConstructor>();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.bindingFields  =  new  HashMap  <  Object,ObjectConstructor>();	  this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  cannot  find  symbol  bindingFields	107	None	replace
179	[BUG]  [BUGGY]  this.bindingFields  =  new  HashMap  <  Field,ObjectConstructor>();  [CE]  cannot  find  symbol  bindingFields  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.bindingFields  =  new  HashMap  <  Field,ObjectConstructor>();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.bindingFields  =  new  HashMap  <  Field,ObjectConstructor>();	  this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  cannot  find  symbol  bindingFields	107	None	replace
180	[BUG]  [BUGGY]  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>(1);  [CE]  cannot  find  symbol  bindingFields  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>(1);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>(1);	  this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  cannot  find  symbol  bindingFields	107	None	replace
181	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  null,  excluder,  name);  [CE]  cannot  find  symbol  name  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  null,  excluder,  name);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  null,  excluder,  name);	  this(constructorConstructor,    fieldNamingPolicy,    null,    excluder);    	non-compiled	[CE]  cannot  find  symbol  name	3	None	replace
182	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  null,  excluder,  deserialized);  [CE]  cannot  find  symbol  deserialized  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  null,  excluder,  deserialized);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  null,  excluder,  deserialized);	  this(constructorConstructor,    fieldNamingPolicy,    null,    excluder);    	non-compiled	[CE]  cannot  find  symbol  deserialized	3	None	replace
183	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  name,  null,  excluder);  [CE]  cannot  find  symbol  name  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  name,  null,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  name,  null,  excluder);	  this(constructorConstructor,    fieldNamingPolicy,    null,    excluder);    	non-compiled	[CE]  cannot  find  symbol  name	3	None	replace
184	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  null,  excluder,  description);  [CE]  cannot  find  symbol  description  [FE]                              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  null,  excluder,  description);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  null,  excluder,  description);	  this(constructorConstructor,    fieldNamingPolicy,    null,    excluder);    	non-compiled	[CE]  cannot  find  symbol  description	3	None	replace
185	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  null,  excluder,  false);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  null,  excluder,  false);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  null,  excluder,  false);	  this(constructorConstructor,    fieldNamingPolicy,    null,    excluder);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	3	None	replace
186	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  null,  excluder,  excluder);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  null,  excluder,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  null,  excluder,  excluder);	  this(constructorConstructor,    fieldNamingPolicy,    null,    excluder);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	3	None	replace
187	[BUG]  [BUGGY]  This.fieldNamingPolicy  =  fieldNamingPolicy;  [CE]  cannot  find  symbol  This  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This.fieldNamingPolicy  =  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This.fieldNamingPolicy  =  fieldNamingPolicy;	  This.fieldNamingStrategy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol  This	95	None	replace
188	[BUG]  [BUGGY]  This.fieldNamingStrategy  =  fieldNamingPolicy.getFieldNamingStrategy();  [CE]  cannot  find  symbol  This  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This.fieldNamingStrategy  =  fieldNamingPolicy.getFieldNamingStrategy();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This.fieldNamingStrategy  =  fieldNamingPolicy.getFieldNamingStrategy();	  This.fieldNamingStrategy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol  This	95	None	replace
189	[BUG]  [BUGGY]  This.fieldNamingStrategy  =  fieldNamingPolicy  instanceof  FieldNamingStrategy;  [CE]  cannot  find  symbol  This  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This.fieldNamingStrategy  =  fieldNamingPolicy  instanceof  FieldNamingStrategy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This.fieldNamingStrategy  =  fieldNamingPolicy  instanceof  FieldNamingStrategy;	  This.fieldNamingStrategy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol  This	95	None	replace
190	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
191	[BUG]  [BUGGY]  Iterator  <  String,ObjectConstructor>  boundFields  =  new  HashMap  <  String,ObjectConstructor>();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  Iterator  <  String,ObjectConstructor>  boundFields  =  new  HashMap  <  String,ObjectConstructor>();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	Iterator  <  String,ObjectConstructor>  boundFields  =  new  HashMap  <  String,ObjectConstructor>();	  This.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
192	[BUG]  [BUGGY]  This.bindingFields  =  new  LinkedHashMap  <  String,ObjectConstructor>();  [CE]  cannot  find  symbol  This  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This.bindingFields  =  new  LinkedHashMap  <  String,ObjectConstructor>();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This.bindingFields  =  new  LinkedHashMap  <  String,ObjectConstructor>();	  This.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    	non-compiled	[CE]  cannot  find  symbol  This	76	None	replace
193	[BUG]  [BUGGY]  This.bindingFields  =  new  HashMap  <  String,ObjectConstructor>(fieldNamingPolicy);  [CE]  cannot  find  symbol  This  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This.bindingFields  =  new  HashMap  <  String,ObjectConstructor>(fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This.bindingFields  =  new  HashMap  <  String,ObjectConstructor>(fieldNamingPolicy);	  This.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    	non-compiled	[CE]  cannot  find  symbol  This	76	None	replace
194	[BUG]  [BUGGY]  This.bindingFields  =  new  HashMap  <  String,ObjectConstructor>(name);  [CE]  cannot  find  symbol  This  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This.bindingFields  =  new  HashMap  <  String,ObjectConstructor>(name);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This.bindingFields  =  new  HashMap  <  String,ObjectConstructor>(name);	  This.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    	non-compiled	[CE]  cannot  find  symbol  This	76	None	replace
195	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  name);  [CE]  cannot  find  symbol  name  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  name);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  name);	  this(constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  name	80	None	replace
196	[BUG]  [BUGGY]  this.fieldNamingStrategy  =  factory.getFieldNamingStrategy(fieldNamingPolicy);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingStrategy  =  factory.getFieldNamingStrategy(fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingStrategy  =  factory.getFieldNamingStrategy(fieldNamingPolicy);	  this.fieldNamingStrategy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	12	None	replace
197	[BUG]  [BUGGY]  this.fieldNamingStrategy  =  factory.getFieldNamingStrategy();  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingStrategy  =  factory.getFieldNamingStrategy();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingStrategy  =  factory.getFieldNamingStrategy();	  this.fieldNamingStrategy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	12	None	replace
198	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy!=  null)  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  this.name  =  name;  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy!=  null)  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  this.name  =  name;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy!=  null)  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  this.name  =  name;  }	  this.constructorConstructor    =    constructorConstructor;    else    {    this.fieldNamingStrategy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  'else'  without  'if'	100	None	replace
199	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy  ==  null)  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  this.name  =  name;  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy  ==  null)  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  this.name  =  name;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy  ==  null)  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  this.name  =  name;  }	  this.constructorConstructor    =    constructorConstructor;    else    {    this.fieldNamingStrategy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  'else'  without  'if'	100	None	replace
200	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy  instanceof  FieldNamingStrategy)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy  instanceof  FieldNamingStrategy)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy  instanceof  FieldNamingStrategy)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }	  this.constructorConstructor    =    constructorConstructor;    else    {    this.fieldNamingStrategy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  'else'  without  'if'	100	None	replace
201	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  excluder);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  excluder);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  excluder);  }	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
202	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNaming  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNaming  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNaming	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
203	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
204	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldN  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldN  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldN	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
205	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  field  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  field  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  field	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
206	[BUG]  [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy?  constructorConstructor  :  FieldNamingStrategy.UNKNOWN;  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy?  constructorConstructor  :  FieldNamingStrategy.UNKNOWN;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  fieldNamingPolicy?  constructorConstructor  :  FieldNamingStrategy.UNKNOWN;	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    FieldNamingStrategy.UNKNOWN;    	non-compiled	[CE]  incompatible  types	39	None	replace
207	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  FieldNamingStrategy.UNKNOWN  :  fieldNamingPolicy;  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  FieldNamingStrategy.UNKNOWN  :  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  FieldNamingStrategy.UNKNOWN  :  fieldNamingPolicy;	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    FieldNamingStrategy.UNKNOWN;    	non-compiled	[CE]  incompatible  types	39	None	replace
208	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy  :  FieldNamingStrategy.UNKNOWN;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy  :  FieldNamingStrategy.UNKNOWN;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy  :  FieldNamingStrategy.UNKNOWN;	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    FieldNamingStrategy.UNKNOWN;    	non-compiled	[CE]  ';'  expected	39	None	replace
209	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.UNKNOWN,  name;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.UNKNOWN,  name;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.UNKNOWN,  name;	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    FieldNamingStrategy.UNKNOWN;    	non-compiled	[CE]  ';'  expected	39	None	replace
210	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor  ||  fieldNamingPolicy  :  FieldNamingStrategy.UNKNOWN;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor  ||  fieldNamingPolicy  :  FieldNamingStrategy.UNKNOWN;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor  ||  fieldNamingPolicy  :  FieldNamingStrategy.UNKNOWN;	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    FieldNamingStrategy.UNKNOWN;    	non-compiled	[CE]  ';'  expected	39	None	replace
211	[BUG]  [BUGGY]  this.fieldNamingPolicy  =  new  FieldNamingPolicy(constructorConstructor.getFieldNamingPolicy(),  fieldNamingPolicy);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingPolicy  =  new  FieldNamingPolicy(constructorConstructor.getFieldNamingPolicy(),  fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingPolicy  =  new  FieldNamingPolicy(constructorConstructor.getFieldNamingPolicy(),  fieldNamingPolicy);	  this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
212	[BUG]  [BUGGY]  this.fieldNamingPolicy  =  constructorStructure.getFieldNamingPolicy();  [CE]  cannot  find  symbol  constructorStructure  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingPolicy  =  constructorStructure.getFieldNamingPolicy();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingPolicy  =  constructorStructure.getFieldNamingPolicy();	  this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol  constructorStructure	13	None	replace
213	[BUG]  [BUGGY]  this.fieldNamingPolicy  =  constructorStructure.getFieldNamingPolicy(fieldNamingPolicy);  [CE]  cannot  find  symbol  constructorStructure  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingPolicy  =  constructorStructure.getFieldNamingPolicy(fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingPolicy  =  constructorStructure.getFieldNamingPolicy(fieldNamingPolicy);	  this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol  constructorStructure	13	None	replace
214	[BUG]  [BUGGY]  this.fieldNamingPolicy  =  new  FieldNamingPolicy(constructorConstructor.getFieldNamingPolicy());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingPolicy  =  new  FieldNamingPolicy(constructorConstructor.getFieldNamingPolicy());  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingPolicy  =  new  FieldNamingPolicy(constructorConstructor.getFieldNamingPolicy());	  this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
215	[BUG]  [BUGGY]  this.fieldNamingPolicy  =  new  FieldNamingPolicy(constructorConstructor.getFieldNamingPolicy(),  excluder);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingPolicy  =  new  FieldNamingPolicy(constructorConstructor.getFieldNamingPolicy(),  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingPolicy  =  new  FieldNamingPolicy(constructorConstructor.getFieldNamingPolicy(),  excluder);	  this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
216	[BUG]  [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
217	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
218	[BUG]  [BUGGY]  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
219	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
220	[BUG]  [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy?  constructorConstructor  :  fieldNamingPolicy;  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy?  constructorConstructor  :  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  fieldNamingPolicy?  constructorConstructor  :  fieldNamingPolicy;	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    fieldNamingPolicy;    	non-compiled	[CE]  incompatible  types	38	None	replace
221	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy  :  fieldNamingPolicy;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy  :  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy  :  fieldNamingPolicy;	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    fieldNamingPolicy;    	non-compiled	[CE]  ';'  expected	38	None	replace
222	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  null;  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  null;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  null;	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    fieldNamingPolicy;    	non-compiled	[CE]  incompatible  types	38	None	replace
223	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.class;  [CE]  incompatible  types  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.class;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.class;	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    fieldNamingPolicy;    	non-compiled	[CE]  incompatible  types	38	None	replace
224	[BUG]  [BUGGY]  ||  constructor!=  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructor!=  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructor!=  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
225	[BUG]  [BUGGY]  ||  constructor!=  null)  {  this.constructorConstructor  =  constructor;  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructor!=  null)  {  this.constructorConstructor  =  constructor;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructor!=  null)  {  this.constructorConstructor  =  constructor;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
226	[BUG]  [BUGGY]  ||  constructor  ==  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructor  ==  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructor  ==  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
227	[BUG]  [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
228	[BUG]  [BUGGY]  ||  constructor  ==  null)  {  this.constructorConstructor  =  constructor;  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructor  ==  null)  {  this.constructorConstructor  =  constructor;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructor  ==  null)  {  this.constructorConstructor  =  constructor;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
229	[BUG]  [BUGGY]  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
230	[BUG]  [BUGGY]  ||  constructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructor;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
231	[BUG]  [BUGGY]  ||  constructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructor;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
232	[BUG]  [BUGGY]  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructor;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructor;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructor;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructor;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
233	[BUG]  [BUGGY]  ||  constructor!=  null)  {  this.constructorConstructor  =  excluder;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructor!=  null)  {  this.constructorConstructor  =  excluder;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructor!=  null)  {  this.constructorConstructor  =  excluder;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructor;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
234	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  null  :  constructorConstructor;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  null  :  constructorConstructor;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  null  :  constructorConstructor;	  this.constructorConstructor    =    constructorConstructor?    null    :    constructorConstructor;    	non-compiled	[CE]  ';'  expected	58	None	replace
235	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  null  :  fieldNamingPolicy;  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  null  :  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  null  :  fieldNamingPolicy;	  this.constructorConstructor    =    constructorConstructor?    null    :    constructorConstructor;    	non-compiled	[CE]  incompatible  types	58	None	replace
236	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  null  :  constructor;  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  null  :  constructor;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  null  :  constructor;	  this.constructorConstructor    =    constructorConstructor?    null    :    constructorConstructor;    	non-compiled	[CE]  incompatible  types	58	None	replace
237	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  null  :  constructorConstructor,  name;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  null  :  constructorConstructor,  name;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  null  :  constructorConstructor,  name;	  this.constructorConstructor    =    constructorConstructor?    null    :    constructorConstructor;    	non-compiled	[CE]  ';'  expected	58	None	replace
238	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  null  :  constructorConstructor,  excluder);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  null  :  constructorConstructor,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  null  :  constructorConstructor,  excluder);	  this.constructorConstructor    =    constructorConstructor?    null    :    constructorConstructor;    	non-compiled	[CE]  ';'  expected	58	None	replace
239	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  serialized);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  serialized);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  serialized);	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy,    deserialized);    	non-compiled	[CE]  ';'  expected	47	None	replace
240	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy,  deserialized);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy,  deserialized);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy,  deserialized);	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy,    deserialized);    	non-compiled	[CE]  ';'  expected	47	None	replace
241	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  separator);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  separator);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  separator);	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy,    deserialized);    	non-compiled	[CE]  ';'  expected	47	None	replace
242	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  name,  null,  null);  [CE]  cannot  find  symbol  name  [FE]                                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  name,  null,  null);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  name,  null,  null);	  this(constructorConstructor,    fieldNamingPolicy,    null,    null);    	non-compiled	[CE]  cannot  find  symbol  name	56	None	replace
243	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  null,  null,  excluder);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  null,  null,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  null,  null,  excluder);	  this(constructorConstructor,    fieldNamingPolicy,    null,    null);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	56	None	replace
244	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  boundFields,  null,  null);  [CE]  cannot  find  symbol  boundFields  [FE]                                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  boundFields,  null,  null);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  boundFields,  null,  null);	  this(constructorConstructor,    fieldNamingPolicy,    null,    null);    	non-compiled	[CE]  cannot  find  symbol  boundFields	56	None	replace
245	[BUG]  [BUGGY]  this(compilerConstructor,  fieldNamingPolicy,  null,  null);  [CE]  cannot  find  symbol  compilerConstructor  [FE]                                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(compilerConstructor,  fieldNamingPolicy,  null,  null);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(compilerConstructor,  fieldNamingPolicy,  null,  null);	  this(constructorConstructor,    fieldNamingPolicy,    null,    null);    	non-compiled	[CE]  cannot  find  symbol  compilerConstructor	56	None	replace
246	[BUG]  [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy?  constructorConstructor  :  FieldNamingStrategy.FUNCTION;  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy?  constructorConstructor  :  FieldNamingStrategy.FUNCTION;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  fieldNamingPolicy?  constructorConstructor  :  FieldNamingStrategy.FUNCTION;	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    FieldNamingStrategy.FUNCTION;    	non-compiled	[CE]  incompatible  types	40	None	replace
247	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.FOR;  [CE]  incompatible  types  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.FOR;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.FOR;	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    FieldNamingStrategy.FUNCTION;    	non-compiled	[CE]  incompatible  types	40	None	replace
248	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy  :  FieldNamingStrategy.FUNCTION;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy  :  FieldNamingStrategy.FUNCTION;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy  :  FieldNamingStrategy.FUNCTION;	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    FieldNamingStrategy.FUNCTION;    	non-compiled	[CE]  ';'  expected	40	None	replace
249	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.FUNCTION,  fieldNamingPolicy;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.FUNCTION,  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.FUNCTION,  fieldNamingPolicy;	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    FieldNamingStrategy.FUNCTION;    	non-compiled	[CE]  ';'  expected	40	None	replace
250	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.FUNCTION,  fieldNamingPolicy);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.FUNCTION,  fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.FUNCTION,  fieldNamingPolicy);	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    FieldNamingStrategy.FUNCTION;    	non-compiled	[CE]  ';'  expected	40	None	replace
251	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  excluder);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  excluder);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  excluder);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
252	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
253	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  [CE]  variable  constructorConstructor  might  not  have  been  initialized  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder);    }    	non-compiled	[CE]  variable  constructorConstructor  might  not  have  been  initialized	69	None	replace
254	[BUG]  [BUGGY]  if(constructorConstructor  ==  null  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldN  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldN  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldN	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy));    }    	non-compiled	[CE]  ')'  expected	90	None	replace
255	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNaming  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNaming  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNaming	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy));    }    	non-compiled	[CE]  ')'  expected	90	None	replace
256	[BUG]  [BUGGY]  if(constructorConstructor  ==  null  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  field  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  field  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  field	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy));    }    	non-compiled	[CE]  ')'  expected	90	None	replace
257	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy,  excluder);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy,  excluder);	  this.constructorConstructor    =    constructorConstructor,    fieldNamingStrategy);    	non-compiled	[CE]  ';'  expected	93	None	replace
258	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy,  name);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy,  name);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy,  name);	  this.constructorConstructor    =    constructorConstructor,    fieldNamingStrategy);    	non-compiled	[CE]  ';'  expected	93	None	replace
259	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder,  deserialized);  }  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder,  deserialized);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder,  deserialized);  }	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	85	None	replace
260	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluded);  }  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluded);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluded);  }	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	85	None	replace
261	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder,  fieldNamingPolicy);  }  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder,  fieldNamingPolicy);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder,  fieldNamingPolicy);  }	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	85	None	replace
262	[BUG]  [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
263	[BUG]  [BUGGY]  ||  constructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
264	[BUG]  [BUGGY]  ||  constructor!=  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructor!=  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructor!=  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
265	[BUG]  [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructor;  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructor;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructor;	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
266	[BUG]  [BUGGY]  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
267	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  excluder);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  excluder);	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy,    excludedr);    	non-compiled	[CE]  ';'  expected	94	None	replace
268	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy,  excludedr);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy,  excludedr);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy,  excludedr);	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy,    excludedr);    	non-compiled	[CE]  ';'  expected	94	None	replace
269	[BUG]  [BUGGY]  super(constructorConstructor,  fieldNamingPolicy);  this.fieldNamingPolicy  =  fieldNamingPolicy;  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(constructorConstructor,  fieldNamingPolicy);  this.fieldNamingPolicy  =  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructorConstructor,  fieldNamingPolicy);  this.fieldNamingPolicy  =  fieldNamingPolicy;	  super(constructorConstructor);    this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	75	None	replace
270	[BUG]  [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  deserialized);  this.fieldNamingPolicy  =  fieldNamingPolicy;  [CE]  cannot  find  symbol  deserialized  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  deserialized);  this.fieldNamingPolicy  =  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructorConstructor,  fieldNamingPolicy,  deserialized);  this.fieldNamingPolicy  =  fieldNamingPolicy;	  super(constructorConstructor);    this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol  deserialized	75	None	replace
271	[BUG]  [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excluder);  this.fieldNamingPolicy  =  fieldNamingPolicy;  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excluder);  this.fieldNamingPolicy  =  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructorConstructor,  fieldNamingPolicy,  excluder);  this.fieldNamingPolicy  =  fieldNamingPolicy;	  super(constructorConstructor);    this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	75	None	replace
272	[BUG]  [BUGGY]  this(constructorConstructor,  excluder,  fieldNamingPolicy,  excluder);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  excluder,  fieldNamingPolicy,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  excluder,  fieldNamingPolicy,  excluder);	  this(constructorConstructor,    fieldNamingStrategy,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	112	None	replace
273	[BUG]  [BUGGY]  this(constructorConstructor,  null,  fieldNamingPolicy,  excluder);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  null,  fieldNamingPolicy,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  null,  fieldNamingPolicy,  excluder);	  this(constructorConstructor,    fieldNamingStrategy,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	112	None	replace
274	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excludedr);  [CE]  cannot  find  symbol  excludedr  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excludedr);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  excludedr);	  this(constructorConstructor,    fieldNamingStrategy,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol  excludedr	112	None	replace
275	[BUG]  [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy.valueOf(constructorConstructor);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy.valueOf(constructorConstructor);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  fieldNamingPolicy.valueOf(constructorConstructor);	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.valueOf(fieldNamingPolicy);    }    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
276	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.valueOf(fieldNamingPolicy);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.valueOf(fieldNamingPolicy);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.valueOf(fieldNamingPolicy);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.valueOf(fieldNamingPolicy);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
277	[BUG]  [BUGGY]  this.constructorConstructor  =  FieldNamingStrategy.valueOf(fieldNamingPolicy);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  FieldNamingStrategy.valueOf(fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  FieldNamingStrategy.valueOf(fieldNamingPolicy);	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.valueOf(fieldNamingPolicy);    }    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
278	[BUG]  [BUGGY]  constructorConstructor  =  FieldNamingStrategy.valueOf(fieldNamingPolicy);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  constructorConstructor  =  FieldNamingStrategy.valueOf(fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	constructorConstructor  =  FieldNamingStrategy.valueOf(fieldNamingPolicy);	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.valueOf(fieldNamingPolicy);    }    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
279	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  if(fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  incompatible  types	88	None	replace
280	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  if(fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  incompatible  types	88	None	replace
281	[BUG]  [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.excluder    =    excluder;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
282	[BUG]  [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excludedr);  [CE]  cannot  find  symbol  excludedr  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excludedr);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructorConstructor,  fieldNamingPolicy,  excludedr);	  super(constructorConstructor,    fieldNamingPolicy,    deserialized);    	non-compiled	[CE]  cannot  find  symbol  excludedr	51	None	replace
283	[BUG]  [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  exception);  [CE]  cannot  find  symbol  exception  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  exception);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructorConstructor,  fieldNamingPolicy,  exception);	  super(constructorConstructor,    fieldNamingPolicy,    deserialized);    	non-compiled	[CE]  cannot  find  symbol  exception	51	None	replace
284	[BUG]  [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  this.serialized);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  this.serialized);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructorConstructor,  fieldNamingPolicy,  this.serialized);	  super(constructorConstructor,    fieldNamingPolicy,    deserialized);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	51	None	replace
285	[BUG]  [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
286	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
287	[BUG]  [BUGGY]  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
288	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingStrategy,  null);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingStrategy,  null);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingStrategy,  null);	  this(constructorConstructor,    fieldNamingPolicy,    null);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	55	None	replace
289	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingStrategy,  excluder,  null);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingStrategy,  excluder,  null);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingStrategy,  excluder,  null);	  this(constructorConstructor,    fieldNamingPolicy,    null);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	55	None	replace
290	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
291	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
292	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
293	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  isSerialized);  [CE]  cannot  find  symbol  isSerialized  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  isSerialized);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  excluder,  isSerialized);	  this(constructorConstructor,    fieldNamingPolicy,    excluder,    name);    	non-compiled	[CE]  cannot  find  symbol  isSerialized	1	None	replace
294	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  delegate);  [CE]  cannot  find  symbol  delegate  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  delegate);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  excluder,  delegate);	  this(constructorConstructor,    fieldNamingPolicy,    excluder,    name);    	non-compiled	[CE]  cannot  find  symbol  delegate	1	None	replace
295	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  excluder,  name);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  excluder,  name);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  excluder,  name);	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  ';'  expected	45	None	replace
296	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  excluder,  deserialized);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  excluder,  deserialized);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  excluder,  deserialized);	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  ';'  expected	45	None	replace
297	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  excluder,  null);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  excluder,  null);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  excluder,  null);	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  ';'  expected	45	None	replace
298	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    description;    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
299	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    description;    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
300	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    description;    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
301	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  if(excluder  ==  null)  {  this.constructorConstructor  =  excluder;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  if(excluder  ==  null)  {  this.constructorConstructor  =  excluder;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  if(excluder  ==  null)  {  this.constructorConstructor  =  excluder;  }	  this.constructorConstructor    =    constructorConstructor;    if(excluder!=    null)    {    this.constructorConstructor    =    excluder;    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
302	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.constructorConstructor  =  excluder;  }  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.constructorConstructor  =  excluder;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.constructorConstructor  =  excluder;  }	  this.constructorConstructor    =    constructorConstructor;    if(excluder!=    null)    {    this.constructorConstructor    =    excluder;    }    	non-compiled	[CE]  incompatible  types	97	None	replace
303	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  name,  true);  [CE]  cannot  find  symbol  name  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  name,  true);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  excluder,  name,  true);	  this(constructorConstructor,    fieldNamingPolicy,    excluder,    true);    	non-compiled	[CE]  cannot  find  symbol  name	72	None	replace
304	[BUG]  [BUGGY]  this(constructorConstructor,  excluder,  fieldNamingPolicy,  true);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  excluder,  fieldNamingPolicy,  true);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  excluder,  fieldNamingPolicy,  true);	  this(constructorConstructor,    fieldNamingPolicy,    excluder,    true);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	72	None	replace
305	[BUG]  [BUGGY]  this(constructorConstructor,  null,  fieldNamingPolicy,  excluder,  true);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  null,  fieldNamingPolicy,  excluder,  true);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  null,  fieldNamingPolicy,  excluder,  true);	  this(constructorConstructor,    fieldNamingPolicy,    excluder,    true);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	72	None	replace
306	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  name,  excluder,  true);  [CE]  cannot  find  symbol  name  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  name,  excluder,  true);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  name,  excluder,  true);	  this(constructorConstructor,    fieldNamingPolicy,    excluder,    true);    	non-compiled	[CE]  cannot  find  symbol  name	72	None	replace
307	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.getInstance(fieldNamingPolicy);  [CE]  incompatible  types  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.getInstance(fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.getInstance(fieldNamingPolicy);	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    FieldNamingStrategy.getInstance();    	non-compiled	[CE]  incompatible  types	41	None	replace
308	[BUG]  [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy?  constructorConstructor  :  FieldNamingStrategy.getInstance();  [CE]  incompatible  types  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy?  constructorConstructor  :  FieldNamingStrategy.getInstance();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  fieldNamingPolicy?  constructorConstructor  :  FieldNamingStrategy.getInstance();	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    FieldNamingStrategy.getInstance();    	non-compiled	[CE]  incompatible  types	41	None	replace
309	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.class.getInstance();  [CE]  incompatible  types  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.class.getInstance();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.class.getInstance();	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    FieldNamingStrategy.getInstance();    	non-compiled	[CE]  incompatible  types	41	None	replace
310	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.getInstanceType();  [CE]  incompatible  types  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.getInstanceType();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.getInstanceType();	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    FieldNamingStrategy.getInstance();    	non-compiled	[CE]  incompatible  types	41	None	replace
311	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.newInstance();  [CE]  incompatible  types  [FE]                              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.newInstance();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.newInstance();	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    FieldNamingStrategy.getInstance();    	non-compiled	[CE]  incompatible  types	41	None	replace
312	[BUG]  [BUGGY]  This.bindingFields  =  new  HashMap  <  String,ObjectConstructor>(constructorConstructor);  [CE]  cannot  find  symbol  This  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This.bindingFields  =  new  HashMap  <  String,ObjectConstructor>(constructorConstructor);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This.bindingFields  =  new  HashMap  <  String,ObjectConstructor>(constructorConstructor);	  This.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    	non-compiled	[CE]  cannot  find  symbol  This	76	None	replace
313	[BUG]  [BUGGY]  IteratorConstructor  constructorConstructor  =  fieldNamingPolicy.constructorConstructor;  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  IteratorConstructor  constructorConstructor  =  fieldNamingPolicy.constructorConstructor;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	IteratorConstructor  constructorConstructor  =  fieldNamingPolicy.constructorConstructor;	  This.constructorConstructor    =    constructorConstructor;    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
314	[BUG]  [BUGGY]  IteratorConstructor  constructorConstructor  =  fieldNamingPolicy.getConstructorConstructor();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  IteratorConstructor  constructorConstructor  =  fieldNamingPolicy.getConstructorConstructor();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	IteratorConstructor  constructorConstructor  =  fieldNamingPolicy.getConstructorConstructor();	  This.constructorConstructor    =    constructorConstructor;    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
315	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.FACTOR;  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.FACTOR;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.FACTOR;	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    FieldNamingStrategy.FUNCTION;    	non-compiled	[CE]  incompatible  types	40	None	replace
316	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.FUNCTION,  excluder);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.FUNCTION,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.FUNCTION,  excluder);	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    FieldNamingStrategy.FUNCTION;    	non-compiled	[CE]  ';'  expected	40	None	replace
317	[BUG]  [BUGGY]  this(compiler,  constructorConstructor,  fieldNamingPolicy,  null,  null);  [CE]  cannot  find  symbol  compiler  [FE]                                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(compiler,  constructorConstructor,  fieldNamingPolicy,  null,  null);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(compiler,  constructorConstructor,  fieldNamingPolicy,  null,  null);	  this(constructorConstructor,    fieldNamingPolicy,    null,    null);    	non-compiled	[CE]  cannot  find  symbol  compiler	56	None	replace
318	[BUG]  [BUGGY]  super(fieldNamingPolicy,  constructorConstructor);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(fieldNamingPolicy,  constructorConstructor);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(fieldNamingPolicy,  constructorConstructor);	  super(constructorConstructor);    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	74	None	replace
319	[BUG]  [BUGGY]  Super(constructorConstructor,  fieldNamingPolicy,  excluder);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  Super(constructorConstructor,  fieldNamingPolicy,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	Super(constructorConstructor,  fieldNamingPolicy,  excluder);	  super(constructorConstructor,    fieldNamingPolicy,    deserialized);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
320	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder);  }  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  incompatible  types	86	None	replace
321	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
322	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excludedr);  }  [CE]  incompatible  types  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excludedr);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excludedr);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  incompatible  types	86	None	replace
323	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(excluder  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(excluder  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  if(excluder  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }	  this.constructorConstructor    =    constructorConstructor;    if(excluder!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    	non-compiled	[CE]  incompatible  types	96	None	replace
324	[BUG]  [BUGGY]  this.constructorConstructor  =  new  ConstructorConstructor(fieldNamingPolicy,  constructorConstructor);  [CE]  constructor  ConstructorConstructor  in  class  ConstructorConstructor  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  new  ConstructorConstructor(fieldNamingPolicy,  constructorConstructor);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  new  ConstructorConstructor(fieldNamingPolicy,  constructorConstructor);	  this.constructorConstructor    =    new    ConstructorConstructor(constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  constructor  ConstructorConstructor  in  class  ConstructorConstructor  cannot  be  applied  to  given  types;	57	None	replace
325	[BUG]  [BUGGY]  this.constructorConstructor  =  new  ConstructorConstructor(compiler,  constructorConstructor,  fieldNamingPolicy);  [CE]  cannot  find  symbol  compiler  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  new  ConstructorConstructor(compiler,  constructorConstructor,  fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  new  ConstructorConstructor(compiler,  constructorConstructor,  fieldNamingPolicy);	  this.constructorConstructor    =    new    ConstructorConstructor(constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  compiler	57	None	replace
326	[BUG]  [BUGGY]  this.constructorConstructor  =  new  ConstructorConstructor(constructor,  fieldNamingPolicy,  excluder);  [CE]  cannot  find  symbol  constructor  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  new  ConstructorConstructor(constructor,  fieldNamingPolicy,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  new  ConstructorConstructor(constructor,  fieldNamingPolicy,  excluder);	  this.constructorConstructor    =    new    ConstructorConstructor(constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  constructor	57	None	replace
327	[BUG]  [BUGGY]  this.constructorConstructor  =  new  ConstructorConstructor(compilerConstructor,  fieldNamingPolicy);  [CE]  cannot  find  symbol  compilerConstructor  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  new  ConstructorConstructor(compilerConstructor,  fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  new  ConstructorConstructor(compilerConstructor,  fieldNamingPolicy);	  this.constructorConstructor    =    new    ConstructorConstructor(constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  compilerConstructor	57	None	replace
328	[BUG]  [BUGGY]  this.fieldNamingStrategy  =  FieldNamingStrategy.valueOf(fieldNamingPolicy);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingStrategy  =  FieldNamingStrategy.valueOf(fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingStrategy  =  FieldNamingStrategy.valueOf(fieldNamingPolicy);	  this.fieldNamingStrategy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	12	None	replace
329	[BUG]  [BUGGY]  this.fieldNamingStrategy  =  FieldNamingStrategy.createInstance(constructorConstructor,  fieldNamingPolicy);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingStrategy  =  FieldNamingStrategy.createInstance(constructorConstructor,  fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingStrategy  =  FieldNamingStrategy.createInstance(constructorConstructor,  fieldNamingPolicy);	  this.fieldNamingStrategy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	12	None	replace
330	[BUG]  [BUGGY]  this.fieldNamingStrategy  =  FieldNamingStrategy.getInstance(constructorConstructor);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingStrategy  =  FieldNamingStrategy.getInstance(constructorConstructor);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingStrategy  =  FieldNamingStrategy.getInstance(constructorConstructor);	  this.fieldNamingStrategy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	12	None	replace
331	[BUG]  [BUGGY]  ||  constructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
332	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  exclude  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  exclude  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  exclude	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  ')'  expected	117	None	replace
333	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  excluded);  }  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  excluded);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  excluded);  }	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	117	None	replace
334	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  constructorConstructor),  excluder);  }  [CE]  incompatible  types  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  constructorConstructor),  excluder);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  constructorConstructor),  excluder);  }	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  incompatible  types	117	None	replace
335	[BUG]  [BUGGY]  super(compiler,  constructorConstructor,  fieldNamingPolicy);  [CE]  cannot  find  symbol  compiler  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(compiler,  constructorConstructor,  fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(compiler,  constructorConstructor,  fieldNamingPolicy);	  super(constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  compiler	54	None	replace
336	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy,  constructorConstructor;  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy,  constructorConstructor;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy,  constructorConstructor;  }	  this.constructorConstructor    =    fieldNamingPolicy,    constructorConstructor;    	non-compiled	[CE]  ';'  expected	83	None	replace
337	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.constructorConstructor  =  constructorConstructor;  }  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.constructorConstructor  =  constructorConstructor;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.constructorConstructor  =  constructorConstructor;  }	  this.constructorConstructor    =    fieldNamingPolicy,    constructorConstructor;    	non-compiled	[CE]  incompatible  types	83	None	replace
338	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy,  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory();  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy,  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory();  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy,  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory();  }	  this.constructorConstructor    =    fieldNamingPolicy,    constructorConstructor;    	non-compiled	[CE]  ';'  expected	83	None	replace
339	[BUG]  [BUGGY]  this(compilerConstructor,  fieldNamingPolicy,  name,  excluder);  [CE]  cannot  find  symbol  compilerConstructor  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(compilerConstructor,  fieldNamingPolicy,  name,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(compilerConstructor,  fieldNamingPolicy,  name,  excluder);	  this(constructorConstructor,    fieldNamingStrategy,    name,    excluder);    	non-compiled	[CE]  cannot  find  symbol  compilerConstructor	5	None	replace
340	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  name,  excludedr);  [CE]  cannot  find  symbol  name  [FE]                              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  name,  excludedr);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  name,  excludedr);	  this(constructorConstructor,    fieldNamingStrategy,    name,    excluder);    	non-compiled	[CE]  cannot  find  symbol  name	5	None	replace
341	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.getInstance(excluder);  [CE]  incompatible  types  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.getInstance(excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.getInstance(excluder);	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    FieldNamingStrategy.getInstance();    	non-compiled	[CE]  incompatible  types	41	None	replace
342	[BUG]  [BUGGY]  ||  excluder!=  null)  {  this.constructorConstructor  =  constructorConstructor;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  excluder!=  null)  {  this.constructorConstructor  =  constructorConstructor;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  excluder!=  null)  {  this.constructorConstructor  =  constructorConstructor;	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
343	[BUG]  [BUGGY]  Iterator  <  FieldNamingStrategy>  boundFields  =  fieldNamingPolicy.boundFields;  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  Iterator  <  FieldNamingStrategy>  boundFields  =  fieldNamingPolicy.boundFields;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	Iterator  <  FieldNamingStrategy>  boundFields  =  fieldNamingPolicy.boundFields;	  This.fieldNamingStrategy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
344	[BUG]  [BUGGY]  Iterator  <  FieldNamingStrategy>  boundFields  =  fieldNamingPolicy.getRangeFields();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  Iterator  <  FieldNamingStrategy>  boundFields  =  fieldNamingPolicy.getRangeFields();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	Iterator  <  FieldNamingStrategy>  boundFields  =  fieldNamingPolicy.getRangeFields();	  This.fieldNamingStrategy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
345	[BUG]  [BUGGY]  This.fieldNamingStrategy  =  constructorConstructor;  [CE]  cannot  find  symbol  This  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This.fieldNamingStrategy  =  constructorConstructor;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This.fieldNamingStrategy  =  constructorConstructor;	  This.fieldNamingStrategy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol  This	95	None	replace
346	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  incompatible  types	88	None	replace
347	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  if(fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  incompatible  types	88	None	replace
348	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  constructorConstructor;  this.name  =  name;  }  [CE]  incompatible  types  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  constructorConstructor;  this.name  =  name;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  constructorConstructor;  this.name  =  name;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  incompatible  types	88	None	replace
349	[BUG]  [BUGGY]  this(constructorConstructor);  this.fieldNamingPolicy  =  fieldNamingPolicy;  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor);  this.fieldNamingPolicy  =  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor);  this.fieldNamingPolicy  =  fieldNamingPolicy;	  super(constructor);    this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	52	None	replace
350	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  null,  name);  [CE]  cannot  find  symbol  name  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  null,  name);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  null,  name);	  this(constructorConstructor,    fieldNamingPolicy,    fieldNamingPolicy,    excluder,    null);    	non-compiled	[CE]  cannot  find  symbol  name	114	None	replace
351	[BUG]  [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy,  constructor;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy,  constructor;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  fieldNamingPolicy,  constructor;	  this.constructorConstructor    =    constructorConstructor,    fieldNamingStrategy;    	non-compiled	[CE]  ';'  expected	60	None	replace
352	[BUG]  [BUGGY]  this.constructorConstructor  =  fieldNamingStrategy,  constructorConstructor;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  fieldNamingStrategy,  constructorConstructor;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  fieldNamingStrategy,  constructorConstructor;	  this.constructorConstructor    =    constructorConstructor,    fieldNamingStrategy;    	non-compiled	[CE]  ';'  expected	60	None	replace
353	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  super(constructorConstructor);  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  super(constructorConstructor);  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  super(constructorConstructor);  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  super(constructorConstructor);    this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	75	None	replace
354	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  super(constructorConstructor,  fieldNamingPolicy);  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  super(constructorConstructor,  fieldNamingPolicy);  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  super(constructorConstructor,  fieldNamingPolicy);  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  super(constructorConstructor);    this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	75	None	replace
355	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy  instanceof  FieldNamingStrategy)  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  this.name  =  name;  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy  instanceof  FieldNamingStrategy)  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  this.name  =  name;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy  instanceof  FieldNamingStrategy)  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  this.name  =  name;  }	  this.constructorConstructor    =    constructorConstructor;    else    {    this.fieldNamingStrategy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  'else'  without  'if'	100	None	replace
356	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy  ==  fieldNamingPolicy)  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  this.name  =  name;  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy  ==  fieldNamingPolicy)  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  this.name  =  name;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy  ==  fieldNamingPolicy)  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  this.name  =  name;  }	  this.constructorConstructor    =    constructorConstructor;    else    {    this.fieldNamingStrategy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  'else'  without  'if'	100	None	replace
357	[BUG]  [BUGGY]  this.fieldNamingPolicy  =  FieldNamingStrategy.newInstance();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingPolicy  =  FieldNamingStrategy.newInstance();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingPolicy  =  FieldNamingStrategy.newInstance();	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.newInstance();    }    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
358	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  }  [CE]  incompatible  types  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.UNKNOWN;    }    	non-compiled	[CE]  incompatible  types	104	None	replace
359	[BUG]  [BUGGY]  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  [CE]  cannot  find  symbol  UNKNOWN  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.UNKNOWN;    }    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN	104	None	replace
360	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  FieldNamingStrategy.UNKNOWN;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  }  [CE]  cannot  find  symbol  UNKNOWN  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  FieldNamingStrategy.UNKNOWN;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  FieldNamingStrategy.UNKNOWN;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.UNKNOWN;    }    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN	104	None	replace
361	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  FieldNamingStrategy.UNKNOWN;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  cannot  find  symbol  UNKNOWN  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  FieldNamingStrategy.UNKNOWN;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  FieldNamingStrategy.UNKNOWN;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.UNKNOWN;    }    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN	104	None	replace
362	[BUG]  [BUGGY]  ||  fieldNamingPolicy!=  null)  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy!=  null)  {  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy!=  null)  {	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
363	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  null,  false);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  null,  false);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  null,  false);	  this(constructorConstructor,    fieldNamingPolicy,    excluder,    false);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	4	None	replace
364	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  true);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  true);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  true);	  this(constructorConstructor,    fieldNamingPolicy,    excluder,    false);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	4	None	replace
365	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  false,  null);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  false,  null);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  excluder,  false,  null);	  this(constructorConstructor,    fieldNamingPolicy,    excluder,    false);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	4	None	replace
366	[BUG]  [BUGGY]  if(excluder  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  [CE]  variable  constructorConstructor  might  not  have  been  initialized  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(excluder  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(excluder  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder    	non-compiled	[CE]  variable  constructorConstructor  might  not  have  been  initialized	105	None	replace
367	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  excluder	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder    	non-compiled	[CE]  ')'  expected	105	None	replace
368	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
369	[BUG]  [BUGGY]  &&  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  &&  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	&&  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
370	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingStrategy,  null,  excluder);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingStrategy,  null,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingStrategy,  null,  excluder);	  this(constructorConstructor,    fieldNamingStrategy,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	112	None	replace
371	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  null  :  factory.getConstructorConstructor();  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  null  :  factory.getConstructorConstructor();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  null  :  factory.getConstructorConstructor();	  this.constructorConstructor    =    constructorConstructor?    null    :    constructorConstructor;    	non-compiled	[CE]  incompatible  types	58	None	replace
372	[BUG]  [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy,  constructor);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy,  constructor);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  fieldNamingPolicy,  constructor);	  this.constructorConstructor    =    constructorConstructor,    fieldNamingStrategy);    	non-compiled	[CE]  ';'  expected	93	None	replace
373	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  FieldNamingStrategy.class);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  FieldNamingStrategy.class);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  FieldNamingStrategy.class);	  this.constructorConstructor    =    constructorConstructor,    fieldNamingStrategy);    	non-compiled	[CE]  ';'  expected	93	None	replace
374	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructor;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructor;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructor;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructor;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
375	[BUG]  [BUGGY]  this.fieldNamingPolicy  =  constructorConstructor?  fieldNamingPolicy  :  null;  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingPolicy  =  constructorConstructor?  fieldNamingPolicy  :  null;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingPolicy  =  constructorConstructor?  fieldNamingPolicy  :  null;	  this.fieldNamingPolicy    =    constructorConstructor;    	non-compiled	[CE]  incompatible  types	50	None	replace
376	[BUG]  [BUGGY]  this.fieldNamingPolicy  =  constructorConstructor?  fieldNamingPolicy  :  fieldNamingPolicy;  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingPolicy  =  constructorConstructor?  fieldNamingPolicy  :  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingPolicy  =  constructorConstructor?  fieldNamingPolicy  :  fieldNamingPolicy;	  this.fieldNamingPolicy    =    constructorConstructor;    	non-compiled	[CE]  incompatible  types	50	None	replace
377	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  factory);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  factory);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  factory);	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy,    deserialized);    	non-compiled	[CE]  ';'  expected	47	None	replace
378	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.UNKNOWN,  excluder);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.UNKNOWN,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.UNKNOWN,  excluder);	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    FieldNamingStrategy.UNKNOWN;    	non-compiled	[CE]  ';'  expected	39	None	replace
379	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.UNKNOWN  +  1;  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.UNKNOWN  +  1;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.UNKNOWN  +  1;	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    FieldNamingStrategy.UNKNOWN;    	non-compiled	[CE]  incompatible  types	39	None	replace
380	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  null,  true);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  null,  true);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  null,  true);	  this(constructorConstructor,    fieldNamingPolicy,    excluder,    true);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	72	None	replace
381	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor  +  excluder;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor  +  excluder;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor  +  excluder;	  this.constructorConstructor    =    constructorConstructor    +    fieldNamingPolicy;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	82	None	replace
382	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor  /  fieldNamingPolicy;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor  /  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor  /  fieldNamingPolicy;	  this.constructorConstructor    =    constructorConstructor    +    fieldNamingPolicy;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	82	None	replace
383	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  null,  excluder,  ObjectConstructor.class);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  null,  excluder,  ObjectConstructor.class);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  null,  excluder,  ObjectConstructor.class);	  this(constructorConstructor,    fieldNamingPolicy,    null,    excluder);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	3	None	replace
384	[BUG]  [BUGGY]  this.bindingFields  =  new  ArrayList  <  String,ObjectConstructor>();  [CE]  cannot  find  symbol  bindingFields  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.bindingFields  =  new  ArrayList  <  String,ObjectConstructor>();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.bindingFields  =  new  ArrayList  <  String,ObjectConstructor>();	  this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  cannot  find  symbol  bindingFields	107	None	replace
385	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.excluder    =    excluder;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
386	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder);  }  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder);    }    	non-compiled	[CE]  incompatible  types	69	None	replace
387	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  constructorConstructor,  excluder);  }  [CE]  incompatible  types  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  constructorConstructor,  excluder);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  constructorConstructor,  excluder);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder);    }    	non-compiled	[CE]  incompatible  types	69	None	replace
388	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder);    }    	non-compiled	[CE]  ')'  expected	69	None	replace
389	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [CE]  cannot  find  symbol  name  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  cannot  find  symbol  name	101	None	replace
390	[BUG]  [BUGGY]  this.constructorConstructor  =  FieldNamingStrategy.valueOf(excluder);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  FieldNamingStrategy.valueOf(excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  FieldNamingStrategy.valueOf(excluder);	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.valueOf(fieldNamingPolicy);    }    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
391	[BUG]  [BUGGY]  this.fieldNamingPolicy  =  FieldNamingStrategy.getInstance();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingPolicy  =  FieldNamingStrategy.getInstance();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingPolicy  =  FieldNamingStrategy.getInstance();	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.getInstance();    }    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
392	[BUG]  [BUGGY]  This(constructorConstructor,  fieldNamingPolicy,  excluder,  false);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This(constructorConstructor,  fieldNamingPolicy,  excluder,  false);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This(constructorConstructor,  fieldNamingPolicy,  excluder,  false);	  This(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
393	[BUG]  [BUGGY]  This(constructorConstructor,  fieldNamingPolicy,  excluder,  ObjectConstructor.DEFAULT);  [CE]  cannot  find  symbol  DEFAULT  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This(constructorConstructor,  fieldNamingPolicy,  excluder,  ObjectConstructor.DEFAULT);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This(constructorConstructor,  fieldNamingPolicy,  excluder,  ObjectConstructor.DEFAULT);	  This(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT	73	None	replace
394	[BUG]  [BUGGY]  this(compiler,  constructorConstructor,  fieldNamingPolicy);  [CE]  cannot  find  symbol  compiler  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(compiler,  constructorConstructor,  fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(compiler,  constructorConstructor,  fieldNamingPolicy);	  this(constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  compiler	80	None	replace
395	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  fieldNamingPolicy,  excluder);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  fieldNamingPolicy,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  fieldNamingPolicy,  excluder);	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    fieldNamingPolicy;    	non-compiled	[CE]  ';'  expected	38	None	replace
396	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  fieldNamingPolicy);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  fieldNamingPolicy);	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    fieldNamingPolicy;    	non-compiled	[CE]  ';'  expected	38	None	replace
397	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.bindingFields  =  new  LinkedHashMap  <  String,ObjectConstructor>();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.bindingFields  =  new  LinkedHashMap  <  String,ObjectConstructor>();  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.bindingFields  =  new  LinkedHashMap  <  String,ObjectConstructor>();  }	  ||    constructorConstructor!=    null)    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
398	[BUG]  [BUGGY]  ||  excluder!=  null)  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  excluder!=  null)  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  excluder!=  null)  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }	  ||    constructorConstructor!=    null)    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
399	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  0);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  0);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  0);	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  ';'  expected	45	None	replace
400	[BUG]  [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excluder,  false);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excluder,  false);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructorConstructor,  fieldNamingPolicy,  excluder,  false);	  super(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	53	None	replace
401	[BUG]  [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excluder,  exception);  [CE]  cannot  find  symbol  exception  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excluder,  exception);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructorConstructor,  fieldNamingPolicy,  excluder,  exception);	  super(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol  exception	53	None	replace
402	[BUG]  [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excluder,  ObjectConstructor.class);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excluder,  ObjectConstructor.class);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructorConstructor,  fieldNamingPolicy,  excluder,  ObjectConstructor.class);	  super(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	53	None	replace
403	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  excluder;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  excluder;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  excluder;	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy,    excluder;    	non-compiled	[CE]  ';'  expected	61	None	replace
404	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  0;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  0;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  0;	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy,    excluder;    	non-compiled	[CE]  ';'  expected	61	None	replace
405	[BUG]  [BUGGY]  &&  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  &&  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	&&  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
406	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  FieldNamingPolicy;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  FieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  FieldNamingPolicy;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
407	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
408	[BUG]  [BUGGY]  ||  constructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
409	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  factory);  [CE]  cannot  find  symbol  factory  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  factory);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  excluder,  factory);	  this(constructorConstructor,    fieldNamingPolicy,    excluder,    name);    	non-compiled	[CE]  cannot  find  symbol  factory	1	None	replace
410	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  false,  excluder);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  false,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  false,  excluder);	  this(constructorConstructor,    fieldNamingPolicy,    name,    excluder);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	6	None	replace
411	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  desrialized);  [CE]  cannot  find  symbol  desrialized  [FE]                                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  desrialized);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  excluder,  desrialized);	  this(constructorConstructor,    fieldNamingPolicy,    name,    excluder);    	non-compiled	[CE]  cannot  find  symbol  desrialized	6	None	replace
412	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  factory,  excluder);  [CE]  cannot  find  symbol  factory  [FE]                                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  factory,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  factory,  excluder);	  this(constructorConstructor,    fieldNamingPolicy,    name,    excluder);    	non-compiled	[CE]  cannot  find  symbol  factory	6	None	replace
413	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  exclude  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  exclude  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  exclude	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  ')'  expected	70	None	replace
414	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  null);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  null);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  null);	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy,    null);    	non-compiled	[CE]  ';'  expected	48	None	replace
415	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  false);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  false);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  false);	  this(constructorConstructor,    fieldNamingPolicy,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	113	None	replace
416	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  null,  excluder);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  null,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  null,  excluder);	  this(constructorConstructor,    fieldNamingPolicy,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	113	None	replace
417	[BUG]  [BUGGY]  this.bindingFields  =  Collections.synchronizedMap(new  HashMap  <  String,ObjectConstructor>());  [CE]  cannot  find  symbol  bindingFields  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.bindingFields  =  Collections.synchronizedMap(new  HashMap  <  String,ObjectConstructor>());  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.bindingFields  =  Collections.synchronizedMap(new  HashMap  <  String,ObjectConstructor>());	  this.constructorConstructor    =    constructorConstructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  cannot  find  symbol  bindingFields	34	None	replace
418	[BUG]  [BUGGY]  This.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.constructorConstructor  =  excluder;  }  [CE]  cannot  find  symbol  This  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.constructorConstructor  =  excluder;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.constructorConstructor  =  excluder;  }	  this.constructorConstructor    =    constructorConstructor;    if(excluder!=    null)    {    this.constructorConstructor    =    excluder;    }    	non-compiled	[CE]  cannot  find  symbol  This	97	None	replace
419	[BUG]  [BUGGY]  if(excluder  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy)  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(excluder  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy)  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(excluder  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy)	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy)    	non-compiled	[CE]  ')'  expected	116	None	replace
420	[BUG]  [BUGGY]  if(excluder  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  excluder  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(excluder  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  excluder  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(excluder  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  excluder	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy)    	non-compiled	[CE]  ')'  expected	116	None	replace
421	[BUG]  [BUGGY]  ||(constructorConstructor!=  null  &&  constructorConstructor.equals(fieldNamingPolicy)))  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy)  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||(constructorConstructor!=  null  &&  constructorConstructor.equals(fieldNamingPolicy)))  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy)  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||(constructorConstructor!=  null  &&  constructorConstructor.equals(fieldNamingPolicy)))  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy)	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy)    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
422	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy  ==  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy  ==  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy  ==  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  this.constructorConstructor    =    constructorConstructor;    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    }    	non-compiled	[CE]  'else'  without  'if'	109	None	replace
423	[BUG]  [BUGGY]  this.fieldNamingStrategy  =  FieldNamingStrategy.class;  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingStrategy  =  FieldNamingStrategy.class;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingStrategy  =  FieldNamingStrategy.class;	  this.fieldNamingStrategy    =    constructorConstructor;    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	14	None	replace
424	[BUG]  [BUGGY]  this.fieldNamingStrategy  =  FieldNamingStrategy.newInstance();  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingStrategy  =  FieldNamingStrategy.newInstance();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingStrategy  =  FieldNamingStrategy.newInstance();	  this.fieldNamingStrategy    =    constructorConstructor;    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	14	None	replace
425	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  this.constructorConstructor    =    constructorConstructor;    if(excluder!=    null)    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
426	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excludedr));  }  [CE]  incompatible  types  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excludedr));  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excludedr));  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    excluder));    }    	non-compiled	[CE]  incompatible  types	92	None	replace
427	[BUG]  [BUGGY]  this.fieldNamingPolicy  =  fieldNamingStrategy;  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingPolicy  =  fieldNamingStrategy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingPolicy  =  fieldNamingStrategy;	  this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	13	None	replace
428	[BUG]  [BUGGY]  this.fieldNamingPolicy  =  new  FieldNamingPolicy(constructorConstructor,  fieldNamingPolicy);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingPolicy  =  new  FieldNamingPolicy(constructorConstructor,  fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingPolicy  =  new  FieldNamingPolicy(constructorConstructor,  fieldNamingPolicy);	  this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
429	[BUG]  [BUGGY]  this.fieldNamingPolicy  =  new  FieldNamingPolicy(constructorConstructor);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingPolicy  =  new  FieldNamingPolicy(constructorConstructor);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingPolicy  =  new  FieldNamingPolicy(constructorConstructor);	  this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
430	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  false,  excluder);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  false,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  false,  excluder);	  this(constructorConstructor,    fieldNamingPolicy,    excluder,    false);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	4	None	replace
431	[BUG]  [BUGGY]  this.constructorConstructor  =  new  ConstructorConstructor(constructorConstructor,  fieldNamingStrategy,  excluder);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  new  ConstructorConstructor(constructorConstructor,  fieldNamingStrategy,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  new  ConstructorConstructor(constructorConstructor,  fieldNamingStrategy,  excluder);	  this.constructorConstructor    =    new    ConstructorConstructor(constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	57	None	replace
432	[BUG]  [BUGGY]  if(constructorConstructor  ==  null  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [CE]  cannot  find  symbol  name  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  cannot  find  symbol  name	101	None	replace
433	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  String.valueOf(this.name);  }  [CE]  cannot  find  symbol  name  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  String.valueOf(this.name);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  String.valueOf(this.name);  }	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  cannot  find  symbol  name	101	None	replace
434	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }  [CE]  cannot  find  symbol  name  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  cannot  find  symbol  name	101	None	replace
435	[BUG]  [BUGGY]  &&  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  &&  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	&&  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy)    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
436	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  null  :  excluder;  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  null  :  excluder;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  null  :  excluder;	  this.constructorConstructor    =    constructorConstructor?    null    :    constructorConstructor;    	non-compiled	[CE]  incompatible  types	58	None	replace
437	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  deserialized;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  deserialized;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  deserialized;	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy,    deserialized);    	non-compiled	[CE]  ';'  expected	47	None	replace
438	[BUG]  [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  field  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  field  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  field	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    field    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
439	[BUG]  [BUGGY]  ||(constructorConstructor!=  null  &&  constructorConstructor.equals(fieldNamingPolicy)))  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excluder));  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||(constructorConstructor!=  null  &&  constructorConstructor.equals(fieldNamingPolicy)))  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excluder));  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||(constructorConstructor!=  null  &&  constructorConstructor.equals(fieldNamingPolicy)))  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excluder));  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    excluder));    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
440	[BUG]  [BUGGY]  ||(constructorConstructor!=  null  &&  fieldNamingPolicy.equals(excluder)))  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excluder));  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||(constructorConstructor!=  null  &&  fieldNamingPolicy.equals(excluder)))  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excluder));  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||(constructorConstructor!=  null  &&  fieldNamingPolicy.equals(excluder)))  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excluder));  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    excluder));    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
441	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.newInstance();  }  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.newInstance();  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.newInstance();  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.newInstance();    }    	non-compiled	[CE]  incompatible  types	103	None	replace
442	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.newInstance();  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.newInstance();  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.newInstance();  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.newInstance();    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
443	[BUG]  [BUGGY]  if(constructorConstructor  ==  null  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder);  }  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder);  }	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	85	None	replace
444	[BUG]  [BUGGY]  if(constructorConstructor  ==  null  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  ')'  expected	85	None	replace
445	[BUG]  [BUGGY]  if(constructorConstructor  ==  null  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder);  }  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder);  }	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	85	None	replace
446	[BUG]  [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldN  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldN  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldN	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldN    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
447	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  'else'  without  'if'	88	None	replace
448	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(fieldNamingPolicy  ==  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  variable  fieldNamingPolicy  might  already  have  been  assigned  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(fieldNamingPolicy  ==  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  if(fieldNamingPolicy  ==  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  this.constructorConstructor    =    constructorConstructor;    if(excluder!=    null)    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    }    	non-compiled	[CE]  variable  fieldNamingPolicy  might  already  have  been  assigned	110	None	replace
449	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(objectNamingPolicy!=  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  cannot  find  symbol  objectNamingPolicy  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(objectNamingPolicy!=  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  if(objectNamingPolicy!=  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  this.constructorConstructor    =    constructorConstructor;    if(excluder!=    null)    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    }    	non-compiled	[CE]  cannot  find  symbol  objectNamingPolicy	110	None	replace
450	[BUG]  [BUGGY]  ||  this.constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  this.constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  this.constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    field    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
451	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  excluder;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  excluder;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  excluder;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructor;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
452	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  thisName  =  String.valueOf(this.name);  }  [CE]  cannot  find  symbol  thisName  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  thisName  =  String.valueOf(this.name);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  thisName  =  String.valueOf(this.name);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    String.valueOf(this.name);    }    	non-compiled	[CE]  cannot  find  symbol  thisName	108	None	replace
453	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this_name  =  String.valueOf(this.name);  }  [CE]  cannot  find  symbol  this_name  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this_name  =  String.valueOf(this.name);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this_name  =  String.valueOf(this.name);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    String.valueOf(this.name);    }    	non-compiled	[CE]  cannot  find  symbol  this_name	108	None	replace
454	[BUG]  [BUGGY]  this.constructorConstructor  =  new  ObjectConstructor(constructorConstructor,  fieldNamingStrategy);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  new  ObjectConstructor(constructorConstructor,  fieldNamingStrategy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  new  ObjectConstructor(constructorConstructor,  fieldNamingStrategy);	  this.constructorConstructor    =    new    ObjectConstructor(constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	59	None	replace
455	[BUG]  [BUGGY]  &&  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  &&  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	&&  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.excluder    =    excluder;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
456	[BUG]  [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    fieldNamingPolicy;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.excluder    =    excluder;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
457	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingStrategy,  excluder);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingStrategy,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  fieldNamingStrategy,  excluder);	  this(constructorConstructor,    fieldNamingStrategy,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	112	None	replace
458	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingStrategy,  fieldNamingPolicy,  excluder,  null);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingStrategy,  fieldNamingPolicy,  excluder,  null);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingStrategy,  fieldNamingPolicy,  excluder,  null);	  this(constructorConstructor,    fieldNamingStrategy,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	112	None	replace
459	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingStrategy,  fieldNamingPolicy,  excluder,  deserialized);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingStrategy,  fieldNamingPolicy,  excluder,  deserialized);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingStrategy,  fieldNamingPolicy,  excluder,  deserialized);	  this(constructorConstructor,    fieldNamingStrategy,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	112	None	replace
460	[BUG]  [BUGGY]  ObjectConstructor  constructor  =  constructorConstructor;  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ObjectConstructor  constructor  =  constructorConstructor;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	ObjectConstructor  constructor  =  constructorConstructor;	  This.constructorConstructor    =    constructorConstructor;    	non-compiled	[CE]  incompatible  types	15	None	replace
461	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  super(constructorConstructor);  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  super(constructorConstructor);  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  super(constructorConstructor);  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  super(constructorConstructor);    this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	75	None	replace
462	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  variable  fieldNamingPolicy  might  already  have  been  assigned  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  super(constructorConstructor);    this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  variable  fieldNamingPolicy  might  already  have  been  assigned	75	None	replace
463	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  }  [CE]  cannot  find  symbol  UNKNOWN  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.UNKNOWN;    }    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN	104	None	replace
464	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  variable  fieldNamingPolicy  might  already  have  been  assigned  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.UNKNOWN;    }    	non-compiled	[CE]  variable  fieldNamingPolicy  might  already  have  been  assigned	104	None	replace
465	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  }  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.UNKNOWN;    }    	non-compiled	[CE]  'else'  without  'if'	104	None	replace
466	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
467	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy  ==  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy  ==  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy  ==  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }	  this.constructorConstructor    =    constructorConstructor;    else    {    this.fieldNamingStrategy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  'else'  without  'if'	100	None	replace
468	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy!=  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy!=  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  else  if(fieldNamingPolicy!=  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }	  this.constructorConstructor    =    constructorConstructor;    else    {    this.fieldNamingStrategy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  'else'  without  'if'	100	None	replace
469	[BUG]  [BUGGY]  this.fieldNamingStrategy  =  FieldNamingStrategy.UNDEFINED;  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingStrategy  =  FieldNamingStrategy.UNDEFINED;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingStrategy  =  FieldNamingStrategy.UNDEFINED;	  this.fieldNamingStrategy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	12	None	replace
470	[BUG]  [BUGGY]  this.fieldNamingStrategy  =  FieldNamingStrategy.DEFAULT;  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingStrategy  =  FieldNamingStrategy.DEFAULT;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingStrategy  =  FieldNamingStrategy.DEFAULT;	  this.fieldNamingStrategy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	12	None	replace
471	[BUG]  [BUGGY]  this.fieldNamingStrategy  =  FieldNamingStrategy.UNSPECIFIED;  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingStrategy  =  FieldNamingStrategy.UNSPECIFIED;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingStrategy  =  FieldNamingStrategy.UNSPECIFIED;	  this.fieldNamingStrategy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	12	None	replace
472	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingStrategy,  excluder,  deserialized);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingStrategy,  excluder,  deserialized);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingStrategy,  excluder,  deserialized);	  this(constructorConstructor,    fieldNamingStrategy,    excluder);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	71	None	replace
473	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingStrategy,  fieldNamingPolicy);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingStrategy,  fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingStrategy,  fieldNamingPolicy);	  this(constructorConstructor,    fieldNamingStrategy,    excluder);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	71	None	replace
474	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor.getInstance(fieldNamingPolicy);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor.getInstance(fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor.getInstance(fieldNamingPolicy);	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.getInstance(fieldNamingPolicy);    }    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
475	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingStrategy  =  fieldNamingStrategy;  }  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingStrategy  =  fieldNamingStrategy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingStrategy  =  fieldNamingStrategy;  }	  this.constructorConstructor    =    constructorConstructor,    fieldNamingStrategy;    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	60	None	replace
476	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  }  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  }	  this.constructorConstructor    =    constructorConstructor,    fieldNamingStrategy;    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	60	None	replace
477	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy  instanceof  FieldNamingStrategy?((  FieldNamingStrategy)fieldNamingPolicy).getInstance()  :  null;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy  instanceof  FieldNamingStrategy?((  FieldNamingStrategy)fieldNamingPolicy).getInstance()  :  null;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy  instanceof  FieldNamingStrategy?((  FieldNamingStrategy)fieldNamingPolicy).getInstance()  :  null;	  this.constructorConstructor    =    constructorConstructor,    fieldNamingStrategy;    	non-compiled	[CE]  ';'  expected	60	None	replace
478	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingStrategy  =  FieldNamingStrategy.createInstance(fieldNamingPolicy);  }  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingStrategy  =  FieldNamingStrategy.createInstance(fieldNamingPolicy);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingStrategy  =  FieldNamingStrategy.createInstance(fieldNamingPolicy);  }	  this.constructorConstructor    =    constructorConstructor,    fieldNamingStrategy;    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	60	None	replace
479	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy  instanceof  FieldNamingStrategy?((  FieldNamingStrategy)type).getDeclaredFields()  :  null;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy  instanceof  FieldNamingStrategy?((  FieldNamingStrategy)type).getDeclaredFields()  :  null;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy  instanceof  FieldNamingStrategy?((  FieldNamingStrategy)type).getDeclaredFields()  :  null;	  this.constructorConstructor    =    constructorConstructor,    fieldNamingStrategy;    	non-compiled	[CE]  ';'  expected	60	None	replace
480	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingStrategy  =  FieldNamingStrategy.getInstance();  }  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingStrategy  =  FieldNamingStrategy.getInstance();  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingStrategy  =  FieldNamingStrategy.getInstance();  }	  this.constructorConstructor    =    constructorConstructor,    fieldNamingStrategy;    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	60	None	replace
481	[BUG]  [BUGGY]  if(constructorConstructor!=  null  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder);  }  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	44	None	replace
482	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder,  fieldNamingPolicy);  }  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder,  fieldNamingPolicy);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder,  fieldNamingPolicy);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	44	None	replace
483	[BUG]  [BUGGY]  this.fieldNamingStrategy  =  fieldNamingStrategy;  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingStrategy  =  fieldNamingStrategy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingStrategy  =  fieldNamingStrategy;	  this.fieldNamingStrategy    =    constructorConstructor;    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	14	None	replace
484	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    description;    }    	non-compiled	[CE]  incompatible  types	89	None	replace
485	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    description;    }    	non-compiled	[CE]  'else'  without  'if'	89	None	replace
486	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  0,  null,  null);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  0,  null,  null);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  0,  null,  null);	  this(constructorConstructor,    fieldNamingPolicy,    null,    null);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	56	None	replace
487	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorNamingStrategy.getInstance();  [CE]  cannot  find  symbol  constructorNamingStrategy  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorNamingStrategy.getInstance();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorNamingStrategy.getInstance();	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.getInstance();    }    	non-compiled	[CE]  cannot  find  symbol  constructorNamingStrategy	77	None	replace
488	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.newInstance(fieldNamingPolicy);  [CE]  incompatible  types  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.newInstance(fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.newInstance(fieldNamingPolicy);	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    FieldNamingStrategy.getInstance();    	non-compiled	[CE]  incompatible  types	41	None	replace
489	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  new  FieldNamingStrategy(fieldNamingPolicy);  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  new  FieldNamingStrategy(fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  new  FieldNamingStrategy(fieldNamingPolicy);	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    fieldNamingPolicy;    	non-compiled	[CE]  incompatible  types	38	None	replace
490	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingStrategy,  name,  excluder,  deserialized);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingStrategy,  name,  excluder,  deserialized);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingStrategy,  name,  excluder,  deserialized);	  this(constructorConstructor,    fieldNamingStrategy,    name,    excluder);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	5	None	replace
491	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingStrategy,  name,  excluder,  desrialized);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingStrategy,  name,  excluder,  desrialized);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingStrategy,  name,  excluder,  desrialized);	  this(constructorConstructor,    fieldNamingStrategy,    name,    excluder);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	5	None	replace
492	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingStrategy,  name,  excluder,  null);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingStrategy,  name,  excluder,  null);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingStrategy,  name,  excluder,  null);	  this(constructorConstructor,    fieldNamingStrategy,    name,    excluder);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	5	None	replace
493	[BUG]  [BUGGY]  if(constructorConstructor  ==  null  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldN  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldN  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldN	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder);    }    	non-compiled	[CE]  ')'  expected	67	None	replace
494	[BUG]  [BUGGY]  if(constructorConstructor  ==  null  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  field  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  field  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  field	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder);    }    	non-compiled	[CE]  ')'  expected	67	None	replace
495	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  exclude  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  exclude  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  exclude	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder    	non-compiled	[CE]  ')'  expected	105	None	replace
496	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.constructorConstructor  =  excludedr;  }  [CE]  cannot  find  symbol  excludedr  [FE]            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.constructorConstructor  =  excludedr;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.constructorConstructor  =  excludedr;  }	  this.constructorConstructor    =    constructorConstructor;    if(excluder!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    	non-compiled	[CE]  cannot  find  symbol  excludedr	96	None	replace
497	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.constructorConstructor  =  constructor;  }  [CE]  cannot  find  symbol  constructor  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.constructorConstructor  =  constructor;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.constructorConstructor  =  constructor;  }	  this.constructorConstructor    =    constructorConstructor;    if(excluder!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    	non-compiled	[CE]  cannot  find  symbol  constructor	96	None	replace
498	[BUG]  [BUGGY]  this.fieldNamingPolicy  =  new  FieldNamingStrategy(constructorConstructor,  fieldNamingPolicy);  [CE]  FieldNamingStrategy  is  abstract;  cannot  be  instantiated  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingPolicy  =  new  FieldNamingStrategy(constructorConstructor,  fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingPolicy  =  new  FieldNamingStrategy(constructorConstructor,  fieldNamingPolicy);	  this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  FieldNamingStrategy  is  abstract;  cannot  be  instantiated	13	None	replace
499	[BUG]  [BUGGY]  this.fieldNamingPolicy  =  new  FieldNamingStrategy();  [CE]  FieldNamingStrategy  is  abstract;  cannot  be  instantiated  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingPolicy  =  new  FieldNamingStrategy();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingPolicy  =  new  FieldNamingStrategy();	  this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  FieldNamingStrategy  is  abstract;  cannot  be  instantiated	13	None	replace
500	[BUG]  [BUGGY]  this.fieldNamingPolicy  =  new  FieldNamingStrategy(constructorConstructor);  [CE]  FieldNamingStrategy  is  abstract;  cannot  be  instantiated  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingPolicy  =  new  FieldNamingStrategy(constructorConstructor);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingPolicy  =  new  FieldNamingStrategy(constructorConstructor);	  this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  FieldNamingStrategy  is  abstract;  cannot  be  instantiated	13	None	replace
501	[BUG]  [BUGGY]  this.fieldNamingPolicy  =  FieldNamingStrategy.getInstance(constructorConstructor);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.fieldNamingPolicy  =  FieldNamingStrategy.getInstance(constructorConstructor);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingPolicy  =  FieldNamingStrategy.getInstance(constructorConstructor);	  this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
502	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  desrialized);  [CE]  cannot  find  symbol  desrialized  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  desrialized);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  desrialized);	  this(constructorConstructor,    fieldNamingPolicy,    excluder,    name);    	non-compiled	[CE]  cannot  find  symbol  desrialized	1	None	replace
503	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor  +  FieldNamingStrategy.class;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor  +  FieldNamingStrategy.class;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor  +  FieldNamingStrategy.class;	  this.constructorConstructor    =    constructorConstructor    +    fieldNamingPolicy;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	82	None	replace
504	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor  +  FieldNamingStrategy.FIELD_NAME;  [CE]  cannot  find  symbol  FIELD_NAME  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor  +  FieldNamingStrategy.FIELD_NAME;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor  +  FieldNamingStrategy.FIELD_NAME;	  this.constructorConstructor    =    constructorConstructor    +    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol  FIELD_NAME	82	None	replace
505	[BUG]  [BUGGY]  this.bindingFields  =  Maps.newHashMap();  [CE]  cannot  find  symbol  bindingFields  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.bindingFields  =  Maps.newHashMap();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.bindingFields  =  Maps.newHashMap();	  this.constructorConstructor    =    constructorConstructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  cannot  find  symbol  bindingFields	34	None	replace
506	[BUG]  [BUGGY]  this.bindingFields  =  Lists.newArrayList  <  String,ObjectConstructor>();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.bindingFields  =  Lists.newArrayList  <  String,ObjectConstructor>();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.bindingFields  =  Lists.newArrayList  <  String,ObjectConstructor>();	  this.constructorConstructor    =    constructorConstructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  ';'  expected	34	None	replace
507	[BUG]  [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
508	[BUG]  [BUGGY]  super(compilerConstructor,  constructorConstructor);  [CE]  cannot  find  symbol  compilerConstructor  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(compilerConstructor,  constructorConstructor);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(compilerConstructor,  constructorConstructor);	  super(constructorConstructor);    	non-compiled	[CE]  cannot  find  symbol  compilerConstructor	74	None	replace
509	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  FieldNamingStrategy.FUNCTION  :  fieldNamingPolicy;  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  FieldNamingStrategy.FUNCTION  :  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  FieldNamingStrategy.FUNCTION  :  fieldNamingPolicy;	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    FieldNamingStrategy.FUNCTION;    	non-compiled	[CE]  incompatible  types	40	None	replace
510	[BUG]  [BUGGY]  if(constructorConstructor  ==  null  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  field  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  field  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  field	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy));    }    	non-compiled	[CE]  ')'  expected	90	None	replace
511	[BUG]  [BUGGY]  if(constructorConstructor  ==  null  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldN  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldN  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldN	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy));    }    	non-compiled	[CE]  ')'  expected	90	None	replace
512	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CE]  variable  fieldNamingPolicy  might  already  have  been  assigned  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }	  this.constructorConstructor    =    constructorConstructor;    if(excluder!=    null)    {    this.constructorConstructor    =    excluder;    }    	non-compiled	[CE]  variable  fieldNamingPolicy  might  already  have  been  assigned	97	None	replace
513	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  variable  fieldNamingPolicy  might  already  have  been  assigned  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  this.constructorConstructor    =    constructorConstructor;    if(excluder!=    null)    {    this.constructorConstructor    =    excluder;    }    	non-compiled	[CE]  variable  fieldNamingPolicy  might  already  have  been  assigned	97	None	replace
514	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder    	non-compiled	[CE]  ')'  expected	106	None	replace
515	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  exclude  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  exclude  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  exclude	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder    	non-compiled	[CE]  ')'  expected	106	None	replace
516	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy,  excluder  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy,  excluder  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy,  excluder	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder    	non-compiled	[CE]  ')'  expected	106	None	replace
517	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  excluder);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  excluder);	  this(constructorConstructor,    fieldNamingPolicy,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	113	None	replace
518	[BUG]  [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excluder,  this.boundFields);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excluder,  this.boundFields);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructorConstructor,  fieldNamingPolicy,  excluder,  this.boundFields);	  super(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	53	None	replace
519	[BUG]  [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excluder,  excluder);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excluder,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructorConstructor,  fieldNamingPolicy,  excluder,  excluder);	  super(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	53	None	replace
520	[BUG]  [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excluder,  this.bindFields);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excluder,  this.bindFields);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructorConstructor,  fieldNamingPolicy,  excluder,  this.bindFields);	  super(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	53	None	replace
521	[BUG]  [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldN  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  ||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldN  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  fieldNamingPolicy!=  null)  {  this.constructorConstructor  =  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldN	  ||    constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldN    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
522	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  fieldNamingStrategy,  excluder);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  fieldNamingStrategy,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  fieldNamingStrategy,  excluder);	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    fieldNamingStrategy;    	non-compiled	[CE]  ';'  expected	37	None	replace
523	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  fieldNamingStrategy);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  fieldNamingStrategy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  fieldNamingStrategy);	  this.constructorConstructor    =    constructorConstructor?    fieldNamingPolicy    :    fieldNamingStrategy;    	non-compiled	[CE]  ';'  expected	37	None	replace
524	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  excluder  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  excluder  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  excluder	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  ')'  expected	117	None	replace
525	[BUG]  [BUGGY]  This.fieldNamingStrategy  fieldNamingPolicy  =  fieldNamingPolicy;  [CE]  package  This  does  not  exist  [FE]                ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This.fieldNamingStrategy  fieldNamingPolicy  =  fieldNamingPolicy;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This.fieldNamingStrategy  fieldNamingPolicy  =  fieldNamingPolicy;	  This.fieldNamingStrategy    =    fieldNamingPolicy;    	non-compiled	[CE]  package  This  does  not  exist	95	None	replace
526	[BUG]  [BUGGY]  This.fieldNamingStrategy  =  fieldNamingPolicy  instanceof  FieldNamingStrategy?(FieldNamingStrategy)fieldNamingPolicy  :  null;  [CE]  cannot  find  symbol  This  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This.fieldNamingStrategy  =  fieldNamingPolicy  instanceof  FieldNamingStrategy?(FieldNamingStrategy)fieldNamingPolicy  :  null;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This.fieldNamingStrategy  =  fieldNamingPolicy  instanceof  FieldNamingStrategy?(FieldNamingStrategy)fieldNamingPolicy  :  null;	  This.fieldNamingStrategy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol  This	95	None	replace
527	[BUG]  [BUGGY]  This.fieldNamingStrategy  =  fieldNamingPolicy  instanceof  FieldNamingStrategy?(FieldNamingStrategy)fieldNamingPolicy  :  new  FieldNamingStrategy();  [CE]  cannot  find  symbol  This  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This.fieldNamingStrategy  =  fieldNamingPolicy  instanceof  FieldNamingStrategy?(FieldNamingStrategy)fieldNamingPolicy  :  new  FieldNamingStrategy();  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This.fieldNamingStrategy  =  fieldNamingPolicy  instanceof  FieldNamingStrategy?(FieldNamingStrategy)fieldNamingPolicy  :  new  FieldNamingStrategy();	  This.fieldNamingStrategy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol  This	95	None	replace
528	[BUG]  [BUGGY]  This.fieldNamingStrategy  =  fieldNamingPolicy  instanceof  FieldNamingStrategy?((  FieldNamingStrategy)fieldNamingPolicy).getDeclaredFields()  :  null;  [CE]  cannot  find  symbol  This  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This.fieldNamingStrategy  =  fieldNamingPolicy  instanceof  FieldNamingStrategy?((  FieldNamingStrategy)fieldNamingPolicy).getDeclaredFields()  :  null;  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This.fieldNamingStrategy  =  fieldNamingPolicy  instanceof  FieldNamingStrategy?((  FieldNamingStrategy)fieldNamingPolicy).getDeclaredFields()  :  null;	  This.fieldNamingStrategy    =    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol  This	95	None	replace
529	[BUG]  [BUGGY]  if(constructorConstructor  ==  null  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excluder));  }  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excluder));  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null  ||  fieldNamingPolicy  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excluder));  }	  if(constructorConstructor    ==    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    excluder));    }    	non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	91	None	replace
530	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  null,  excluder);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  null,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  null,  excluder);	  this(constructorConstructor,    fieldNamingPolicy,    fieldNamingPolicy,    excluder,    null);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	114	None	replace
531	[BUG]  [BUGGY]  this(compilerConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  null);  [CE]  cannot  find  symbol  compilerConstructor  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(compilerConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  null);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(compilerConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  null);	  this(constructorConstructor,    fieldNamingPolicy,    fieldNamingPolicy,    excluder,    null);    	non-compiled	[CE]  cannot  find  symbol  compilerConstructor	114	None	replace
532	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.valueOf(constructorConstructor);  }  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.valueOf(constructorConstructor);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.valueOf(constructorConstructor);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.valueOf(fieldNamingPolicy);    }    	non-compiled	[CE]  incompatible  types	78	None	replace
533	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.valueOf(excluder);  }  [CE]  incompatible  types  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.valueOf(excluder);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.valueOf(excluder);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.valueOf(fieldNamingPolicy);    }    	non-compiled	[CE]  incompatible  types	78	None	replace
534	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.valueOf(compilerConstructor);  }  [CE]  incompatible  types  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.valueOf(compilerConstructor);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.valueOf(compilerConstructor);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.valueOf(fieldNamingPolicy);    }    	non-compiled	[CE]  incompatible  types	78	None	replace
535	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  super(constructor);  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  super(constructor);  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  super(constructor);  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  super(constructor);    this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	52	None	replace
536	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  super(constructorConstructor);  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(constructorConstructor,  fieldNamingPolicy,  excluder);  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  super(constructorConstructor);  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(constructorConstructor,  fieldNamingPolicy,  excluder);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  super(constructorConstructor);  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(constructorConstructor,  fieldNamingPolicy,  excluder);  }	  super(constructor);    this.fieldNamingPolicy    =    fieldNamingPolicy;    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	52	None	replace
537	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  excluder  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  excluder  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  excluder	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy),    excluder);    }    	non-compiled	[CE]  ')'  expected	70	None	replace
538	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  this);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  this);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  this);	  this(constructorConstructor,    fieldNamingPolicy,    excluder,    null);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	2	None	replace
539	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.createInstance(fieldNamingPolicy);  }  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.createInstance(fieldNamingPolicy);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.createInstance(fieldNamingPolicy);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.createInstance(fieldNamingPolicy);    }    	non-compiled	[CE]  incompatible  types	102	None	replace
540	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.createInstance(compilerConstructor);  }  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.createInstance(compilerConstructor);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.createInstance(compilerConstructor);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.createInstance(fieldNamingPolicy);    }    	non-compiled	[CE]  incompatible  types	102	None	replace
541	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  FieldNamingStrategy.createInstance(fieldNamingPolicy);  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  FieldNamingStrategy.createInstance(fieldNamingPolicy);  }  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  FieldNamingStrategy.createInstance(fieldNamingPolicy);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    FieldNamingStrategy.createInstance(fieldNamingPolicy);    }    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
542	[BUG]  [BUGGY]  This(constructorConstructor,  fieldNamingPolicy,  this.fieldNamingPolicy);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This(constructorConstructor,  fieldNamingPolicy,  this.fieldNamingPolicy);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This(constructorConstructor,  fieldNamingPolicy,  this.fieldNamingPolicy);	  This(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
543	[BUG]  [BUGGY]  This(constructorConstructor,  fieldNamingPolicy,  this.excluder);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This(constructorConstructor,  fieldNamingPolicy,  this.excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This(constructorConstructor,  fieldNamingPolicy,  this.excluder);	  This(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
544	[BUG]  [BUGGY]  This(constructorConstructor,  fieldNamingPolicy,  null,  excluder);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {      [BUGGY]  This(constructorConstructor,  fieldNamingPolicy,  null,  excluder);  [BUGGY]      this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This(constructorConstructor,  fieldNamingPolicy,  null,  excluder);	  This(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
